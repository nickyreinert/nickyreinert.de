<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Anleitung auf Nicky Reinert</title>
    <link>https://nickyreinert.de/tags/anleitung/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Tue, 09 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://nickyreinert.de/tags/anleitung/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>WordPress Word Cloud 2.0</title>
      <link>https://nickyreinert.de/2020/2020-06-09-wordpress-word-cloud-2-0/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2020/2020-06-09-wordpress-word-cloud-2-0/</guid>
      <description>Mein Word Cloud Plugin für WordPress liegt in einer neuen Version vor! Die Word Cloud unterstützt nun OCR, Tags, interne und externe Quellen und vieles mehr. Da …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine umfassende Dokumentation für die Version 2.0 des Plugins &#34;WP Word Cloud&#34;. Der Artikel beschreibt die erweiterten Funktionen, darunter die Erstellung von Wortwolken aus diversen Quellen (URL, SQL, Post-ID), eine interaktive Frontend-Bearbeitung und eine clientseitige Texterkennung (OCR) für Bilder. Es wird eine detaillierte Anleitung zur Installation und zur Verwendung aller Shortcode-Parameter gegeben.</p>
          
          
          <p><strong>Hauptthemen:</strong> WordPress, Plugins, Datenvisualisierung, JavaScript, OCR, Tesseract.js</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Mein Word Cloud Plugin für WordPress liegt in einer neuen Version vor! Die Word Cloud unterstützt nun <strong>OCR</strong>, <strong>Tags</strong>, <strong>interne</strong> und <strong>externe Quellen</strong> und vieles mehr. Da ich also sehr viele grundlegende Änderungen vorgenommen habe, gibt es an dieser Stelle eine komplett neue Dokumentation. Viel Spass.</p>
<h2 id="was-ist-eine-word-cloud">Was ist eine Word Cloud?</h2>
<p>Eine <strong>Word Cloud</strong>, auch <strong>Schlagwortwolke</strong>, <strong>Wortwolke</strong> usw., dient der besseren Visualisierung von Texten. Um eine Word Cloud zu erstellen, werden die Vorkommen von Wörtern eines Textes gezählt. Die Wörter mit der größten <strong>Häufigkeit</strong> werden groß dargestellt, Wörter mit geringerer Häufigkeit weniger groß. Und das ganze wird dann in einer <strong>Wolkenform</strong> dargestellt, mit den größten Wörtern in der Mitte.</p>
<p>So ist es möglich auf einen Blick zu erkennen, welche Wörter in einem Text am häufigsten vorkommen. Das ist nicht nur bei der Analyse von Texten sondern auch von Webseiten nützlich. So kannst du z.B. bei WordPress eine Word Cloud aus Tags erstellen (<strong>Tag Cloud</strong>), anhand der man sehen kann, welche Tags auf einer Seite am meisten verwendet wurden.</p>
<p>Die folgende Word Cloud zeigt auf einen Artikel, <a href="https://www.nickyreinert.de/wie-erstelle-ich-ein-labyrinth-mit-javascript/">in dem ich einen Algorithmus beschreibe, um in JavaScript ein Labyrinth zu erstellen</a>:</p>
<p>[wp-word-cloud source-type=&ldquo;id&rdquo; id=&ldquo;demo1&rdquo; size-factor=50 min-alpha=0.5 count-words=1]3334[/wp-word-cloud]</p>
<h2 id="was-kann-dieses-plugin">Was kann dieses Plugin?</h2>
<p><strong>WP Word Cloud</strong> stellt einen Shortcode zur Verfügung, mit dem du beliebig viele <strong>Word Clouds</strong> auf deinen Seiten einfügen kannst. Du kannst verschiedene Quellen nutzen, um dort die Wörter zu zählen und in einer <strong>Word Cloud</strong> darstellen zu lassen.</p>
<ul>
<li>inline - du gibst den Text direkt im Shortcode im Beitrag an</li>
<li>url - ein Verweis auf eine Internetadresse</li>
<li>id - der Verweis auf eine Seite / einen Beitrag</li>
<li>sql - eine SQL-Abfrage um Text aus der Datenbank zu lesen</li>
<li>custom-field - Text aus einem custom field des Beitrages / der Seite</li>
<li>Text, den der Besucher der Webseite selber eingeben kann</li>
<li>Text von einem Bild, das der Besucher der Website hochlädt</li>
</ul>
<p>Das Plugin greift auf zwei sehr großartige Bibliotheken zurück: WodCloud2.js von TimDream (<a href="https://github.com/timdream/wordcloud2.js/">github.com</a>). Sowie die Offline-Implementierung von Tesseract in JavaScript (<strong><a href="https://github.com/jeromewu/tesseract.js-offline">github.com</a></strong>).</p>
<h2 id="installation">Installation</h2>
<h3 id="über-die-kommandozeile">Über die Kommandozeile</h3>
<p>Wenn du Zugriff auf deinen Server über SSH hast, kannst du das Plugin folgendermaßen installieren:</p>
<p>Wechsle in den Plugin-Ordner deiner WordPress-Installation und lege dort einen neuen Ordner an: WP-Word-Cloud, wechsle danach in diesen Ordner:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">mkdir /htdocs/wp-content/plugins/WP-Word-Cloud
</span></span><span class="line"><span class="ln">2</span><span class="cl">cd /htdocs/wp-content/plugins/WP-Word-Cloud
</span></span></code></pre></div><p>Danach kannst du das Plugin-Repository mit git klonen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">git clone https://github.com/nickyreinert/wordCloud-for-Wordpress.git .
</span></span></code></pre></div><p>Wenn du git nicht benutzen möchtest oder kannst, kannst du das Plugin auch mit wget herunterladen und dann entpacken. Dann musst du den Plugin-Ordner allerdings nicht selber erstellen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">cd /htdocs/wp-content/plugins/
</span></span><span class="line"><span class="ln">2</span><span class="cl">wget https://github.com/nickyreinert/wordCloud-for-Wordpress/archive/wordCloud-for-wordPress-2.zip --no-check-certificate
</span></span><span class="line"><span class="ln">3</span><span class="cl">unzip wordCloud-for-wordPress-2.zip -d WP-Word-Cloud
</span></span></code></pre></div><h3 id="mit-einem-ftp-programm">Mit einem FTP-Programm</h3>
<p>Wenn du keinen Zugriff auf die Kommandozeile hast, kannst du das Plugin von dieser Adresse herunterladen:</p>
<p><a href="https://github.com/nickyreinert/wordCloud-for-Wordpress/archive/wordCloud-for-wordPress-2.zip">https://github.com/nickyreinert/wordCloud-for-Wordpress/archive/wordCloud-for-wordPress-2.zip</a></p>
<p>Danach entpackst du das Archiv und lädst den kompletten Ordner in das Plugin-Verzeichnis deiner WordPress-Installation. Du kannst den Ordner mit dem FTP-Programm dann umbenennen:</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik.png" alt=""></p>
<p>Der Order für das Word Cloud Plugin</p>
<h2 id="abschluss-der-installation">Abschluss der Installation</h2>
<p>Abschließend muss das Plugin noch im Backend von WordPress aktiviert werden. Dazu suchst du im Plugin-Bereich nach dem Eintrag &ldquo;WP Word Cloud&rdquo; und klickst auf &ldquo;aktivieren&rdquo;. Fertig.</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-1-700x70.png" alt=""></p>
<p>Aktiviere das Plugin in der Plugin-Übersicht von WordPress</p>
<h2 id="erste-verwendung">Erste Verwendung</h2>
<p>Das Plugin aktiviert für deine WordPress-Installation einen neuen Shortcode: <strong>[ wp-word-cloud ]</strong>. Diesen kannst du nun auf jeder Seite und in jedem Beitrag beliebig oft einfügen. Wenndu den <strong>Gutenberg-Editor</strong> verwendest, benötigst du dafür den Block &ldquo;<strong>Shortcode</strong>&rdquo;. Im konventionellen Editor kannst du den Shortcode einfach in deinen Text einfügen.<br>
Eine einfache Implementierung sieht z.B. so aus:</p>
<p><code>[ wp-word-cloud source-type=&quot;url&quot; id=&quot;meine-word-cloud&quot; ]https://www.spiegel.de[ /wp-word-cloud ]</code></p>
<p>Es gibt <strong>drei Parameter</strong>, die du <strong>immer</strong> angeben musst:</p>
<ul>
<li><strong>id</strong>, eine eindeutige Id, mit der die <strong>Word Cloud</strong> auf deiner Seite angesprochen wird, z.B. <strong>meine-word-cloud</strong> oder einfach nur <strong>test</strong></li>
<li><strong>source-type</strong>, welcher Art die Quelle für die Word Cloud ist, also z.B. von einer <strong>url</strong> oder den <strong>tags</strong></li>
<li>sowie Inline-Text, als Verweis auf die Quelle, von wo der Inhalt für die Word Cloud kommt, also z.B. die URL <strong><a href="https://www.spiegel.de">https://www.spiegel.de</a></strong> oder die Id eines Beitrages (123)</li>
</ul>
<h2 id="zusätzliche-einstellungen">Zusätzliche Einstellungen</h2>
<p>Natürlich gibt es noch <strong>eine Menge weiterer Parameter</strong>, mit denen du das Erscheinungsbild der Word Cloud steuern kannst. Das Plugin setzt bei der ersten Installation für all diese Parameter <strong>Standard-Einstellungen</strong> fest. Diese sind grundsätzlich <strong>global gültig</strong> und können auf der Einstellungseite angepasst werden:</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-2.png" alt=""></p>
<p>In den Einstellungen findest du eine eigene Seite für das WP Word Cloud Plugin - wunderbar!</p>
<p>Jeden dieser globalen Parameter kannst du auch in deinem Shortcode verwenden. So wir die globale Einstellung überschrieben. So ist die <strong>Hintergrundfarbe</strong> z.B. standardmäßig <strong>transparent</strong> eingestellt. Möchtest du sie für die aktuelle Word Cloud auf <strong>grün und halbtransparent</strong> ändern, übergibst du einfach den Parameter <strong>background-color</strong> folgendermaßen:</p>
<p><code>[ wp-word-cloud source-type=&quot;url&quot; id=&quot;meine-word-cloud&quot; background-color=&quot;rgba(0,255,255,0.5)&quot; ]https://www.spiegel.de[ /wp-word-cloud ]</code></p>
<p>Eine genaue Beschreibung aller Parameter folgt jetzt:</p>
<h2 id="parameter">Parameter</h2>
<h3 id="id">id</h3>
<p>Dieser Parameter ist für jeden Shortcode, den du einfügst, <strong>verpflichtend</strong>! Die Id adressiert jede Word Cloud auf einer Seite oder in einem Beitrag. Damit ist es möglich, mehrere Word Clouds gleichzeitig einzubinden. Mit der Id kannst du außerdem das Aussehen der Word Cloud mit CSS steuern. Beispiel:</p>
<p><code>[ wp-word-cloud source-type=&quot;inline&quot; id=&quot;wordcloud1&quot; ]Lorem Ipsum[ /wp-word-cloud ]</code></p>
<p><code>[ wp-word-cloud source-type=&quot;inline&quot; id=&quot;wordcloud2&quot; ]Lorem Ipsum[ /wp-word-cloud ]</code></p>
<h3 id="source-type"><strong>source-type</strong></h3>
<p>Damit legst du fest, um was für eine Quelle es sich handelt. Dieser Parameter ist <strong>verpflichtend</strong>. Die folgenden Quellen werden unterstützt:</p>
<h4 id="source-typeinline">source-type=inline</h4>
<p>Der Text wird innerhalb des Shortcodes übermittelt, z.B:</p>
<p><code>[ wp-word-cloud source-type=inline id=&quot;demo&quot; ]Lorem Ipsum[ /wp-word-cloud ]</code></p>
<h4 id="source-typeurl">source-type=<strong>url</strong></h4>
<p>Im Shortcode wird eine URL angegeben, von der der Text abgerufen wird, z.B:</p>
<p><code>[ wp-word-cloud source-type=url id=&quot;demo&quot; ]https://www.spiegel.de[ /wp-word-cloud ]</code></p>
<h4 id="source-typeid">**source-type=**id</h4>
<p>Im Shortcode wird eine Id übergeben, die auf eine Seite oder einen Beitrag deiner Webseite verweist, z.B:</p>
<p><code>[ wp-word-cloud source-type=id id=&quot;demo&quot; ]123[ /wp-word-cloud ]</code></p>
<h4 id="source-typesql">source-type=sql</h4>
<p>Im Shortcode wird eine SQL-Abfrage übergeben, die eine bereits gezählte Wortliste zurück gibt, z.B:</p>
<p><code>[ wp-word-cloud source-type=sql id=&quot;demo&quot;]SELECT word,count FROM table;[ /wp-word-cloud]</code></p>
<h4 id="source-typetags">source-type=tags</h4>
<p>Die Word Cloud zeigt alle Tags deiner Seite an, hier musst du im Shortcode nichts weiter übergeben:</p>
<p><code>[ wp-word-cloud source-type=tags id=&quot;demo&quot;]SELECT word,count FROM table;[ /wp-word-cloud]</code></p>
<h4 id="source-typecustom-field">source-type=custom-field</h4>
<p>Im Shortcode wird auf ein custom field, also benutzerdefiniertes bzw. eigenes Feld verwiesen, z.B:</p>
<p><code>[ wp-word-cloud source-type=custom-field id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]</code></p>
<p>Die Darstellung der <strong>eigenen Felder</strong> musst du im Gutenberg-Edito ggf. erst aktivieren. Klicke dazu das Punkt-Menü und dann ganz unten auf &ldquo;Ansicht anpassen&rdquo;. Es öffnet sich nun eine Liste, in der du die &ldquo;eigenen Felder&rdquo; aktivieren kannst:</p>
<ul>
<li>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-10.png" alt=""></p>
</li>
<li>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-11-700x1059.png" alt=""></p>
</li>
</ul>
<p>Anzeigen der benutzerdefinierten Felder im Gutenberg-Editor</p>
<h3 id="count-words"><strong>count-words</strong></h3>
<p>Wenn die im Shortcode angegebene Quelle einen kompletten Text enthält, müssen die Wörter darin erst gezählt werden. Dazu muss <strong>count-words</strong> auf <strong>1</strong> gesetzt werden. Ist <strong>count-words=0</strong> gesetzt, erwartet das Plugin eine List mit gezählten Wörtern.</p>
<h3 id="enable-frontend-edit"><strong>enable-frontend-edit</strong></h3>
<p>Ist dieser Parameter auf 1 gesetzt, wird auf der Seite ein Textfeld angezeigt. Das Textfeld enthält den Text, der mit dem Shortcode definiert wurde. Der Besucher kann den Text dann beliebig verändern oder eigenen Text hinzufügen, um so die <strong>Word Cloud</strong> selber zu steuern. Die Berechnung der <strong>Word Cloud</strong> findet im Browser statt. Im folgenden Beispiel kommt der Text von einem benutzerdefiniertem Feld im Backend. Er wird an das Frontend ausgeliefert und dort in der Word Cloud dargestellt. Gleichzeitig kann man den Text aber auch anpassen und die Wolke neu zeichnen lassen:</p>
<p><code>[ wp-word-cloud source-type=&quot;custom-field&quot; enable-frontend-edit</code>=1 <code>id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]</code></p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-8-700x755.png" alt=""></p>
<p>Ein Textfeld für die Besucher deiner Webseite</p>
<h3 id="ocr---texterkennung">OCR - Texterkennung</h3>
<h4 id="enable-ocr"><strong>enable-ocr</strong></h4>
<p>Ist dieser Parameter auf 1 gesetzt, kann der Benutzer auf der Webseite ein Bild hochladen oder mit der Kamera aufnehmen. Im Browser findet dann eine Text-Erkennung statt. Die Wörter werden dann gezählt und die Word Cloud darauf basierend gezeichnet. Wenn <strong>enable-frontend-edit</strong> nicht aktiv ist, hat dieser Parameter keine Wirkung.</p>
<p><code>[ wp-word-cloud source-type=&quot;custom-field&quot; enable-frontend-edit=1 enable-ocr=1 id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]</code></p>
<p>Für diese Funktionalität greift das Plugin auf die <a href="https://tesseract.projectnaptha.com/">Tesseract-Bibliothek</a> zurück. Diese ermöglicht die Texterkennung von abfotografierten Dokumenten in verschiedenen Sprachen. Die Texterkennung erfolgt komplett im Browser, also beim Besucher der Webseite. Das Bild wird <strong>nicht zum Server hochgeladen</strong>.</p>
<h4 id="ocr-language">ocr-language</h4>
<p>Mit diesem Parameter legst du fest, welche Sprache(n) das ORC-Modul unterstützen soll. Standardmäßig ist hier deu eingestellt. Du kannst mehre Sprachen angeben, wenn du sie mit einem + trennst, z.B. Deutsch + Englisch:</p>
<p><code>`[ wp-word-cloud source-type=&quot;custom-field&quot; enable-frontend-edit=1 enable-ocr=1 ocr-language=&quot;deu+eng&quot; id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]`</code></p>
<p>Eine Liste aller unterstützten Sprachpakete findest du hier:</p>
<p><a href="https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016">https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016</a></p>
<h4 id="ocr-local-libraries">ocr-local-libraries</h4>
<p>Das OCR-Modul lädt einige, größere Dateien von einem anderen Server nach, unter anderem auch die Sprachpakete. Du kannst diese Dateien auch auf deinem Server anbieten. Dazu musst du die folgenden Dateien herunterladen und im Unterordner &ldquo;<strong>lib</strong>&rdquo; innerhalb des Plugin-Ordners ablegen:</p>
<ul>
<li>[https://unpkg.com/tesseract.js@v2.0.0/dist/worker.min.js](<a href="https://unpkg.com/tesseract.js@v2.0.0/dist/worker.min.js%27">https://unpkg.com/tesseract.js@v2.0.0/dist/worker.min.js'</a> defer=&lsquo;defer)</li>
<li>[https://unpkg.com/tesseract.js-core@v2.0.0/tesseract-core.wasm.js](<a href="https://unpkg.com/tesseract.js-core@v2.0.0/tesseract-core.wasm.js%27">https://unpkg.com/tesseract.js-core@v2.0.0/tesseract-core.wasm.js'</a> defer=&lsquo;defer)</li>
</ul>
<p>Außerdem benötigst du die von dir konfigurierten Sprachpakete. Diese kannst <a href="https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016">du hier für die Version 4 herunterladen</a>. Die Sprachpakete gehören ebenfalls in den Unterordner &ldquo;lib&rdquo;. Außerdem <strong>musst du manuell</strong> die Dateiendung &ldquo;.gz&rdquo; anhängen.</p>
<h3 id="eingrenzen-der-wortliste">Eingrenzen der Wortliste</h3>
<h4 id="min-word-length">min-word-length</h4>
<p>Hiermit legst du fest, wie lang ein Wort mindestens sein soll, um beim Zählen berücksichtigt zu werden. Diese Einstellung wird <strong>nicht</strong> berücksichtigt, wenn du eine fertige Wortliste als Quelle angibst. In diesem Beispiel wird das Wort Foo beim Zählen ignoriert.</p>
<p><code>`[ wp-word-cloud source-type=&quot;inline&quot; count-words=1 min-word-lenght=4 id=&quot;demo&quot;]Lorem Ipsum Foo[ /wp-word-cloud]`</code></p>
<h4 id="min-word-occurence">min-word-occurence</h4>
<p>Mit diesem Parameter legst du fest, wie oft ein Wort mindestens vorkommen muss, um in der word cloud dargestellt zu werden. Diese Einstellung wird <strong>immer</strong> berücksichtigt, auch wenn du eine fertige Wortliste als Quelle angibst. Im Beispiel werden nur Wörter in der word cloud dargestellt, die mindestens 2 mal vorkommen:</p>
<p><code>`[ wp-word-cloud source-type=&quot;inline&quot; count-words=1 min-word-occurence=2 id=&quot;demo&quot;]Lorem Ipsum Foo[ /wp-word-cloud]`</code></p>
<h4 id="black-list-und-enable-black-list">black-list und enable-black-list</h4>
<p>Die Blacklist enthält Wörter, die beim Zählen nicht berücksichtigt werden dürfen. Das können z.B. Funktionswörter oder Fremdwörter sein, die du nicht in der word cloud sehen möchtest. Die Wörter werden mit einem Leerzeichen getrennt angegeben. Wenn du den Parameter im Shortcode angibst, wird die globale Einstellung komplett ignoriert. Die Blacklist wird nur verwendet, wenn der Parameter enable-black-list auf 1 gesetzt ist. Im Beispiel wird das Wort &ldquo;Lorem&rdquo; beim Zählen ignoriert, das es sich auf der Blacklist befindet.</p>
<p><code>`[ wp-word-cloud source-type=&quot;inline&quot; count-words=1 enable-black-list`</code>=1 <code>`black-list=&quot;Lorem&quot; id=&quot;demo&quot;]Lorem Ipsum Foo[ /wp-word-cloud]`</code></p>
<h4 id="enable-custom-black-list">enable-custom-black-list</h4>
<p>Ist dieser Parameter aktiviert, kann der Besucher deiner Webseite Wörter in der word cloud anklicken, um sie aus der word cloud zu entfernen. Die Wörter erscheinen dann unter der word cloud in einer &ldquo;benutzerdefinierten&rdquo; Blacklist. Wenn sie dort erneut angeklickt werden, erscheinen sie wieder in der word cloud.</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-9-700x569.png" alt=""></p>
<p>Eine word cloud mit benutzerdefinierter Blacklist, so schön!</p>
<h4 id="persistent-custom-black-list">persistent-custom-black-list</h4>
<p>Hiermit kannst du festlegen, dass die Blacklist erhalten bleibt, wenn der Besucher einen neuen Text in das Eingabefeld eingibt. Ist der Parameter deaktiviert, wird die benutzerdefnierte Blacklist gelöscht, sobald der Besucher einen neuen Text eingibt. Dieser Parameter ist nur wirksam, wenn auch das Textfeld aktiviert ist.</p>
<h4 id="ignore-chars">ignore-chars</h4>
<p>Mit diesem Parameter legst du fest, welche Zeichen aus dem Text entfernt werden, bevor er gezählt wird. Hier wird ein regulärer Ausdruck dieser Form erwartet:</p>
<p><code>ignore-chars=&quot;\(\)\[\]\,\.;&quot;</code></p>
<p>Auf diese Art kannst du ungewollte Satzzeichen, Sonderzeichen oder Steuerzeichen entfernen.</p>
<h3 id="erscheinungsbild-anpassen">Erscheinungsbild anpassen</h3>
<h4 id="style">style</h4>
<h4 id="text-transform">text-transform</h4>
<p>Hiermit kannst du festlegen, dass der Text beim Darstellen in der word cloud groß oder kleingeschrieben werden soll. Dieser Parameter kann dementsprechend drei Werte annehmen:</p>
<ul>
<li>uppercas (alle Wörter groß schreiben)</li>
<li>lowercase (alle Wörter klein schreiben)</li>
<li>none (keine Änderung)</li>
</ul>
<p>Diese word cloud nutzt als Ressource die aktuellen Mitteilungen von <a href="http://blog.fefe.de">fefe</a>:</p>
<p>[wp-word-cloud source-type=&ldquo;url&rdquo; id=&ldquo;demo2&rdquo; count-words=1 min-word-occurence=1 min-word-length=3 size-factor=100 min-alpha=0.5 count-words=1]https://blog.fefe.de[/wp-word-cloud]</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> WordPress, Plugin, Word-Cloud, Projekt, Anleitung</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>projekte</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>WordPress Word Cloud 2.0 - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>project_documentation</dc:type>
      
      
    </item><item>
      <title>How to create a maze algorithm with JavaScript</title>
      <link>https://nickyreinert.de/2020/2020-05-11-how-to-create-a-maze-algorithm-with-javascript/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2020/2020-05-11-how-to-create-a-maze-algorithm-with-javascript/</guid>
      <description>Meine Herangehensweise, um ein Labyrinth in JavaScript zu bauen, ist weitaus ausführlicher auf Medium in Englisch veröffentlicht worden: …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Ein kurzer Verweis auf einen ausführlichen, englischsprachigen Artikel des Autors auf der Plattform Medium. Der verlinkte Artikel beschreibt, wie man einen Algorithmus zur Erstellung eines Labyrinths mit JavaScript entwickelt.</p>
          
          
          <p><strong>Hauptthemen:</strong> JavaScript, Algorithmen, Game-Development, Labyrinth</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Meine Herangehensweise, um ein Labyrinth in JavaScript zu bauen, ist weitaus ausführlicher auf Medium in Englisch veröffentlicht worden:</p>
<p><a href="https://medium.com/swlh/how-to-create-a-maze-with-javascript-36f3ad8eebc1">https://medium.com/swlh/how-to-create-a-maze-with-javascript-36f3ad8eebc1</a></p>
<p><img src="/2020/2020-05-11-how-to-create-a-maze-algorithm-with-javascript/images/maze.png" alt=""></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> anleitung, javascript, labyrinth</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>How to create a maze algorithm with JavaScript - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>link_post</dc:type>
      
      
    </item><item>
      <title>Wie erstelle ich ein Labyrinth mit JavaScript?</title>
      <link>https://nickyreinert.de/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/</guid>
      <description>Durch Zufall bin ich irgendwann mal auf diesen BASIC-Einzeiler gestoßen, mit dem sich eine Art Pseudo-Labyrinth erstellen lässt. Ich habe versucht, das in Plain …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine detaillierte Schritt-für-Schritt-Anleitung zur prozeduralen Erzeugung eines Labyrinths mit reinem JavaScript und HTML. Das Tutorial entwickelt iterativ einen Algorithmus, der von einem einfachen Pfad bis zu einer komplexen Lösung mit dem `Recursive Backtracker`-Ansatz führt, um ein lösbares Labyrinth mit Sackgassen zu generieren.</p>
          
          
          <p><strong>Hauptthemen:</strong> JavaScript, Algorithmen, Game-Development, Prozedurale Generierung, HTML DOM</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Durch Zufall bin ich irgendwann mal <a href="http://www.slate.com/articles/technology/books/2012/11/computer_programming_10_print_chr_205_5_rnd_1_goto_10_from_mit_press_reviewed.html">auf diesen BASIC-Einzeiler gestoßen</a>, mit dem sich eine Art Pseudo-Labyrinth erstellen lässt. Ich habe versucht, das <a href="https://htmlpreview.github.io/?https://github.com/nickyreinert/maze/blob/master/pseudo_maze.html">in Plain JavaScript</a> halbwegs kompakt nachzubauen. Dabei kann man kaum übersehen, dass es sich keineswegs um ein richtiges Labyrinth handelt, sondern eher um eine zufällige Anordnung von Strichen ohne Lösungsweg. Also habe ich mich gefragt, wie schwer es wohl sein kann, ein Labyrinth programmatisch und vor allem kompakt zu erzeugen. Dazu gibt es zwar <a href="https://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_backtracker">eine Menge Lösungsansätze</a>, mein Ziel ist aber, die Herangehensweise zu beschreiben. Und da wir ja gerade alle zuhause abhängen, ist diese kleine Anleitung entstanden.</p>
<h2 id="vorbereitung">Vorbereitung</h2>
<p>Der aus meiner Sicht einfachste Ansatz ist es, eine Fläche mit schon gesetzten Wänden möglichst chaotisch zu durchpflügen. Wir brauchen also erstmal eine Fläche mit x * y Zellen, die jeweils mit Wänden voneinandern getrennt sind. In JavaScript sieht das folgendermaßen aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">function</span> <span class="n">createBlankMaze</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="k">var</span> <span class="n">rowIndex</span><span class="p">,</span> <span class="n">colIndex</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="k">var</span> <span class="n">table</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;table&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="k">var</span> <span class="n">tbody</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;tbody&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="n">rowIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">rowIndex</span> <span class="o">&lt;=</span> <span class="n">mazeHeight</span><span class="p">;</span> <span class="n">rowIndex</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl">        <span class="k">var</span> <span class="n">row</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;tr&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">colIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">colIndex</span> <span class="o">&lt;=</span> <span class="n">mazeWidth</span><span class="p">;</span> <span class="n">colIndex</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">
</span></span><span class="line"><span class="ln">14</span><span class="cl">            <span class="k">var</span> <span class="n">col</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;td&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">rowIndex</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">colIndex</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">                <span class="n">col</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="s2">&#34;rgb(244,0,0)&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">                <span class="n">col</span><span class="o">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="s2">&#34;type&#34;</span><span class="p">,</span> <span class="s2">&#34;start&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">rowIndex</span> <span class="o">==</span> <span class="n">mazeHeight</span> <span class="o">&amp;&amp;</span> <span class="n">colIndex</span> <span class="o">==</span> <span class="n">mazeWidth</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">                
</span></span><span class="line"><span class="ln">22</span><span class="cl">                <span class="n">col</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="s2">&#34;rgb(0,244,0)&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">                <span class="n">col</span><span class="o">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="s2">&#34;type&#34;</span><span class="p">,</span> <span class="s2">&#34;finish&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">
</span></span><span class="line"><span class="ln">27</span><span class="cl">                <span class="n">col</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="s2">&#34;rgb(255,255,255)&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">
</span></span><span class="line"><span class="ln">29</span><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">            <span class="n">col</span><span class="o">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="s2">&#34;id&#34;</span><span class="p">,</span> <span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">
</span></span><span class="line"><span class="ln">32</span><span class="cl">            <span class="n">row</span><span class="o">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">col</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">
</span></span><span class="line"><span class="ln">34</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">
</span></span><span class="line"><span class="ln">36</span><span class="cl">        <span class="n">tbody</span><span class="o">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">row</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">
</span></span><span class="line"><span class="ln">38</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">39</span><span class="cl">    
</span></span><span class="line"><span class="ln">40</span><span class="cl">    <span class="n">table</span><span class="o">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">tbody</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">41</span><span class="cl">
</span></span><span class="line"><span class="ln">42</span><span class="cl">    <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;maze_container&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">table</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">43</span><span class="cl">
</span></span><span class="line"><span class="ln">44</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Wir erzeugen also eine Tabelle mit 10 Zeilen und 10 Spalten und packen Sie am Ende in ein div mit der Id maze_container. Die &ldquo;Wände&rdquo; habe ich für jede Zelle mit CSS definiert:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">table td {
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">    border: 1px #000000 solid;
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">}
</span></span></code></pre></div><p>Der Eingang in rot befindet sich immer oben links, der Ausgang ist grün und unten rechts. Nun werden wir uns in einer Schleife vom Startfeld in Richtung Ziel bewegen. Mit jedem Schleifendurchlauf bewegen wir uns ein Feld weiter. Daraus entsteht erstmal ein Lösungsweg. Danach müssen natürlich noch die restlichen Felder bearbeitet werden. Dazu werden wir vom Lösungsweg aus Abzweige erzeugen. Los gehts.</p>
<h2 id="schritt-1-der-simpelste-lösungsweg">Schritt 1: Der simpelste Lösungsweg</h2>
<p>Um erstmal eine Schleife als Grundlage zu erhalten, beginnen wir mit einem sehr simplen Lösungsweg. Der geht ganz einfach 9 Felder nach rechts und 9 Felder nach unten. Wir nutzen dazu einfach eine Liste mit Anweisungen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="k">var</span> <span class="n">exits</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">];</span>
</span></span></code></pre></div><p><em>(Warum nicht 10, sondern 9? Sobald wir uns auf dem letzen Feld befinden, müssen wir uns nicht weiter bewegen.)</em></p>
<p>In einer Schleife gehen wir nun diese Liste durch und bewegen unseren Zähler entsprechend eine Zelle nach rechts oder unten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">var</span> <span class="n">currentCell</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="k">var</span> <span class="n">rowIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="k">var</span> <span class="n">colIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="n">exitIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">exitIndex</span> <span class="o">&lt;</span> <span class="n">exits</span><span class="o">.</span><span class="n">length</span><span class="p">;</span> <span class="n">exitIndex</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="k">switch</span><span class="p">(</span><span class="n">exits</span><span class="p">[</span><span class="n">exitIndex</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl">        <span class="k">case</span> <span class="s2">&#34;right&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">            <span class="n">colIndex</span> <span class="o">=</span> <span class="n">colIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">        <span class="k">case</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">            <span class="n">rowIndex</span> <span class="o">=</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl">    <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">    
</span></span><span class="line"><span class="ln">24</span><span class="cl">    <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="s2">&#34;#f00000&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">
</span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Hier werden noch keine Wände entfernt, sondern erstmal nur der Weg nachgezeichnet, um eine Idee für den Algorithmus zu bekommen. Und so sieht das aus:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-3-700x701.png" alt=""></p>
<h2 id="schritt-2-einen-funken-abwechslung">Schritt 2: Einen Funken Abwechslung</h2>
<p>Ein wenig Abwechslung erhalten wir, wenn wir uns einfach abwechselnd nach unten und rechts bewegen. Dazu füllen wir die Liste mit den Ausgängen einfach in einer Schleife:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="k">var</span> <span class="n">exits</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="n">exit</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">exit</span> <span class="o">&lt;=</span> <span class="n">mazeWidth</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">exit</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">    <span class="n">exits</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s2">&#34;right&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl">    <span class="n">exits</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s2">&#34;bottom&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl">
</span></span><span class="line"><span class="ln">8</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Das war es schon. Das Ergebnis sieht folgendermaßen aus:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-4-700x703.png" alt=""></p>
<h2 id="schritt-3-die-wände-einreißen">Schritt 3: Die Wände einreißen</h2>
<p>Nun sorgen wir dafür, dass tatsächlich ein Weg vom Start zum Ziel entsteht. Dazu werden einfach die Rahmen unten bzw. rechts entfernt, sobald wir uns in die entsprechende Richtung bewegen. Unsere Hauptschleife wird also etwas aufgebohrt.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">var</span>  <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_1_1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="n">exitIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">exitIndex</span> <span class="o">&lt;</span> <span class="n">exits</span><span class="o">.</span><span class="n">length</span><span class="p">;</span> <span class="n">exitIndex</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="n">exit</span> <span class="o">=</span> <span class="n">exits</span><span class="p">[</span><span class="n">exitIndex</span><span class="p">];</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-&#34;</span><span class="o">+</span><span class="n">exit</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="k">switch</span><span class="p">(</span><span class="n">exit</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">        <span class="k">case</span> <span class="s2">&#34;right&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">            <span class="n">colIndex</span> <span class="o">=</span> <span class="n">colIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">        <span class="k">case</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">            <span class="n">rowIndex</span> <span class="o">=</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl">
</span></span><span class="line"><span class="ln">21</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">    <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">    <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="s2">&#34;#f00000&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">
</span></span><span class="line"><span class="ln">27</span><span class="cl">    <span class="k">switch</span><span class="p">(</span><span class="n">exit</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">
</span></span><span class="line"><span class="ln">29</span><span class="cl">        <span class="k">case</span> <span class="s2">&#34;right&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">
</span></span><span class="line"><span class="ln">31</span><span class="cl">            <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-left&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">32</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">
</span></span><span class="line"><span class="ln">34</span><span class="cl">        <span class="k">case</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">
</span></span><span class="line"><span class="ln">36</span><span class="cl">        <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-top&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">38</span><span class="cl">
</span></span><span class="line"><span class="ln">39</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">40</span><span class="cl">    
</span></span><span class="line"><span class="ln">41</span><span class="cl">    <span class="n">lastExit</span> <span class="o">=</span> <span class="n">exit</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">42</span><span class="cl">
</span></span><span class="line"><span class="ln">43</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Noch bevor die Schleife startet, legen wir fest, in welcher Zelle wir uns befinden. Nur so können wir den Rahmen entsprechend unseres Ausgangs entfernen. Dazu wird einfach die CSS-Eigenschaft auf &ldquo;none&rdquo; gesetzt. Außerdem entfernen wir in der nächsten Zelle jeweils den gegenüberliegenden Rahmen. Wenn wir die vorherige Zelle also nach rechts verlassen haben, müssen wir in der darauffolgenden Zelle den Rahmen links entfernen.</p>
<p>Außerdem muss die Schleife für die Erstellung unserer Ausgänge angepasst werden:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">for (exit = 1; exit &lt; mazeWidth; exit++) {
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">    exits.push(&#34;right&#34;);
</span></span><span class="line"><span class="ln">4</span><span class="cl">    exits.push(&#34;bottom&#34;);
</span></span><span class="line"><span class="ln">5</span><span class="cl">
</span></span><span class="line"><span class="ln">6</span><span class="cl">}
</span></span></code></pre></div><p>Nun reichen uns nicht mehr nur 9 Schritte nach unten und rechts. Da wir nun für jedes Feld den unteren bzw. rechten Rahmen entfernen, müssen wir insgesamt 10 Felder in jede Richtung berücksichtigen. Das Ergebnis ist jetzt tatsächlich schon ein Irrgarten. Allerdings ein ziemlich einfacher:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-5-700x697.png" alt=""></p>
<h2 id="schritt-4-noch-mehr-abwechslung">Schritt 4: Noch mehr Abwechslung</h2>
<p>Der nächste Schritt ist naheliegend: Wir durchlaufen nicht einfach die Liste möglicher Ausgänge, sondern entscheiden zufällig, welcher Ausgang als nächstes kommt. Dazu muss die Schleifenbedinung allerdings etwas angepasst werden.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">for (loop = 0; loop &lt; (mazeWidth + mazeHeight - 2); loop++) {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    exitIndex = Math.floor(Math.random() * exits.length);
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    exit = exits[exitIndex];
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    exits.splice(exitIndex, 1);
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    currentCell.style[&#34;border-&#34;+exit] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">    switch(exit) {
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">        case &#34;right&#34;:
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">            colIndex = colIndex + 1;
</span></span><span class="line"><span class="ln">16</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">        case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">            rowIndex = rowIndex + 1;
</span></span><span class="line"><span class="ln">21</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">    }
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">    currentCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln">26</span><span class="cl">
</span></span><span class="line"><span class="ln">27</span><span class="cl">    currentCell.style.backgroundColor = &#34;#f00000&#34;;
</span></span><span class="line"><span class="ln">28</span><span class="cl">
</span></span><span class="line"><span class="ln">29</span><span class="cl">    switch(exit) {
</span></span><span class="line"><span class="ln">30</span><span class="cl">
</span></span><span class="line"><span class="ln">31</span><span class="cl">        case &#34;right&#34;:
</span></span><span class="line"><span class="ln">32</span><span class="cl">
</span></span><span class="line"><span class="ln">33</span><span class="cl">            currentCell.style[&#34;border-left&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">34</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">35</span><span class="cl">
</span></span><span class="line"><span class="ln">36</span><span class="cl">        case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln">37</span><span class="cl">
</span></span><span class="line"><span class="ln">38</span><span class="cl">        currentCell.style[&#34;border-top&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">39</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">40</span><span class="cl">
</span></span><span class="line"><span class="ln">41</span><span class="cl">    }
</span></span><span class="line"><span class="ln">42</span><span class="cl">    
</span></span><span class="line"><span class="ln">43</span><span class="cl">    lastExit = exit;
</span></span><span class="line"><span class="ln">44</span><span class="cl">
</span></span><span class="line"><span class="ln">45</span><span class="cl">}
</span></span></code></pre></div><p>Die ersten drei Zeilen innerhalb der Zeile sind hier von Bedeutung. Zuerst wird der nächste Ausgang per Zufall bestimmt und in der Variable exit abgelegt. Danach wird dieser Eintrag auch aus der Liste möglicher Ausgänge entfernt. Das ist wichtig, da wir uns ja z.B. nicht mehr als 10 mal nach rechts bewegen können. Außerdem erzeugen wir so eine Art Gewichtung, die sich bei jedem Durchlauf verändert. Würden wir einfach nur per Zufall zwischen <em>rechts</em> und <em>unten</em> entscheiden, wäre das Ergebnis im Moment vielleicht ähnlich. Aber sobald wir auch die Richtungen <em>oben</em> und <em>links</em> dazu nehmen, ist das Ergebnis weitaus chaotischer.</p>
<p>Das Ergebnis ist immer noch recht banal, aber sieht schon etwas mehr nach Labyrinth aus:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-6-700x695.png" alt=""></p>
<h2 id="schritt-5-mehr-bewegungsfreiheit">Schritt 5: Mehr Bewegungsfreiheit</h2>
<p>Bisher haben wir uns nur nach rechts und unten bewegt. Nun wollen wir uns auch nach links und oben bewegen. Dazu noch mal eine wichtige Grundannahme: Wir müssen uns 9 mal nach rechts und unten bewegen, um zum Ziel zu kommen. Erst wenn wir uns ein mal nach rechts bewegt haben, können wir uns dafür ein mal nach linsk bewegen. Das gleiche gilt für oben und unten. Da ich nun vier Bewegungsfreiheiten haben, muss die Schleifenbedingung erneut angepasst werden. Diesmal können wir ja theoretisch jedes der 100 Felder belegen. Außerdem muss ich nun zusätzliche Rahmen entfernen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">while (loop &lt; ((mazeWidth * mazeHeight) - 1)) {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    exitIndex = Math.floor(Math.random() * exits.length);
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    exit = exits[exitIndex];
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    exits.splice(exitIndex, 1);
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    currentCell.style[&#34;border-&#34;+exit] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">    switch(exit) {
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">        case &#34;right&#34;:
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">            colIndex = colIndex + 1;
</span></span><span class="line"><span class="ln">16</span><span class="cl">            exits.push(&#34;left&#34;);
</span></span><span class="line"><span class="ln">17</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">18</span><span class="cl">
</span></span><span class="line"><span class="ln">19</span><span class="cl">        case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln">20</span><span class="cl">
</span></span><span class="line"><span class="ln">21</span><span class="cl">            rowIndex = rowIndex + 1;
</span></span><span class="line"><span class="ln">22</span><span class="cl">            exits.push(&#34;top&#34;);
</span></span><span class="line"><span class="ln">23</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">        case &#34;left&#34;:
</span></span><span class="line"><span class="ln">26</span><span class="cl">
</span></span><span class="line"><span class="ln">27</span><span class="cl">            colIndex = colIndex - 1;
</span></span><span class="line"><span class="ln">28</span><span class="cl">            exits.push(&#34;right&#34;);
</span></span><span class="line"><span class="ln">29</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">30</span><span class="cl">
</span></span><span class="line"><span class="ln">31</span><span class="cl">        case &#34;top&#34;:
</span></span><span class="line"><span class="ln">32</span><span class="cl">
</span></span><span class="line"><span class="ln">33</span><span class="cl">            rowIndex = rowIndex - 1;
</span></span><span class="line"><span class="ln">34</span><span class="cl">            exits.push(&#34;bottom&#34;);
</span></span><span class="line"><span class="ln">35</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">36</span><span class="cl">            
</span></span><span class="line"><span class="ln">37</span><span class="cl">    }
</span></span><span class="line"><span class="ln">38</span><span class="cl">
</span></span><span class="line"><span class="ln">39</span><span class="cl">    currentCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln">40</span><span class="cl">
</span></span><span class="line"><span class="ln">41</span><span class="cl">    currentCell.style.backgroundColor = &#34;#f00000&#34;;
</span></span><span class="line"><span class="ln">42</span><span class="cl">
</span></span><span class="line"><span class="ln">43</span><span class="cl">    switch(exit) {
</span></span><span class="line"><span class="ln">44</span><span class="cl">
</span></span><span class="line"><span class="ln">45</span><span class="cl">        case &#34;right&#34;:
</span></span><span class="line"><span class="ln">46</span><span class="cl">
</span></span><span class="line"><span class="ln">47</span><span class="cl">            currentCell.style[&#34;border-left&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">48</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">49</span><span class="cl">
</span></span><span class="line"><span class="ln">50</span><span class="cl">        case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln">51</span><span class="cl">
</span></span><span class="line"><span class="ln">52</span><span class="cl">        currentCell.style[&#34;border-top&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">53</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">54</span><span class="cl">
</span></span><span class="line"><span class="ln">55</span><span class="cl">        case &#34;left&#34;:
</span></span><span class="line"><span class="ln">56</span><span class="cl">
</span></span><span class="line"><span class="ln">57</span><span class="cl">            currentCell.style[&#34;border-right&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">58</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">59</span><span class="cl">
</span></span><span class="line"><span class="ln">60</span><span class="cl">        case &#34;top&#34;:
</span></span><span class="line"><span class="ln">61</span><span class="cl">
</span></span><span class="line"><span class="ln">62</span><span class="cl">            currentCell.style[&#34;border-bottom&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">63</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">64</span><span class="cl">
</span></span><span class="line"><span class="ln">65</span><span class="cl">    }
</span></span><span class="line"><span class="ln">66</span><span class="cl">    
</span></span><span class="line"><span class="ln">67</span><span class="cl">    lastExit = exit;
</span></span><span class="line"><span class="ln">68</span><span class="cl">
</span></span><span class="line"><span class="ln">69</span><span class="cl">    loop++;
</span></span><span class="line"><span class="ln">70</span><span class="cl">
</span></span><span class="line"><span class="ln">71</span><span class="cl">}
</span></span></code></pre></div><p>In der ersten _Switch-_Anweisung gibt es außerdem eine wichtige Anweisung. Wenn der nächste Ausgang nach rechts geht, ergänze ich die Liste möglicher Ausgänge um einen Ausgang nach links (analog natürlich für die anderen Richtungen):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">exits.push(&#34;left&#34;);
</span></span></code></pre></div><p>Und wie sieht das Ergebnis aus?</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-8-700x703.png" alt=""></p>
<p>Ich würde sagen: Bescheiden. Das Problem ist, dass wir uns nach links bewegen, nachdem wir uns gerade erst nach rechts bewegt haben. Genauso dürfen wir uns nicht nach oben und gleich danach wieder nach unten bewegen.<br>
Wir müssen also etwas nachbessern. Wenn wir uns nun in z.B. der Zelle mit den Koordinaten x = 4 und y = 4 befinden, prüfen wir, ob die drei benachbarten Zellen bereits belegt sind (Hintergrundfarbe ist rot). Ist z.B. die rechte Nachbarzelle belegt, dürfen wir uns nicht nach rechts bewegen.<br>
Auch die Liste möglicher Ausgänge wird etwas anders organisiert:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="k">var</span> <span class="n">validExits</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;left&#34;</span><span class="p">,</span> <span class="s2">&#34;top&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="k">var</span> <span class="n">remainingExits</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;right&#34;</span><span class="p">:</span> <span class="n">mazeWidth</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span> <span class="n">mazeHeight</span><span class="p">,</span> <span class="s2">&#34;left&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&#34;top&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">};</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="k">var</span> <span class="n">nextExits</span> <span class="o">=</span> <span class="p">[];</span>
</span></span></code></pre></div><p>Das Array <em>validExits</em> ist eine globale, nicht veränderbare Liste aller möglichen Ausgänge. Mit <em>remainingExits</em> führen wir ein Objekt ein, dass die Anzahl möglicher bzw. erforderlicher Ausgänge protokolliert. Und <em>nextExits</em> ist das Array, das bei jedem Schleifendurchlauf die möglichen Ausgänge anzeigt. Die überarbeitete Schleife sieht nun so aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">  1</span><span class="cl">while (loop &lt; ((mazeWidth * mazeHeight) - 1)) {
</span></span><span class="line"><span class="ln">  2</span><span class="cl">
</span></span><span class="line"><span class="ln">  3</span><span class="cl">    nextExits = [];
</span></span><span class="line"><span class="ln">  4</span><span class="cl">
</span></span><span class="line"><span class="ln">  5</span><span class="cl">    for (i = 0; i &lt; validExits.length; i++) {
</span></span><span class="line"><span class="ln">  6</span><span class="cl">
</span></span><span class="line"><span class="ln">  7</span><span class="cl">        switch(validExits[i]) {
</span></span><span class="line"><span class="ln">  8</span><span class="cl">
</span></span><span class="line"><span class="ln">  9</span><span class="cl">            case &#34;right&#34;:
</span></span><span class="line"><span class="ln"> 10</span><span class="cl">                nextPossibleCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + (colIndex + 1));
</span></span><span class="line"><span class="ln"> 11</span><span class="cl">                break;
</span></span><span class="line"><span class="ln"> 12</span><span class="cl">
</span></span><span class="line"><span class="ln"> 13</span><span class="cl">            case &#34;left&#34;:
</span></span><span class="line"><span class="ln"> 14</span><span class="cl">                nextPossibleCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + (colIndex - 1));
</span></span><span class="line"><span class="ln"> 15</span><span class="cl">                break;
</span></span><span class="line"><span class="ln"> 16</span><span class="cl">
</span></span><span class="line"><span class="ln"> 17</span><span class="cl">            case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln"> 18</span><span class="cl">                nextPossibleCell = document.getElementById(&#34;cell_&#34; + (rowIndex + 1) + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln"> 19</span><span class="cl">                break;
</span></span><span class="line"><span class="ln"> 20</span><span class="cl">
</span></span><span class="line"><span class="ln"> 21</span><span class="cl">            case &#34;top&#34;:
</span></span><span class="line"><span class="ln"> 22</span><span class="cl">                nextPossibleCell = document.getElementById(&#34;cell_&#34; + (rowIndex - 1) + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln"> 23</span><span class="cl">                break;
</span></span><span class="line"><span class="ln"> 24</span><span class="cl">
</span></span><span class="line"><span class="ln"> 25</span><span class="cl">        }
</span></span><span class="line"><span class="ln"> 26</span><span class="cl">
</span></span><span class="line"><span class="ln"> 27</span><span class="cl">        if (nextPossibleCell == null || nextPossibleCell.style.backgroundColor != &#34;rgb(240, 0, 0)&#34;) {
</span></span><span class="line"><span class="ln"> 28</span><span class="cl">            
</span></span><span class="line"><span class="ln"> 29</span><span class="cl">            for (t = 0; t &lt; remainingExits[validExits[i]]; t++) {
</span></span><span class="line"><span class="ln"> 30</span><span class="cl">
</span></span><span class="line"><span class="ln"> 31</span><span class="cl">                nextExits.push(validExits[i]);
</span></span><span class="line"><span class="ln"> 32</span><span class="cl">
</span></span><span class="line"><span class="ln"> 33</span><span class="cl">            }
</span></span><span class="line"><span class="ln"> 34</span><span class="cl">
</span></span><span class="line"><span class="ln"> 35</span><span class="cl">        } 
</span></span><span class="line"><span class="ln"> 36</span><span class="cl">
</span></span><span class="line"><span class="ln"> 37</span><span class="cl">    }
</span></span><span class="line"><span class="ln"> 38</span><span class="cl">
</span></span><span class="line"><span class="ln"> 39</span><span class="cl">    exitIndex = Math.floor(Math.random() * nextExits.length);
</span></span><span class="line"><span class="ln"> 40</span><span class="cl">
</span></span><span class="line"><span class="ln"> 41</span><span class="cl">    exit = nextExits[exitIndex];
</span></span><span class="line"><span class="ln"> 42</span><span class="cl">
</span></span><span class="line"><span class="ln"> 43</span><span class="cl">    currentCell.style[&#34;border-&#34;+exit] = &#34;none&#34;;
</span></span><span class="line"><span class="ln"> 44</span><span class="cl">
</span></span><span class="line"><span class="ln"> 45</span><span class="cl">    switch(exit) {
</span></span><span class="line"><span class="ln"> 46</span><span class="cl">
</span></span><span class="line"><span class="ln"> 47</span><span class="cl">        case &#34;right&#34;:
</span></span><span class="line"><span class="ln"> 48</span><span class="cl">
</span></span><span class="line"><span class="ln"> 49</span><span class="cl">            colIndex = colIndex + 1;
</span></span><span class="line"><span class="ln"> 50</span><span class="cl">            remainingExits.left++;
</span></span><span class="line"><span class="ln"> 51</span><span class="cl">            remainingExits.right--;
</span></span><span class="line"><span class="ln"> 52</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 53</span><span class="cl">
</span></span><span class="line"><span class="ln"> 54</span><span class="cl">        case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln"> 55</span><span class="cl">
</span></span><span class="line"><span class="ln"> 56</span><span class="cl">            rowIndex = rowIndex + 1;
</span></span><span class="line"><span class="ln"> 57</span><span class="cl">            remainingExits.top++;
</span></span><span class="line"><span class="ln"> 58</span><span class="cl">            remainingExits.bottom--;
</span></span><span class="line"><span class="ln"> 59</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 60</span><span class="cl">
</span></span><span class="line"><span class="ln"> 61</span><span class="cl">        case &#34;left&#34;:
</span></span><span class="line"><span class="ln"> 62</span><span class="cl">
</span></span><span class="line"><span class="ln"> 63</span><span class="cl">            colIndex = colIndex - 1;
</span></span><span class="line"><span class="ln"> 64</span><span class="cl">            remainingExits.left--;
</span></span><span class="line"><span class="ln"> 65</span><span class="cl">            remainingExits.right++;
</span></span><span class="line"><span class="ln"> 66</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 67</span><span class="cl">
</span></span><span class="line"><span class="ln"> 68</span><span class="cl">        case &#34;top&#34;:
</span></span><span class="line"><span class="ln"> 69</span><span class="cl">
</span></span><span class="line"><span class="ln"> 70</span><span class="cl">            rowIndex = rowIndex - 1;
</span></span><span class="line"><span class="ln"> 71</span><span class="cl">            remainingExits.top--;
</span></span><span class="line"><span class="ln"> 72</span><span class="cl">            remainingExits.bottom++;
</span></span><span class="line"><span class="ln"> 73</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 74</span><span class="cl">            
</span></span><span class="line"><span class="ln"> 75</span><span class="cl">    }
</span></span><span class="line"><span class="ln"> 76</span><span class="cl">
</span></span><span class="line"><span class="ln"> 77</span><span class="cl">    currentCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln"> 78</span><span class="cl">
</span></span><span class="line"><span class="ln"> 79</span><span class="cl">    switch(exit) {
</span></span><span class="line"><span class="ln"> 80</span><span class="cl">
</span></span><span class="line"><span class="ln"> 81</span><span class="cl">        case &#34;right&#34;:
</span></span><span class="line"><span class="ln"> 82</span><span class="cl">
</span></span><span class="line"><span class="ln"> 83</span><span class="cl">            currentCell.style[&#34;border-left&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln"> 84</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 85</span><span class="cl">
</span></span><span class="line"><span class="ln"> 86</span><span class="cl">        case &#34;bottom&#34;:
</span></span><span class="line"><span class="ln"> 87</span><span class="cl">
</span></span><span class="line"><span class="ln"> 88</span><span class="cl">            currentCell.style[&#34;border-top&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln"> 89</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 90</span><span class="cl">
</span></span><span class="line"><span class="ln"> 91</span><span class="cl">        case &#34;left&#34;:
</span></span><span class="line"><span class="ln"> 92</span><span class="cl">
</span></span><span class="line"><span class="ln"> 93</span><span class="cl">            currentCell.style[&#34;border-right&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln"> 94</span><span class="cl">            break;
</span></span><span class="line"><span class="ln"> 95</span><span class="cl">
</span></span><span class="line"><span class="ln"> 96</span><span class="cl">        case &#34;top&#34;:
</span></span><span class="line"><span class="ln"> 97</span><span class="cl">
</span></span><span class="line"><span class="ln"> 98</span><span class="cl">            currentCell.style[&#34;border-bottom&#34;] = &#34;none&#34;;
</span></span><span class="line"><span class="ln"> 99</span><span class="cl">            break;
</span></span><span class="line"><span class="ln">100</span><span class="cl">
</span></span><span class="line"><span class="ln">101</span><span class="cl">    }
</span></span><span class="line"><span class="ln">102</span><span class="cl">    if (rowIndex == mazeHeight &amp;&amp; colIndex == mazeWidth) {
</span></span><span class="line"><span class="ln">103</span><span class="cl">
</span></span><span class="line"><span class="ln">104</span><span class="cl">        break;
</span></span><span class="line"><span class="ln">105</span><span class="cl">
</span></span><span class="line"><span class="ln">106</span><span class="cl">    }
</span></span><span class="line"><span class="ln">107</span><span class="cl">
</span></span><span class="line"><span class="ln">108</span><span class="cl">    currentCell.style.backgroundColor = &#34;#f00000&#34;;
</span></span><span class="line"><span class="ln">109</span><span class="cl">
</span></span><span class="line"><span class="ln">110</span><span class="cl">    lastExit = exit;
</span></span><span class="line"><span class="ln">111</span><span class="cl">
</span></span><span class="line"><span class="ln">112</span><span class="cl">    loop++;
</span></span><span class="line"><span class="ln">113</span><span class="cl">
</span></span><span class="line"><span class="ln">114</span><span class="cl">}
</span></span></code></pre></div><p>Hier wede ich noch mal ein paar Besonderheiten erläutern: Gleich zu Beginn der Schleife durchlaufen wir alle gültigen Ausgänge um so zu den nächsten möglichen Zellen zu kommen (<em>nextPossibleCell</em>). Nur wenn diese Zelle überhaupt existiert (wir uns also nicht am Rand des Irrgarten befinden) und nicht belegt ist (Hintergrundfarbe ist nicht rot), kann die entsprechende Bewegungsrichtung verwendet werden:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[...]
</span></span><span class="line"><span class="ln">2</span><span class="cl">nextExits.push(validExits[i]);
</span></span><span class="line"><span class="ln">3</span><span class="cl">[...]
</span></span></code></pre></div><p>Danach folgt wieder die Zufallsbestimmung des nächsten Ausgangs. Die Protokollierung der restlichen Ausgänge erfolgt nun etwas anders, am Beispiel von Ausgang &ldquo;<em>rechts</em>&rdquo;:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[...]
</span></span><span class="line"><span class="ln">2</span><span class="cl">remainingExits.left++;
</span></span><span class="line"><span class="ln">3</span><span class="cl">remainingExits.right--;
</span></span><span class="line"><span class="ln">4</span><span class="cl">[...]
</span></span></code></pre></div><p>Der Rest der Schleife bleibt unverändert. Und tatsächlich: Der Irrgarten sieht weitaus schöner aus:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-9-700x705.png" alt=""></p>
<p>Allerdings fehlt immer noch eine offensichtliche Kleinigkeit: Wir erreichen das Ziel nicht.</p>
<h2 id="schritt-6-das-sackgassenproblem">Schritt 6: Das Sackgassenproblem</h2>
<p>Wir erzeugen eine Sackgasse. Der Weg aus der Sackgasse sieht folgendermaßen aus: Wir müssen uns zurück bewegen. Bei jeder Zelle prüfen wir die möglichen Ausgänge und nehmen einfach einen anderen. Die bereits belegten Zellen bleiben weiterhin belegt.</p>
<p>Da wir nun in den Schleifenablauf eingreifen, führen wir eine Sicherung ein. So vermeiden wir, dass die Schleife z.B. unendlich läuft.</p>
<p>Außerdem führen wir ein weiteres Array <em>lastExits</em> ein, dass den aktuellen Weg protokolliert (das nennt sich übrigens <em><a href="https://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_backtracker">recursive backtracker algorithmus</a>)</em> Gleich der Beginn der Schleife prüft nun erstmal unser Sicherungsnetz:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">while (loop &lt; ((mazeWidth * mazeHeight) - 1)) {
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">    loopFuse++;
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">    if (loopFuse &gt;= maxLoops) {break;}
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl">    [...]
</span></span></code></pre></div><p>Danach prüfen wir wie gehabt, welche Ausgänge noch nicht belegt sind. Und dann, bevor wir per Zufall den nächsten Ausgang bestimmen, bauen wir unsere Sackgassen-Schutz-Funktion ein:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">[...]
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">if (nextExits.length == 0) {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    lastCells.splice(lastCells.length - 1, 1);
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    console.log(&#34;Sackgasse. Einen Schritt zurück:&#34;);
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    rowIndex = lastCells[lastCells.length - 1][0];
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    colIndex = lastCells[lastCells.length - 1][1];
</span></span><span class="line"><span class="ln">10</span><span class="cl">    currentCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">    continue;
</span></span><span class="line"><span class="ln">13</span><span class="cl">    
</span></span><span class="line"><span class="ln">14</span><span class="cl">}
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">exitIndex = Math.floor(Math.random() * nextExits.length);
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">[...]
</span></span></code></pre></div><p>Wenn wir uns in einer Sackgasse befinden, entfernen wir einfach die letzte Zelle aus <em>lastCells</em> und setzen den Zeige auf die Zelle davor. Dann verlassen wir den Schleifendurchlauf mit <em>continue.</em> Weiter unten müssen wir natürlich auch dafür sorgen, dass die jeweils aktuelle Zelle zu <em>lastCells</em> hinzugefügt wird:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[...]
</span></span><span class="line"><span class="ln">2</span><span class="cl">lastCells.push([rowIndex, colIndex]);
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl">currentCell = document.getElementById(&#34;cell_&#34; + rowIndex + &#34;_&#34; + colIndex);
</span></span><span class="line"><span class="ln">5</span><span class="cl">
</span></span><span class="line"><span class="ln">6</span><span class="cl">[...]
</span></span></code></pre></div><p>Ganz am Ende der Schleife prüfen wir außerdem noch, ob wir uns vielleicht schon am Ziel befinden, um dann die Schleife zu verlassen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">    [...]
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    if (rowIndex == mazeHeight &amp;&amp; colIndex == mazeWidth) {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">        break;
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    }
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    currentCell.style.backgroundColor = &#34;#f00000&#34;;
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">    loop++;
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">}
</span></span></code></pre></div><p>Das Ergebnis überzeugt: Wir erzeugen nun einen verzweigten Weg, der nicht nur nach rechts und unten geht, sondern sogar Sackgassen enthält:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-10-700x704.png" alt=""></p>
<h2 id="schritt-7-noch-mehr-sackgassen">Schritt 7: Noch mehr Sackgassen!</h2>
<p>Wie bekommen wir noch mehr Sackgassen in unser Labyrinth? Indem wir die echte Route abgehen und einfach von jeder Zelle aus eine neue Route starten? Ja. Das war auch mein erster Gedanke. Allerdings ist die aktuelle Zielroute oft von Sackgassen umgeben. Wenn wir diesen Weg wählen, könnten also weiterhin einige Felder unbearbeitet bleiben. Deshalb werden wir ziemlich schroff einfach jedes belegte Feld als Startpunkt für einen Abzweig nutzen. Das Erzeugen der Abzweigungen kommt natürlich ohne die Sackgassen-Schutz-Funktion aus.</p>
<p>Dazu müssen wir erstmal die aktuelle Logik in eine Funktion packen, die jetzt drei Parameter erwartet:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">startAtRow = 1;
</span></span><span class="line"><span class="ln">2</span><span class="cl">startAtCol = 1;
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl">addRoute(startARow, statrtAtCol, false);
</span></span></code></pre></div><p>Die Funktion <em>addRoute</em> sieht folgendermaßen aus. <em>False</em> bedeutet also, dass wir keinen Abzeig sondern erstmal die korrekte Route zum Ziel erzeugen wollen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">  1</span><span class="cl"><span class="n">function</span> <span class="n">addRoute</span><span class="p">(</span><span class="n">startAtRow</span><span class="p">,</span> <span class="n">startAtCol</span><span class="p">,</span> <span class="n">createDetour</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">  2</span><span class="cl">
</span></span><span class="line"><span class="ln">  3</span><span class="cl">    <span class="k">var</span> <span class="n">validExits</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;right&#34;</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">,</span> <span class="s2">&#34;left&#34;</span><span class="p">,</span> <span class="s2">&#34;top&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="ln">  4</span><span class="cl">    <span class="k">var</span> <span class="n">remainingExits</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;right&#34;</span><span class="p">:</span> <span class="n">mazeWidth</span><span class="p">,</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span> <span class="n">mazeHeight</span><span class="p">,</span> <span class="s2">&#34;left&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&#34;top&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">};</span>
</span></span><span class="line"><span class="ln">  5</span><span class="cl">    <span class="k">var</span> <span class="n">nextExits</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="ln">  6</span><span class="cl">    <span class="k">var</span> <span class="n">lastCells</span><span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="ln">  7</span><span class="cl">
</span></span><span class="line"><span class="ln">  8</span><span class="cl">    <span class="k">var</span> <span class="n">rowIndex</span> <span class="o">=</span> <span class="n">startAtRow</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">  9</span><span class="cl">    <span class="k">var</span> <span class="n">colIndex</span> <span class="o">=</span> <span class="n">startAtCol</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 10</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 11</span><span class="cl">    <span class="k">var</span> <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 12</span><span class="cl">
</span></span><span class="line"><span class="ln"> 13</span><span class="cl">    <span class="k">var</span> <span class="n">exit</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 14</span><span class="cl">
</span></span><span class="line"><span class="ln"> 15</span><span class="cl">    <span class="k">var</span> <span class="n">lastExit</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 16</span><span class="cl">
</span></span><span class="line"><span class="ln"> 17</span><span class="cl">    <span class="k">var</span> <span class="n">exitIndex</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 18</span><span class="cl">
</span></span><span class="line"><span class="ln"> 19</span><span class="cl">    <span class="k">var</span> <span class="n">loop</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 20</span><span class="cl">    <span class="k">var</span> <span class="n">loopFuse</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 21</span><span class="cl">    <span class="k">var</span> <span class="n">maxLoops</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">mazeWidth</span> <span class="o">*</span> <span class="n">mazeHeight</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 22</span><span class="cl">
</span></span><span class="line"><span class="ln"> 23</span><span class="cl">    <span class="k">var</span> <span class="n">nextPossibleCell</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 24</span><span class="cl">
</span></span><span class="line"><span class="ln"> 25</span><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">loop</span> <span class="o">&lt;</span> <span class="p">((</span><span class="n">mazeWidth</span> <span class="o">*</span> <span class="n">mazeHeight</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 26</span><span class="cl">
</span></span><span class="line"><span class="ln"> 27</span><span class="cl">        <span class="n">loopFuse</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 28</span><span class="cl">
</span></span><span class="line"><span class="ln"> 29</span><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">loopFuse</span> <span class="o">&gt;=</span> <span class="n">maxLoops</span><span class="p">)</span> <span class="p">{</span><span class="k">break</span><span class="p">;}</span>
</span></span><span class="line"><span class="ln"> 30</span><span class="cl">
</span></span><span class="line"><span class="ln"> 31</span><span class="cl">        <span class="n">nextExits</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="ln"> 32</span><span class="cl">
</span></span><span class="line"><span class="ln"> 33</span><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">validExits</span><span class="o">.</span><span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 34</span><span class="cl">
</span></span><span class="line"><span class="ln"> 35</span><span class="cl">            <span class="k">switch</span><span class="p">(</span><span class="n">validExits</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 36</span><span class="cl">
</span></span><span class="line"><span class="ln"> 37</span><span class="cl">                <span class="k">case</span> <span class="s2">&#34;right&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 38</span><span class="cl">                    <span class="n">nextPossibleCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="p">(</span><span class="n">colIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
</span></span><span class="line"><span class="ln"> 39</span><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 40</span><span class="cl">
</span></span><span class="line"><span class="ln"> 41</span><span class="cl">                <span class="k">case</span> <span class="s2">&#34;left&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 42</span><span class="cl">                    <span class="n">nextPossibleCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="p">(</span><span class="n">colIndex</span> <span class="o">-</span> <span class="mi">1</span><span class="p">));</span>
</span></span><span class="line"><span class="ln"> 43</span><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 44</span><span class="cl">
</span></span><span class="line"><span class="ln"> 45</span><span class="cl">                <span class="k">case</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 46</span><span class="cl">                    <span class="n">nextPossibleCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="p">(</span><span class="n">rowIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 47</span><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 48</span><span class="cl">
</span></span><span class="line"><span class="ln"> 49</span><span class="cl">                <span class="k">case</span> <span class="s2">&#34;top&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln"> 50</span><span class="cl">                    <span class="n">nextPossibleCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="p">(</span><span class="n">rowIndex</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 51</span><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 52</span><span class="cl">
</span></span><span class="line"><span class="ln"> 53</span><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 54</span><span class="cl">            
</span></span><span class="line"><span class="ln"> 55</span><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">nextPossibleCell</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 56</span><span class="cl">
</span></span><span class="line"><span class="ln"> 57</span><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="n">nextPossibleCell</span><span class="o">.</span><span class="n">getAttribute</span><span class="p">(</span><span class="s2">&#34;occupied&#34;</span><span class="p">)</span> <span class="o">!=</span> <span class="s2">&#34;true&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 58</span><span class="cl">                    
</span></span><span class="line"><span class="ln"> 59</span><span class="cl">                    <span class="k">for</span> <span class="p">(</span><span class="n">t</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">t</span> <span class="o">&lt;</span> <span class="n">remainingExits</span><span class="p">[</span><span class="n">validExits</span><span class="p">[</span><span class="n">i</span><span class="p">]];</span> <span class="n">t</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 60</span><span class="cl">
</span></span><span class="line"><span class="ln"> 61</span><span class="cl">                        <span class="n">nextExits</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">validExits</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="ln"> 62</span><span class="cl">
</span></span><span class="line"><span class="ln"> 63</span><span class="cl">                    <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 64</span><span class="cl">
</span></span><span class="line"><span class="ln"> 65</span><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 66</span><span class="cl">
</span></span><span class="line"><span class="ln"> 67</span><span class="cl">            <span class="p">}</span> 
</span></span><span class="line"><span class="ln"> 68</span><span class="cl">
</span></span><span class="line"><span class="ln"> 69</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 70</span><span class="cl">
</span></span><span class="line"><span class="ln"> 71</span><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">nextExits</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 72</span><span class="cl">
</span></span><span class="line"><span class="ln"> 73</span><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">createDetour</span> <span class="o">==</span> <span class="bp">true</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 74</span><span class="cl">
</span></span><span class="line"><span class="ln"> 75</span><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="n">colIndex</span> <span class="o">==</span> <span class="n">mazeWidth</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 76</span><span class="cl">                    <span class="n">rowIndex</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 77</span><span class="cl">                    <span class="n">colIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 78</span><span class="cl">                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 79</span><span class="cl">                    <span class="n">colIndex</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 80</span><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 81</span><span class="cl">
</span></span><span class="line"><span class="ln"> 82</span><span class="cl">                <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 83</span><span class="cl">
</span></span><span class="line"><span class="ln"> 84</span><span class="cl">                <span class="k">continue</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 85</span><span class="cl">
</span></span><span class="line"><span class="ln"> 86</span><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 87</span><span class="cl">                
</span></span><span class="line"><span class="ln"> 88</span><span class="cl">                <span class="n">lastCells</span><span class="o">.</span><span class="n">splice</span><span class="p">(</span><span class="n">lastCells</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 89</span><span class="cl">
</span></span><span class="line"><span class="ln"> 90</span><span class="cl">                <span class="n">rowIndex</span> <span class="o">=</span> <span class="n">lastCells</span><span class="p">[</span><span class="n">lastCells</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="ln"> 91</span><span class="cl">                <span class="n">colIndex</span> <span class="o">=</span> <span class="n">lastCells</span><span class="p">[</span><span class="n">lastCells</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="ln"> 92</span><span class="cl">                <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 93</span><span class="cl">
</span></span><span class="line"><span class="ln"> 94</span><span class="cl">                <span class="k">continue</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 95</span><span class="cl">            
</span></span><span class="line"><span class="ln"> 96</span><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 97</span><span class="cl">
</span></span><span class="line"><span class="ln"> 98</span><span class="cl">        <span class="p">}</span> 
</span></span><span class="line"><span class="ln"> 99</span><span class="cl">
</span></span><span class="line"><span class="ln">100</span><span class="cl">        <span class="n">exitIndex</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="n">floor</span><span class="p">(</span><span class="n">Math</span><span class="o">.</span><span class="n">random</span><span class="p">()</span> <span class="o">*</span> <span class="n">nextExits</span><span class="o">.</span><span class="n">length</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">101</span><span class="cl">
</span></span><span class="line"><span class="ln">102</span><span class="cl">        <span class="n">exit</span> <span class="o">=</span> <span class="n">nextExits</span><span class="p">[</span><span class="n">exitIndex</span><span class="p">];</span>
</span></span><span class="line"><span class="ln">103</span><span class="cl">
</span></span><span class="line"><span class="ln">104</span><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">createDetour</span> <span class="o">==</span> <span class="bp">false</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">105</span><span class="cl">
</span></span><span class="line"><span class="ln">106</span><span class="cl">            <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-&#34;</span><span class="o">+</span><span class="n">exit</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">107</span><span class="cl">
</span></span><span class="line"><span class="ln">108</span><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">109</span><span class="cl">
</span></span><span class="line"><span class="ln">110</span><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">exit</span> <span class="o">==</span> <span class="s2">&#34;right&#34;</span> <span class="o">&amp;&amp;</span> <span class="n">colIndex</span> <span class="o">==</span> <span class="n">mazeWidth</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">rowIndex</span> <span class="o">==</span> <span class="n">mazeHeight</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="ln">111</span><span class="cl">                <span class="o">!</span><span class="p">(</span><span class="n">exit</span> <span class="o">==</span> <span class="s2">&#34;bottom&#34;</span> <span class="o">&amp;&amp;</span> <span class="n">colIndex</span> <span class="o">==</span> <span class="n">mazeWidth</span> <span class="o">&amp;&amp;</span> <span class="n">rowIndex</span> <span class="o">==</span> <span class="n">mazeHeight</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">112</span><span class="cl">
</span></span><span class="line"><span class="ln">113</span><span class="cl">                <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-&#34;</span><span class="o">+</span><span class="n">exit</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">114</span><span class="cl">
</span></span><span class="line"><span class="ln">115</span><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="ln">116</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">117</span><span class="cl">        
</span></span><span class="line"><span class="ln">118</span><span class="cl">        <span class="k">switch</span><span class="p">(</span><span class="n">exit</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">119</span><span class="cl">
</span></span><span class="line"><span class="ln">120</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;right&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">121</span><span class="cl">
</span></span><span class="line"><span class="ln">122</span><span class="cl">                <span class="n">colIndex</span> <span class="o">=</span> <span class="n">colIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">123</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">left</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">124</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">right</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">125</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">126</span><span class="cl">
</span></span><span class="line"><span class="ln">127</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">128</span><span class="cl">
</span></span><span class="line"><span class="ln">129</span><span class="cl">                <span class="n">rowIndex</span> <span class="o">=</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">130</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">top</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">131</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">bottom</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">132</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">133</span><span class="cl">
</span></span><span class="line"><span class="ln">134</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;left&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">135</span><span class="cl">
</span></span><span class="line"><span class="ln">136</span><span class="cl">                <span class="n">colIndex</span> <span class="o">=</span> <span class="n">colIndex</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">137</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">left</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">138</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">right</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">139</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">140</span><span class="cl">
</span></span><span class="line"><span class="ln">141</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;top&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">142</span><span class="cl">
</span></span><span class="line"><span class="ln">143</span><span class="cl">                <span class="n">rowIndex</span> <span class="o">=</span> <span class="n">rowIndex</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">144</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">top</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">145</span><span class="cl">                <span class="n">remainingExits</span><span class="o">.</span><span class="n">bottom</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">146</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">147</span><span class="cl">                
</span></span><span class="line"><span class="ln">148</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">149</span><span class="cl">
</span></span><span class="line"><span class="ln">150</span><span class="cl">        <span class="n">lastCells</span><span class="o">.</span><span class="n">push</span><span class="p">([</span><span class="n">rowIndex</span><span class="p">,</span> <span class="n">colIndex</span><span class="p">]);</span>
</span></span><span class="line"><span class="ln">151</span><span class="cl">
</span></span><span class="line"><span class="ln">152</span><span class="cl">        <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">rowIndex</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">colIndex</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">153</span><span class="cl">
</span></span><span class="line"><span class="ln">154</span><span class="cl">        <span class="k">switch</span><span class="p">(</span><span class="n">exit</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">155</span><span class="cl">
</span></span><span class="line"><span class="ln">156</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;right&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">157</span><span class="cl">
</span></span><span class="line"><span class="ln">158</span><span class="cl">                <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-left&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">159</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">160</span><span class="cl">
</span></span><span class="line"><span class="ln">161</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;bottom&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">162</span><span class="cl">
</span></span><span class="line"><span class="ln">163</span><span class="cl">                <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-top&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">164</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">165</span><span class="cl">
</span></span><span class="line"><span class="ln">166</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;left&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">167</span><span class="cl">
</span></span><span class="line"><span class="ln">168</span><span class="cl">                <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-right&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">169</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">170</span><span class="cl">
</span></span><span class="line"><span class="ln">171</span><span class="cl">            <span class="k">case</span> <span class="s2">&#34;top&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">172</span><span class="cl">
</span></span><span class="line"><span class="ln">173</span><span class="cl">                <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="p">[</span><span class="s2">&#34;border-bottom&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">174</span><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">175</span><span class="cl">
</span></span><span class="line"><span class="ln">176</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">177</span><span class="cl">
</span></span><span class="line"><span class="ln">178</span><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">rowIndex</span> <span class="o">==</span> <span class="n">mazeHeight</span> <span class="o">&amp;&amp;</span> <span class="n">colIndex</span> <span class="o">==</span> <span class="n">mazeWidth</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">179</span><span class="cl">
</span></span><span class="line"><span class="ln">180</span><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">181</span><span class="cl">
</span></span><span class="line"><span class="ln">182</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">183</span><span class="cl">
</span></span><span class="line"><span class="ln">184</span><span class="cl">        <span class="n">currentCell</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">backgroundColorRoute</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">185</span><span class="cl">        <span class="n">currentCell</span><span class="o">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="s2">&#34;occupied&#34;</span><span class="p">,</span> <span class="s2">&#34;true&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">186</span><span class="cl">
</span></span><span class="line"><span class="ln">187</span><span class="cl">        <span class="n">lastExit</span> <span class="o">=</span> <span class="n">exit</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">188</span><span class="cl">
</span></span><span class="line"><span class="ln">189</span><span class="cl">        <span class="n">loop</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">190</span><span class="cl">
</span></span><span class="line"><span class="ln">191</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">192</span><span class="cl">
</span></span><span class="line"><span class="ln">193</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>An der Funktionalität hat sich hier nicht viel geändert: Wir prüfen zuerst, welche Ausgänge von der aktuellen Zelle aus möglich sind. Direkt danach allerdings müssen wir, wenn es keine weiteren Ausgänge gibt, die Funktion verlassen - wir wollen ja diesmal explizit Sackgassen erzeugen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">if (createDetour == true) {
</span></span><span class="line"><span class="ln">2</span><span class="cl">  return false;
</span></span><span class="line"><span class="ln">3</span><span class="cl">[...]
</span></span></code></pre></div><p>Weiter unten gibt es eine weitere Besonderheit: Wenn wir den Abzweig erzeugen, darf dieser natürlich nicht &ldquo;aus Versehen&rdquo; zum Ziel führen. Wir prüfen also, ob wir uns direkt neben der Zielzelle befinden. In dem Fall wird der Rahmen nicht entfernt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[...]
</span></span><span class="line"><span class="ln">2</span><span class="cl">if (!(exit == &#34;right&#34; &amp;&amp; colIndex == mazeWidth - 1 &amp;&amp; rowIndex == mazeHeight) &amp;&amp;
</span></span><span class="line"><span class="ln">3</span><span class="cl">    !(exit == &#34;bottom&#34; &amp;&amp; colIndex == mazeWidth &amp;&amp; rowIndex == mazeHeight - 1) ) {
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">    currentCell.style[&#34;border-&#34;+exit] = &#34;none&#34;;
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl">}
</span></span><span class="line"><span class="ln">8</span><span class="cl">[...]
</span></span></code></pre></div><p>Ganz am Ende der Schleife wird außerdem das Attribut <em>occupied</em> der Zelle auf <em>true</em> gesetzt. So müssen wir nicht mehr mit der Hintergrundfarbe arbeiten, um belegte Zellen zu erkennen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[...]
</span></span><span class="line"><span class="ln">2</span><span class="cl">currentCell.setAttribute(&#34;occupied&#34;, &#34;true&#34;);
</span></span><span class="line"><span class="ln">3</span><span class="cl">[...]
</span></span></code></pre></div><p>Nun kommen wir zum Erzeugen der Abzweige. Wie schon angekündigt, durchlaufen wir einfach die Zellen, die bereits belegt (<em>occupied == true)</em> sind, um von dort aus unsere bewährte Routenerstellung - jedoch ohne Sackgassen-Schutz-Funktion, zu starten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">mazeWidth</span> <span class="o">*</span> <span class="n">mazeHeight</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">n</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="k">var</span> <span class="n">currentCell</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementById</span><span class="p">(</span><span class="s2">&#34;cell_&#34;</span> <span class="o">+</span> <span class="n">startAtRow</span> <span class="o">+</span> <span class="s2">&#34;_&#34;</span> <span class="o">+</span> <span class="n">startAtCol</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">currentCell</span><span class="o">.</span><span class="n">getAttribute</span><span class="p">(</span><span class="s2">&#34;occupied&#34;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&#34;true&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">        <span class="n">addRoute</span><span class="p">(</span><span class="n">startAtRow</span><span class="p">,</span> <span class="n">startAtCol</span><span class="p">,</span> <span class="bp">true</span><span class="p">);</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">startAtCol</span> <span class="o">==</span> <span class="n">mazeWidth</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">        
</span></span><span class="line"><span class="ln">13</span><span class="cl">        <span class="n">startAtRow</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">        <span class="n">startAtCol</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">        <span class="n">startAtCol</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Et voila: Ein Irrgarten:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-12-700x696.png" alt=""></p>
<p>Und auch wenn der Algorithmus teilweise etwas stumpf gestaltet ist, kann sich die Performance sehen lassen. Ein Labyrinth mit der Kantenlänge 100 x 100 dauert nur wenige Sekunden:</p>
<p><img src="/2020/2020-04-11-wie-erstelle-ich-ein-labyrinth-mit-javascript/images/grafik-13-700x699.png" alt=""></p>
<p>Natürlich gibt es an der einen oder anderen Stelle noch Optimierungspotential. Ich hab die ganze Logik noch mit einer Navigation und einer Stopp-Uhr ausgestattet. So sieht das ganze dann als Zeitvertreib für die Quarantäne aus: <a href="https://nickyreinert.github.io/maze/">https://nickyreinert.github.io/maze/</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> anleitung, javascript, labyrinth</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie erstelle ich ein Labyrinth mit JavaScript? - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tutorial</dc:type>
      
      
    </item><item>
      <title>WordPress Tag Cloud mit Umlauten (äöü) korrekt sortieren - Oder: Der WordPress Filter im Live-Beispiel erklärt</title>
      <link>https://nickyreinert.de/2019/2019-04-18-wordpress-tag-cloud-mit-umlauten-aeoeue-korrekt-sortieren-oder-der-wordpress-filter-im-live-beispiel-erklaert/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2019/2019-04-18-wordpress-tag-cloud-mit-umlauten-aeoeue-korrekt-sortieren-oder-der-wordpress-filter-im-live-beispiel-erklaert/</guid>
      <description>WordPress bringt von Hause aus ein Widget mit, dass die verwendeten Tags als Cloud darstellt (wer es ein wenig schöner mag, greift auf mein WordCloud Plugin …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt WordPress Tag Cloud mit Umlauten (äöü) korrekt sortieren - Oder: Der WordPress Filter im Live-Beispiel erklärt und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, WordPress, Development</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>WordPress bringt von Hause aus ein Widget mit, dass die verwendeten Tags als Cloud darstellt (wer es ein wenig schöner mag, <a href="https://www.nickyreinert.de/wordpress-word-cloud-2-0/">greift auf mein WordCloud Plugin zurück</a>). Das Ganze hat nur einen Haken: Die entsprechende WordPress-Funktion <strong><a href="https://developer.wordpress.org/reference/functions/wp_generate_tag_cloud/">wp_generate_tag_cloud</a></strong> nutzt <strong>aosort()</strong> als Sortierfunktion. Und die kommt mit Umlauten nicht sonderlich gut klar. Eine Lösung wäre also, die Umlaute für die Sortierung zu übersetzen, also Ä ind Ae, ö in oe und so weiter.</p>
<p>Das schöne an WordPress: Sehr viele Funktionalitäten lassen sich über <strong>Hooks</strong> und <strong>Filter</strong> modifizieren. So bietet auch der Sortier-Algorithmus die Möglichkeit an, den Array mit einer eigenen Funktion zu filtern. Die perfekte Gelegenheit, um sich mit dem Thema <strong>Filter mal</strong> etwas näher zu beschäftigen. Ein Blick in den Source-Code von <strong>wp_generate_tag_cloud()</strong> zeigt ab Zeile 875 (seit Version 4.8.0):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">    /**
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">     * Filters how the items in a tag cloud are sorted.
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">     *
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">     * @since 2.8.0
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">     *
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">     * @param WP_Term[] $tags Ordered array of terms.
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">     * @param array     $args An array of tag cloud arguments.
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">     */
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl">    $tags_sorted = apply_filters( &#39;tag_cloud_sort&#39;, $tags, $args );
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">    if ( empty( $tags_sorted ) ) {
</span></span><span class="line"><span class="ln">13</span><span class="cl">        return $return;
</span></span><span class="line"><span class="ln">14</span><span class="cl">    }
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">...
</span></span></code></pre></div><p>Die Tags lassen sich also über den <strong>Filter</strong> <strong>tag_cloud_sort</strong> mit einer eigenen Funktion sortieren. Gesagt, getan. Folgendes packen wir in die <strong>functions.php</strong> unseres Child Themes (wir ignorieren dabei mal die Vorgabe, Funktionalitäten nicht im Theme unterzubringen):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_filter(&#39;tag_cloud_sort&#39;, &#39;custom_tag_sort&#39;, 10, 2);
</span></span></code></pre></div><p>Der zweite Parameter verweist auf unsere eigene Sortier-Funktion. Die 10 beschreibt die Priorität und mit 2 wird die Anzahl der Funktions-Parmaeter festgelegt, nämlich <strong>$tags und $args</strong>. Unsere eigene Sortier-Funktion sieht dann folgendermaßen aus (in Ahnlehnung an <a href="http://www.marcokrings.de/arrays-sortieren-mit-umlauten/">&ldquo;Arrays sortieren mit Umlauten&rdquo;</a>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">function custom_tag_sort($tags, $args) {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">        
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    if (count($tags) == 0) { return $tags; }
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    $tagsSorted = array();
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    $tagsReturn   = array();
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    $search   = array(&#34;Ä&#34;,&#34;ä&#34;,&#34;Ö&#34;,&#34;ö&#34;,&#34;Ü&#34;,&#34;ü&#34;,&#34;ß&#34;);
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    $replace  = array(&#34;Ae&#34;,&#34;ae&#34;,&#34;Oe&#34;,&#34;oe&#34;,&#34;Ue&#34;,&#34;ue&#34;,&#34;ss&#34;);
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    foreach($tags as $key =&gt; $val) {
</span></span><span class="line"><span class="ln">10</span><span class="cl">        $tagsSorted[$key] = str_replace($search, $replace, $val-&gt;name);
</span></span><span class="line"><span class="ln">11</span><span class="cl">    }
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">    natcasesort($tagsSorted);
</span></span><span class="line"><span class="ln">14</span><span class="cl">    
</span></span><span class="line"><span class="ln">15</span><span class="cl">    foreach($tagsSorted as $key =&gt; $val) {
</span></span><span class="line"><span class="ln">16</span><span class="cl">        $tagsReturn[$key] = $tags[$key];
</span></span><span class="line"><span class="ln">17</span><span class="cl">    }
</span></span><span class="line"><span class="ln">18</span><span class="cl">
</span></span><span class="line"><span class="ln">19</span><span class="cl">    return $tagsReturn;
</span></span><span class="line"><span class="ln">20</span><span class="cl">        
</span></span><span class="line"><span class="ln">21</span><span class="cl">}
</span></span></code></pre></div><p>Am Anfang schauen wir, ob überhaupt Tags übergeben werden, andernfalls gehts gleich wieder zurück. Danach initialisieren wir unsere Variablen. Von Interesse dürften hier vor allem <strong>$search</strong> und <strong>$replace</strong> sein. Damit legen wir fest, welche <strong>Umlaute und Sonderzeichen</strong> ersetzt werden sollen. Die Liste darfst du natürlich beliebig erweitern.</p>
<p>In der ersten foreach-Schleife durchlaufen wir die Tag-Liste und ersetzen ganz schlicht die Umlaute entsprechend der Vorgabe.</p>
<p>Danach sortieren wir unsere &ldquo;bereinigte&rdquo; Tag-List mit der alternativen Sortier-Funktion <a href="https://www.php.net/manual/de/function.natcasesort.php"><strong>natcasesort()</strong>.</a> <em>natcase</em> steht für <em>natural sort, case insensitive</em>. Sprich: Natürliche <em>Sortierung, Ignorieren der Groß-/Kleinschreibung</em>. Natürliche Sortierung heißt ganz einfach: So wie ein Mensch sortieren würde.</p>
<p>In der letzten Schleife sorgen wir dafür, dass die nun sortierte Tag-Liste wieder unsere ursprünglichen Umlaute enthält und geben die sortierte Liste dann zurück.</p>
<p>Das war es auch schon. Unsere Liste ist, unter Berücksichtigung der deutschen Umlaute, sauber sortiert. Ab dort übernimmt WordPress die weitere Verarbeitung. Und wir haben gelernt, wie wir einen <strong>einfachen Filter</strong> in WordPress implementieren.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> anleitung, filter, php, tagcloud, tutorial, wordcloud, wordpress</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>WordPress Tag Cloud mit Umlauten (äöü) korrekt sortieren - Oder: Der WordPress Filter im Live-Beispiel erklärt - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Wordpress Debugging und Wartung oder: Keine Panik vor dem White Screen of Death und HTTP 500</title>
      <link>https://nickyreinert.de/2018/2018-11-18-wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2018/2018-11-18-wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/</guid>
      <description>Deine Wordpress-Seite besteht nur aus einem weißen Bildschirm, dem HTTP-Fehlercode 500 oder lädt irsinnig langsam? White Screen of Death (WSoD), die …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine umfassende Anleitung zur Fehlersuche und Wartung von WordPress. Der Artikel erklärt, wie man Probleme wie den &#34;White Screen of Death&#34; (WSoD) und HTTP-500-Fehler systematisch analysiert. Vorgestellt werden drei wesentliche Werkzeuge: die Entwicklerkonsole des Browsers, das Plugin &#34;Query Monitor&#34; zur Performance-Analyse und die korrekte Konfiguration des WordPress-Debug-Modus über `wp-config.php` und `.htaccess`.</p>
          
          
          <p><strong>Hauptthemen:</strong> WordPress, Debugging, Troubleshooting, Performance, PHP, Web-Development</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>Deine Wordpress-Seite besteht nur aus einem weißen Bildschirm, dem <strong>HTTP-Fehlercode 500</strong> oder lädt irsinnig langsam? <strong>White Screen of Death</strong> (WSoD), die berüchtigten <strong>500´er</strong> sowie lange <strong>Ladezeiten</strong> scheinen zu den größten Herausforderungen im Umgang mit WordPress zu gehören und sie hinterlassen regelmäßig lange Gesichter. Zwar gehören Ladezeit, PHP- und HTTP-Fehler nicht unbedingt zusammen, sie erfordern aber in der Regel das gleiche Vorgehen: Nämlich die <strong>Analyse</strong>, was da im <strong>Hintergrund</strong> so passiert.<br>
Die Suche nach der Ursache ist oft relativ simpel. Es sagt einem oft nur niemand. Der beliebteste Tipp bei Wordpress lautet oft:</p>
<blockquote>
<p><em>&ldquo;Deaktiviere mal alle Plugins und aktiviere sie nacheinander wieder.&rdquo;</em></p>
<p><em>Anonymer Ratgeber, Mai 2018</em></p></blockquote>
<p>Das ist alles andere als effizient, ja nicht einmal effektiv: Du erfährst nach 27 Minuten und zwei Tassen Kaffe, dass das Plugin &ldquo;Foobar&rdquo; für den Fehler verantwortlich ist, weil das den <strong>WSoD</strong> auslöst. Aber dann weißt du immer noch nicht, was genau der Fehler ist. Danke für nichts?</p>
<p>Tatsächlich gibt es nur <strong>drei Dinge</strong>, die dir helfen können, dir selber zu helfen, wenn WordPress dich mal wieder im Stich lässt. Und diese drei Werkzeuge zur <strong>Fehlersuche</strong> und <strong>Diagnose</strong> langsamer Wordpress-Installation stelle ich jetzt einmal vor:</p>
<h2 id="1-die-entwickler-konsole-deines-browsers">1. Die Entwickler-Konsole deines Browsers</h2>
<p>Dieses Werkzeug bringt mittlerweile jeder moderne Browser mit und das sollte auch die <strong>erste Anlaufstelle</strong> für dich sein. Welche Entwicklerkonsole du verwendest, ist deinem Geschmack überlassen, in der Funktionalität unterscheiden sie sich kaum. Du öffnest die Entwicklerkonsole auf vielfältige Weise über</p>
<ul>
<li>das Kontextmenü (Rechte Maustaste -&gt; Element untersuchen) oder</li>
<li>über mit der Funktionstaste F12 oder</li>
<li>mit dem Shortcut CTRL+SHIFT+I (Windows) / CMD+OPT+I (OS X)</li>
</ul>
<p>[gallery link=&ldquo;file&rdquo; columns=&ldquo;4&rdquo; ids=&ldquo;2356,2357,2358,2359&rdquo;]</p>
<h2 id="2-der-query-monitor---warum-ist-dein-wordpress-so-langsam">2. Der Query Monitor - warum ist dein Wordpress so langsam?</h2>
<p>Der <a href="https://de.wordpress.org/plugins/query-monitor/">Query Monitor</a> ist ein wirklich nützliches <strong>Plugin</strong> für Wordpress. Eines der wenigen. Du fragst dich, warum deine Seite so lange lädt und die Entwicklerkonsole gibt nicht vielmehr her als ein <strong>TTFB</strong> (Time To First Byte) von 60 Sekunden?</p>
<p>Die Entwicklerkonsole sagt dir nur, wie lange der Browser auf den Inhalt wartet. Hier kann maximal identifiziert werden, dass die reine Wartezeit (<strong>TTFB</strong>) 60 Sekunden beträgt und der Inhalt in 10 Sekunden heruntergeladen wird (die ganzen anderen Nerd-Kennzahlen jetzt mal außen vor gelassen). Letzteres liegt ziemlich wahrscheinlich an der Internetleitung von dir oder dem Hoster. Aber TTFB? Das ist im Grunde die Zeit, die der Server benötigt um die Ausgabe einmal zusammenzuschustern und zu deinem Browser zu schicken. Also das ganze PHP-Gedöns einmal &ldquo;interpretieren&rdquo; und ein paar Datenbankabfragen durchführen. Je umfangreicher deine WordPress-Seite ist (sprich Plugin-Vielfalt), desto mehr gibt es hier zu tun. Und was da im Hintergrund genau passiert, sagt dir der <strong>Query Monitor</strong>.</p>
<p>[gallery link=&ldquo;file&rdquo; columns=&ldquo;2&rdquo; ids=&ldquo;2354,2355&rdquo;]</p>
<p>Nach der Installation siehst du in der Admin-Toolbar erstmal ein paar oberflächliche Zahlen: <strong>Ladezeit,</strong> <strong>Größe</strong> und <strong>Anzahl der Queries.</strong> Wirklich spannend wird es, wenn du mal auf diese Zahlen klickst. Dann öffnet sich eine &ldquo;<em>Entwickler-Konsole&rdquo;,</em> die deiner WordPress-Seite mal gehörig unter die Haube schaut. Du siehst <strong>Datenbankabfragen,</strong> <strong>Scripte,</strong> <strong>Funktionen</strong> und alle möglichen Diagnostiken - einfach alles. Du kannst nun relativ zügig erkennen, ob manche Abfragen einfach nur doppelte durchgeführt wurden oder die Datenbank grundsätzlich zu langsam ist.</p>
<h2 id="3-der-debug-modus">3. Der Debug-Modus</h2>
<p>DasBbeste zum Schluss - der Debug-Modus verrät dir wirklich alles und ist eigentlich der Premium-Weg der Problemlösung.</p>
<p>Du wirst nur selten erleben, dass Wordpress bzw. dein Server dich wirklich gar nicht mit einer Fehlermeldung erhellen will. Der unliebsame <strong>White Screen of Death</strong> und der gefürchtete <strong>HTTP-Fehler 500</strong> sind im Grunde nur der Standardeinstellungen geschuldet. Du kannst dann entweder ein Ticket bei deinem Hoster öffnen und im nächsten Jahr mit einer Antwort rechnen oder versuchen, selber an die Fehlermeldung zu gelangen und das Problem eigenständig zu analysieren: <strong>Der geheime Trick</strong> lautet nämlich, einfach mal das Internet nach der Fehlermeldung zu durchsuchen. <strong>In 99,99% der Fälle</strong> bist du bei weitem nicht der erste mit diesem banalen Problem..</p>
<p>Die wahre Herausforderung ist allerdings, dass die Ausgabe von Fehlermeldungen eben standardmäßig unterdrückt  wird. Aus Gründen der Sicherheit und Bedienbarkeit ist das grundsätzlich nicht verkehrt. Wenn du doch mal wissen willst, woher der <strong>White Screen of Death</strong> wirklich kommt, gehst du folgendermaßen vor:</p>
<h3 id="a-du-aktivierst-die-fehlerausgabe-von-wordpress">A: Du aktivierst die Fehlerausgabe von Wordpress</h3>
<p>Dazu öffnest du die Datei wp-config.php, nachdem du sie lokal gespeichert hast, und setzt folgenden Parameter direkt an den Anfang, aber hinter das <em>&lt;?php</em>:</p>
<?php
define( 'WP\_DEBUG', true );
define( 'WP\_DEBUG\_LOG', true ); 
define('WP\_DEBUG\_DISPLAY', false);

Der 1. Parameter ist für das debuggen _essentiell:_ Damit aktivierst du die Ausgabe von Fehlermeldungen.

Mit dem 2. Parameter gibst du die Anweisung, dass die Fehlermeldungen in einer Datei gespeichert werden. Das ist aus zwei Gründen nützlich: Du kannst es später einfacher Nachvollziehen und außerdem solltest du vermeiden, dass Fehlermeldungen, die vielleicht sensible Informationen enthalten, direkt im Frontend landen.

Die besagte Datei befindet sich um Order /wp-content und heißt **debug.log**. etzt du **WP\_DEBUG\_LOG** auf true, wird Wordpress Fehlermeldungen in die Date _/wp-content/debug.log_ schreiben. Für die nachträgliche Analyse ist das sehr praktisch. Das funktioniert natürlich nur, wenn der Ordner beschreibbar ist. Andernfalls musst du diesen Parameter und den folgenden weglassen.

Der letzte Parameter sorgt noch einmal explizit dafür, dass die Fehlermeldungen nicht im Frontend angezeigt werden.

Neben diesen 3 Parameter gibt es noch **SCRIPT\_DEBUG**. Mit true aktiviert, sorgt dieser Schalter dafür, dass Wordpress die "echten" CSS- und JS-Dateien liest, anstatt der minifizierten. Das wird dich nur in Spezialfällen betreffen, solltest du aber kennen. Der nächste **Spezialparameter** in der Riege ist **SAVEQUERIES** - hiermit wird dir WordPress die Datenbank-Anfragen ausgeben. Auch das ist in der Regel nicht notwendig, aber gut zu wissen.

Denke daran, dass die Parameter im weiteren Verlauf der Config-Datei nicht wieder vorkommen und deine Einstellung so aufheben und vor allen, dass du die Parameter in einem Live-System nach der Fehlersuche **wieder auf _false_ zurücksetzen** solltest.

### B: Du aktivierst die Fehlerausgabe deines Servers

Eigentlich sollte dir **Nummero A** bereits weiterhelfen, denn damit wird auch die Fehlerausgabe von PHP aktiviert. Sollte deine Seite trotzdem weiß bleiben und dich nicht mit zusätzlichen Fehlernachrichten beglücken, kannst du etwas tiefer in die Trickkiste greifen. Diese Parameter machen im Grunde nichts anderes, als oben schon beschreiben ist, sie greifen allerdings etwas "früher" ein.

Ergänze, ebenfalls direkt hinter dem _<?php_ der Datei _wp-config.php_ die folgenden Zeilen:

<?php
error\_reporting(E\_ALL);
ini\_set('display\_errors', 1);
ini\_set('display\_startup\_errors', 1);
// ini\_set("log\_errors", 1);
// ini\_set("error\_log", "/pfad/zu/wordpress/temp/php-error.log");

Die beiden letzten Zeilen aktivieren, ähnlich wie oben, dass PHP Fehlermeldungen in eine Datei schreibt. Da die Log-Datei bei der ad hoc Fehlersuche nicht zwingend hilfreich ist, sind diese beiden Zeilen auskommentiert.

Wenn du den Pfad zu deiner Installation nicht kennst, bekommst du sie mit folgendem PHP-Befehl heraus. Wenn du diese Information nicht mehr benötigst, entferne sie aber sofort aus deinem Script. **Security through obscurity** - das _Document Root_ geht niemanden außer dich etwas an!

var\_dump($\_SERVER\["DOCUMENT\_ROOT"\]);

Achtung: Auf manchen Seiten wird dir empfohlen, den Zeilen ein @ vorzustellen. Das ist **ziemlich kontraproduktiv** - denn [das @ am Anfang der Zeile unterbindet Fehlermeldungen](http://php.net/manual/de/language.operators.errorcontrol.php) und weshalb bist du hier? Genau...

Das ist aber noch nicht alles - die Trickkiste ist noch tiefer. Doch obacht! Das folgende ist **Premium-Klasse-Debuggung** und auf den meisten Shared-Hostern gar nicht möglich. Die essentiellen Parameter befinden sich in der ersten Zeile. Die noch tiefergreifenden und wirklich nur in absoluten Sonderfällen benötigten Einstellungen sind darunter aufgeführt.

Öffne die Datei **.htaccess** und ergänze die folgenden Zeilen - auch hier gilt, achte darauf, dass die Parameter nicht an anderer Stelle ungewollt überschrieben werden:

\# Easy-Peasy Lemon-Squeezy:
php\_flag display\_startup\_errors on
php\_flag display\_errors on
php\_flag html\_errors on
php\_flag log\_errors on

# Fürs Protokoll: Wenn du das volle Entertainment brauchst
# nimm auch das hier mit - für alle Copy&Paste-Cowbowys, die 
# den Warnhinweis nicht lesen, habe ich die Zeilen auskommentiert
# php\_flag ignore\_repeated\_errors off
# php\_flag ignore\_repeated\_source off
# php\_flag report\_memleaks on
# php\_flag track\_errors on
# php\_value docref\_root 0
# php\_value docref\_ext 0
# php\_value error\_log /pfad/zu/wordpress/temp/php-error.log
# php\_value error\_reporting -1
# php\_value log\_errors\_max\_len 0

# <Files php\_errors.log>
#      Order allow,deny
#      Deny from all
#      Satisfy All
# </Files>

Warum A und warum B? Es ist möglich, dass die Server-Konfiguration es aus Sicherheitsgründen nicht zulässt, dass diese sogenannten **PHP-Direktiven** (aka Parameter) an beliebigen Stellen (aka .htaccess, in der PHP-Datei, ...) konfiguriert wird. Deshalb.  
Und was ist mit C - der **php.ini**\-Datei? Gute Frage, werter Leser, die bei dir ein gewisses Grundwissen erkennen lässt. Chapeau. In dem Fall gehe ich sehr stark davon aus, dass du Zugriff auf eben diese Datei hast. Und wer Zugriff auf diese Datei hat, mit diesem Vorwissen, ist ziemlich sicher und hoffentlich mit der notwendigen Erfahrung ausgestattet. Andernfalls: Ruf deinen SysOp an. ;) Fühle dich trotzdem herzlich dazu eingeladen, diesen Beitrag mit etwas zuästzlichem Fachwissen in den **Kommentaren** zu bereichern.

### C: Den Debug-Modus bei deinem Hoster aktivieren

Bei der Einstellung des Debug-Modus gibt es eine Hierarchie. Die Debug-Einstellung in der PHP-Datei (**wp-config.php**) ist hierbei die oberste Ebene, darunter folgt die Einstellung in der **.htaccess-Datei** und auf unterster Ebene lässt sich diese Funktion in der Einstellung des Servers bzw. PHP-Interpreters direkt einstellen (z.B. **php.ini**). Damit unbedarfte Laien wie wir an dieser Datei nicht wahllos rumfingern, ist bleibt uns diese Möglichkeit entweder komplett verwehrt oder ist nur über das Interface bei deinem Hoster einstellbar. Dort kann der Hoster auch festlegen, dass diese Einstellung (in Fachkreisen gerne auch **Direktive** genannt) in den Ebenen darüber gar nicht anpassen werden darf - **Schritt A und B bleiben also unwirksam.** Das ist der Zeitpunkt, wenn du in den Einstellungen bei deinem Hoster nach dieser Einstellung suchst - oder den Hoster darum bittest, den Debug-Modus für dich zu aktivieren.

Bei HostEurope kannst du das z.B. sehr leicht selber tun:

[![Host Europe Debug Modus aktivieren ](images/host_europe_debug_aktivieren-300x232.png)](https://www.nickyreinert.de/files/wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/host_europe_debug_aktivieren.png)

Host Europe Debug Modus aktivieren

## Freibier - Nachwort - Lies  mich!

Das ist jetzt wirklich wichtig: Wie immer, und oben bereits erwähnt, gilt auch hier: **Security through obscurity**.

> Wenn du den Debug-Modus auf dem Live-System nicht mehr benötigst, deaktiviere ihn. Basta.

Auf **Live-Systemen** hat der **Debug-Modus nur in Ausnahmefällen** etwas verloren. Und Fehler sollten zur Ausnahme zählen. Und auch, wenn du hier nur ein wenig an den PHP-Dateien rumschraubst, wobei eigentlich nicht viel kaputt gehen kann:

> Denke an die obligatorische Sicherungskopie.

Und jetzt viel Spass beim d_ebuggen_...

Ach ja - wenn all das da oben nicht funktioniert, dann kannst du tatsächlich auch mal den Holzhammer rausholen: **Plugins aktivieren und deaktivieren**. In der Regel helfen dir die hier geschilderten Schritte aber, genau diesen mühsamen Schritt zu übergehen.

        
        
        <div class="tags">
          <p><strong>Tags:</strong> WordPress, Debugging, Anleitung, Fehlerbehebung, Performance</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wordpress Debugging und Wartung oder: Keine Panik vor dem White Screen of Death und HTTP 500 - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>troubleshooting_guide</dc:type>
      
      
    </item><item>
      <title>Drölf erstaunlich einfache Wege wirklich beeindruckende Screenshots zu erstellen</title>
      <link>https://nickyreinert.de/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/</guid>
      <description>[caption id=&ldquo;attachment_2364&rdquo; align=&ldquo;alignright&rdquo; width=&ldquo;183&rdquo;] Screenshot mit dem Handy aufnehmen ist so 90er[/caption]
Eine …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine umfassende und humorvolle Anleitung, die verschiedene einfache Methoden zur Erstellung hochwertiger Screenshots vorstellt. Der Artikel behandelt die integrierten Werkzeuge und Tastenkombinationen in macOS und Windows 10 sowie die Screenshot-Funktionen der Webbrowser Firefox, Chrome und Microsoft Edge.</p>
          
          
          <p><strong>Hauptthemen:</strong> Screenshots, Anleitungen, macOS, Windows 10, Browser-Tools, Produktivität</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>[caption id=&ldquo;attachment_2364&rdquo; align=&ldquo;alignright&rdquo; width=&ldquo;183&rdquo;]<a href="https://www.nickyreinert.de/files/droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/screenshot-mit-dem-handy.jpg"><img src="/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/images/screenshot-mit-dem-handy-183x300.jpg" alt="Screenshot mit dem Handy aufnehmen ist so 90er"></a> Screenshot mit dem Handy aufnehmen ist so 90er[/caption]</p>
<p>Eine Studie hat ergeben, dass 99 von 100 Bildschirmaufnahmen (neudeutsch <strong>Screenshots</strong>) mit dem Handy aufgenommen werden. Warum ist das falsch? Nun:</p>
<ul>
<li>Weil die Qualität der Aufnahmen mit dem Smartphone oft ziemlich schlecht ist,</li>
<li>der staubige Bildschirm zusätzlich vom Wesentlichen ablenkt sowie</li>
<li>Licht-Reflexionen oder Moiré-Effekte wichtige Inhalte verdecken.</li>
<li>Außerdem muss man den Screenshot, wenn man ihn in einem Forum oder einer Social Media Gruppe präsentieren will, unter Umständen erst noch umständlich mit dem Smartphone speichern, ausschneiden, bearbeiten und irgendwo hochladen.</li>
<li>Auf einem Smartphone-Foto ist nicht sofort ersichtlich, um welche Teile des Bildschirms es denn nun geht.</li>
</ul>
<p><strong>Konfuzius</strong>, ein berühmter buddhistischer Priester und begeisterter Internetnutzer, hat es mal so zusammengefasst:</p>
<blockquote>
<p>Wer Screenshots im 21. Jahrhundert mit dem Handy im Hochformat aufnimmt, hat die Kontrolle über sein Leben verloren.</p></blockquote>
<p>Dabei sind die technischen Möglichkeiten zur Aufnahme von Screenshots mittlerweile so viel mehr bequemer als noch zu Zeiten von Netscape und Microsoft DOS. Hier stelle ich die besten und vor allem einfachsten vor!</p>
<h2 id="screenshots-in-mac-os-x-aufnehmen">Screenshots in Mac OS X aufnehmen</h2>
<p>Das Betriebssystem von Apple bietet schon eine ganze Weile eine Reihe von Shortcuts an, mit denen sich Bildschirminhalte als Bilddatei aufnehmen lassen:</p>
<ol>
<li>Will man den <strong>gesamten Bildschirm</strong> aufnehmen und direkt als Datei speichern, drückt man die folgenden Tasten gleichzeitig: <strong>Umschalttaste-Befehlstaste(⌘)-3</strong>.</li>
<li>Soll nur ein <strong>bestimmter Bereich</strong> aufgenommen werden, lautet der Shortcut <strong>Umschalttaste-Befehlstaste(⌘)-4</strong> - der Mauscursor wird zu einem Fadenkreuz um damit den gewünschten Bereich zu markieren</li>
<li>Zur <strong>Aufnahme eines Fensters</strong> drückt man ebenso <strong>Umschalttaste-Befehlstaste(⌘)-4 und danach die Leertaste</strong>. Nun lässt sich das Fenster per Mausklick auswählen.</li>
<li>Möchte man die Aufnahme nicht als Datei speichern, sondern in direkt in die <strong>Zwischenablage</strong> kopieren, drückt man zu den oben genannten Tastenkombinationen <strong>zusätzlich die CTRL-Taste</strong></li>
</ol>
<p>Die komplette Dokumentation dazu befindet sich hier: <a href="https://support.apple.com/de-de/ht201361">https://support.apple.com/de-de/ht201361</a></p>
<p>Mit der <a href="https://help.apple.com/macOS/mojave/whats-new/?lang=de">neuen Version MacOS</a> führt Apple ein verbessertes Tool für Screenshots ein (<strong>Umschalttaste-Befehlstaste(⌘)-4</strong>). Nun gibt es einen Timer (5 oder 10 Sekunden) und eine kleine Oberfläche um den Bildschirmaufnahme bequemer zu konfigurieren.</p>
<h2 id="screenshots-in-windows-10-aufnehmen">Screenshots in Windows 10 aufnehmen</h2>
<p>Windows von Hause aus eine noch größere Vielzahl von Möglichkeiten an, bequem Screenshots zu erstellen:</p>
<ol>
<li>
<p>Das <strong>Snipping Tool</strong> zur Aufnahme und Bearbeitung von Screenshots ist schon seit Windows 7 Bestandteil des Betriebssystems. Es unterstützt die Aufnahme von beliebigen Bereich, dem ganzen Bildschirm oder sogar komplexer Formen. Außerdem lässt sich eine Verzögerung einstellen, um z.B. Hover-Effekte zu dokumentieren. Außerdem lassen sich bereich mit Farben einfach markieren. Wenn man das Snipping-Tool in der Taskleiste abgelegt hat, kann man über das Kontextmenü zu den Eigenschaften. Dort kann man eine Tastenkombination festlegen, um das Tool jederzeit schnell aufrufen zu können.</p>
<p>[caption id=&ldquo;attachment_1790&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/12-erstaunliche-und-einfache-wege-beeindruckende-screenshots-zu-erstellen/snipping-tool.png"><img src="/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/images/snipping-tool-300x206.png" alt="Eigenschaften für das Snipping-Tool öffnen"></a> Eigenschaften für das Snipping-Tool öffnen[/caption]</p>
</li>
<li>
<p>Den <strong>gesamten Bildschirm</strong> kann man auf einer Windows-Tastatur mit der <strong>Druck- bzw. PrtScr-Taste</strong> direkt in die Zwischenablage kopieren. Drückt man die <strong>Druck-Taste und Windows-Taste gleichzeitig,</strong> wird der Screenshot im Ordner Bilder - Screenshot <strong>als Datei abgelegt</strong>.</p>
</li>
<li>
<p>Nutzt man mehrere Monitore und will nur den gerade aktiven Bildschirm in die Zwischenablage packen, funktioniert das mit <strong>Alt+Druck-Taste</strong>.</p>
</li>
<li>
<p>Seit Windows 10 gibt es außerdem das <strong>Ink-Tool</strong>, das sich mit <strong>Windows-Taste+W</strong> aufrufen lässt und eine ganze Palette von zusätzlichen Funktionen mitbringt.</p>
<p>[caption id=&ldquo;attachment_1784&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;189&rdquo;]<a href="https://www.nickyreinert.de/files/12-erstaunliche-und-einfache-wege-beeindruckende-screenshots-zu-erstellen/windows-ink.png"><img src="/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/images/windows-ink.png" alt="Screenshot in Windows mit Ink erstellen"></a> Screenshot in Windows mit Ink erstellen[/caption]</p>
</li>
<li>
<p>Noch etwas komfortabler als das Snipping-Tool, aber kein Standard-Bestandteil von Windows, ist <a href="https://www.microsoft.com/en-us/garage/profiles/snip/">Snip</a>.</p>
</li>
</ol>
<h2 id="screenshot-im-browser-direkt-aufnehmen">Screenshot im Browser direkt aufnehmen</h2>
<p>Auch die Browser-Hersteller haben erkannt, dass Screenshots wohl ein essentieller Bestandteil des Internets sind. So bieten die gängigsten Browser mittlerweile Funktionen zur Aufnahme des Bildschirms an.</p>
<ol>
<li>
<p>In <strong>Firefox</strong> befindet sich die Funktion direkt im Kontext-Menü jeder Website. Damit lassen sich bestimmte Elemente der Seite, freie Bereich oder die ganze Seite als Screenshot in die Zwischenablage kopieren, als Datei speichern oder sogar in einer Firefox-Cloud ablegen um sie online unter <a href="https://screenshots.firefox.com/shots">https://screenshots.firefox.com/shots</a> verfügbar zu machen!</p>
<p>[caption id=&ldquo;attachment_1789&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/12-erstaunliche-und-einfache-wege-beeindruckende-screenshots-zu-erstellen/firefox.png"><img src="/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/images/firefox-300x165.png" alt="Screenshot in Firefox anfertigen"></a> Screenshot in Firefox anfertigen[/caption]</p>
</li>
<li>
<p>In <strong>Chrome</strong> ist die Screenshot-Funktion leider etwas versteckt und nicht sehr komfortabel. Am schnellsten erreicht man diese über die Kommandofunktion. Zunächst muss man die Entwicklerkonsole öffnen indem man z.B. die <strong>Taste F12</strong> oder <strong>Control+Shift+I</strong> drückt (Mac: <strong>Command+Option+I</strong>). Dann gelangt man mit Strg+Shift+P zur Auswahl der Chrome-Kommandos wo man nach der Screenshot-Funktion suchen kann. Der lange Weg führt übrigens über die Geräte-Toolbar, mit der Chrome verschiedene Geräteklassen simulieren kann (Ctrl+Shift+M). Dort muss erst oben die gewünschte Auflösung bzw. das Gerät auswählen. Über das kleine Menü in der rechten oberen Ecke gelangt man dann schließlich zur Screenshot-Funktion.[gallery ids=&ldquo;1788,1787,1786&rdquo;]</p>
</li>
<li>
<p>Der neue Microsoft Browser <strong>Edge</strong> ist hier wieder etwas komfortabler. Die Funktion befindet sich hinter dem Button &ldquo;<strong>Notizen einfügen</strong>&rdquo; (Pen &amp; Stencil) rechts neben der Adressleiste. Das Tool bietet sehr viele Funktionen, um den Screenshot aufzunehmen und mit Notizen zu versehen.</p>
<p>[caption id=&ldquo;attachment_1785&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;294&rdquo;]<a href="https://www.nickyreinert.de/files/12-erstaunliche-und-einfache-wege-beeindruckende-screenshots-zu-erstellen/edge-notizen.png"><img src="/2018/2018-10-26-droelf-erstaunlich-einfache-wege-wirklich-beeindruckende-screenshots-zu-erstellen/images/edge-notizen.png" alt="Screenshot anfertigen in Microsoft Edge"></a> Screenshot anfertigen in Microsoft Edge[/caption]</p>
</li>
</ol>
<h2 id="screenshot-mit-dem-smartphone-aufnehmen">Screenshot mit dem Smartphone aufnehmen</h2>
<p>Du kannst natürlich nicht immer einen ausgewachsenen Computer zur Hand haben und manchmal will man tatsächlich etwas dokumentieren, was einem auf dem kleinen Smartphone-Bildschirm widerfahren ist. Bevor du dir dazu ein weiteres Smartphone nimmst um ein Foto von deinem Smartphone-Display zu machen: Zumindest Android hat seit geraumer Zeit eine Screenshot-Funktion eingebaut: Wenn du den An-/Aus-Button etwas länger drückst, erscheint ein Menü, in dem du die Wahl zwischen Screenshot und sogar einer Bewegtbild-Aufnahme des Bildschirms hast.</p>
<h2 id="zusammenfassung">Zusammenfassung</h2>
<p>Mit den hier beschriebenen Methoden landet der hochwertige Screenshot mit geringem Aufwand direkt in der Zwischenablage des Computers (oder als Datei in einem Ordner). Die meisten modernen Plattformen wie Facebook oder Twitter erlauben außerdem mittlerweile das direkte Einfügen von Bildern - also auch Screenshots - aus der Zwischenablage in den Beitrag oder Tweet (z.B. unter Windows mit <strong>CTRL+V</strong>). Man kann also innerhalb weniger Sekunden und mit wenigen Handgriffen einen ansehnlichen Screenshot erstellen, gegebenenfalls fragliche Bereich farblich hervorheben und dann in einen Beitrag auf Facebook kopieren.</p>
<p>Also, pack dein Smartphone weg oder nutze es für die wirklich wichtigen Dinge und überlasse die richtig guten Screenshots deinem Computer.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> screenshots, anleitung, macOS, Windows</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>office</category>
      
      <category>tools</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Drölf erstaunlich einfache Wege wirklich beeindruckende Screenshots zu erstellen - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Wordpress-Security Checkliste</title>
      <link>https://nickyreinert.de/2000/2000-01-01-wordpress-security-checkliste/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2000/2000-01-01-wordpress-security-checkliste/</guid>
      <description>Wordpress hat unter den Content Management System im Internet mittlerweile einen Marktanteil von 60% erreicht und lockt mit dieser Verbreitung natürlich auch …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine detaillierte Checkliste zur Absicherung von WordPress-Installationen, gegliedert nach dem Grad des Nutzerzugriffs (WordPress.com, Shared Hosting, eigener Server). Der Artikel behandelt essenzielle Sicherheitspraktiken wie Updates, Backups, Staging-Systeme sowie technische Maßnahmen wie `.htaccess`-Schutz, korrekte Dateirechte und die Konfiguration von PHP.</p>
          
          
          <p><strong>Hauptthemen:</strong> WordPress, Web-Sicherheit, Systemadministration, PHP, Server-Konfiguration</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>Wordpress hat unter den Content Management System im Internet mittlerweile einen Marktanteil von 60% erreicht und lockt mit dieser Verbreitung natürlich auch kriminelle Geister an und so schwirren immer wieder Nachrichten über Sicherheitslücken und gehackte WP-Seiten durch die einschlägigen Medien. Aus diesem Grund will ich mal meine Erfahrungen in Bezug auf Wordpress-Sicherheit an dieser Stelle zusammenfassen und zwar so kompakt wie möglich, damit diese Information als Checkliste genutzt werden kann.</p>
<p>Wenn du Betreiber einer Wordpress-Seite bist, gibt es dafür drei Wege und unterschiedliche Freiheiten, sich selber um die Sicherheit der WP-Installation zu nutzen - im folgenden die &ldquo;Freiheitsgrade&rdquo; genannt: Bei &ldquo;wordpress as a service&rdquo; greifst du auf einen Angebot zurück, das bekannteste ist wordpress.com, bei dem du nur Zugriff auf das Backend hast und dementsprechend wenig Konfigurationsmöglichkeiten. Als Nutzer eines Shared Hosting hast du zusätzlich die Möglichkeit, per FTP oder SSH auf den Webspace zu gelangen und dort Einstellungen vorzunehmen. Und schließlich gibt es noch die Möglichkeit, einen eigenen Server zu nutzen, bei dem du dich auch um die Konfiguration auf Systemebene, also des Webserver kümmern musst. In dieser Reihenfolge möchte ich nun im folgenden Zusammenfassen, welche Möglichkeiten du hast, deine WP-Installation etwas sicherer zu gestalten.</p>
<h2 id="aktuelle-updates">Aktuelle Updates</h2>
<p>Zunächst zum Offensichtlichen: Sicherheitsupdates. Die automatischen Updates des WP-Cores (also dem, was WP ausmacht) sind mit jedem Freiheitsgrad konfigurierbar, bergen aber auch Risikos. So hatte z.B. das Update auf Version 4.9.3 Anfang 2018 den Auto-Update-Mechanismus deaktiviert. Spätere Sicherheitsupdates würden also ignoriert werden. Grundsätzlich ist das Auto-Update nur für sog. Minor-Versionen zu empfehlen, wodurch Sicherheitlücken und Bugs behoben werden. Wer diese Funktion auf einem Test-System auch für Major-Versionen aktivieren möchte, muss in der wp-config.php folgenden Parameter setzen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="ln">1</span><span class="cl"><span class="nx">define</span><span class="p">(</span> <span class="s1">&#39;WP_AUTO_UPDATE_CORE&#39;</span><span class="p">,</span> <span class="s1">&#39;true&#39;</span> <span class="p">);</span>
</span></span></code></pre></div><p>(der Parameter ist per default auf <em>minor</em> gesetzt.) Grundsätzlich ist das aber nicht zu empfehlen: Denn: Bevor ein großes Update eingespielt wird, sollte das auf Herz &amp; Nieren und natürlich Kompatibilität mit den vorhandenen Themes und Plugins getestet werden. Dazu sollte man ein Staging-System einrichten, worauf ich im nächsten Absatz eingehe.</p>
<h2 id="ein-staging-system-nutzen">Ein Staging-System nutzen</h2>
<p>Die Sicherheit der WP-Installation kann nicht nur durch Malware oder Angriffe von außen versehrt werden, sondern auch durch Bedienfehler. Ein wichtiger Baustein ist also ein Staging-System. Das ist im weitesten Sinne eine exakte Kopie der aktuelle WP-Installation. Das Staging-System erfüllt eine Reihe von Funktionen:</p>
<ul>
<li>Testen von Plugins &amp; Updates auf Kompatibilität</li>
<li>Referenz-System zum Erkennen von verdächtigen Änderungen</li>
<li>Testen von Änderungen am Theme</li>
</ul>
<p>Wie ein Staging-System eingerichtet wird, habe ich hier genauer erklärt. Was es mit dem 2. Punkt auf sich hat, erkläre ich weiter unten.</p>
<h2 id="regelmäßige-backups">Regelmäßige Backups</h2>
<p>Auch Backups sind ein wichtiger Teil eines Sicherheitskonzeptes. Hier gibt es je nach Freiheitsgrad verschiedene Möglichkeiten. Als Plugin empfehle ich zunächst das sehr weit verbreitete Updraft. Das Backup sollte unbedingt auf einen anderen Ort kopiert werden. Updraft unterstützt in der kostenlosen Version z.B. FTP. Wer kein Problem mit Dropbox oder Google Drive hat, kann natürlich auch die Cloud nutzen. Updraft unterstützt die Verschlüsselung der Datenbank-Sicherung nur in der bezahlten Version. Wer mit personenbezogenen Daten hantiert, sollte sich diese Funktion unbedingt zulegen!</p>
<p>Eine bessere Alternative, die aber nur ab dem 2. Freiheitsgrad möglich ist, ist das Backup über die Kommandozeile. Das ist vor allem dann unumgänglich, wenn die WP-Installation sehr groß ist und nicht mehr mit den gängigen Plugins durchführbar ist. Außerdem funktioniert das unabhängig von Wordpress und kann demnach auch nicht durch andere Plugins beeinträchtigt werden. Wie genau man das einrichtet und vor allem auch die Wiederherstellung habe ich in diesem Beitrag genauer beschrieben.</p>
<h2 id="plugin-sparsamkeit">Plugin-Sparsamkeit</h2>
<p>Hierunter ist eher ein Konzept als eine konkrete Handlungsempfehlung zu verstehen. Vor allem technisch unbedarfte Nutzer tendieren dazu, sofort ein Plugin zu installieren, wenn eine bestimmte Funktion benötigt wird. Doch gerade unsaubere, nicht gepflegte Plugins bieten eine Angriffsfläche und noch dazu wirkt sich ein zunehmendes Plugin-Portfolio negativ auf die Performance aus. Wer ein Plugin installieren möchte, sollte dazu nur auf vertrauenswürdige und bekannte Quellen zurückgreifen. Im Klartext: <a href="https://de.wordpress.org/plugins/">https://de.wordpress.org/plugins/</a></p>
<h2 id="die-offensichtlichen">Die offensichtlichen</h2>
<ol start="2">
<li>Admin-Benutzer umbenennen</li>
</ol>
<h2 id="die-technischen">Die technischen</h2>
<ol>
<li>Admin-Bereich mit .htaccess schützen</li>
<li>Dateirechte korrekt setzen</li>
<li>PHP-Ausführung in bestimmten Unterordner deaktivieren</li>
</ol>
<h2 id="plugins-und-themes">Plugins und Themes</h2>
<p>Ein zentrales Element und der größte Vorteil von Wordpress ist seine fast unerreichbar funktionale Erweiterbarkeit und sehr große Community. Das zieht allerdings auch schwarze Schafe an.</p>
<ol>
<li>Installiere nicht wahllos Plugins, weil du eine bestimmte Funktion benötigst</li>
<li>Installiere Plugins nur von vertrauenswürdigen Quellen</li>
<li>Räume deinen Plugin-Ordner regelmäßig auf</li>
</ol>
<h2 id="die-mutigen">Die mutigen</h2>
<h3 id="php-ini-parameter">PHP ini-Parameter</h3>
<p>Es dürfte kein Geheimnis sein, dass PHP über die php.ini gesteuert wird. Es gibt allerdings einige sicherheitsrelevante Parameter, um die man sich allerdings selber kümmern muss. Die wichtigsten möchte ich hier vorstellen.</p>
<p>Um die Übersicht über manuelle Änderungen nicht zu verlieren, solltest du die Einstellungen in einer separaten Datei (z.B. <em>security.ini</em>) speichern. Auf der Kommandozeile zeigt dir der folgende Befehl, aus welchem zusätzlichen Ordner PHP zusätzliche ini-Dateien liest:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">php --ini
</span></span></code></pre></div><p>In den meisten Fällen dürfte das /etc/php/7.1/apache2/conf.d/ sein.</p>
<p>Eine einfache aber sehr wirksame Maßnahme ist das deaktivieren potentiell gefährlicher PHP-Funktionen. Wie z.B. <a href="http://php.net/manual/en/function.shell-exec.php">shell_exec()</a> - im Wordpress-Umfeld gibt es kaum ein Szenario, in dem diese Funktion nützlich sein könnte. Um PHP-Funktionen zu deaktivieren, kannst du den ini-Parameter <a href="http://php.net/manual/de/ini.core.php#ini.disable-functions">disable_functions</a> nutzen.</p>
<p>Dort legst du die <em>security.ini</em> ab und füllst sie entsprechend:</p>
<p><a href="https://www.damianschwyrz.de/php-backdoors-und-shells-finden-eine-kurze-anleitung">https://www.damianschwyrz.de/php-backdoors-und-shells-finden-eine-kurze-anleitung</a></p>
<p>siehe auch</p>
<p><a href="https://binary-butterfly.de/artikel/wordpress-login-security-eine-stahltuer-in-der-wellblechhuette/">https://binary-butterfly.de/artikel/wordpress-login-security-eine-stahltuer-in-der-wellblechhuette/</a></p>
<p>IP-Filter</p>
<h3 id="den-admin-bereich-verstecken">Den Admin-Bereich verstecken</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nt">&lt;IfModule</span> <span class="s">mod_rewrite.c</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    <span class="nb">RewriteEngine</span> <span class="k">on</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="nb">RewriteBase</span> /
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="c"># Move Wordpress login to /cms.</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="nb">RewriteRule</span> ^cms wp-login.php?cms=unlocked [L]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_URI} ^(.*)?wp-login\.php(.*)$
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} !^cms=unlocked
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} !^action=logout
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} !^loggedout=true
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_METHOD} !POST
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="nb">RewriteRule</span> ^(.*)$ - [R=403,L]
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_URI} ^(.*)?wp-login\.php(.*)$
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} ^loggedout=true
</span></span><span class="line"><span class="ln">15</span><span class="cl">    <span class="nb">RewriteRule</span> ^(.*) ./cms? [R=302,NC,L]
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_URI} ^(.*)?wp-login\.php(.*)$
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="nb">RewriteCond</span> %{HTTP_REFERER} !cms$
</span></span><span class="line"><span class="ln">19</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_METHOD} POST
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="nb">RewriteRule</span> ^(.*)$ - [R=403,L]
</span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="nt">&lt;/IfModule&gt;</span>
</span></span></code></pre></div><!-- https://wordpress.stackexchange.com/a/292691/132138

## Die unnötigen

### Sicherheits-Plugins

siehe auch

https://www.kuketz-blog.de/basisschutz-wordpress-absichern-teil1

https://fastwp.de/487

```bash
chown user:user -R *
find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;

chown www-data:www-data wp-content

## Disable Editing in Dashboard
define('DISALLOW_FILE_EDIT', true);

<Directory /var/www/nickyreinert.de/www>
# prevent   var_dump(scandir('/etc'));
# see http://php.net/manual/de/ini.core.php#ini.open-basedir
# alternativ: php für jeden virtuellen host mit separatem user ausführen und die dateirechte anpassen
php_admin_value open_basedir "/var/www/nickyreinert.de/www"

</Directory>
```

```ini
# disable_functions in php.ini
# list of function to disable globally #
disable_functions =exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source
```

## PHP-FPM?

Normalerweise ruft der Apache-Webserver den PHP-Interpreter jedes mal erneut auf. Der Nachteil: Viel Speicherverbrauch, lange Ladezeiten und ein globaler Benutzer. Etwas schneller ist FastCGI. Dabei läuft der Interpreter permanent im Hintergrund. FPM startet nicht nur einen sondern mehrere PHP-Prozesse im Hintergrund. -->
        
        
        <div class="tags">
          <p><strong>Tags:</strong> WordPress, Sicherheit, Anleitung, Checkliste</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>wordpress</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/image.png" type="image/jpeg">
        <media:title>Wordpress-Security Checkliste - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>checklist</dc:type>
      
      
    </item>
  </channel>
</rss>