<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Humor auf Nicky Reinert</title>
    <link>http://localhost:1313/tags/humor/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Mon, 10 Mar 2025 12:19:31 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/humor/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Die Nerd Enzyklopädie 46 - Bastard Operator From Hell</title>
      <link>http://localhost:1313/2025/2025-03-10-nerd-enzyklop%C3%A4die-46---bastard-operator-from-hell/</link>
      <pubDate>Mon, 10 Mar 2025 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2025/2025-03-10-nerd-enzyklop%C3%A4die-46---bastard-operator-from-hell/</guid>
      <description>Wer sich mit Nerd-Kultur beschäftigt, kommt am Bastard Operator From Hell, kurz BOfH (zu deutsch sinngemäß in etwa „Mistkerl-Admin aus der Hölle&quot;), nicht …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Einführung aus der &#39;Nerd Enzyklopädie&#39; in den &#39;Bastard Operator From Hell&#39; (BOfH), eine ikonische Figur der Nerd-Kultur. Der Artikel beleuchtet die satirischen Erzählungen von Simon Paul Travaglia über einen zynischen IT-Administrator, der seine Nutzer quält, und beschreibt die Entstehung, Verbreitung und den kulturellen Einfluss dieser Geschichten, inklusive der deutschen Adaption als BAfH.</p>
          
          
          <p><strong>Hauptthemen:</strong> IT-Folklore, Nerd-Kultur, Systemadministration, Humor, Satire, Internetgeschichte</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Wer sich mit Nerd-Kultur beschäftigt, kommt am <strong>Bastard Operator From Hell</strong>, kurz <strong>BOfH</strong> (zu deutsch sinngemäß in etwa „Mistkerl-Admin aus der Hölle&quot;), nicht herum.</p>
<p>Der BOFH ist eine fiktive Figur aus den satirischen Erzählungen von <strong>Simon Paul Travaglia</strong>, die erst in einer Universität, später in einem Büro als Operator - also einer Art Service-Mitarbeiter oder laut Wikipedia „Systembetreuer“ - tätig ist.</p>
<p>Travaglia arbeitete Ende der 1980er Jahre an der Universität von Waikato (Neuseeland) selbst als Operator. Seine Aufgabe war der technische Support und er beschreibt seinen, wie er es selbst nennt, nervigen und langweiligen Arbeitsalltag so:</p>
<blockquote>
<p>All the power and none of the responsibility. Good Times. You could do ANYTHING to a user and no-one would know. Well, they&rsquo;d know, but they couldn&rsquo;t prove a thing. ~ Travaglia (BOFH1)</p></blockquote>
<p>Bei einem Umzug in ein anderes Gebäude fiel ihm ein alter ungenutzter Tandy TRS-80 Model 100, Spitzname Trash 80, in die Hände. Der Trash 80 war der Vorläufer des modernen Notebooks. Das RS steht für Radio Shack, einem bekannten Elektronikhändler in den USA. Travaglia verfasste damit in seiner Freizeit, wie er es selber nannte, zusammenhangslose, „seltsame&quot; Geschichten („oddball stories&quot;).
In regelmäßigen Abständen nahm er das „Notebook“ mit ins Büro, um dort einige seiner „Rants“ im Usenet unter dem Titel „Striped Irregular Bucket“ zu veröffentlichen. In einem dieser Rants beschreibt er den wenig zimperlichen Umgang mit einem Hilfesuchenden Angestellten wie folgt (MYTH1) :</p>
<quote> 
[…]
So I fill in a couple of hours by killing users off and deleting their files, then waiting for them to call...
<p>&ldquo;Um, I can&rsquo;t find my files&rdquo; the wimpering simp on the phone says</p>
<p>&ldquo;Files? What files?&rdquo;</p>
<p>&ldquo;The files in my account. My thesis, my research - all gone!&rdquo;</p>
<p>&ldquo;Gone ay? What&rsquo;s your username?&rdquo;</p>
<p>&ldquo;TURGEN&rdquo;</p>
<p>&ldquo;TROJAN?! LIKE THE CONDOM?&rdquo;</p>
<p>&ldquo;No TURGEN. T-U-R&rdquo;</p>
<p>&ldquo;OH Turgen, like TURD, but with a GEN instead of a D&hellip; Ok lets see&rdquo; I make vague clicking noises my dragging the quicklimed man&rsquo;s fingers back and forth across the keypad. &ldquo;Uh-huh&rdquo; &gt;drag drag&lt; &ldquo;Yeah..&rdquo; &gt;dragedy poke&lt; &ldquo;AH! - You haven&rsquo;t got any files&rdquo;</p>
<p>&ldquo;I KNOW!&rdquo;</p>
<p>&ldquo;Well, what are you calling ME for? We don&rsquo;t make the files you know, we just look after them. And chopitty-chop too, your thesis looks like it&rsquo;s due in a couple of days..&rdquo;</p>
<p>I hang up - he&rsquo;ll call back. Meantime I open up a copy of &ldquo;VMS BASTARD OPERATORS MANUAL FROM HELL&rdquo; I&rsquo;m reading the article I sent in about getting rid of those trouble users&hellip;</p>
<p>[…]
</quote></p>
<p>Diese und zahlreiche weitere Erzählungen des zynischen, gemeinen und bis dahin noch unbekannten Operators fanden recht schnell großen Anklang, dennoch pausierte er seine Arbeit daran zunächst, wohl auch weil ihm die Inspiration fehlte (BJASH1) .
Ende der 1992er Jahre arbeitete er in London für Enterprise Oil PLC, einem damals sehr erfolgreichen Ölförderunternehmen, aber das hat für die Geschichte keine Relevanz. Travaglia verfasste hier zwei weitere Episoden über den BOFH und erinnert sich vor allem an den abenteuerlichen Prozess der Veröffentlichung: Die Enterprise Oil besaß keinen Zugang zum Internet, also schlich er sich abends in das University College London, schrieb dort einige Geschichten, die er über einen langsamen Telnet-Zugang auf einer Virtuellen Maschine im Usenet veröffentlichen konnte.
Travaglia kehrte London den Rücken und begab sich wieder nach Neuseeland, um dort als Analyst Programmer zu arbeiten. Er veröffentlichte nun nur noch sporadisch neue Episoden bis er, ermuntert durch Maxwell Cooter, Journalist beim Network Week Magazin, in fast regelmäßigen Abständen neue BOFH-Geschichten für eben das Network Week Magazine, später auch The Register oder Datamation zu schreiben und sogar in Buch-Form zu veröffentlichen.
Auch wenn der teils schmerzbefreite Humor ein wenig aus der Zeit gefallen zu sein scheint, ist der BOFH nach wie vor ein fester Bestandteil der Nerd-Kultur.
Florian Schiel begann 1997 damit die BOfH Geschichten ins Deutsche zu übersetzen, und entwickelt später mit dem BAfH einen eigenen erfolgreichen deutschen Ableger. Der BAfH treibt sein Unwesen als Systemadministrator an der Universität München.</p>
<p>Wer die Welt einmal aus der Sicht eines unterforderten, aber auch ziemlich arroganten und gelangweilten Administrators erleben möchte, der sollte sich BOfH und BAfH auf die Liste der Bettlektüre setzen. Eine fast vollständige Sammlung aller Erlebnisse von Travaglias Original gibt es hier: (ARCH1)</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Nerd-Kultur, Humor, Anekdote</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 46 - Bastard Operator From Hell - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>cultural_analysis</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 45 - 80 Spalten und die Legende vom Pferdehintern</title>
      <link>http://localhost:1313/2024/2024-01-15-nerd-enzyklop%C3%A4die-45---80-spalten-und-die-legende-vom-pferdehintern/</link>
      <pubDate>Mon, 15 Jan 2024 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2024/2024-01-15-nerd-enzyklop%C3%A4die-45---80-spalten-und-die-legende-vom-pferdehintern/</guid>
      <description>Für die einen ist sie unerforschtes Land, für die anderen die linke Westentasche: Die Kommandozeile! Eine Eigenschaft eint die meisten Kommandozeilen-Programme …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Erkundung aus der &#39;Nerd Enzyklopädie&#39; über die Ursprünge des 80-Zeichen-Spaltenstandards in der Informatik. Der Artikel beleuchtet historische Einflüsse wie Schreibmaschinen und Lochkarten (insbesondere IBMs 80-Spalten-Lochkarten) und diskutiert die Lesbarkeitsargumente. Humorvoll wird die Verbindung zur &#39;Pferdehintern-Legende&#39; hergestellt, um die oft obskuren Ursprünge technischer Standards zu illustrieren.</p>
          
          
          <p><strong>Hauptthemen:</strong> Computergeschichte, Standardisierung, Programmierung, Typografie, Nerd-Kultur, Humor</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Für die einen ist sie unerforschtes Land, für die anderen die <strong>linke</strong> <strong>Westentasche</strong>: Die <strong>Kommandozeile</strong>! Eine Eigenschaft eint die meisten Kommandozeilen-Programme unter <strong>Windows</strong>, <strong>MacOS</strong> und <strong>Linux</strong>: Sie sind in der Standard-Konfiguration <strong>80 Zeichen</strong> bzw. <strong>Spalten</strong> breit. Dieser Standard begegnet einem auch an anderen Orten, wie in <strong>Code Editoren</strong> oder <strong>Style Guides</strong> von Programmiersprachen, die 80 Zeichen pro Zeile als sinnvollen Standard beschreiben.</p>
<p><img src="/2024/2024-01-15-nerd-enzyklop%C3%A4die-45---80-spalten-und-die-legende-vom-pferdehintern/image_1.png" alt=""></p>
<p>Es gibt viele Erklärungsversuche für dieses Standard-Maß. Der erste liegt in der Lesbarkeit:</p>
<p>Sind die Zeilen zu kurz,
muss man beim Lesen
öfter die Zeile
wechseln, was den
Lesefluss
erschwert.</p>
<p>Sind sie zu lang, ist es sehr schwer, einzelne Zeilen zu unterscheiden.</p>
<p>In der Typographie gelten deshalb <strong>40 bis 90 Zeichen</strong> pro Zeile als sinnvoll, ideal sind mindestens <strong>60 Zeichen</strong> [<a href="https://www.semanticscholar.org/paper/Markus-Itkonen-Typography-and-readability-Itkonen-groteski/4b67cd16136d47682f547619e705e2151d2b98df">SEMAN1</a>]. Das erklärt allerdings noch nicht, warum wir in der elektronischen Datenverarbeitung 80 Zeichen bevorzugen.</p>
<p>Einer weiterer Grund könnte die technische Limitierung alter <strong>Schreibmaschinen</strong> sein. Diese konnten in der Regel nur <strong>70 bis 80 Zeichen</strong> pro Zeile verarbeiten. Hier spielte auch die Breite des Papiers eine wichtige Rolle: Der US-Standard „<strong>Letter</strong>“ erlaubte mit seinem <strong>8,5 x 11 Zoll</strong> in etwa <strong>85 bis 102 Zeichen pro Zeile</strong> bei einer Schriftgröße von <strong>10 bis 12 Punkten</strong>. Berücksichtigt man den linken und rechten Rand, kam man auf <strong>55–78 Zeichen pro Zeile</strong> [<a href="https://en.wikipedia.org/wiki/Characters_per_line">WIKI15</a>].</p>
<p>Und dann gibt es noch diese Erklärung: Das 80-Zeichen-Limit stammte von den Terminals der <strong>1960er</strong> und <strong>1970er</strong> Jahre. Dort nutze man ebenfalls <strong>80 Spalten bei 24 bis 25 Zeilen</strong>. Damit orientierte man sich an den damals üblichen <strong>Lochkarten</strong>. Lochkarten waren zu dieser Zeit weit verbreitete Datenträger. Sie enthielten auf einer Zeile bis zu <strong>80 Löcher</strong>. Zwar gab es auch Lochkarten mit mehr oder weniger Spalten. Aber <strong>IBM</strong>, damals schon ein Big-Player, hatte <strong>80-Spalten-Lochkarten</strong> im Angebot und diese Konfiguration sozusagen als Standard etabliert [<a href="https://en.wikipedia.org/wiki/Punched_card">WIKI16</a>].</p>
<p>Warum IBM ausgerechnet 80 Löcher pro Zeile wählte, ist nicht sicher belegt. Einerseits aus den oben schon genannten ergonomischen Gründen, sicher aber auch aus technischen Gründen: So konnten genug Löcher mit einer sinnvollen Größe auf dem Standard-Papier untergebracht werden.</p>
<p>Mehr Löcher würden die Integrität der Lochkarten stören, kleinere Löchere wären anfälliger für Fehler und weniger und größere Löcher wären unwirtschaftlich. Außerdem basierten die IBM-Lochkarten auf einer weitaus älteren Maschine: <strong>Holleriths Tabulatormaschine</strong>. <strong>Herman Hollerith</strong> erfand die Tabulatormaschine um <strong>1890</strong>, um die US Volkszählung zu unterstützen.</p>
<p>Ab hier geht die Geschichte sehr verworrene Wege: Holleriths Lochkarten könnten auf den Lochkarten basieren, die <strong>Basile Bouchon</strong> um <strong>1725</strong> erfand, um seinen „<strong>automatischen Webstuhl</strong>“ zu steuern; damals noch einfaches perforiertes Papier. <strong>Bouchon</strong> hat sich für seine Entwicklung vermutlich am Standard für Banknoten orientiert: Um <strong>1400</strong> nutze man das Papierformat “<strong>British Imperial Foolscap</strong>“, um Banknoten zu drucken: Auf einer Seite wurden <strong>8 Banknoten</strong> in <strong>2 Spalten</strong> angeordnet. Man könnte nun noch etwas weiter gehen: Die Breite des Papiers lässt sich auf den Herstellungsprozess zurückführen: Die Spannweite der Arme der Arbeiter:innen während der Papierherstellung gibt ein natürliches Maß für die maximale Breite der Papierbögen vor.</p>
<p>Das Standardmaß „80 Zeichen pro Seite“ kann also, mit etwas Fantasie und Augenzwinkern, also auf die Spannbreite der Arme des Menschen zurückgeführt werden. Und das erinnert stark an die Herleitung der Durchmesser von <strong>Glasflaschen</strong>, der sich über <strong>Europaletten</strong>, die <strong>Spurbreite</strong> von <strong>Schienen</strong> schließlich auf die <strong>Breite von Pferdehintern</strong> zurückzuführen lässt: die sogenannte <strong>Pferdehintern-Geschichte</strong> (<strong>Horse Ass Story</strong>) — bei der es sich übrigens auch nur um eine urbane Legende handelt [<a href="https://parovoz.com/spravka/standardgauge-de.html">PARO1</a>].</p>
<p>Nachdem wir uns nun mühsam durch mehr als 600 Jahre Geschichte gekämpft haben, kommt ein klitzekleiner Dämpfer: Auch wenn <strong>80 Zeichen pro Zeile</strong> weit verbreitet sind, werden mitunter auch <strong>72, 79, 100, 132</strong> oder gar <strong>180</strong> Zeichen pro Zeile gerne als Standard genutzt [<a href="https://en.wikipedia.org/wiki/Characters_per_line">WIKI18</a>]. Und vermutlich versteckt sich hinter jeder dieser Angaben eine kleine Pferdehintern-Legende…</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Standard, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 45 - 80 Spalten und die Legende vom Pferdehintern - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 44 - Von Fliegenklatschen und Häkeldeckchen</title>
      <link>http://localhost:1313/2024/2024-01-10-nerd-enzyklop%C3%A4die-44---von-fliegenklatschen-und-h%C3%A4keldeckchen/</link>
      <pubDate>Wed, 10 Jan 2024 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2024/2024-01-10-nerd-enzyklop%C3%A4die-44---von-fliegenklatschen-und-h%C3%A4keldeckchen/</guid>
      <description>Auch damals, als Informationen noch auf Lochkarten gespeichert wurden, ließ man es sich nicht nehmen, den Kolleg:innen kleine Streiche zu spielen. Wie z.B. alle …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Anekdote aus der &#39;Nerd Enzyklopädie&#39; über Streiche mit Lochkarten in den frühen Tagen der Computertechnik. Der Artikel erklärt, wie das Ausstanzen aller Löcher auf einer Lochkarte zu Instabilität führte und wie diese manipulierten Karten humorvolle Namen wie &#39;Fliegenklatsche&#39; oder &#39;Häkeldeckchen&#39; erhielten.</p>
          
          
          <p><strong>Hauptthemen:</strong> Computergeschichte, Lochkarten, Humor, Nerd-Kultur, IT-Folklore</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Auch damals, als Informationen noch auf <strong>Lochkarten</strong> gespeichert wurden, ließ man es sich nicht nehmen, den Kolleg:innen kleine Streiche zu spielen. Wie z.B. alle verfügbaren Löcher einer Lochkarte ausstanzen! Die Folge: Aufgrund der vielen Löcher war das Papier nicht mehr stabil genug. Die Karte konnte leichter verbiegen und so den Mechanismus im Kartenleser blockieren.</p>
<p><img src="/2024/2024-01-10-nerd-enzyklop%C3%A4die-44---von-fliegenklatschen-und-h%C3%A4keldeckchen/image_1.png" alt=""></p>
<center>normale Lochkarte und „Fliegenklatsche“</center><br />
<p>Und diese Art von manipulierten Lochkarten bekamen entsprechende Namen: **whoppee card (**Spaßkarte), <strong>lace card</strong> (Spitzenkarte, in Anlehnung an die kunstvoll ausgestanzten Grußkarten), <strong>flyswatter</strong> (Fiegenklatsche), <strong>IBM doily</strong> (Häkeldeckchen) oder <strong>ventilator card</strong> (Beatmungskarte) [<a href="http://catb.org/jargon/oldversions/jarg421.txt">CATB3</a>, <a href="https://en.wikipedia.org/wiki/Lace_card">WIKI19</a>].</p>
<p><img src="/2024/2024-01-10-nerd-enzyklop%C3%A4die-44---von-fliegenklatschen-und-h%C3%A4keldeckchen/image_2.png" alt=""></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Nerd-Enzyklopädie, Humor, Anekdote</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 44 - Von Fliegenklatschen und Häkeldeckchen - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 32 - Was haben PHP, Visa und Mandelbrot gemeinsam?</title>
      <link>http://localhost:1313/2023/2023-05-28-nerd-enzyklop%C3%A4die-32---was-haben-php-visa-und-mandelbrot-gemeinsam/</link>
      <pubDate>Sun, 28 May 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-05-28-nerd-enzyklop%C3%A4die-32---was-haben-php-visa-und-mandelbrot-gemeinsam/</guid>
      <description>
PHP ist eine der populärsten Sprachen im WWW. PHP steht für PHP: Hypertext Preprocessor und ist damit ein rekursives Akronym. Ursprünglich stand PHP für …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Erkundung aus der &#39;Nerd Enzyklopädie&#39;, die die Gemeinsamkeit zwischen PHP, Visa und Mandelbrot aufdeckt: rekursive Akronyme und selbst-referenzielle Konzepte. Der Artikel erklärt die Bedeutung von rekursiven Akronymen in der IT und beleuchtet humorvolle Legenden rund um Namen wie Benoit B. Mandelbrot und Bing.</p>
          
          
          <p><strong>Hauptthemen:</strong> Rekursive Akronyme, Sprache, Informatik, Mathematik, Nerd-Kultur, Etymologie</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-05-28-nerd-enzyklop%C3%A4die-32---was-haben-php-visa-und-mandelbrot-gemeinsam/image1.png" alt=""></p>
<p><strong>PHP</strong> ist eine der populärsten Sprachen im <strong>WWW</strong>. PHP steht für <strong>PHP: Hypertext Preprocessor</strong> und ist damit ein rekursives Akronym. Ursprünglich stand PHP für <strong>Personal HomePage Tools</strong>. Ab Version 3 gab es allerdings grundlegende Änderungen, weshalb man sich von dem Vorgänger absetzen wollte und daher genau diesen Namen wählte. In der IT gibt es viele mal mehr oder weniger populäre rekursive Akronyme, wie z.B.</p>
<ul>
<li><strong>WINE</strong>: WINE Is Not an Emulator (Software),</li>
<li><strong>cURL</strong>: cURL URL Request Library (Software),</li>
<li><strong>RPM</strong>: RPM Package Manager (Paketmanager),</li>
<li><strong>GNU</strong>: GNU is not UNIX (Betriebssystem,</li>
<li><strong>ATI</strong>: ATI Technologies Inc. (Hardwarehersteller),</li>
<li><strong>NANO</strong>: Nano’s Another editor (Texteditor)</li>
</ul>
<p>&hellip;und viele mehr, unter anderem auch <strong>VISA</strong> für Visa International Service Association.</p>
<p>Nun geht das Gerücht um, dass das <strong>B</strong> im Namen des berühmten Mathematikers <strong>Benoit B. Mandelbrot</strong> für <strong>Benoit B Mandelbrot</strong> steht [<a href="https://www.nytimes.com/2010/10/17/us/17mandelbrot.html">NYTI1</a>]. Eine Anspielung auf eines seiner bekanntesten Vermächtnisse: Die wunderschöne Mandelbrot-Menge — ein rekursives mathematisches Kunstwerk!</p>
<p><img src="/2023/2023-05-28-nerd-enzyklop%C3%A4die-32---was-haben-php-visa-und-mandelbrot-gemeinsam/image2.png" alt=""></p>
<p style="text-align: center;font-style:italic">Bis zum Ende zoomen! [[WIKI5](https://de.wikipedia.org/wiki/Beno%C3%AEt_Mandelbrot)]</p>
<p>Fest steht: Das B als Initial hat sich Mandelbrot in seiner Autobiographie selber gegeben. Dass das B aber für <strong>Benoit B. Mandelbrot</strong> steht ist leider nicht belegt — es ist nur ein Initial [<a href="https://www.theguardian.com/science/2010/oct/17/benoit-mandelbrot-obituary">THEG1</a>].</p>
<p>Einer weiteren aber nicht belegbaren und vermutlich nicht ganz srnst gemeinten Legende nach steht <strong>Bing</strong> übrigens für <strong>Bing ist not Google</strong>…</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Akronym, Nerd-Enzyklopädie, Humor, Sprache</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 32 - Was haben PHP, Visa und Mandelbrot gemeinsam? - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 30 - Die falsche Fehlermeldung</title>
      <link>http://localhost:1313/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/</link>
      <pubDate>Mon, 22 May 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/</guid>
      <description>
Mitte der 1990er Jahre startete in den USA ein besonderer Internet-Provider seinen Dienst: WebTV Networks Incorporated. In der Regel benötigte man zu dieser …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Anekdote aus der &#39;Nerd Enzyklopädie&#39; über einen peinlichen Fehler im Registrierungsprozess des frühen Internetdienstes WebTV. Ein falsch konfigurierter Filter für Benutzernamen führte dazu, dass jede Eingabe als &#39;schlechtes Wort&#39; (&#39;That&#39;s a bad word.&#39;) abgewiesen wurde, was die Bedeutung gründlicher Tests unterstreicht.</p>
          
          
          <p><strong>Hauptthemen:</strong> WebTV, Internetgeschichte, Softwarefehler, Debugging, Benutzerverwaltung, Nerd-Kultur</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/image1.png" alt=""></p>
<p>Mitte der 1990er Jahre startete in den USA ein besonderer Internet-Provider seinen Dienst: <strong>WebTV</strong> <strong>Networks Incorporated</strong>. In der Regel benötigte man zu dieser Zeit für den Zugang zum Internet ein Modem, das zwischen Telefon-Dose und Computer angeschlossen wurde. WebTV funktionierte mit einer <strong>Set-Top-Box</strong> und einem <strong>Fernseher</strong> und ermöglichte so den Zugang zum Internet auch ohne Computer. Der Werbe-Slogan lautete:</p>
<blockquote>
<p>You’re surfing the Web with a remote control in one hand and a handful of cheese puffs in the other. Now that’s progress.</p></blockquote>
<p>Am <strong>18. September 1996</strong> wollte das Unternehmen seinen Dienst der Öffentlichkeit zugänglich machen. Ab diesem Datum war es möglich, ein Benutzerkonto für WebTV anzulegen. Einen Tag vorher saßen Techniker, Programmier und Gründer zusammen, um den Prozess der Benutzeranmeldung zu prüfen und das System auf Fehler zu untersuchen.</p>
<p>Bei einer Benutzeranmeldung ist es üblich, bestimmte anzügliche oder geschützte Begriffe für den Namen des Kontos zu verhindern. Seien es Beleidigungen oder reservierte Begriff wie „<strong>admin</strong>“, „<strong>root“</strong> und so weiter. Bei WebTV setzte man dazu auf eine Datei, die diese gesperrten Begriff enthielt. Die Datei war folgendermaßen aufgebaut:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">    admin.*   
</span></span><span class="line"><span class="ln">2</span><span class="cl">    User names may not start with “admin”.   
</span></span><span class="line"><span class="ln">3</span><span class="cl">    postmaster   
</span></span><span class="line"><span class="ln">4</span><span class="cl">    You’re not the postmaster.   
</span></span><span class="line"><span class="ln">5</span><span class="cl">    poop   
</span></span><span class="line"><span class="ln">6</span><span class="cl">    That’s a bad word.   
</span></span><span class="line"><span class="ln">7</span><span class="cl">    weenie That’s a bad word.
</span></span></code></pre></div><p>Jeder Eintrag bestand demnach aus zwei Zeilen. Die <strong>erste Zeile</strong> enthielt einen regulären Ausdruck, der den nicht zugelassenen Begriff beschreibt. Die <strong>zweite Zeile</strong> beinhaltet die Fehlermeldung, sollte jemand versuchen den Begriff für sein Benutzerkonto zu verwenden. Wenn also jemand ein Konto mit dem Benutzernamen <strong>admin</strong> einrichten wollte, wurde ihm das mit der Fehlermeldung “<strong>User names may not start with ‘admin’”</strong> verweigert.</p>
<p>Einer der Techniker hatte beim Anlegen der Datei einen Fehler gemacht. Er wollte die Datei in zwei Listen unterteilen: Eine Liste mit geschützten Namen (<strong>admin</strong>, <strong>postmaster</strong>, root, …) sowie eine Liste mit anzüglichen, obszönen Namen (<strong>fuck</strong>, <strong>poop</strong>, …). Zur besseren Lesbarkeit trente er die beiden Listen durch eine leere Zeile:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">    admin.* User names may not start with “admin”.   
</span></span><span class="line"><span class="ln">2</span><span class="cl">    postmaster You&#39;re not the postmaster.  
</span></span><span class="line"><span class="ln">3</span><span class="cl">      
</span></span><span class="line"><span class="ln">4</span><span class="cl">    fuck  
</span></span><span class="line"><span class="ln">5</span><span class="cl">    That&#39;s a bad word.
</span></span></code></pre></div><p>Aber auch die leere Zeile wurde vom System als regulärer Ausdruck interpretiert. Und dieser passte zu jeder Eingabe! Die Folge war, dass der Schutzmechanismus beim Anlegen eines Benutzerkontos auf jeden Namen reagierte und die darauffolgende Zeile, wie programmiert, als Fehlermeldung an die Benutzer:in zurückgab. Und in diesem Fall war das:</p>
<p><img src="/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/image2.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Die falsche Fehlermeldung bei der Anmeldung zu WebTV [[FADD1](https://fadden.com/tech/images/fkdialog.jpg)]
</p>
<p>Der Fehler wurde natürlich umgehend behoben. Als WebTV am nächsten Tag der Öffentlichkeit zugänglich gemacht wurde, kam es dem Vernehmen nach zu keinen beleidigenden Zwischenfällen.</p>
<p>Der Vorfall verdeutlich jedenfalls wie wichtig es ist, ein System in einer geschützten Umgebung ausgiebig zu testen.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Softwarefehler, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 30 - Die falsche Fehlermeldung - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 28 - Damönen aus der Nase</title>
      <link>http://localhost:1313/2023/2023-05-16-nerd-enzyklop%C3%A4die-28---dam%C3%B6nen-aus-der-nase/</link>
      <pubDate>Tue, 16 May 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-05-16-nerd-enzyklop%C3%A4die-28---dam%C3%B6nen-aus-der-nase/</guid>
      <description>
In der Informatik gibt es den Begriff des „undefinierten Verhaltens“ (undefined behaviour) [WIKI7]: Wenn eine Software bzw. Code auf unterschiedlichen Systemen …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Erklärung aus der &#39;Nerd Enzyklopädie&#39; über das Konzept des &#39;undefinierten Verhaltens&#39; in der Informatik, insbesondere in der Programmiersprache C. Der Artikel beleuchtet den Ursprung des humorvollen Ausdrucks &#39;nasal demons&#39; und demonstriert anhand eines einfachen C-Code-Beispiels die unvorhersehbaren Konsequenzen, wenn ein Compiler auf undefiniertes Verhalten trifft.</p>
          
          
          <p><strong>Hauptthemen:</strong> C-Programmierung, Undefined Behavior, Compiler, Softwareentwicklung, Nerd-Kultur, Programmiersprachen</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="/2023/2023-05-16-nerd-enzyklop%C3%A4die-28---dam%C3%B6nen-aus-der-nase/image1.png" alt=""></p>
<p>In der Informatik gibt es den Begriff des <strong>„undefinierten Verhaltens“</strong> (<strong>undefined behaviour</strong>) [<a href="https://en.wikipedia.org/wiki/Undefined_behavior">WIKI7</a>]: Wenn eine Software bzw. Code auf unterschiedlichen Systemen zu unterschiedlichen Ergebnissen führt, was natürlich nicht vorkommen darf, spricht man von eben diesem „undefinierten Verhalten“. In der Programmiersprache C hat sich dafür der Begriff „<strong>nasal demons</strong>“ etabliert. Den Ursprung hat dieser Ausspruch in der Usenet Gruppe <strong>comp.std.c</strong> und einer Diskussion in <strong>1992</strong>. Ein Nutzer meinte damals:</p>
<blockquote>
<p>“When the compiler encounters [a given undefined construct] it is legal for it to make demons fly out of your nose” [<a href="http://catb.org/jargon/html/N/nasal-demons.html">CATB</a>]</p></blockquote>
<p>Übersetzt also: Trifft der Compiler auf ein „<strong>undefiniertes Konstrukt</strong>“, sollte es ihm erlaubt sein, Dämonen aus deiner Nase fliegen zu lassen.</p>
<p>Ein einfaches Beispiel in C ist z.B. dieses [<a href="https://accu.org/journals/overload/21/115/maudel_1857/">ACCU1</a>]:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">    bool b;  
</span></span><span class="line"><span class="ln">2</span><span class="cl">    if (b)  
</span></span><span class="line"><span class="ln">3</span><span class="cl">      printf(“b is true\n”);  
</span></span><span class="line"><span class="ln">4</span><span class="cl">    if (!b)  
</span></span><span class="line"><span class="ln">5</span><span class="cl">      printf(“b is false\n”);
</span></span></code></pre></div><p>B wird als Boolesche Variable deklariert, aber nicht initialisiert. Es ist also nicht eindeutig klar, ob B wahr oder falsch ist. Der Compiler darf machen, “was er will”. Wie z.B. <strong>Dämonen aus deiner Nase fliegen</strong> lassen…</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> C, Programmierung, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 28 - Damönen aus der Nase - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 24 - Zeichenketten braten</title>
      <link>http://localhost:1313/2023/2023-05-04-nerd-enzyklop%C3%A4die-24---zeichenketten-braten/</link>
      <pubDate>Thu, 04 May 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-05-04-nerd-enzyklop%C3%A4die-24---zeichenketten-braten/</guid>
      <description>
Nerd-Enzyklopädie #24
Ganz frei nach dem Motto: Es gibt nichts, was man nicht braucht (oder so ähnlich) hat man sich bei der Programmiersprache C wohl gedacht …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Vorstellung der C-Funktion &#39;strfry&#39; aus der &#39;Nerd Enzyklopädie&#39;. Der Artikel erklärt, wie diese Funktion eine Zeichenkette zufällig neu anordnet, um ein Anagramm zu erzeugen, und beleuchtet die Kuriosität solcher Funktionen in Programmiersprachen.</p>
          
          
          <p><strong>Hauptthemen:</strong> C-Programmierung, Zeichenketten, Algorithmen, Nerd-Kultur, Programmiersprachen</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-05-04-nerd-enzyklop%C3%A4die-24---zeichenketten-braten/image1.png" alt=""></p>
<p>Nerd-Enzyklopädie #24</p>
<p>Ganz frei nach dem Motto: Es gibt nichts, was man nicht braucht (oder so ähnlich) hat man sich bei der <strong>Programmiersprache C</strong> wohl gedacht und eine Funktion implementiert, die aus einer Zeichenkette ein Anagram erzeugt [<a href="https://man7.org/linux/man-pages/man3/strfry.3.html">MAN1</a>]:</p>
<pre><code>strfry
</code></pre>
<p>Ausgesprochen steht <strong>strfry</strong> für „<strong>string fry</strong>“, also „<strong>Zeichenkette braten</strong>“ und diese Funktion macht nichts anderes, als die Zeichen eines Strings zufällig neu anzuordnen:</p>
<pre><code>strfy(„Hello World“)  
eoWloHl dlr
</code></pre>
<p>Guten Appetit.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> C, Programmierung, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 24 - Zeichenketten braten - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 20 - Elvis und Raumschiffe</title>
      <link>http://localhost:1313/2023/2023-04-22-nerd-enzyklop%C3%A4die-20---elvis-und-raumschiffe/</link>
      <pubDate>Sat, 22 Apr 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-04-22-nerd-enzyklop%C3%A4die-20---elvis-und-raumschiffe/</guid>
      <description>
Wer sich mit der Entwicklung von Software beschäftigt wird früher oder später über seltsam anmutende Abkürzungen stolpern mit denen sich ausufernder …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Erklärung aus der &#39;Nerd Enzyklopädie&#39; über zwei spezielle Operatoren in Programmiersprachen: den &#39;Elvis Operator&#39; (&#39;?:&#39;), der einen Standardwert zuweist, wenn eine Variable null oder falsch ist, und den &#39;Spaceship Operator&#39; (&#39;&lt;=&gt;&#39;), der einen Drei-Wege-Vergleich durchführt. Der Artikel beleuchtet die Herkunft ihrer ungewöhnlichen Namen.</p>
          
          
          <p><strong>Hauptthemen:</strong> Programmierung, Operatoren, Programmiersprachen, Nerd-Kultur, Humor</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-04-22-nerd-enzyklop%C3%A4die-20---elvis-und-raumschiffe/image1.png" alt=""></p>
<p>Wer sich mit der Entwicklung von Software beschäftigt wird früher oder später über seltsam anmutende Abkürzungen stolpern mit denen sich ausufernder Programmcode zu einem kompakten Kunstwerk aufwerten lässt. Dazu zählen z.B. <strong>ternäre Operatoren,</strong> die langweilige **if-then-**Bedingungen in einfache Einzeiler verwandeln:</p>
<pre><code>sAllGoodMan = foo == bar ? true : false;
</code></pre>
<p>Hier wird die boolesche Variable <strong>sAllGoodMan</strong> auf <strong>True</strong> gesetzt, wenn die Werte von <strong>foo</strong> und <strong>bar</strong> identisch sind, andernfalls ist <strong>sAllGoodMan =</strong> <strong>False</strong>.<br>
Weitaus weniger bekannt ist die gehobene Variante des ternären Operators, der sogenannte <strong>Elvis-Operator,</strong> der nur aus einem Fragezeichen gefolgt von einem Doppelpunkt besteht:</p>
<pre><code>?:
</code></pre>
<p>Und was kann der Elvis-Operator, außer gut aussehen und nicht singen? Er weist einer Variable einen Standard-Wert zu, wenn eine andere Variable <strong>Null</strong> oder <strong>Falsch</strong> ist:</p>
<pre><code>myValue = aValue ?: „default“;
</code></pre>
<p>Wenn die Variable <strong>aValue</strong> nicht gesetzt wurde und damit <strong>Null</strong> oder <strong>Falsch</strong> ist (die Interpretation von „nicht gesetzt“ kann von der jeweiligen Programmiersprache abhängen), wird der Variable myValue der Standard-Wert default zugewiesen. Das funktioniert natürlich auch mit dem Rückgabewert von Funktionen:</p>
<pre><code>Name = getName(‚id‘) ?: „John Doe“;
</code></pre>
<p>Kann kein Name ermittelt werden, wird als Standardname „<strong>John Doe</strong>“ verwendet.</p>
<p>Seinen Namen hat der Elvis-Operator von dem Fragezeichen, das zusammen mit dem Doppelpunkt ein Emoticon darstellt, das an Elvis Presley erinnern soll.</p>
<p>Eine andere weniger bekannte Abkürzung ist der <strong>Spaceship-Operator</strong>:</p>
<pre><code>&lt;==&gt;
</code></pre>
<p>Dieser führt einen <strong>3-Wege-Vergleich</strong> durch und heißt deswegen ganz offiziell eigentlich <strong>Drei-Wege-Vergleichsoperator</strong>. Der Spaceship-Operator erlaubt zwei Element auf drei Arten zu vergleichen, größer, kleiner oder gleich:</p>
<pre><code>A &lt; B, A == B, A &gt; B
</code></pre>
<p>Der Spaceship-Operator fasst die drei Vergleiche zusammen und liefert -1 für kleiner, 0 für genau gleich groß und +1 für größer als zurück.</p>
<p>Die Verbindung zu einem Raumschiff geht angeblich auf das Spiel <strong>Star Trek</strong> von <strong>1971</strong> zurück — dort wurde ein Raumschiff genau so abgebildet: <strong>&lt;==&gt;</strong>.<br>
Die Fraktion der <strong>StarWars-Fans</strong> sieht das anders. Dort wird behauptet, dass <strong>&lt;==&gt;</strong> eher an den <strong>Tie Fighter</strong> aus Star Wars erinnert.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Programmierung, Operatoren, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 20 - Elvis und Raumschiffe - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 19 - Das Brieftauben-Protokoll</title>
      <link>http://localhost:1313/2023/2023-04-19-nerd-enzyklop%C3%A4die-19---das-brieftauben-protokoll/</link>
      <pubDate>Wed, 19 Apr 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-04-19-nerd-enzyklop%C3%A4die-19---das-brieftauben-protokoll/</guid>
      <description>Schon mal was von IPoAC gehört? Dabei handelt es sich um eine Abkürzung für „IP over Avian Carriers“ was soviel heißt wie „Internet-Protokoll via gefiedertem …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Erkundung aus der &#39;Nerd Enzyklopädie&#39; über das &#39;IP over Avian Carriers&#39; (IPoAC) Protokoll, auch bekannt als &#39;Brieftauben-Protokoll&#39;. Der Artikel beschreibt die Entstehung dieses Aprilscherzes als offiziellen RFC, seine Aktualisierung für IPv6 und einen realen Testlauf in Norwegen, der die Grenzen der Datenübertragung per Brieftaube aufzeigt.</p>
          
          
          <p><strong>Hauptthemen:</strong> Internet-Protokolle, Netzwerktechnik, Humor, RFC, Nerd-Kultur, Kuriositäten</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Schon mal was von <strong>IPoAC</strong> gehört? Dabei handelt es sich um eine Abkürzung für „<strong>IP over Avian Carriers</strong>“ was soviel heißt wie „<strong>Internet-Protokoll via gefiedertem Träger”</strong>. Die Idee für dieses Protokoll wurde 1999 als Aprilscherz vorgestellt.</p>
<p><img src="/2023/2023-04-19-nerd-enzyklop%C3%A4die-19---das-brieftauben-protokoll/image1.png" alt=""></p>
<p style="text-align: center;font-style:italic">
craiyon.com: “Internet protocol over Avian Carriers”
</p>
<p>Das Internet Protokoll (IP) ist ein elementarer Bestandteil der Kommunikation im <em>Trommelwirbel</em> <strong>Internet</strong>! Es bildet die Grundlage für den elektronischen Datenaustausch zwischen zwei Computern. Beim <strong>IPoAC</strong> werden die Daten nicht elektronisch übermittelt, sondern mithilfe von <strong>Brieftauben</strong>.<br>
Auch wenn das ganze nur als Scherz gedacht war, fand <strong>IPoAC</strong> Einzug in ein sogenanntes <strong>Request for Comment</strong> (genauer der <strong>RFC1149</strong> [<a href="https://datatracker.ietf.org/doc/html/rfc1149">RFCE1</a>]) — ein offizielles Dokument zur Spezifikation von Standards. In <strong>2011</strong> wurde das Protokoll aktualisiert, um mit <strong>IPv6</strong> kompatibel zu sein.</p>
<p>In <strong>2021</strong> kam es in Norwegen sogar zu einem Testlauf des sonderbaren Protokolls. Dabei wurden Daten in <strong>neun Pakete</strong> aufgeteilt und mithilfe von <strong>neun Tauben</strong> über eine Strecke von <strong>fünf Kilometern</strong> übertragen. Die Übertragung dauerte <strong>zwei Stunden</strong> und nur <strong>vier Pakete</strong> wurden erfolgreich übermittelt. Da soll sich noch mal einer über das schlechte Mobilfunknetz beschweren!</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Netzwerk, IT-Geschichte, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 19 - Das Brieftauben-Protokoll - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 13 - Total hours wasted here = 42</title>
      <link>http://localhost:1313/2023/2023-04-01-nerd-enzyklop%C3%A4die-13---total-hours-wasted-here-42/</link>
      <pubDate>Sat, 01 Apr 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-04-01-nerd-enzyklop%C3%A4die-13---total-hours-wasted-here-42/</guid>
      <description>Dass Entwickler*innen einen speziellen Humor haben sollte bekannt sein. Und es gibt keinen Ort, an dem das klarer wird, als im Quellcode. Ein ikonisches …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Erkundung aus der &#39;Nerd Enzyklopädie&#39; über den speziellen Humor von Entwicklern, der sich in Quellcode-Kommentaren und unkonventionellen Programmierpraktiken widerspiegelt. Der Artikel beleuchtet das berühmte &#39;total_hours_wasted_here = 42&#39;-Meme und präsentiert weitere Beispiele für witzige, zynische oder selbstironische Code-Kommentare und &#39;quick and dirty&#39;-Lösungen.</p>
          
          
          <p><strong>Hauptthemen:</strong> Programmierung, Softwareentwicklung, Humor, Nerd-Kultur, Code-Qualität, Douglas Adams</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Dass Entwickler*innen einen speziellen Humor haben sollte bekannt sein. Und es gibt keinen Ort, an dem das klarer wird, als im Quellcode. Ein ikonisches Beispiel ist dieser subtile Hinweis auf die „Komplexität“ des entsprechenden Code-Bereichs:</p>
<pre><code>// total_hours_wasted_here = 42
</code></pre>
<p>Die <strong>42</strong> ist eine Anspielung auf das Buch “<strong>Per Anhalter durch die Galaxis</strong>” von <strong>Douglas Adams</strong>. Ein Supercomputer gibt darin die Antwort <strong>42</strong> auf „<strong>die ultimative Frage nach dem Leben, dem Universum und dem ganzen Rest</strong>“.</p>
<p>Die 42 wird oft als Verweis auf diese Szene verwendet, wenn eine Zahlenangabe erforderlich ist. So auch in jener flapsigen Dokumentation ist, gerne auch eingebettet in einen zynischen Kommentar zur Code-Qualität:</p>
<pre><code>// Dear maintainer:   
// Once you are done trying to ‘optimize’ this routine,  
// and have realized what a terrible mistake that was,   
// please increment the following counter as a warning   
// to the next guy:   
//  
// total_hours_wasted_here = 42
</code></pre>
<p>In der IT hat sich für derartigen Code der Begriff „quick and dirty“ eingebürgert. Die Lösung ist vielleicht nicht schön, aber dafür schnell implementiert. Wer auch immer sich später mit dem Quellcode auseinander setzt bzw. auseinander setzen muss, wird davon sicherlich nicht begeistert sein. Aber das dürfte wohl auch zum Berufsrisiko gehören.</p>
<p>Noch nicht genug Nerd-Humor? In der Community hat sich dankenswerterweise ein sportlicher Ergeiz entwickelt, möglichst einfallsreichen Quellcode zu produzieren. Wie wäre es mit einem angepassten <strong>Error-Handling</strong>?</p>
<pre><code>Exception up = new Exception(“Something is really wrong.”);  
throw up:
</code></pre>
<p>Oder einer <strong>Selbsterkenntnis</strong> wie dieser:</p>
<pre><code>// drunk, fix later
</code></pre>
<p>Dann hätten wir noch umgekehrte boolsche Werte in der <strong>Programmiersprache C</strong>:</p>
<pre><code>#define TRUE FALSE
</code></pre>
<p>Eine überraschende Offenbarung:</p>
<pre><code>return 1; # returns 1
</code></pre>
<p>Mein persönlicher Favorit: mathematische Trickserein:</p>
<pre><code>// I can’t divide with zero, so I have to divide with something very similar  
result = number / 0.00000000000001;
</code></pre>
<p>Noch mehr unterhaltsame Code-Kuriositäten, die ein ganzes Buch füllen würden, gibt es auf <strong>Stackoverflow</strong>: [<a href="https://stackoverflow.com/questions/184618/what-is-the-best-comment-in-source-code-you-have-ever-encountered">STACK1</a>].</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Programmierung, Humor, Nerd-Enzyklopädie, Kultur</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 13 - Total hours wasted here = 42 - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>cultural_analysis</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 12 - A CPU is literally a rock that we tricked into thinking</title>
      <link>http://localhost:1313/2023/2023-03-28-nerd-enzyklop%C3%A4die-12---a-cpu-is-literally-a-rock-that-we-tricked-into-thinking/</link>
      <pubDate>Tue, 28 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-28-nerd-enzyklop%C3%A4die-12---a-cpu-is-literally-a-rock-that-we-tricked-into-thinking/</guid>
      <description>Eine CPU ist nicht mehr als ein zerbröselter Felsen in den der Blitz eingeschlagen hat.
In Gänze lautet dieses wunderbare Bonmot:
If you ever code something …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Erkundung aus der &#39;Nerd Enzyklopädie&#39; über das Bonmot &#39;A CPU is literally a rock that we tricked into thinking&#39;. Der Artikel beleuchtet die wörtliche Wahrheit hinter dieser Aussage, indem er die Zusammensetzung einer CPU aus Silizium (Quarzsand) erklärt und auf ein Video von Intel verweist, das den Herstellungsprozess dokumentiert.</p>
          
          
          <p><strong>Hauptthemen:</strong> Computerhardware, CPU, Silizium, Informatik, Nerd-Kultur, Humor</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Eine CPU ist nicht mehr als ein zerbröselter Felsen in den der Blitz eingeschlagen hat.</p>
<p>In Gänze lautet dieses wunderbare Bonmot:</p>
<blockquote>
<p>If you ever code something that “feels like a hack but it works,” just remember that a CPU is literally a rock that we tricked into thinking […] first you have to flatten the rock and put lightning inside it […]<br>
@daisyowl am 15.03.2017 auf Twitter [<a href="https://twitter.com/daisyowl/status/841806379962646532">TWIT1</a>]</p></blockquote>
<p>Die Verfasserin spielt damit darauf an, dass nicht jede programmatische Lösung so elegant ist, wie man es sich vielleicht wünscht. Und schließlich besteht die CPU ja auch nur aus “<strong>elektrifiziertem Sand</strong>”: Das wichtigste Bauteil, das für die Berechnungen im Computer zuständig ist besteht zu einem Großteil aus <strong>Silizium</strong> und das wird in der Regel aus <strong>Quarzsand</strong> gewonnen. Der Strom stammt dann zwar nicht aus einem Blitz, das rundet das Bild aber passend ab.</p>
<p>Ob <strong>Intel</strong> sich von dem Tweet hat inspirieren lassen oder selber auf diese Idee kam, ist nicht überliefert. Jedenfalls hat man in <strong>2020</strong> die Herstellung der CPU in einem Video dokumentiert — vom Quarzsand bis zur Elektrifizierung [<a href="https://www.youtube.com/watch?v=_VMYPLXnd7E">YOUT1</a>].</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Hardware, Nerd-Enzyklopädie, Humor, Informatik</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 12 - A CPU is literally a rock that we tricked into thinking - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 11 - Der kleine Bobby Tables</title>
      <link>http://localhost:1313/2023/2023-03-25-nerd-enzyklop%C3%A4die-11---der-kleine-bobby-tables/</link>
      <pubDate>Sat, 25 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-25-nerd-enzyklop%C3%A4die-11---der-kleine-bobby-tables/</guid>
      <description>Der kleine Robert „Bobby” Tables ist Gegenstand eines Comics von xkcd (einer recht legendären Sammlung von Web-Comics von Randall Munroe). Der Comic über …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Erklärung aus der &#39;Nerd Enzyklopädie&#39; über den berühmten xkcd-Comic &#39;Der kleine Bobby Tables&#39; und die von ihm illustrierte Sicherheitslücke: SQL-Injection. Der Artikel erläutert, wie bösartiger SQL-Code über Eingabefelder in Datenbanken eingeschleust werden kann, um unerwünschte Aktionen auszuführen, und betont die Notwendigkeit der Validierung von Benutzereingaben.</p>
          
          
          <p><strong>Hauptthemen:</strong> SQL Injection, Web-Sicherheit, Datenbanken, Programmierung, Nerd-Kultur, xkcd</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Der kleine <strong>Robert</strong> „<strong>Bobby” Tables</strong> ist Gegenstand eines Comics von <strong>xkcd</strong> (einer recht legendären Sammlung von Web-Comics von <strong>Randall Munroe</strong>). Der Comic über besagten <strong>Bobby Tales</strong> trägt den Titel “<strong>Exploits of a Mom</strong>” [<a href="https://xkcd.com/327/">XKCD2</a>]. Ein <strong>Exploit</strong> beschreibt die Ausnutzung einer Sicherheitslücke in Computer-Systemen. In dem Comic geht es um einen Schüler, dessen Mutter ihren Sohn folgendem Namen verleiht — natürlich nur temporär:</p>
<pre><code>Robert’); DROP TABLE Students; — 
</code></pre>
<p>Das, was hinter dem Vornamen steht, mag wie Hieroglyphen oder ein Tippfehler aussehen. In der Tat handelt es sich aber um eine <strong>SQL-Anweisung</strong>, also den Befehl, die Tabelle mit dem Namen „<strong>Students</strong>“ zu löschen. Der Comic thematisiert damit die Sicherheitslücke <strong>SQL-Injection</strong>.</p>
<p>Dabei wird über eine Eingabemaske eine spezielle Zeichenfolge an das System übergeben, das diese ungeprüft übernimmt und so zu einer ungewünschten Aktion „überrumpelt“ wird. Das Ziel muss nicht unbedingt das Löschen von Daten sein, auch der Abruf von kritischen Informationen wie Passwörtern ist denkbar.</p>
<p>Die Moral der Geschichte, die sich an die Entwickler<em>innen von Eingabeformularen oder Datenbank-Schnittstellen wendet: Prüfe die Eingabe deiner Nutzer</em>innen.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> SQL, Sicherheit, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 11 - Der kleine Bobby Tables - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 10 - Brainfuck</title>
      <link>http://localhost:1313/2023/2023-03-22-nerd-enzyklop%C3%A4die-10---brainfuck/</link>
      <pubDate>Wed, 22 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-22-nerd-enzyklop%C3%A4die-10---brainfuck/</guid>
      <description>Die Behauptung ist natürlich starker Tobak. Bei Brainfuck handelt es sich um eine sogenannte “esoterische Programmiersprache”, entworfen vom Schweizer Urban …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Einführung aus der &#39;Nerd Enzyklopädie&#39; in die esoterische Programmiersprache Brainfuck. Der Artikel erklärt die acht minimalistischen Befehle der Sprache, demonstriert ihre Komplexität anhand eines &#39;Hello World!&#39;-Beispiels und beleuchtet ihren Zweck als Lernwerkzeug oder Coding-Challenge, anstatt für den produktiven Einsatz.</p>
          
          
          <p><strong>Hauptthemen:</strong> Programmiersprachen, Esoterische Programmierung, Informatik, Nerd-Kultur, Algorithmen</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Die Behauptung ist natürlich starker Tobak. Bei <strong>Brainfuck</strong> handelt es sich um eine sogenannte “<strong>esoterische Programmiersprache</strong>”, entworfen vom Schweizer <strong>Urban Müller</strong>. Brainfuck sollte eigentlich leicht zu lernen sein, da sie gerade einmal <strong>acht Befehle</strong> umfasst, die jeweils nur aus <strong>einem Zeichen</strong> bestehen. Was soll da schon schief gehen?</p>
<p>Eine ganze Menge. Denn diese besondere Eigenschaft dürfte das Programmieren ein wenig erschweren. Was nicht heißt, dass es unmöglich ist. Probier es doch mal aus. Das sind die acht Befehle, die du kennen musst:</p>
<pre><code>+ Wert der aktuellen Zelle inkrementieren  
- Wert der aktuellen Zelle dekremeWentieren  
&gt; Zeiger inkrementieren  
&lt; Zeiger dekrementieren  
[ Schleifen-Start  
] Schleifen-Ende  
. aktuellen Zellenwert ausgeben (zur Standardausgabe)  
, aktuellen Zellenwert einlesen (von Standardausgabe)
</code></pre>
<p>Fertig? Herzlich Glückwunsch, du kannst jetzt „Brainfuck“! und hast nun bestimmt kein Problem damit, diese „<strong>Hello World!</strong>“-Implementierung in Brainfuck zu verstehen [<a href="https://en.wikipedia.org/wiki/Brainfuck">WIKI13</a>]:</p>
<pre><code>++++++++[&gt;++++[&gt;++&gt;+++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;+&gt;+&gt;-&gt;&gt;+[&lt;]&lt;-]&gt;&gt;.&gt; — -.+++++++..+++.&gt;&gt;.&lt;-.&lt;.+++. — — — . — — — — .&gt;&gt;+.&gt;++.
</code></pre>
<p><strong>Brainfuck</strong> ist für den produktiven Einsatz natürlich kaum geeignet, sondern eher um das Konzept der Programmierung zu vermitteln oder für eine gemütliche Coding-Challenge am sonntäglichen Frühstückstisch.</p>
<p>Übrigens: Die Programmiersprache mit den meisten Keywords, nämlich <strong>217</strong>, heißt <strong>Visual Basic</strong>. [<a href="https://github.com/e3b0c442/keywords#c-ansi-c89-32-keywords">GITH2</a>].</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Programmiersprache, Nerd-Enzyklopädie, Humor, Informatik</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 10 - Brainfuck - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 5 - Gesehen, gelacht, F8</title>
      <link>http://localhost:1313/2023/2023-03-07-nerd-enzyklop%C3%A4die-5---gesehen-gelacht-f8/</link>
      <pubDate>Tue, 07 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-07-nerd-enzyklop%C3%A4die-5---gesehen-gelacht-f8/</guid>
      <description>Dieser fröhliche Ausspruch geht auf eine populäre Software zurück bzw. auf eine ganze Software-Familie: Die alternativen Dateimanager. Einer ihrer ältesten und …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel aus der &#39;Nerd Enzyklopädie&#39; beleuchtet die Herkunft des Ausdrucks &#39;Gesehen, gelacht, F8&#39; im Kontext der frühen Computer-Dateiverwaltung. Er erklärt die Rolle des Norton Commanders und seiner Klone, wie dem Total Commander, und wie die Funktionstaste F8 zum Löschen von Dateien zu einem humorvollen Ausdruck für das Verwerfen enttäuschender Software oder Medien wurde.</p>
          
          
          <p><strong>Hauptthemen:</strong> Computergeschichte, Dateimanager, Norton Commander, Total Commander, DOS, Tastenkombinationen, Nerd-Kultur, Humor</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Dieser fröhliche Ausspruch geht auf eine populäre Software zurück bzw. auf eine ganze Software-Familie: Die alternativen Dateimanager. Einer ihrer ältesten und wichtigsten Vertreter ist der sagenumwobene <strong>Norton Commander</strong>. Jeder Nerd sollte bei diesem Anblick feuchte Augen bekommen:</p>
<p><img src="/2023/2023-03-07-nerd-enzyklop%C3%A4die-5---gesehen-gelacht-f8/image.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Der Norton Commander Version 5 (1995) [[WIKI3](https://de.wikipedia.org/wiki/Norton_Commander)]
</p>
<p>Der Norton Commander wurde 1984 unter dem Namen <strong>VisualDOS</strong> (VDOS, DOS steht für Disc Operating System) von <strong>John Socha</strong> entwickelt und später von <strong>Peter Norton Computing</strong> vertrieben. DOS war seinerzeit ein Betriebsystem, das ohne grafische Benutzeroberfläche auskam. Für viele Anwender*innnen heutzutage vermutlich eine seltsame Vorstellung.</p>
<p>Mithilfe des Norton Commanders konnte man nicht nur Dateioperationen bequem durchführen, sondern hatte auch andere nützliche Funktionen an zentraler Stelle zur Verfügung. Selbst als mit <strong>Microsoft Windows</strong> eine grafische Benutzeroberfläche zur Verfügung stand, galt der Norton Commander noch als willkommene Alternative zum hauseigenem und etwas sperrigen Dateimanager. Der Norton Commander wird seit 2000 nicht mehr weiterentwickelt. Mittlerweile gibt es zahlreiche Ableger und Klone für alle gängigen Betriebssysteme und sogar für Smartphones. Der <a href="https://www.ghisler.com/deutsch.htm"><strong>Total Commander</strong> von Christian Ghisler</a> dürfte wohl zum bekanntesten Vertreter dieser Gattung gehören.</p>
<p>Wie dem auch sei: Dateien und Ordner ließen sich schnell über die <strong>Funktionstaste F8</strong> löschen. Ein Tastenkürzel, das von den meisten Norton-Commander-Klonen weiterhin unterstützt wird. Wenn man vom Unterhaltungswert eines Spiels, einer Software oder eines Videos enttäuscht war, wurde es so einfach vom Computer entfernt. So entstand der Ausruf „gesehen“ (das Spiel getestet, das Video angesehen, …) „gelacht“ (im Sinne einer abwertenden Beurteilung) und „F8“ (Löschen!).</p>
<p>Gesehen. Gelacht. F8…</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Computergeschichte, Dateimanager, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 5 - Gesehen, gelacht, F8 - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 4 - RegExen — Jetzt hast du zwei Probleme</title>
      <link>http://localhost:1313/2023/2023-03-04-nerd-enzyklop%C3%A4die-4---regexen--jetzt-hast-du-zwei-probleme/</link>
      <pubDate>Sat, 04 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-04-nerd-enzyklop%C3%A4die-4---regexen--jetzt-hast-du-zwei-probleme/</guid>
      <description>Reguläre Ausdrücke sind umstritten: Geliebt als vielseitiges Werkzeug, verdammt als undurchschaubare Fehlerquelle. Nicht ohne Grund heißt es: Reguläre Ausdrücke …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle und kritische Auseinandersetzung mit regulären Ausdrücken (RegEx) und dem bekannten Programmierer-Meme &#39;Jetzt hast du zwei Probleme&#39;. Der Artikel beleuchtet die Komplexität, den Missbrauch und die Sicherheitsrisiken (Catastrophic Backtracking, ReDOS) von RegEx und verfolgt die Ursprünge des berühmten Zitats.</p>
          
          
          <p><strong>Hauptthemen:</strong> Reguläre Ausdrücke, Programmierung, Softwareentwicklung, Sicherheit, Nerd-Kultur, Algorithmen</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Reguläre Ausdrücke sind umstritten: Geliebt als vielseitiges Werkzeug, verdammt als undurchschaubare Fehlerquelle. Nicht ohne Grund heißt es: Reguläre Ausdrücke lösen ein Problem und schaffen zwei neue.<br>
Woher kommt diese Hassliebe?</p>
<h2 id="eine-exotische-tierart">Eine exotische Tierart</h2>
<p>Reguläre Ausdrücke, kurz RegExen, sind mitunter schwer zu entwickeln und irgendwann kaum noch lesbar. Das erschwert das Debugging, also die Fehlersuche. Wie wäre es zum Beispiel mit diesem Schmuckstück:</p>
<pre><code>^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&amp;*])(?=.*[0–9].*[0–9])(?=.*[a-z].*[a-z].*[a-z]).{8}$
</code></pre>
<p>Na, erkannt? Diese RegExe überprüft ob eine Passwort-Zeichenfolge bestimmten Sicherheitsanforderungen entspricht. Diesen Hinweis kann man im Quellcode vielleicht noch dokumentieren. Aber was wenn sich die Sicherheitsanforderungen im Detail ändern?</p>
<h2 id="mit-kanonen-auf-spatzen">Mit Kanonen auf Spatzen…</h2>
<p>RegExen werden außerdem gerne dort eingesetzt, wo eigentlich bessere, standardisierte Lösungen vorhanden sind, wie z.B. für das Parsen von XML [<a href="https://flapenguin.me/xml-regex">FLAP1</a>]:</p>
<pre><code>\s*  
(?(?=&lt;)  
  (?&lt;opentag&gt;  
    &lt; \s*  
    (?&lt;tagname&gt;\w+)  
    (?&lt;attibute&gt;  
      \s+  
      (?&lt;attrname&gt;[^\s&gt;]+)  
      =  
      (?&lt;attrquote&gt;&quot;|'|)  
      (?&lt;attrvalue&gt;[^\s&quot;'&gt;]+)  
      (\k{attrquote})  
    )*  
    \s*  
    (?&lt;selfclosing&gt;\/\s*)?  
    &gt;  
  )  
  (?(&lt;selfclosing&gt;)|  
    (?&lt;children&gt;(?R))  
    (?&lt;closetag&gt;&lt;\s* \/ \s* \k{tagname} \s*&gt;)  
  )  
|  
  (?&lt;text&gt;[^&lt;]*)  
)*  
\s*
</code></pre>
<p>Was aussieht als wäre deine Katze auf der Tastatur eingeschlafen, ist eine funktionsfähige RegExe. Mit genau einem Vorteil: Wenn man den Ausdruck Stück für Stück zerpflückt, um ihn zu verstehen, kann man viel über die Möglichkeiten regulärer Ausdrücke lernen. Im produktiven Betrieb sollte man trotzdem auf alternative Ansätze zurückgreifen, um mit XML-Daten zu arbeiten. Wie z.B. XML-Parser, die soll es ja wirklich geben.</p>
<h2 id="backtracking">Backtracking</h2>
<p>RegExen können auch zu handfesten Sicherheitsproblemen führen. Die Ursache liegt in der Art, wie RegExen verarbeitet werden. Sie durchlaufen einen String zeichenweise, bis eine Bedingung nicht mehr erfüllt wird und springen dann zu dem Zeichen zurück, an dem der Ausdruck vielleicht einen anderen Lösungsweg nehmen kann. Dieses Vorgehen nennt man <strong>Backtracking</strong>, also Rückverfolgung. Diese Funktion kann aber zu einem Rückkopplungs-Effekt führen, wodurch die Dauer der Verarbeitung exponentiell ansteigt. Die Folge nennt man „Catastrophic Backtracking“, eine wichtige Grundlage für <a href="https://medium.com/@nitinpatel_20236/what-are-evil-regexes-7b21058c747e">ReDOS</a> (<a href="https://medium.com/@nitinpatel_20236/what-are-evil-regexes-7b21058c747e">Regular Expression Denial Of Service</a>) Angriffe [<a href="https://www.regular-expressions.info/catastrophic.html">REGU1</a>]. Ein einfaches Beispiel ist dieser reguläre Ausdruck [<a href="https://medium.com/@nitinpatel_20236/what-are-evil-regexes-7b21058c747e">MEDI1</a>]:</p>
<pre><code>(x+x+)+y.
</code></pre>
<p>Diese RegExe lässt sich sicherlich optimieren, sie soll auch nur zeigen, wie schnell die Verarbeitung eskalieren kann. Als Test-String dient diese einfache Zeichenkette:</p>
<pre><code>xxxxxy
</code></pre>
<p>Die Verarbeitung erfordert in diesem Fall in <strong>123 Schritte</strong>. Passen wir die Zeichenkette nun etwas an:</p>
<pre><code>xxxxxxxxxxxxxy
</code></pre>
<p>Mehr als <strong>38.000 Schritte</strong> sind jetzt erforderlich, um den regulären Ausdruck zu prüfen. Mit dem richtigen regulären Ausdruck und der passenden Zeichenkette kann ein Browser „mühelos“ zum Absturz gebracht werden.</p>
<p>Der Einsatz von regulären Ausdrücken ist also streitbar. Übrigens: Dem Netscape Entwickler <strong>Jamie Zawinski</strong> wird zugeschrieben, diese Erkenntnis als erster in Worte gefasst zu haben. Er stellte bereits <strong>1997</strong> fest [<a href="https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/">CODI1</a>]:</p>
<blockquote>
<p>Some people, when confronted with a problem, think “I know, I’ll use regular expressions.” Now they have two problems.</p></blockquote>
<p>Dieser Ausspruch geht wiederum auf <strong>David Tilbrook</strong> zurück, der sich (selber nur vage) erinnert, wie er <strong>1985</strong> auf einer Konferenz in <strong>Dublin</strong> die Nutzung des Kommandozeilen-Tools <strong>awk</strong> kommentiert [<a href="http://regex.info/blog/2006-09-15/247">REGE1</a>]:</p>
<blockquote>
<p>“If you have a problem and you think awk is the solution, then you have two problems.”</p></blockquote>
<p><strong>RegExen</strong> und <strong>awk</strong> sind nicht die einzigen zweifelhaften Tools, auch <a href="http://regex.info/blog/2006-09-15/247">Perl</a> hat einen gewissen Ruf. Aber vermutlich ist das nur eine besondere Art von Nerd-Humor, vor der niemand sicher ist:</p>
<p><img src="/2023/2023-03-04-nerd-enzyklop%C3%A4die-4---regexen--jetzt-hast-du-zwei-probleme/image.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Bildquelle [[XKCD1](https://xkcd.com/1171/)]
</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> RegEx, Programmierung, Sicherheit, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 4 - RegExen — Jetzt hast du zwei Probleme - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item><item>
      <title>Freecoffee - Der Stullen-Generator</title>
      <link>http://localhost:1313/2023/2023-02-24/2023-02-24-freecoffee/</link>
      <pubDate>Fri, 24 Feb 2023 07:44:21 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-02-24/2023-02-24-freecoffee/</guid>
      <description>https://freecoffee.de
Eine in JavaScript geschriebene Oberfläche, um belegte Brote (vulgo Stullen) randomisiert zu belegen.
</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine kurze Vorstellung der Web-Anwendung &#39;Freecoffee&#39;, einem in JavaScript entwickelten &#39;Stullen-Generator&#39;, der zufällige Beläge für belegte Brote generiert.</p>
          
          
          <p><strong>Hauptthemen:</strong> JavaScript, Web-Anwendung, Generatoren, Humor, Kulinarisches</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><a href="https://freecoffee.de">https://freecoffee.de</a></p>
<p>Eine in JavaScript geschriebene Oberfläche, um belegte Brote (vulgo Stullen) randomisiert zu belegen.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> JavaScript, Projekt, Humor, Web-App</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Freecoffee - Der Stullen-Generator - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>project_showcase</dc:type>
      
      
    </item><item>
      <title>Pictero - Generator für Poesie-Album-Sprüche</title>
      <link>http://localhost:1313/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/</guid>
      <description>Pictero ist eine Persiflage auf die moralinsauren, romantischen oder schwülstigen Sprüche, die dir auf Delphin-Postern, in Poesie-Alben und mittlerweile auch in …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel stellt den &#39;Pictero&#39; vor, einen Generator für humorvolle und ironische Sprüche, die über Bilder gelegt werden können. Er beschreibt, wie das Tool öffentliche Bildgeneratoren nutzt und die direkte Anbindung an Twitter ermöglicht, um eine Persiflage auf moralinsaure oder romantische Zitate zu erstellen.</p>
          
          
          <p><strong>Hauptthemen:</strong> Humor, Satire, Bildgeneratoren, Text-Bild-Generierung, Web-Tools, Social Media, API Integration</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><a href="https://pictero.com/">Pictero</a> ist eine Persiflage auf die moralinsauren, romantischen oder schwülstigen Sprüche, die dir auf Delphin-Postern, in Poesie-Alben und mittlerweile auch in sozialen Netzwerken begegnen. Mit Pictero kannst du derartige Texte über Bilder legen, die entweder ganz gut passen. Dazu gehören z.B. Strandbilder mit einem viel zu starken Blur-Effekt. Oder du nimmst Bilder, die überhaupt gar nicht passen, wie z.B. ein Stück Fleisch, Katzen oder ein Porträt von Bill Murray.</p>
<p><img src="/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/images/1-1.png" alt=""></p>
<p>Don&rsquo;t dream your life, live your dreams. Ok.</p>
<p>Pictero greift dazu selber auf eine Menge öffentlich zugänglicher Bild-Generatoren zurück:</p>
<ul>
<li>picsum.photo</li>
<li>baconmockup.com</li>
<li>placebeard.it</li>
<li>fillmurray.com</li>
<li>placekitten.com</li>
<li>placecage.com</li>
<li>placezombie.com</li>
<li>stevensegallery.com</li>
<li>placeimg.com</li>
</ul>
<p>Ein weiteres Feature ist die direkte Anbindung an Twitter. Man kann eine Tweet-Id oder URL zu einem Tweet angeben, um so direkt den Text zu visualisieren.</p>
<p>Als i-Tüpfelchen kannst du den Text maximalironisch mit einer Comic-ähnlichen Schriftart oder einer Handschrift verzieren und das Bild dann herunterladen um die Nachricht deinerseits publikumswirksam an den Mann oder die Frau zu bringen.</p>
<p>Viel Spaß.</p>
<p><img src="/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/images/2.png" alt=""></p>
<p>Bill Murray - er kann es noch</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Humor, Satire, Tool, Bilder, Projekt</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Pictero - Generator für Poesie-Album-Sprüche - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>project_showcase</dc:type>
      
      
    </item><item>
      <title>Warum es Tage dauern kann, wenn du dich von einer E-Mail-Verteilerliste entfernen lässt</title>
      <link>http://localhost:1313/2019/2019-08-02-warum-es-tage-dauern-kann-wenn-du-dich-von-einer-e-mail-verteilerliste-entfernen-laesst/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-08-02-warum-es-tage-dauern-kann-wenn-du-dich-von-einer-e-mail-verteilerliste-entfernen-laesst/</guid>
      <description>Im Vereinigten Königreich gibt es wohl eine mittelgroße Bank, die, wie sicher viele andere Unternehmen auch, Newsletter verschickt. Was passiert, wenn man als …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel beleuchtet auf humorvolle Weise die komplexen und ineffizienten Prozesse, die hinter dem Abmelden von E-Mail-Verteilerlisten bei großen Unternehmen stecken können. Anhand eines fiktiven Beispiels einer Bank werden Probleme wie veraltete Systeme, manuelle Datenverarbeitung und bürokratische Hürden aufgezeigt, die dazu führen, dass eine einfache Abmeldung Tage dauern kann.</p>
          
          
          <p><strong>Hauptthemen:</strong> E-Mail Marketing, Unternehmensprozesse, Bürokratie, IT-Infrastruktur, Datenbanken, Humor, Anekdote</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Im Vereinigten Königreich gibt es wohl eine mittelgroße Bank, die, wie sicher viele andere Unternehmen auch, Newsletter verschickt. Was passiert, wenn man als Empfänger bei diesem Newsletter auf &ldquo;Abmelden&rdquo; klickt? Folgendes:</p>
<p>Der Klick auf den &ldquo;Abmelden&rdquo;-Link ruft einen uralten Webservice auf.</p>
<p>Der Webservice schickt eine E-Mail an einen internen E-Mail-Empfänger, der seit 5 Jahren nicht mehr in der Bank arbeitet.</p>
<p>Diese E-Mail-Adresse konnte man allerdings nicht ändern, da sie im Sourcecode fest angeben wurde (hardcoded) und man den originalen Sourcode zum kompilieren nicht mehr hatte. Der Service wurde in Java 6 geschrieben (2006 bis 2013).</p>
<p>Also hat man eine Weiterleitung zu einer Verteilerliste eingerichtet, die von zwei Mitarbeitern in Hyderabad, Indien, überwacht wird.</p>
<p>Wenn sie eine dieser 100 Anfragen am Tag erhalten, müssen sie eine SQL-Abfrage ausführen um zu prüfen, ob es sich um einen Kunden handelt.</p>
<p>Handelt es sich um einen Kunden, aktualisieren sie mit einer weiteren SQL-Abfrage einen Datensatz.</p>
<p>Jede dieser Änderungen wird täglich um 16 Uhr Ortszeit in Schottland von einem anderen Team geprüft. Wenn die Änderungen angenommen werden, werden sie 24 Stunden später tatsächlich angewendet.</p>
<p>Wenn die ursprünglich Anfrage nicht von einem Kunden stammt, wird die Anfrage in eine Excel-Datei eingetragen. Die Excel-Tabelle wird zum Feierabend an ein anderes Team in Swindon, England, geschickt.</p>
<p>Das Team in Swindon entscheidet, ob es sich um eine potentiell wertvollen Kunden entscheidet. Ist dem nicht so, wird die Anfrage in eine andere Excel-Tabelle eingetragen und das Team in Indien benachrichtigt, wo erneut die o.g. SQL-Abfrage ausgeführt wird.</p>
<p>Kommt die Anfrage von einem potentiell wertvollen Kunden, wird eine E-Mail an den Kunden geschickt und gefragt, ob er den Newsletter wirklich abmelden will.</p>
<p>Nur wenn der potentielle Kunden darauf mit Ja antwortet, wird diese Anfrage in eine weitere Excel-Liste eingetragen, die zurück an das Team in Indien geschickt wird.</p>
<p>Der ganze Prozess dauert im Schnitt 4 Tage. Es kommt zu durchschnittlich 700 Anfragen am Tag, von denen etwa 70% als &ldquo;potentiell wertvolle Kunden&rdquo; eingestuft werden.</p>
<p><a href="https://twitter.com/Joe8Bit/status/1156312965265707013">via Twitter</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> E-Mail, Newsletter, Humor, Prozesse, IT</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Warum es Tage dauern kann, wenn du dich von einer E-Mail-Verteilerliste entfernen lässt - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>humorous_essay</dc:type>
      
      
    </item><item>
      <title>AbbreViator (tm) - Lange Texte automatisch abkürzen</title>
      <link>http://localhost:1313/2019/2019-05-13-abbreviator-tm-lange-texte-automatisch-abkurzen/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-05-13-abbreviator-tm-lange-texte-automatisch-abkurzen/</guid>
      <description>Wenn bei deiner Abschlussarbeit, Masterarbeit, Hausarbeit oder Doktorabeit Qualität mehr zählt als Quantität, dann ist der AbbreViator (tm) für dich genau das …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel stellt den &#39;AbbreViator (tm)&#39; vor, ein humorvoll präsentiertes Tool, das lange Texte automatisch durch Abkürzungen komprimiert. Es wird beschrieben, wie das Werkzeug eine kompakte Version des Originalinhalts zusammen mit einem passenden Abkürzungsverzeichnis erstellt, ideal für wissenschaftliche Arbeiten, bei denen Prägnanz im Vordergrund steht.</p>
          
          
          <p><strong>Hauptthemen:</strong> Textverarbeitung, Automatisierung, Produktivität, Humor, Wissenschaftliches Schreiben, Sprachtechnologie</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Wenn bei deiner Abschlussarbeit, Masterarbeit, Hausarbeit oder Doktorabeit <strong>Qualität mehr zählt als Quantität</strong>, dann ist der AbbreViator (tm) für dich genau das richtige. Der AbbreViator (tm) ist für wissenschaftliche und nicht-wissenschaftliche Texte geeigent. Das Werkzeug ersetzt alle Wörter durch Abkürzungen und liefert dir dein komplettes Pamphlet zurück, dass inhaltlich nicht weniger wert ist, als das Original, dafür aber umso kompakter präsentiert werden kann. Natürlich erhälst du auch das passende Abkürzungsverzeichnis dazu, dass du deiner schriftlichen Arbeit dann anfügen kannst.<br>
Die Verwendung des AbbreViator (tm) ist kostenlos, um ein Verweis auf den Urheber (ich) wird freilich gebeten.<br>
Berichte mir gerne von deinen erfolgreichen Arbeiten und wie die geneigte Leserschaft sie aufgenommen haben. Hier geht es zum AbbreViator (tm):</p>
<p><a href="https://abbreviator.nickyreinert.de/"></a><a href="https://abbreviator.nickyreinert.de/">https://abbreviator.nickyreinert.de/</a></p>
<p><em>Viel Spass mit dem AbbreViator (tm) - in der Kürze steckt die Würze</em></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Textverarbeitung, Tool, Humor, Produktivität</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>AbbreViator (tm) - Lange Texte automatisch abkürzen - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tool_review</dc:type>
      
      
    </item><item>
      <title>Willkommen in Berlin</title>
      <link>http://localhost:1313/2018/2018-09-16-willkommen-in-berlin/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-09-16-willkommen-in-berlin/</guid>
      <description>[caption id=&ldquo;attachment_2143&rdquo; align=&ldquo;alignright&rdquo; width=&ldquo;150&rdquo;] Willkommen in Berlin[/caption]
Willkommen in Berlin ist ein …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine kurze Vorstellung und Promotion für das Buch &#39;Willkommen in Berlin&#39; des Autors. Der Artikel beschreibt das Buch als unterhaltsamen Wegweiser für Berlin-Besucher und -Bewohner und enthält Leserzitate, Links zu Interviews und einen Kauflink.</p>
          
          
          <p><strong>Hauptthemen:</strong> Bücher, Berlin, Reiseführer, Satire, Kultur</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>[caption id=&ldquo;attachment_2143&rdquo; align=&ldquo;alignright&rdquo; width=&ldquo;150&rdquo;]<a href="https://www.nickyreinert.de/files/willkommen-in-berlin/Willkommen-in-Berlin-Cover.jpg"><img src="/2018/2018-09-16-willkommen-in-berlin/images/Willkommen-in-Berlin-Cover-150x150.jpg" alt="Willkommen in Berlin Cover"></a> Willkommen in Berlin[/caption]</p>
<p>Willkommen in Berlin ist ein Buch. Mein Buch. Ein unterhaltsamer Wegweiser, nicht nur für Berliner. Ein Wegweiser, der auch irritierte Fremde an die Hand nimmt. Das Werk, teils Erlebnisbericht, teils Ratgeber, ist eine Hommage an Berlin, seine Touristen, Geschäftsreisende, Tagesbesucher, Zugezogene und Pendler. Willkommen in Berlin ist die perfekte Lektüre für zwischendurch. Willkommen in Berlin wird dir ein Lächeln auf dein Gesicht zaubern, du wirst in der S-Bahn sitzen, dich umschauen und zustimmend nicken.</p>
<p>Glückliche Leser meinen:</p>
<p><em>&ldquo;Sehr gut beobachtete Alltagssituationen [&hellip;] mit gesundem Humor&rdquo;</em></p>
<p><em>&quot;[&hellip;] perfekt für zwischendurch [&hellip;]&quot;</em></p>
<p><em>&quot;[&hellip;] eine abenteuerliche Reise durch den Alltag Berlins [&hellip;]&quot;</em></p>
<p><em>&ldquo;Alle Kapitel lesen sich mit angenehmer Leichtigkeit.&rdquo;</em></p>
<p>Auf <a href="https://www.velominate.de/neuigkeiten/buchvorstellung-willkommen-in-berlin/">velominate.de</a> habe ich ein etwas ernsteres Interview zum Thema Verkehr gegeben. Und das Online-Magazin <em>Mit Vergnügen Berlin</em> <a href="https://mitvergnuegen.com/2018/survival-of-the-fittest-dieses-buch-lehrt-dich-in-berlin-zu-ueberleben">hat das Buch im November gefeatured</a>. Also, sei kein Frosch. Kauf das Buch:</p>
<p><a href="https://amzn.to/2W28Gtq">Amazon (Werbe-Link)</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Buch, Berlin, Projekt, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Willkommen in Berlin - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>book_announcement</dc:type>
      
      
    </item>
  </channel>
</rss>