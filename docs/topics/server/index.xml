<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Server auf Nicky Reinert</title>
    <link>http://localhost:1313/topics/server/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Wed, 02 Apr 2025 12:19:31 +0100</lastBuildDate><atom:link href="http://localhost:1313/topics/server/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Die Nerd Enzyklopädie 47 - Die 500-Meilen-E-Mail</title>
      <link>http://localhost:1313/2025/2025-03-10-nerd-enzyklop%C3%A4die-47---die-500-meilen-e-mail/</link>
      <pubDate>Wed, 02 Apr 2025 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2025/2025-03-10-nerd-enzyklop%C3%A4die-47---die-500-meilen-e-mail/</guid>
      <description>Dieser Moment, in denen man an seiner Wahrnehmung zweifelt, weil ein Computer, der doch eigentlich nach den strengen Regeln der Logik arbeiten sollte, plötzlich …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 4 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Server, Ai, Security, Design</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Dieser Moment, in denen man an seiner Wahrnehmung zweifelt, weil ein Computer, der doch eigentlich nach den strengen Regeln der Logik arbeiten sollte, plötzlich Dinge tut, die gar nicht mehr so logisch erscheinen. Dieser Moment muss <strong>2002</strong> wohl auch <strong>Trey Harris</strong> ereilt haben (<a href="https://web.mit.edu/jemorris/humor/500-miles">MIT1</a>).</p>
<p>Harris, Mitglied der <strong>System Administrators Guild</strong> (SAGE), arbeitete als Admin für eine Universität in <strong>North Carolina</strong> und war dort für das E-Mail-System verantwortlich. Eines Tages rief ihn der Vorsitzende der Statistik-Abteilung an und behauptet, dass seine E-Mails nicht ankommen, sobald der Empfänger mehr als <strong>500 Meilen</strong> entfernt sei. Das Problem bestand offenbar schon ein paar Tage. Um es zu dokumentieren, hatte man auf einer Karte markiert, bei welchen Empfänger der E-Mail-Versand funktionierte. Und das funktioniere wohl nur bei Empfängern innerhalb eines 500-Meilen-Radius.</p>
<p>Harris war skeptisch und testete das System selbst. Er sendete einige Test-E-Mails unter anderem nach <strong>Richmond</strong>, <strong>Atlanta</strong> und <strong>Washington</strong> - alle Ziele befinden sich innerhalb des 500 Meilen Radius. Ohne Probleme. Und dann nach <strong>Memphis</strong> - <strong>600 Meilen</strong> Distanz. Die E-Mail ging nicht durch. <strong>Providence</strong>, 580 Meilen? Kein Erfolg. <strong>New York</strong>, 420 Meilen? Funktioniert.</p>
<p>Harris verglich die Konfigurationen des E-Mail-Servers mit anderen Systemen und fand keinerlei Auffälligkeiten. Zur weiteren Diagnose wählte er sich per Telnet auf den SMTP-Port des Servers ein. Der Server reagierte, wie erwartet mit dem <strong>SunOS Sendmail Logo</strong>. Und das führte Harris auf die richtige Fährte.</p>
<p>Der Vorsitzende der Statistik-Abteilung erwähnte zwar, dass vor ein paar Tagen ein Wartungs-Updates für des Betriebssystems installiert wurde. Angeblich betraf das aber nicht <strong>sendmail</strong>, welches Harris vor längerer Zeit in der <strong>Version 8</strong> installiert hatte. Das besagte Update von SunOS enthielt jedoch noch die alte <strong>Version 5</strong> von sendmail! Der E-Mail-Server wurde durch das Update des Betriebssystem auf eine alte Version zurückgesetzt. Die Konfigurations-Dateien, die Harris für die Version 8 angelegt hatte, waren allerdings noch vorhanden. Nur waren sie nicht mit Version 5 kompatibel. So wurde für einige wichtige Parametern von sendmail der <strong>Standard-Wert 0</strong> angenommen.</p>
<p>Einer dieser Parameter bezog sich auf das <strong>Timeout</strong> für die Verbindung zum externen SMTP-Server. Der Wert dafür betrug nun <strong>0 Sekunden</strong>.</p>
<p>Aber was hatte das zu bedeuten? Wenn sendmail versucht, eine Verbindung mit einem externen SMTP-Server aufzubauen, schickt es eine Anfrage in das Internet und  wartete dann auf die Antwort. Aufgrund der Auslastung des Systems brauchte sendmail einen Augenblick, um die Routine für die Verarbeitung der Antwort aufzurufen.</p>
<p>Harris fand heraus, das sendmail dafür etwa 3 Millisekunden benötigt. Eine Antwort, die nach 3 Millisekunden bei sendmail eintraf, wurde aufgrund des Timeouts als nicht erfolgreich gewertet.</p>
<p>Da die Universität über ein Glasfasernetz an das Internet angeschlossen war, gelang eine derartige Anfrage mit nahezu Lichtgeschwindigkeit nach draußen. Also fragte sich Harris, wie weit das Signal innerhalb von 3 Millisekunden kommen konnte. Er bemühte <strong>units</strong>, ein Kommandozeilen-Programm, um die Distanz auszurechnen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ units
</span></span><span class="line"><span class="ln">2</span><span class="cl">1311 units, 63 prefixes
</span></span><span class="line"><span class="ln">3</span><span class="cl">You have: 3 millilightseconds
</span></span><span class="line"><span class="ln">4</span><span class="cl">You want: miles
</span></span><span class="line"><span class="ln">5</span><span class="cl">* 558.84719
</span></span><span class="line"><span class="ln">6</span><span class="cl">/ 0.0017893979
</span></span></code></pre></div><p>*(Das <em>-Zeichen ist kein Operator, sondern zeigt das Ergebnis an.)</em></p>
<p>558 Meilen!  Harris hatte die Ursache für das seltsame Verhalten gefunden.</p>
<p>Harris räumte später ein, einige technische Details, auch aus dramaturgischen Gründen, nicht ganz exakt wiedergeben zu haben. So musste  auch die Antwort vom SMTP-Server innerhalb von 3 Sekunden wieder bei sendmail landen, womit sich die verfügbare Zeit eigentlich auf 1,5 Millisekunden halbiert. Das ändert aber nichts daran, dass das Zusammenspiel aus Timeout, Übertragungsgeschwindigkeit und Verzögerung bei der Verarbeitung dafür gesorgt haben, dass E-Mails nur in einem bestimmten Radius versendet werden konnten, nämlich circa 500 Meilen…</p>
<p>…but I would walk 500 miles, and I would walk 500 more…</p>
<p><img src="/2025/2025-03-10-nerd-enzyklop%C3%A4die-47---die-500-meilen-e-mail/image.png" alt="alt text"></p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 47 - Die 500-Meilen-E-Mail - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Über Agilität und Innovation</title>
      <link>http://localhost:1313/2025/2025-01-31-%C3%BCber-agilit%C3%A4t-und-innovation/</link>
      <pubDate>Fri, 31 Jan 2025 12:34:56 +0200</pubDate>
      <author></author>
      <guid>http://localhost:1313/2025/2025-01-31-%C3%BCber-agilit%C3%A4t-und-innovation/</guid>
      <description>Unter dem wichtigen Vorbehalt, dass meine Erkenntnisse auf Erfahrungen beruhen, die ich in meiner eigenen kleinen Blase gesammelt habe.
In den letzten Jahren …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>*Unter dem wichtigen Vorbehalt, dass meine Erkenntnisse auf Erfahrungen beruhen, die ich in meiner eigenen kleinen Blase gesammelt habe.*&#39; reading_time: 5 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Docker, Database, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><em>Unter dem wichtigen Vorbehalt, dass meine Erkenntnisse auf Erfahrungen beruhen, die ich in meiner eigenen kleinen Blase gesammelt habe.</em></p>
<p>In den letzten Jahren habe ich in und für die unterschiedlichsten Unternehmen gearbeitet, angefangen beim <strong>hemdsärmligen Mittelständler</strong>, über mehr oder weniger sortierte <strong>Startups</strong> bis hin zu großen <strong>Konzernen</strong> und <strong>Agenturen</strong>. Ich erwähne das nicht um zu flexen, sondern um die Bandbreite zu verdeutlichen, auf der meine folgenden Beobachtungen beruhen.</p>
<p>Je größer das Unternehmen, desto weniger ist es in der Lage, innovative Ideen zu entwickeln, zu realisieren, oder sich selber und die eigenen Prozesse zu optimieren. (Was keine allgemeingültige Aussage, aber sicher eine Tendenz ist.)</p>
<p>Woran liegt das? Ich habe bisher zwei wichtige Gründe dafür kennen gelernt:</p>
<h2 id="1-bürokratie-compliance--prozesse">1. Bürokratie, Compliance &amp; Prozesse</h2>
<p>Je größer das Unternehmen, desto weniger individuell sind die Prozesse. Mein Lieblingsbeispiel sind &ldquo;<strong>Code of Conduct</strong>&rdquo; Kurse. Diese behandeln in der Regel vier illustre Themenbereiche: <strong>Social Ethics</strong>, <strong>Business Ethics</strong>, <strong>Datenschutz</strong>, <strong>IT-Sicherheit</strong>. Gerne gesellen sich auch noch <strong>Erste-Hilfe</strong> und <strong>Brandschutz</strong> dazu. Inhaltlich ist an solchen Kursen nichts auszusetzen, jeder sollte sie einmal &ldquo;besucht&rdquo; haben. Aber die Inhalte sind oft sehr breit gefächert. So ist z.B. &ldquo;<strong>Bestechung</strong>&rdquo; ein beliebtes Thema, das aber zweifelsohne eine eingeschränkte Zielgruppe bedient. Ganz zu schweigen von der Wirkung: Wenn ich mich bestechen lassen will, hält mich der entsprechende Kurs sicherlich nicht davon ab.</p>
<p>Trotzdem muss sich ausnahmslos jeder damit beschäftigen. Auch die Teilnahme-Pflicht wird oft, wenn nicht immer, nach dem <strong>Gießkannenprinzip</strong> verteilt: Sie gehören zum <strong>On-Boarding</strong> dazu; müssen ein mal pro Jahr wiederholt werden. Wechselt man in eine andere Agentur, nimmt man erneut an derartigen Kursen teil. Wechselt man innerhalb der Agentur den Kunden, verlangt der neue Kunde die Teilnahme an seinen &ldquo;eigenen&rdquo; Kursen - die inhaltlich natürlich völlig identisch sind.</p>
<p>Die Folge: Frustration, Langeweile und <strong>unnötige Kosten</strong>. Die Reaktion der Unternehmen: Es wird <strong>viel Geld</strong> ausgegeben, um die Inhalte in &ldquo;moderne&rdquo; Formate zu packen, sie spielerisch oder in &ldquo;<strong>Bühnenstücken</strong>&rdquo; zu vermitteln.</p>
<p>Warum gibt es keinen <strong>Code of Conduct Führerschein</strong>, ein <strong>Zertifikat</strong>? Einen Test, der auf mein Fachgebiet zugeschnitten ist, den ich einmal jährlich durchführe und bei Bedarf vorzeigen kann!</p>
<p>Es sind aber auch die Prozesse im <strong>Daily Business</strong>, die Innovation im Keim ersticken. Ich war einmal für einen großen deutschen Arbeitgeber tätig und wir wollten einen Service aufsetzen, der den <strong>Import von CSV-Dateien</strong> vereinfacht. Technisch war das nicht weiter aufwendig, die Dateien waren klein, es ging nur um die Anpassung von Spaltennamen. Wir hätten dafür aber einen Dienst benötigt, also einen kleinen virtuellen Server oder <strong>Docker-Container</strong>, der im Hintergrund läuft. Es hat Monate gedauert, herauszufinden, welche Fachabteilung uns hier weiterhelfen könnte. Letztlich haben wir das Projekt unverrichteter Dinge stoppen müssen. Eine Hürde, die in einem Startup kaum denkbar wäre.</p>
<p>Auf Empfehlung bin ich vor kurzem über <a href="https://www.youtube.com/watch?v=pL3Yzjk5R4M">einen sehr schönen Vortrag</a> gestolpert, der das <strong>Skunk Works Prinzip</strong> erläutert, seine Herkunft und Wirkung. Die Idee dahinter ist, grob zusammengefasst: Ein kle<strong>ines Team von Experten</strong> arbeitet unabhängig und möglichst <strong>frei von Konzern-Zwängen</strong> an einem Projekt.</p>
<p><img src="/2025/2025-01-31-%C3%BCber-agilit%C3%A4t-und-innovation/skunk.png" alt="skunk"></p>
<p>Eine andere Lösung wäre, <strong>U-Boot- oder Pet-Projects</strong> nicht nur zuzulassen sondern auch mit der entsprechenden Infrastruktur aktiv zu fördern. Kurz nach meinem Studium, habe ich bei einem schon etwas größerem &ldquo;Start-Up&rdquo; gearbeitet und dort irgendwann eine technisch zwar simple Suchmaske implementiert, die die Arbeit im aber Team massiv erleichtert hat. Unnötig zu erwähnen, dass mein <strong>Team Lead</strong> nicht sehr glücklich über die &ldquo;falsch&rdquo; investierten Stunden war.</p>
<h2 id="2-turf-protection-betriebsblindheit">2. Turf Protection, Betriebsblindheit</h2>
<p>Das ist ein Phänomen, dass ich schon sehr oft beobachtet habe, ich nenne es das &ldquo;<strong>Falsche Gallische Dorf</strong>&rdquo;. Ein gallisches Dorf, dass sich gegen die <strong>Invasoren</strong> wehrt, kann eine gute Sache sein. Aber was, wenn es sich nicht um Invasoren sondern <strong>Innovatoren</strong> handelt? Neue Ideen werden entweder sehr schnell als <strong>negative Kritik</strong> an der bisherigen Qualität aufgefasst oder man hat schlicht Angst, seine <strong>etablierte Position</strong> zu verlieren. Ein gallisches Dorf, dass sich gegen jeglichen Einfluss von draußen auflehnt, hat sich vom Unternehmensziel entkoppelt.</p>
<p>Bestehende Lösungen werden ungern infrage gestellt. Das ist ein großes Problem, vor allem im technologisch Bereich, wo sich im <strong>Wochenrythmus</strong> neue Möglichkeiten ergeben. Drei Argumente müssen dann herhalten, um sich vor der drohenden <strike>Invasion</strike> <strong>Innovation</strong> zu schützen:</p>
<ol>
<li>Never change a running system.</li>
<li>Keine Kapazitäten.</li>
<li>Zu kompliziert.</li>
</ol>
<p>Ich will nicht sagen, dass das Motto &ldquo;<strong>Never change a running system</strong>&rdquo; grundlegend falsch ist. <span style="color:#99f;"><em>Man muss nicht auf jeden Zug aufspringen. Aber irgendwann ist auch der letzte Zug abgefahren</em>.</span> Und ehe man sich versieht, basiert die Lösung auf einer überholten technischen Plattform, die nicht mehr unterstützt wird oder niemand mehr beherrscht. Gerade die Software-Entwicklung krankt an diesem Phänomen: Ein Programm ist niemals fertig.</p>
<p>&ldquo;<strong>Keine Kapazitäten</strong>&rdquo; ist eine Ausrede, die das aktuelle, vielleicht noch nicht bekannte Problem, in die Zukunft verlagert, Aber diese Verlagerung ist nicht linear. Verlagert man <strong>zehn Jahre</strong> lang jede Anpassung in die Zukunft, verteilen sich diese nicht auf einen Zeitraum von <strong>zehn Jahren</strong> in der Zukunft. Sie sammeln sich an dem Zeitpunkt, an dem die Zukunft beginnt. Und das ist morgen.</p>
<p>&ldquo;<strong>Zu kompliziert</strong>&rdquo; ist ein Argument, <strong>dass sich selber aushebelt</strong>. Wenn Anpassungen an der gegenwärtigen Lösung zu kompliziert sind, sollten wir besser früher als später Zeit investieren. Denn auch daran krankt die Software-Entwicklung: Ein Programm wird nur selten mit der Zeit weniger komplex, eher ist das Gegenteil der Fall.</p>
<p>Die Kunst ist also eine agnostische Einstellung wenn es um Wandel geht, ohne sich ihm zu ergeben.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Über Agilität und Innovation - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 38 - Du Idiot</title>
      <link>http://localhost:1313/2023/2023-06-16-nerd-enzyklop%C3%A4die-38---du-idiot/</link>
      <pubDate>Fri, 16 Jun 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-06-16-nerd-enzyklop%C3%A4die-38---du-idiot/</guid>
      <description>
You fool. You absolute, unmitigated, unadulterated, complete and utter, fool” [GIST2]
Das ist die unverblümte, ungeschönte und zeitlose Reaktion von Robert J. …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&gt; You fool. You absolute, unmitigated, unadulterated, complete and utter, fool” [GIST2]. Das ist die unverblümte, ungeschönte und zeitlose Reaktion von Robert J.&#39; reading_time: 2 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Git, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="/2023/2023-06-16-nerd-enzyklop%C3%A4die-38---du-idiot/image1.png" alt=""></p>
<blockquote>
<p>You fool. You absolute, unmitigated, unadulterated, complete and utter, fool” [<a href="https://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f">GIST2</a>]</p></blockquote>
<p>Das ist die unverblümte, ungeschönte und zeitlose Reaktion von <strong>Robert J. Hansen</strong>, einem Entwickler von <strong>OpenPGP</strong>, nach einen Angriff auf das <strong>SKS - Netzwerk</strong>. Er richtet sich damit an diejenigen, die diesen Angriff zu verantworten haben.</p>
<p>Das SKS-Netzwerk (<strong>Synchronizing Key Server</strong>) speichert öffentliche Schlüssel, die sich z.B. für die vertrauenswürdige Kommunikation über E-Mail nutzen lassen. Die Server nutzen dazu eine in <strong>OCaml</strong> entwickelte Software, die von <strong>Yaron Minsky</strong> im Rahmen einer Doktorarbeit geschrieben wurde und eigentlich nur als <strong>Proof Of Concept</strong> gedacht war.</p>
<p>Die Programmiersprache ist nicht sehr weit verbreitet, die Software sehr komplex und damit nur schwer zu warten. Das System ist also weder für den produktiven Einsatz noch für hohe Belastungen ausgelegt — eben ein Proof Of Concept [<a href="https://securityaffairs.co/88071/hacking/poisoning-pgp-sks-key-network.html">SECU1</a>].</p>
<p>Und es gab Probleme, die schon seit Jahren bekannt waren. So durfte man beliebig viele, auch irrelevante, Informationen ungeprüft auf den Server laden, die dann nicht mehr gelöscht werden konnten.</p>
<p>Eine Software, die kaum gewartet und optimiert wird, die Teil einer kritischen Infrastruktur ist, mit bekannten Sicherheitslücken — was kann da schon schief gehen?</p>
<p>Das zeigte sich im <strong>Sommer 2019</strong>. Unbekannte nutzten die Schwachstelle aus und überfluteten die öffentlichen Schlüssel von <strong>Robert J. Hansen</strong> und <strong>Daniel Kahn Gillmor</strong>, ebenfalls Open-PGP Entwickler, mit Spam. So zwangen sie das veraltete System in die Knie und Programme, die darauf angewiesen waren, konnten nicht mehr verwendet werden [<strong>FIFT1</strong>]. Ein absehbarer Super-GAU, auf den Hansen in einem relativ langen, ikonischen Kommentar auf GitHub entsprechend ungehalten reagiert.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 38 - Du Idiot - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 34 - JavaScript wurde innerhalb von 10 Tagen entwickelt</title>
      <link>http://localhost:1313/2023/2023-06-04-nerd-enzyklop%C3%A4die-34---javascript-wurde-innerhalb-von-10-tagen-entwickelt/</link>
      <pubDate>Sun, 04 Jun 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-06-04-nerd-enzyklop%C3%A4die-34---javascript-wurde-innerhalb-von-10-tagen-entwickelt/</guid>
      <description>
JavaScript ist eine der am weitesten verbreiteten Programmiersprachen der Welt und für die Funktion und Popularität des WWW von großer Bedeutung. Während HTML …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>JavaScript ist eine der am weitesten verbreiteten Programmiersprachen der Welt und für die Funktion und Popularität des WWW von großer Bedeutung.&#39; reading_time: 3 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Database, Server, Mobile, Ai, Automation, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-06-04-nerd-enzyklop%C3%A4die-34---javascript-wurde-innerhalb-von-10-tagen-entwickelt/image1.png" alt=""></p>
<p><strong>JavaScript</strong> ist eine der am weitesten verbreiteten Programmiersprachen der Welt und für die Funktion und Popularität des <strong>WWW</strong> von großer Bedeutung. Während <strong>HTML</strong> die statische Darstellung von Inhalten im Browser ermöglicht, lassen sich dank JavaScript diese Inhalte dynamisch darstellen und modifizieren. JavaScript hat in den letzten Jahrzehnten eine beeindruckende Entwicklung hingelegt, angefangen als <strong>Script-Sprache</strong> innerhalb des Browsers bis hin zur Grundlage für eine leistungsfähige <strong>Webserver-Architektur</strong>.</p>
<p>Es gibt zahlreiche Anwendungsgebiete, sei es als Sprache innerhalb des Datenbanksystems <strong>MongoDB</strong>, für die Entwicklung von Spielen und Anwendungen oder als serverseitige Applikation [<a href="https://thenewstack.io/brendan-eich-on-creating-javascript-in-10-days-and-what-hed-do-differently-today/">THEN1</a>].</p>
<p>JavaScript ist extrem erfolgreich, vielseitig und beliebt. Und alles begann mit einer kleinen Sprache, die <strong>innerhalb von 10 Tagen</strong> entwickelt wurde!</p>
<p>Als das Web noch ganz jung war, wurden Seiten mit HTML dargestellt. HTML war relativ simpel und so musste man keine große Programmierer:in sein, um eigene Inhalte auf die Bühne des Webs zu hieven. Diese Einfachheit war ein wichtiger Erfolgsfaktor für das frühe World Weide Web.</p>
<p>Dank des plattformunabhängigen Browsers <strong>Netscape</strong> waren Webentwickler:innen in der Lage, ihre Programme unkompliziert für unterschiedliche Betriebssysteme zur Verfügung zu stellen. Was fehlte war die Möglichkeit mit den Inhalten zu interagieren. Netscape erkannt das Problem und betraute <strong>1995</strong> <strong>Brendan Eich</strong> mit wichtigen Aufgabe eine Lösung in Form einer entsprechenden Programmiersprache zu entwickeln.</p>
<blockquote>
<p>“But Marc Andreessen of Netscape, Bill Joy of Sun, and myself [Brendan Eich] and a few others saw that there was a need for a language that was approachable, that you could put directly in the web page,”<br>
Brendan Eich, InfoWorld, 2011</p></blockquote>
<p>Anfangs hieß es noch, dass die Programmiersprache <strong>Scheme</strong> als Grundlage dienen könnte. Dann wurde <strong>Java</strong> in Betracht gezogen und so verhandelte Netscape mit <strong>Sun Microsystems</strong>, um Java im hauseigenen Browser zu unterstützen. Aber Java (damals noch <strong>Oak</strong> genannt) war groß und komplex. Sollte die Webentwicklung weiterhin zugänglich sein, war Java nicht die beste Wahl. Es musste eine einfache Lösung her, ähnlich wie <strong>Microsofts</strong> <strong>VisualBasic</strong>, das als Einstiegs-Alternative für <strong>C</strong> oder <strong>C++</strong> galt.</p>
<p>Und so kam es, dass Eich im <strong>Mai 1995</strong> innerhalb von <strong>10 Tagen</strong> einen ersten funktionsfähigen Prototypen von JavaScript entwickelte, da noch unter dem Namen <strong>Mocha</strong>. Mocha wurde erstmal mit dem Netscape Navigator 2.0 vorgestellt. Im <strong>September 1995</strong> änderte man den Namen zu **LiveScript **— Live klang aus Marketingsicht dynamischer. Außerdem hatte Eich die Zeit genutzt, um einen Großteil des Codes aufzuräumen; zehn Tage sind erwartungsgemäß sehr knapp, um eine gewisse Codequalität zu erhalten.</p>
<p>Im <strong>Dezember 1995</strong> wurde dann der Name JavaScript eingeführt, um die Bedeutung als einfache Alternative zu Java zu unterstreichen und sicherlich auch um ein wenig von Javas Popularität zu profitieren. Intern wird die JavaScript-Engine bis heute als <strong>SpiderMonkey</strong> bezeichnet.</p>
<p>Der große Konkurrent auf dem Browser-Markt, <strong>Microsoft</strong>, ließ nicht lange auf sich warten. Im <strong>August 1996</strong> zog man nach und implementierte seine eigene JavaScript-Engine im Internet Explorer: <strong>JScript</strong>. Da man damals aber noch nicht soviel von Standards hielt, war JScript nur bedingt kompatibel zu SpiderMonkey. Nur eine Folge des Browser-Krieges, die in den folgenden Jahren vielen Web-Entwickler:innen Kopfschmerzen und schlaflose Nächte bereiten sollte.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 34 - JavaScript wurde innerhalb von 10 Tagen entwickelt - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie - Computer sind nicht pünktlich</title>
      <link>http://localhost:1313/2022/2022-01-30-die-nerd-enzyklop%C3%A4die/</link>
      <pubDate>Mon, 30 Jan 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2022/2022-01-30-die-nerd-enzyklop%C3%A4die/</guid>
      <description>Es war einmal im Jahr 2000 und 23… Computer sind nicht nur notorisch unpünktlich, sie haben grundsätzliche ein Problem mit “Zeit”. Aber warum? Es ist die Art, …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Es war einmal im Jahr 2000 und 23…. Computer sind nicht nur notorisch unpünktlich, sie haben grundsätzliche ein Problem mit “Zeit”. Aber warum. Es ist die Art, wie Computer Zeit messen bzw.&#39; reading_time: 8 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Git, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> expert</p>
          
        </div>
        
        
        <h2 id="es-war-einmal-im-jahr-2000-und-23">Es war einmal im Jahr 2000 und 23…</h2>
<p>Computer sind nicht nur notorisch unpünktlich, sie haben grundsätzliche ein Problem mit “Zeit”. Aber warum? Es ist die Art, wie Computer Zeit messen bzw. Zeitangaben verarbeiten. Stell dir vor, du könntest bis 2.000 zählen. Welches Jahr haben wir jetzt? 2000… und 23? Gesprochen klingt das noch ganz gut, aber spätestens beim Aufschreiben wird es unübersichtlich. Bei Computern ist es noch etwas komplizierter.</p>
<h2 id="the-epoch">The Epoch</h2>
<p>Schauen wir uns mal „The Epoch“ oder auch die „Unixzeit“ an. Damit wird das Startdatum der Zeitrechnung der meisten Computer bezeichnet: Der 1. Januar 1970.</p>
<p>Ursprünglich wählte man als Beginn der Zeitrechnung den 1. Januar 1971. Die Zeit sollte durch einen Zähler repräsentiert werden, der an diesem Tag bei 0 beginnt und dann in regelmäßigen Abständen (Takten) um 1 erhöht wird. Die eingebaute Uhr der damaligen Computer bot sich als Taktgeber an. Sie arbeitete mit einer Frequenz von 60 Hz, also 60 Takten pro Sekunde. Das entspricht nicht nur zufällig der Frequenz der Stromnetze in Nordamerika. Der Zeitzähler wurde also 60 mal pro Sekunde erhöht bzw. jede Sekunde um den Wert 60.</p>
<p>Die Obergrenze von 4.294.967.295 ergibt sich aus der Größe einer einzelnen Speicherstelle: 32 Bit . Wenn man am 1. Januar 1971 bei 0 anfängt zu zählen indem man 60 mal pro Sekunde 1 dazu addiert, erreicht man die 32 Bit-Grenze nach 71.582.788 Sekunden. Das entspricht 1.193.046 Minuten, 19.884 Stunden oder in etwa 2,5 Jahre. Man hätte die Zeit also damals schon nur bis 1973 messen können — ein Bug, der bereits bei der Beschreibung des entsprechenden Datentyps bekannt war:</p>
<p><img src="/2022/2022-01-30-die-nerd-enzyklop%C3%A4die/image.png" alt=""></p>
<p>Quelle: Unix Programmer’s Manual, System calls, Teil 2 (Bell Labs, 3.11.1971, Seite 13) [<a href="https://www.bell-labs.com/usr/dmr/www/pdfs/man22.pdf">BELL</a>]</p>
<p>Also änderte man kurze Zeit später die Zählfrequenz auf 1 Sekunde und setzte das Startdatum auf den 01.01.1970. Gleichzeit entschied man sich aber auch für einen “vorzeichenbehafteten“ Zähler, ein sogenannter „signed integer”: Das erste der 32 Bit wird als Vorzeichen verwendet. Ist es auf 1 gesetzt, interpretiert der Computer die gesamte Zahl als negativ. So ist man in der Lage, die Zeit auch rückwärts zu erfassen.</p>
<p>Da nun nur noch 31 Bit zur Verfügung stehen, reduzierte sich die Obergrenze für die Zeitzählung auf 2.147.483.647. Mit der außerdem angepassten Zählfrequenz von 1 Sekunde war der Computer in der Lage 68 Jahre lang die die Zeit sekundengenau zu messen. Das neue Enddatum für die Zeitrechnung ist damit der 19. Januar 2038. An diesem Dienstag um 3 Uhr nachts, 14 Minuten und 7 Sekunden mitteleuropäischer Zeit wird der Zähler den Wert 2³¹ erreichen. In binärer Schreibweise sehen die 3 Sekunden um diesen Zeitpunkt herum so aus:</p>
<pre><code>Dienstag, 19. Januar 2038 04:14:07:   
01111111111111111111111111111111 (dezimal: 2147483647)  
Dienstag, 19. Januar 2038 04:14:08:   
10000000000000000000000000000000 (dezimal: 2147483648)  
Dienstag, 19. Januar 2038 04:14:09:   
10000000000000000000000000000001 (dezimal: 2147483649)
</code></pre>
<h2 id="es-war-einmal-in-1901">Es war einmal in 1901…</h2>
<p>Das erste Bit, das Vorzeichen-Bit, ist ab dann auf 1 gesetzt. Der Wert der restlichen 31 Bit wird als negativ interpretiert. Um 04:14:09 liest der Computer also -1. Und zieht damit eine Sekunde vom Startdatum “The Epoch” ab: Das Datum errechnet sich dann aus 1. Januar 1970, 00:00 Uhr minus 1 Sekunde, 2 Sekunden und so weiter. 68 Jahre lang, bis zum Freitag, den 13. Dezember 1901, 20:45:52 (in der Realität irgendwann in 2106). Die iterierte Quersumme dieser Uhrzeit ist übrigens die 9, die göttliche Zahl. Mythischer kann ein Bug wohl kaum sein.</p>
<h2 id="apokalypse">Apokalypse!</h2>
<p>Doch damit ist es noch nicht getan. Du erinnerst dich vielleicht an die Panik kurz vor der Jahrtausendwende? Man nahm an, dass Computer, die ja gerade erst anfingen unsere Alltagsroutinen zu optimieren, den Wechsel in das Jahr 2000 nicht vertragen würden. Aus zwei Gründen:</p>
<p>Erstens war es üblich die Jahreszahl verkürzt darzustellen, um Speicherplatz zu sparen und vielleicht auch aus analoger Bequemlichkeit. Anstatt 1986 erfasste man also nur die 86. Mit dem Wechsel in das Jahr 2000 war dann aber nicht mehr so ganz klar, worauf sich z.B. die Angabe 00 beziehen würde — auf das Jahr 1900 oder 2000?</p>
<p>Die zweite Ursache ergibt sich aus der Berechnung der Schaltjahre. Dass ein Schaltjahr durch vier teilbar ist, dürfte landläufig bekannt sein. Es gibt aber außerdem die Regel, dass ein Jahr, welches durch 100 teilbar ist, kein Schaltjahr ist. Und das ist noch nicht alles: Ist das Jahr außerdem durch 400 teilbar, ist es eben doch ein Schaltjahr. Zwei Regeln, die nicht sonderlich weit verbreitet waren und vermutlich immer noch nicht sind. Excel denkt selbst in 2022 noch, dass das Jahr 1900 ein Schaltjahr sei. Bug-Alarm! [<a href="https://learn.microsoft.com/en-us/office/troubleshoot/excel/wrongly-assumes-1900-is-leap-year">MICR1</a>]</p>
<p>Die Abhängigkeit von den Computern war seinerzeit vielleicht noch nicht so weit gediehen wie heute. Trotzdem vertrauten Versicherungen, Fluggesellschaften und Krankenkassen auf die „elektronische Datenverarbeitung“ (bei den öffentlichen Behörden lässt das papierlose Büro zum Glück noch eine Weile auf sich warten). Man erwartet also nichts geringeres als: Die Apokalypse!</p>
<p>Die US-Regierung rechnete mit Kosten zwischen 400 Millionen und 600 Millarden USD [<a href="https://www.congress.gov/105/crpt/hrpt827/CRPT-105hrpt827.pdf">CON1</a>]. Bei einem verfügbaren Haushaltsbudget von 3,4 Billionen USD (1999) nicht gerade ein Pappenstiel. Letztlich beliefen sich die Kosten für die Vorbereitungen auf immer noch erstaunliche 300 Mrd. USD [<a href="http://news.bbc.co.uk/2/hi/talking_point/586938">BBC1</a>] und noch mal 308 Mrd. USD für die Beseitigung der Schäden [<a href="https://www.computerworld.com/article/2522197/y2k--the-good--the-bad-and-the-crazy.html">COMP1</a>] — weltweit.</p>
<p>Trotz aller Sorgen sind wir recht glimpflich davon gekommen, nicht zuletzt aufgrund der immensen Anstrengungen, die Systeme und die Software mit Updates auf den Jahreswechsel vorzubereiten.</p>
<p>Ganz ohne Problem ging der Jahreswechseln jedoch nicht an uns vorüber. In Singapur versagten Taxameter ihren Dienst [<a href="https://money.cnn.com/1999/01/12/technology/y2k_moneyline/">MONEY1</a>], in Australien fielen Fahrscheinautomaten aus. In den USA funktionierten einige Lotterie-Maschinen nicht mehr und in Frankreich wurde die Wettervorhersage für den 01.01.1900 angezeigt [<a href="http://news.bbc.co.uk/2/hi/science/nature/586620.stm">BBC2</a>].</p>
<h2 id="es-war-einmal-in-1975">Es war einmal… in 1975…</h2>
<p>Das (vermutlich) erste Problem mit der Verarbeitung von Datumsangaben geht übrigens auf das Jahr 1964 zurück. Die Zeitrechnung des DEC PDP-10 — ein recht populärer Computer zu dieser Zeit — begann am 1. Januar 1964. Dem PDP-10 standen aber nur 12 Bit zur Verfügung. Auch wenn es nur um die taggenaue Zeitrechnung ging, endete sie aus oben genannten Gründen für den PDP-10 am 4. Januar 1975: mit 12 Bit lassen sich 4.095 Tage zählen [<a href="http://catless.ncl.ac.uk/Risks/4.45.html">CATL1</a>].</p>
<h2 id="und-2010">…und 2010…</h2>
<p>2010 führte ein Problem mit der Verarbeitung von Datumsangaben dazu, dass in Deutschland mehr als 30 Mio. Bankkarten unbrauchbar wurden [<a href="https://www.spiegel.de/wirtschaft/unternehmen/kartenpanne-franzoesische-firma-schuld-an-2010-fehler-a-670400.html">SPON1</a>].<br>
Exchange, der E-Mail-Server von Microsoft, hatte beim Übergang in das Jahr 2022 ein Problem: Hier wurden Uhrzeit und Tag schlicht zusammengesetzt: Aus dem 1. Februar 2022 12:34 Uhr wurde 2201021234 — zu groß für einen vorzeichenbehafteten 32 Bit Integer [<a href="https://www.golem.de/news/e-mail-server-microsoft-behebt-exchange-y2k22-fehler-2201-162124.html">GOLEM1</a>].</p>
<h2 id="und-es-wird-einmal-sein-in-292277026596">Und es wird einmal sein in 292.277.026.596…</h2>
<p>Und auch in der fernen Zukunft werden wir immer wieder mit den Grenzen der „modernen“ Informationstechnologie konfrontiert, seien es die Jahre 2040, 2080, 2137 und so weiter [<a href="https://en.wikipedia.org/wiki/Time_formatting_and_storage_bugs">WIKI1</a>]. Das Jahr 10.000 ist das erste fünfstellige Jahr. Das stellt die bis gewohnte 4-stellige Schreibweise für Jahre vor ein Problem. Das Jahr 30.828 wird von Windows nicht als Systemdatum akzeptiert und selbst im Jahr 292.277.026.596, wenn weder Erde noch Sonne und vielleicht nicht einmal das Universum existieren, an einem bitterkalten Winter-Sonntag, dem 4. Dezember, zur besten Kaffee- und Kuchenzeit vor dem Kamin, um 15.30 Uhr und 8 Sekunden, werden auch die heute üblichen 64 Bit Computer ihren Dienst versagen. Aus oben erklärten Gründen.</p>
<h2 id="die-schaltsekunde">Die Schaltsekunde</h2>
<p>Als wäre die Verarbeitung Zeitangaben und Schaltjahre nicht schon Herausforderung genug: Die Rotation der Erde um ihre eigene Achse dauert nicht immer exakt 24 Stunden. Sie ist in der Regel langsamer, in 2020 war sie sogar schneller. Die kaum berühmte aber dennoch berüchtigte Schaltsekunde!</p>
<p>Seit Beginn der „Computerzeitrechnung“ in 1972 (dort wurde ja erst „The Epoch„ definiert) sind hier bereits 37 Sekunden fällig geworden [<a href="https://de.wikipedia.org/wiki/Schaltsekunde">WIKI2</a>]. Nur: Die Geschwindigkeit der Erde unterliegt „nichtperiodischen Schwankungen“. Wir können heute also noch nicht sagen, wieviele Schaltsekunden bis 2.100 anfallen werden. Das macht jede Kalendererinnerung für die Zukunft sehr unzuverlässig. Computer sind unpünktlich</p>
<h2 id="unwahrheiten">Unwahrheiten</h2>
<p>Das Thema “Zeitrechnung“ ist von zahlreichen Missverständnisse geprägt und diese Lanze muss man für die Computer dann doch brechen: Das Problem sitzt nicht zuletzt vor dem Monitor. Und deswegen haben sich fleißige Entickler<em>innen und Expert</em>innen die Mühe gemacht, die Probleme mit der Verarbeitung von Daten und Zeiten in einem Gist zu sammeln: [<a href="https://gist.github.com/timvisee/fcda9bbdff88d45cc9061606b4b923ca">GIST1</a>].</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie - Computer sind nicht pünktlich - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Wie funktionieren Dateirechte?</title>
      <link>http://localhost:1313/2020/2020-11-05-wie-funktionieren-dateirechte/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-11-05-wie-funktionieren-dateirechte/</guid>
      <description>Die korrekten Dateirechte sollten eine wichtige Rolle spielen, wenn du an einem Sicherheitskonzept für deine Webseite bzw. Wordpress arbeitest. Leider wird das …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Die korrekten Dateirechte sollten eine wichtige Rolle spielen, wenn du an einem Sicherheitskonzept für deine Webseite bzw. Wordpress arbeitest.&#39; reading_time: 15 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Database, Server, Ai, Automation</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Die korrekten <strong>Dateirechte</strong> sollten eine wichtige Rolle spielen, wenn du an einem Sicherheitskonzept für deine Webseite bzw. Wordpress arbeitest. Leider wird das Thema Dateirechte oft stiefmütterlich behandelt, nicht zuletzt weil es fälschlicherweise als zu kompliziert angesehen wird. Dabei muss es das gar nicht sein: Das Grundprinzip ist einfach: Du willst nicht, dass jedermann Dateien <strong>ändern</strong>, <strong>ausführen</strong> oder <strong>lesen</strong> kann. Sicherlich gibt es feine Abstufungen. und genau die möchte ich hier erklären.</p>
<p>Achtung: Das Ziel dieses Beitrags ist nicht, dir eine fertige Lösung für deine WordPress-Installation bzw. dein Projekt zu geben. Das ist nicht möglich. Warum? Es gibt zig unterschiedliche Konfigurationen. Es mag allgemeingültige Lösungen geben, diese sind aber bei weitem nicht sicher. Stichwort: chmod 777 * -R</p>
<p>Du solltest nach der Lektüre aber das Konzept verstehen und vielleicht sogar in der Lage sein, die Dateirechte selbstständig zu setzen.</p>
<h2 id="die-grundlagen-wie-verarbeitet-ein-web-server-anfragen">Die Grundlagen: Wie verarbeitet ein Web-Server Anfragen?</h2>
<p>Jetzt fragst du dich sicherlich, was das mit Dateirechten zu tun hat? Was passiert, wenn du auf einer Webseite surfst? Folgende Vereinfachung dürfte das konzept hilfreich beschreibe: Der Web-Server schickt eine Datei an deinen Browser. Und du kannst Dateien an den Web-Server schicken, sprich hochladen. Wer also verstehen will, wie Dateirechte gesetzt werden müssen, sollte das Grundkonzept eines Servers verstehen.</p>
<p>Wie sieht diese Kommunikation mit dem Server also im Detail aus? Du schickst über deinen Browser eine Anfrage (<a href="https://nickyreinert.de/index.html">http://nickyreinert.de/index.html</a>) an den Server (was auch nur irgendein anderer Computer auf der Welt ist, egal ob in der Cloud oder in einem Keller). Auf dem Server laufen verschiedene Dienste - die verwirrenderweise auch als Server bezeichnet werden.</p>
<p><img src="https://pbs.twimg.com/media/D864DxrWsAAmvXi?format=png&amp;name=small" alt="Bild"></p>
<p>Die Cloud ist auch nur der Computer von jemand anders</p>
<p>Einer dieser Dienste ist der <strong><a href="https://de.wikipedia.org/wiki/Internetdienst#Die_Internetdienste_im_Einzelnen">HTTP-Dienst</a></strong>. Sehr verbreitet sind <strong>Apache2</strong> und <strong>nginx</strong>. Das Konzept ist bei beiden gleich: Sie empfangen deine Anfrage und schicken dir eine Antwort. Bei dieser Antwort unterscheidet man grob zwischen <strong>statische Inhalten</strong> (HTML-Datei, Texte, Bilder, &hellip;), die der <strong>HTTP-Dienst</strong> direkt zurückschickt und <strong>dynamischen Inhalten</strong>. Dynamische Inhalte müssen auf dem Server erst verarbeitet werden, wie z.B. Datenbankabfragen oder ganz simpel die Darstellung der aktuellen Uhrzeit: <a href="https://nickyreinert.de/dynamisch.php">https://nickyreinert.de/dynamisch.php</a>. Das ermöglicht ein <strong>PHP-Dienst</strong> bzw. <strong>PHP-Interpreter</strong>.</p>
<p>Im Kontext der Dateirechte muss man hier eine wichtige Unterscheidung treffen: Der PHP-Interpreter ist entweder Teil des HTTP-Dienstes (<strong>PHP-Modul</strong>). Damit ist z.B. <strong>Apache2</strong> in der Lage, die PHP-Datei quasi selber zu interpretieren, und den dynamischen Inhalt für die Antwort zu erzeugen. Oder der PHP-Dienst ist ein getrennt laufender Dienst bzw. Prozess, der über eine Schnittstelle (CGI) vom HTTP-Dienst angesprochen wird (<a href="http://www.php-faq.de/q/q-php-cgi-vs-modul.html">mehr dazu hier</a>).</p>
<p>Um Informationen auf dem Server zu speichern, gibt es zwei Möglichkeiten: Zum einen wäre da die Datenbank, wie z.B. <strong>MySQL</strong> oder <strong>MariaDB</strong>. Der PHP-Dienst nutzt die Datenbank, um Informationen abzulegen, die in der Regel volatil sind. Wie z.B. Kommentare oder Texte für deinen Blog. Und es gibt das <strong>Dateisystem</strong>. Ganz banal ausgedrückt ist das die Festplatte des Servers. Und genau dort brauchst du Dateirechte. Die folgende Abbildung zeigt die beiden oben erwähnten Konfigurationen: In der ersten Konfiguration sind HTTP- und PHP-Dienst getrennte Dienste, in der zweiten Konfiguration nutzt der HTTP-Dienst PHP als integriertes Modul.</p>
<p>Die Abbildung zeigt außerdem ein beispielhaftes Dateisystem mit einigen ausgewählten Dateien und Ordnern, die dir von WordPress bekannt vorkommen dürften.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/Folie1.png"><img src="/2020/2020-11-05-wie-funktionieren-dateirechte/images/Folie1-700x394.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/Folie2.png"><img src="/2020/2020-11-05-wie-funktionieren-dateirechte/images/Folie2-700x394.png" alt=""></a></p>
</li>
</ul>
<p>Der vierte Dienst im Bunde ist übrigens der <strong>FTP-Dienst</strong>. Dieser ermöglicht es (in der Regel dem Web-Entwickler) sich per <strong>FTP</strong> auf den Server zu verbinden und Dateien über einen FTP-Client hochzuladen, zu bearbeiten oder zu löschen.</p>
<h2 id="lesen-schreiben-ausführen---was-bedeutet-das-eigentlich">Lesen, Schreiben, Ausführen - Was bedeutet das eigentlich?</h2>
<p>Wenn es um die Fähigkeit &ldquo;Ausführen&rdquo; geht, muss man streng zwischen Ordnern und Dateien unterscheiden. Das <strong>Ausführen</strong> von Dateien, egal welche Endung sie haben, ist in <strong>keiner Konfiguration notwendig</strong>! Das Ausführen von Ordern hingegen ermöglicht den Zugriff auf den Ordner. Jeder Ordner deiner WordPress-Installation darf also ausführbar sein.</p>
<p>Das <strong>Lesen</strong> eines Ordners ermöglicht einem Dienst, die Ordner-Inhalte aufzulisten. Das Lesen einer Datei ermöglicht einem Dienst den Inhalt einer Datei darzustellen. Und das ist bereits ein sicherheitskritisches Merkmal: Nicht jeder Dienst muss bzw. darf jede Datei lesen. Der HTTP-Dienst benötigt z.B. keinen lesenden Zugriff auf PHP-Dateien. Und erst Recht nicht auf z.B. die wp-config.php - in der sich ja das Passwort für die Datenbank befindet. Der HTTP-Dienst reicht die Anfrage für die dynamische PHP-Datei in der Regel an den PHP-Dienst weiter. Gleichwohl muss der HTTP-Dienst statische Inhalte lesen können. Vor allem bei den Leserechten gibt es also sehr viele Feinheiten zu beachten.</p>
<p>Wer <strong>Schreibrechte</strong> für einen Ordner hat, kann darin Dateien anlegen bzw. den Ordner löschen oder umbenennen. Das Schreibrecht für eine Datei ermöglicht das Löschen der Datei und das Ändern der Inhalte. Grundsätzlich sollte kein Dienst Schreibrechte im Dateisystem besitzen. So vermeidet man z.B., dass jemand Schadcode in eine PHP-Datei einfügt. Der PHP-Dienst kann Informationen in der Datenbank ablegen und für den HTTP-Dienst gibt es erstmal keinen Grund, überhaupt Dateien ändern oder anlegen zu müssen.</p>
<p>Natürlich gibt es Ausnahmen. Z.B. benötigt der PHP-Dienst Schreibrechte, wenn Dateien von WordPress oder der Plugins aktualisiert werden müssen. Oder ein Nutzer Dateien hochladen möchte (Hier kommt übrigens eine andere wichtige Sicherheitseinstellung zum Tragen: Man kann unterbinden, dass der PHP-Dienst Dateien aus dem Upload-Ordner als PHP-Dateien verarbeitet.)</p>
<p>Wie wir diese Dateirechte setzen, dazu gleich mehr.</p>
<h2 id="besitzrechte-einer-datei">Besitzrechte einer Datei</h2>
<p>Vorher schauen wir uns noch die Besitzverhältnisse von Dateien und Ordnern an. Diese lassen sich einem <strong>Besitzer</strong> und einer <strong>Gruppe</strong> zuordnen. Jeder der oben genannten Dienste kann, ganz abstrakt betracht, als <strong><em>Nutzer</em></strong> verstanden werden. Und damit entweder <strong>direkt Besitzer</strong> einer Datei oder eines Ordners sein. Oder <strong>indirekt</strong>, über die <strong>Gruppenzugehörigkeit</strong>.</p>
<p>Eine Datei gehört also zu einem Besitzer und zu einer Gruppe von Besitzern. Der Besitzer muss nicht zwingend Teil der Gruppe sein. Der <strong>Besitzer</strong> kann bestimmte Rechte für diese Datei besitzen, wie z.B. <strong>Lesen</strong> und <strong>Schreiben</strong>. Einer <strong>Gruppe</strong> von Besitzern werden auch individuelle Rechte zugesprochen, wie z.B. nur das <strong>Lesen</strong>. Und dann gibt es noch &ldquo;<strong>alle anderen</strong>&rdquo;, die vielleicht gar <strong>keine Zugriffsrechte</strong> auf eine Datei haben. Am Beispiel von <strong>index.html</strong> sieht das folgendermaßen aus:</p>
<p><em>index.html:</em></p>
<ul>
<li><strong>Besitzer</strong>: FTP-Dienst, darf lesen und schreiben,</li>
<li><strong>Gruppe</strong>: WWW-Data, darf lesen,</li>
<li><strong>alle andern</strong>: keine Rechte</li>
</ul>
<p>Und das enstpricht auch schon der klassischen Rechtevergabe von Dateien. Schreibrechte werden nur dem Besitzer eingeräumt. Die Gruppe darf bestenfalls lesen. Natürlich gibt es Sonderfälle, wie das Aktualisieren von WordPress oder von Plugins, dazu später mehr.</p>
<h2 id="wie-funktionieren-chown-und-chmod">Wie funktionieren chown und chmod?</h2>
<p>Du wirst es sicher schon mal gehört haben: Dateirechte werden mit <strong>chown</strong> und <strong>chmod</strong> konfiguriert. chown steht für &ldquo;change owner&rdquo; - also &ldquo;ändere den Besitzer&rdquo; und chmod für &ldquo;change mode&rdquo;, &ldquo;ändere den Modus&rdquo;.</p>
<p>Zu Demonstrationszwecken gehen wir von der folgenden Konfiguration aus, die zwar bei weitem nicht die sicherste, dafür aber weit verbreitet ist:</p>
<p>Die <em>Nutzer</em> für den PHP- und HTTP-Dienst sind in der Gruppe <strong>www-data</strong> zusammengefasst. Daneben gibt es den FTP-Dienst (<strong>ftp-user</strong>).</p>
<p><strong>Ftp-user</strong> bekommt alle Rechte: Lesen, Schreiben, usw. Die Nutzer der Gruppe <strong>www-data</strong> bekommen nur lesenden Zugriff - vorerst!</p>
<p>Jede Datei und jeder Ordner sollen dem <strong>ftp-user</strong> gehören, gleichzeitig aber auch zur Gruppe <strong>www-data</strong>. Das lässt sich mit <strong>chown</strong> folgendermaßen bewerkstelligen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">chown</span> <span class="n">ftp</span><span class="o">-</span><span class="n">user</span><span class="p">:</span><span class="n">www</span><span class="o">-</span><span class="n">data</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">www</span><span class="o">/*</span> <span class="o">--</span><span class="n">recursive</span>
</span></span></code></pre></div><p>Der erste Parameter definiert den Besitzer (ftp-user) und die Gruppenzugehörigkeit (www-data), immer getrent mit einem Doppelpunkt. Danach folgt der betroffene Ordner bzw. die Datei. Mit <strong>--recursive</strong> (oder kürzer <strong>-R</strong>) werden auch alle Unterordner und darin befindlichen Dateien angesprochen.</p>
<p>Bei den Dateirechten wird es etwas aufwendiger, zunächst der Aufruf:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">chmod</span> <span class="mi">640</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">www</span><span class="o">/*</span> <span class="o">-</span><span class="n">R</span>
</span></span></code></pre></div><p>Hier nutzen wir die Kurzschreibweise -R um alle Dateien und Ordner rekursiv zu ändern. Wichtig ist für uns die Ziffer hinter chmod: 640. Genau genommen handelt es sich um drei (oktale) Ziffern, nämlich 6, 4 und 0. Entsprechend der Position regeln sie die Zugriffsrechte für den</p>
<ul>
<li><strong>Besitzer</strong> (ftp-user, die 6 an erster Stelle),</li>
<li>die <strong>Gruppe</strong> (www-data) samt ihrer Mitglieder (HTTP-Dienst, die 4 an zweiter Stelle)</li>
<li>und an letzter Stelle alle anderen (<strong>others</strong> - die 0).</li>
</ul>
<p>Und wie entstehen die Ziffern 6, 4 und 0? Wir erinnern uns an die drei Zugriffsrechte:</p>
<ul>
<li>lesen,</li>
<li>schreiben sowie</li>
<li>ausführen.</li>
</ul>
<p>Jedes Recht besitzt einen Wert:</p>
<ul>
<li>Lesen (bzw. r für read) = 4</li>
<li>Schreiben (bzw. w für write) = 2</li>
<li>Ausführen (bzw. x für eXecute) = 1</li>
<li>Kein Recht = 0</li>
</ul>
<p><a href="https://www.nickyreinert.de/files/2227/berechnung-der-Dateirechte-fu%CC%88r-chmod.png"><img src="images/berechnung-der-Dateirechte-fu%CC%88r-chmod-300x167.png" alt="Die Berechnung der Dateirechte für chmod"></a></p>
<p>Die Berechnung der Dateirechte für chmod</p>
<p>Um Rechte zu kombinieren, bildet man deren Summe. Will man also alle Rechte vergeben, erechnet sich das folgendermaßen:</p>
<ul>
<li>Lesen + Schreiben + Ausführen = 4 + 2+ 1 = 7</li>
</ul>
<p>Nur Lese- und Schreibzugriff errechnet sich demnach so:</p>
<ul>
<li>Lesen + Schreiben = 6</li>
</ul>
<p>Die obene genannte chmod-Anweisung setzt also die folgenden Rechte um:</p>
<ul>
<li>Besitzer (ftp-user): 6 (Lesen, Schreiben)</li>
<li>Gruppe (www-data): 4 (Lesen)</li>
<li>Alle anderen (others): 0 (keine Rechte)</li>
</ul>
<p>Was heißt das? Der FTP-Nutzer darf als Besitzer alles: Dateien hochladen, löschen, bearbeiten usw. Jedes Mitglied der Gruppe www-data darf Dateien nur lesen. Jeder andere Nutzer (bzw. Dienst) darf gar nicht auf die Dateien in deinem WordPress-Projekt zugreifen. Das klingt sehr sicher, führt allerdings zu einem Problem: Dein Server dürfte so nicht funktionieren. Nimm als Beispiel diesen Aufruf: <a href="https://nickyreinert.de/ordner/">https://nickyreinert.de/ordner/</a></p>
<p>Die HTTP-Fehlermeldung <strong>403 Forbidden</strong> erscheint. Das sind die Zugriffsrechte für den Ordner, so wie wir sie eben gesetzt haben:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">drw-r----- 2 ftp-user www-data   4096 Okt 14 11:48 ordner/
</span></span></code></pre></div><p>In der zweiten Spalte sehen wir: Der Ordner gehört <strong>ftp-user</strong> und der Gruppe <strong>www-data</strong>.</p>
<p>Das <strong>d</strong> ganz am Anfang steht für <strong>directory</strong>, lies Ordner. Dann folgen die Dateirechte, die wir eben schon festgelegt haben: Zunächst drei Zeichen, die die Zugriffsrechte für den Besitzer (<strong>ftp-user</strong>) beschreiben: <strong>rw-</strong></p>
<p>Also Lesen (<strong>read)</strong> und Schreiben (<strong>write</strong>) (würde anstelle des <strong>-</strong> ein <strong>x</strong> stehen (<strong>eXecute)</strong>, stünde das für <strong>Ausführen</strong>). Die Gruppe <strong>www-data</strong> und alle ihre Mitglieder dürfen nur Lesen (r&ndash;). Alle anderen dürfen gar nichts (&mdash;).</p>
<p>Nun handelt es sich aber um einen Ordner. Ein Ordner kann aber nur &ldquo;betreten&rdquo; werden, wenn man die Genehmigung zum <strong>Ausführen</strong> hat. Weder der Besitzer noch die Gruppe hat diese Genehmigung. Unsere obere Anweisung reicht also nicht aus! Tatsächlich sollte man also <strong>Zugriffsrechte für Dateien und Ordner immer getrennt</strong> festlegen!</p>
<p>Berechtigung für alle Dateien:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">chmod</span> <span class="mi">640</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">www</span><span class="o">/*</span> <span class="o">-</span><span class="n">R</span>
</span></span></code></pre></div><p>Berechtigung für alle Ordner:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">chmod</span> <span class="mi">750</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">www</span><span class="o">/*</span> <span class="o">-</span><span class="n">R</span>
</span></span></code></pre></div><p>Du siehst, dass das Ermöglichen des Ausführens einfach durch das Addieren von 1 für die beiden ersten Positionen ermöglicht wird.</p>
<p>Tatsächlich findest du diese beiden Befehle auch in vielen Anleitungen zu Dateirechten und damit endet die Anleitung oft auch schon. Doch damit hast du ein Problem. Denn die zweite Anweisung überschreibt das Ergebnis der ersten Anweisung. Aber wir wollen doch Dateien und Ordner individuell einrichten! Abhilfe schafft der Befehl <strong>find</strong>, um Dateien und Ordner getrennt anzusprechen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">640</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">750</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span></code></pre></div><p>Der Parameter <strong>-type f</strong> liefert alle Dateien im angegeben Ordner zurück (f wie file, Datei). Der Punkt hinter htdocs in der ersten Zeile sorgt dafür, dass auch versteckte Dateien, wie z.B. die .htaccess-Datei, gefunden werden. Mit <strong>exec</strong> übergebe ich das Resultat von find, eine Liste die alle gefundenen Dateien enthält, an einen anderen Befehl. In dem Fall also <strong>chmod</strong>.</p>
<p>Vice versa für alle Ordner, die mit <strong>-type d</strong> gefunden werden. Hier wird mit chmod auch das Recht zum Ausführen vergeben.</p>
<h2 id="dateirechte-in-der-realität">Dateirechte in der Realität</h2>
<p>Das klingt erstmal recht einfach, hat aber drei Haken:</p>
<ol>
<li>Es gibt Dateien, die nur für den PHP-Dienst relevant sind, andere wiederum nur für den HTTP-Dienst. Man muss die Besitzrechte also etwas granularer vergeben.</li>
<li>Bei einem Update der Plugins oder WordPress müssen Dateien für die Gruppe www-data wenigstens temporär schreibbar sein.</li>
<li>Wenn man den Upload von Dateien zulassen möchte, muss der Ordner /wp-content/uploads dauerhaft beschreibbar sein.</li>
</ol>
<p>Es gibt also verschiedene <strong>Ordner- und Datei-Kategorien</strong>, die verschiedene Rechte erfordern. Die folgende Matrix zeigt, am Beispiel von WordPress, eine <strong>ideale</strong> Konfiguration:</p>
<p><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/grafik-4.png"><img src="/2020/2020-11-05-wie-funktionieren-dateirechte/images/grafik-4-700x315.png" alt=""></a></p>
<p>Die **.htaccess-**Datei muss für den PHP-Dienst gar nicht sichtbar, geschweige denn beschreibbar sein. Die Datei <strong>wp-config.php</strong> wiederum sollte für den HTTP-Dienst unsichtbar sein. Generell müssen PHP-Dateien, also dynamische Ressourcen, für den HTTP-Dienst gar nicht sichtbar sein. Der Upload-Ordner ist hier beschreibbar, um das Hochladen von Datein zu ermöglichen. Wird ein Cache verwendet, muss natürlich auch dieser Ordner beschreibbar sein.</p>
<p>Solltest du, z.B. auf deinem eigenen Webspace, die Möglichkeit haben, Besitzrechte derart granular zu konfigurieren, kann dir die Matrix vielleicht als Inspiration dienen. In der Realität hilft das aber nicht weiter, da der PHP-Dienst als Modul entweder innerhalb des HTTP-Dienstes läuft oder beide Dienste unter einer Gruppe (www-data) laufen (<a href="https://binary-butterfly.de/artikel/dateirechte-wie-stelle-ich-das-bei-meinem-hoster-ein/">hier wird das Problem noch etwas genauer beleuchtet</a>). Die Konfiguration sieht dann in etwa so aus:</p>
<p><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/grafik-5.png"><img src="/2020/2020-11-05-wie-funktionieren-dateirechte/images/grafik-5-700x288.png" alt=""></a></p>
<p>Nun stellst du dir sicher die Frage, wie du ein derartiges Setup möglichst unkompliziert einrichten kannst. Eins Vorweg: Ohne Zugriff auf die Shell wird das ziemlich aufwendig. Mit Zugriff auf die Kommandozeile kannst du die Dateirechte z.B. folgendermaßen setzen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">640</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">750</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">uploads</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">660</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">uploads</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">770</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">cache</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">660</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">cache</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">770</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span></code></pre></div><p>Wenn du Themes oder Plugins aktualisieren willst, musst du die Rechte folgendermaßen anpassen und somit Datein und Ordner schreibbar machen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">themes</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">660</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">themes</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">770</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">plugins</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">660</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">plugins</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">770</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span></code></pre></div><p>Beim Update von WordPress trifft das natürlich auf die ganze Installation zu:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">f</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">660</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">find</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">htdocs</span><span class="o">/.</span> <span class="o">-</span><span class="n">type</span> <span class="n">d</span> <span class="o">-</span><span class="n">exec</span> <span class="n">chmod</span> <span class="mi">770</span> <span class="o">--</span> <span class="p">{}</span> <span class="o">+</span>
</span></span></code></pre></div><p>Wenn du keinen Zugriff auf die Kommandozeile hast, kannst du auch PHP nutzen, insofern du die Rechte dazu hast. Die Funktion lautet <a href="https://www.php.net/manual/de/function.chmod.php">chmod()</a>.</p>
<h2 id="ausführen-von-php-code-in-bestimmten-ordnern-unterbinden">Ausführen von PHP-Code in bestimmten Ordnern unterbinden</h2>
<p>Oben hatte ich das Problem mit dem Upload-Ordner angesprochen. Wenn Nutzer in der Lage sind, dort Dateien zu modifizieren oder abzulegen, ist das ein Sicherheitsrisiko. Du kannst das Risiko aber eindämmen, indem du dafür sorgst, dass Dateien in diesem Ordner schlicht nicht von PHP interpretiert, sprich ausgeführt, werden können.</p>
<p>So kann der Ordner beschreibbar bleiben, das Sicherheitsrisiko wird aber trotzdem reduziert. Dazu erstellst du eine .htaccess-Datei im uploads-Ordner mit diesem Inhalt:</p>
<p>SetHandler !
RemoveHandler .php .phtml .php3
RemoveType .php .phtml .php3
php_admin_value engine Off
php_flag engine off</p>
<p>Die beiden letzten Zeile sind redundant zu den vorherigen. Sie soll sicherstellen, dass PHP hier wirklich nicht funktioniert. Ein Angreifer ist somit vielleicht in der Lage, PHP-Code in diesem Ordner abzulegen aber nicht mehr, diesen auch auszuführen.</p>
<p>Bei nginx kannst du den Upload-Ordner einfach implizit von PHP abnabeln:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">$</span><span class="n">uri</span> <span class="o">!~</span> <span class="s2">&#34;^/uploads/&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">   <span class="n">fastcgi_pass</span> <span class="n">unix</span><span class="p">:</span><span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">php</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">-$</span><span class="n">server</span><span class="o">.</span><span class="n">sock</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="fs_method">FS_METHOD</h2>
<p>Wenn du meinst, die Dateirechte korrekt vergeben zu haben und trotzdem fordert dich Wordpress beim Updaten auf, die FTP-Zugangsdaten einzugeben, setze diesen Parameter in der Datei wp-config.php:</p>
<p>define(&lsquo;FS_METHOD&rsquo;, &lsquo;direct&rsquo;);</p>
<p>WordPress weiß nun, dass es Dateien direkt anfassen darf, ohne den Umweg über den FTP-Nutzer zu gehen.</p>
<p>Dieser Parameter kann recht nützlich sein, wenn du die Dateirechte noch restriktiver vergeben willst, sprich: PHP gar keine Schreibrechte einräumst. Du musst dann einen FTP-Nutzer anlegen, über den WordPress sozusagen indirekt auf das Dateisystem zugreifen kann.</p>
<h2 id="wenig-aufwand-viel-nutzen">Wenig Aufwand, viel Nutzen</h2>
<p>Die Einarbeitung in die Benutzerrechte mit <strong>chmod</strong> mag anfangs vielleicht ungewohnt sein, mit etwa Übung hat man den Dreh aber recht schnell raus. Der Nutzen ist immens, denn die falsche Rechte-Vergabe ist ein häufiger Grund, warum bösartige Software sich überhaupt auf einem Server verbreiten kann. Es gibt noch eine Handvoll andere Maßnahmen, die relativ simpel und effektiv sind, denen ich mich in einem anderen Beitrag widmen möchte.</p>
<p>Zuguter Letzt: Willst du wissen, ob die Dateirechte in deiner Installation korrekt gesetzt wurden, kannst du auf dieses Script zurückgreifen. Ich habe dazu das Script von <a href="https://binary-butterfly.de/artikel/dateirechte-warum-eigentlich/">Ernesto Ruge</a> etwas überarbeitet, in der Funktionalität aber unverändert gelassen:</p>
<p><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/grafik-7.png"><img src="/2020/2020-11-05-wie-funktionieren-dateirechte/images/grafik-7-700x366.png" alt=""></a></p>
<p>Die korrekten Datei und Ordner-Rechte für WordPress prüfen</p>
<p><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/testFileFolderPermissions.php_-1.zip">testFileFolderPermissions.php_-1</a><a href="https://www.nickyreinert.de/files/wie-funktionieren-dateirechte/testFileFolderPermissions.php_-1.zip">Herunterladen</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> chmod, dateirechte, sysop, wordpress</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>anleitungen</category>
      
      <category>hosting</category>
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie funktionieren Dateirechte? - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Online Marketing killed the Internet Star</title>
      <link>http://localhost:1313/2020/2020-10-24-marketing-killed-the-internet-star/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-10-24-marketing-killed-the-internet-star/</guid>
      <description>Das Internet. Unendliche Weiten. Wir schreiben das Jahr 2020. Das Internet hat eine beachtliche Menge populärer Dienste groß gemacht: E-Mail. Video-Streaming. …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Das Internet. Unendliche Weiten. Wir schreiben das Jahr 2020. Das Internet hat eine beachtliche Menge populärer Dienste groß gemacht: E-Mail. Video-Streaming. Vernetzte Kühlschränke. Smart-TV.&#39; reading_time: 41 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Database, Server, Mobile</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Das Internet. Unendliche Weiten. Wir schreiben das Jahr 2020. Das Internet hat eine beachtliche Menge populärer Dienste groß gemacht: E-Mail. Video-Streaming. Vernetzte Kühlschränke. Smart-TV. Und allen voran das <strong>World Wide Web</strong>, kurz WWW oder auch das Web - für die meisten wohl der <strong>Star des Internets</strong>.</p>
<p>Online Marketing hat das Web vielleicht nicht umgebracht, aber mindestens nachhaltig geprägt. Doch <a href="https://www.youtube.com/watch?v=W8r-tXRLazs">der Song von The Buggles</a> heißt nun mal nicht <strong>Video hat den Radio-Star nachhaltig geprägt</strong>&hellip;</p>
<h2 id="einleitung">Einleitung</h2>
<blockquote>
<p>„Ich bin zu der Einsicht gelangt, dass Werbung die Ursünde des Web ist“</p>
<p>Ethan Zuckerman, <a href="https://www.horizont.net/medien/nachrichten/Werbung-ist-die-Ursuende-des-Web-Warum-sich-der-Erfinder-der-Pop-ups-fuer-seine-Schoepfung-entschuldigt-121851">horizont.net</a></p></blockquote>
<p>Eins vorweg: <strong>Das Web</strong> <strong>ist nicht das Internet</strong>, das wird oft missverstanden. Das Internet besteht aus vielen Computern, die miteinander vernetzt sind. Das Web besteht aus Webseiten, die z.B. über Hyperlinks miteinander vernetzt sind und über das Internet übertragen werden.</p>
<p>Das <a href="https://web30.web.cern.ch/">Web feierte jüngst seinen 30. Geburtstag</a> und Werbung ist seit jeher ein treuer Begleiter und vielleicht auch ein bisschen Technologietreiber. Mitte der 90er Jahre beschränkte sich die Werbung im Web noch auf triviale Banner.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/quo-vadis-www/display-werbung-1994.jpg"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/display-werbung-1994.jpg" alt="Display Werbung in 1994"></a></p>
<p>Display Werbung in 1994</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/quo-vadis-www/grafik.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-700x379.png" alt="Display Werbung in 2019"></a></p>
<p>Display Werbung in 2019</p>
</li>
</ul>
<p>Der Hauptzweck von Werbung sollte die Finanzierung des Online-Angebots sein; bei den Vorgängern des Internets war Online Werbung <a href="https://web.archive.org/web/20130824150611/http://old.cni.org:80/docs/infopols/NSF.html">sogar explizit untersagt</a>. Die heute so berüchtigten Cookies wurden ursprünglich vor allem dazu genutzt, um z.B. <a href="https://web.archive.org/web/20130824150611/http://old.cni.org:80/docs/infopols/NSF.html">den Warenkorb in Online-Shops zu speichern</a>. Das WWW war ein ausgeglichener, idylischer Ort. Doch die Benutzerzahl stieg an und immer mehr Unternehmen entdeckten das Web für sich.</p>
<p>Der Banner ist Teil der Display Werbung, die zum Instrumentenkoffer des Online Marketings gehört. Im Bereich des Online Marketings entstanden viele neue Geschäftsmodelle und die Komplexität nahm zu. Instrumente und Strukturen evolutionierten in den folgenden drei Jahrzehnten rasant.</p>
<h2 id="was-genau-ist-denn-dieses-online-marketing">Was genau ist denn dieses Online Marketing?</h2>
<blockquote>
<p>Wo hast du diese Brille her? &ndash; Von `ner guten Fee, Kleiner!</p>
<p>Ned Hannister, Sie Leben (1988)</p></blockquote>
<p>Die Grenzen sind, wie so oft, verschwommen und man könnte, wie so oft, ein ganzes Buch damit füllen, Online Marketing zu beschreiben.</p>
<p>Zu Kern des <strong>Online Marketings</strong> gehörte von Anfang an das <strong>Display Marketing</strong>, das ursprünglich aus einfachen Werbebannern bestand. Display Marketing, und vor allem der Banner, sind nunmehr ein kleines Zahnrad in der Online Marketing Maschinerie. Mittlerweile gibt es eine große Auswahl an Kanälen, in denen Online-Marketing betrieben werden kann. Da wäre z.B. das <strong>E-Mail-Marketing</strong>. Spam kann hier als aggressivste Form der Werbung betrachtet werden. Oder <strong>Social Media-Marketing</strong> über Plattformen wie Facebook, LinkedIn, Instagram. Dann gibt es natürlich das Suchmaschinen-Marketing (<strong>SEM</strong>, <strong>Search Engine Marketing</strong>). Hier unterscheidet man in Suchmaschinenoptimierung (<strong>SEO</strong>, <strong>Search Engine Optimization)</strong>, um die Nutzer auf natürliche bzw. organische Weise auf das eigene Angebot zu lenken. Und Suchmaschinenwerbung (<strong>SEA, Search Engine Advertising</strong>), also bezahlte Anzeigen die in den Suchergebnissen angezeigt werden.</p>
<p>Dank der zunehmenden Vernetzung und Digitalisierung lassen sich aber auch klassische Marketing-Kanäle dem Digital- bzw. sogar Online-Marketing zuordnen, wie z.B. Print, TV, Radio oder Außenwerbung.</p>
<p>So bietet die gute alte <strong>Deutsche Post</strong> mit <a href="https://www.deutschepost.de/de/c/consentric/technologie.html">CONCENTRIC</a> ein Produkt an, das die Nutzer einer Webseite mit einem geografischen Standort verknüpft. Damit kann Werbung in Print-Produkten mit online ausgespielten Werbebannern abgeglichen werden. Die Werbebotschaft in deinem Briefkasten begegnet dir im Browser wieder.</p>
<p>Auch die sogenannten Out-Of-Home-Kampagnen, wie z.B. die klassische <strong>Litfaßsäule</strong>, können dank der zunehmenden Vernetzung und Digitalisierung als Teil des Online-Marketings verstanden werden. Wenn eine Gruppe spanischer Touristen in Berlin mit ihren Smartphones vor einer digitalen Werbetafel steht, kann über die Auswertung der Geo-Daten der Smartphones und der entsprechenden Profile entschieden werden, als nächstes eine Anzeige für Museums-Führungen anzuzeigen.</p>
<p>Der Fernseher, noch immer eine der populärsten Freizeitbeschäftigungen, ist längst nicht mehr eine Elektronenröhre, die nur das Fernsehsignal in Richtung Sofa wirft. SmartTVs haben einen Weg geebnet, den Samsung nun unter lauter Kritik beschreitet: <a href="https://www.chip.de/news/Bundeskartellamt-kritisiert-Samsung-TV-Werbung-sei-unzumutbare-Belaestigung_183019728.html">Deren Fernseher blenden personalisierte Werbung ein</a>.</p>
<p>Zusammengefasst lässt sich feststellen, dass jedes Gerät, welches über einen Anschluss an das Internet verfügt, ein potentieller Kanal für das Online-Marketing ist. Aus Unternehmenssicht sind das großartige Aussichten. Aus Nutzersicht sollte das beunruhigen.</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/they_live.jpg"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/they_live-700x335.jpg" alt=""></a></p>
<p>Szene aus &ldquo;Sie Leben&rdquo;, 1988</p>
<p><em>Der Begriff Online Marketing bezieht sich in der Regel auf die Maßnahmen, die im WWW bzw. über das Internet stattfinden, eben &ldquo;online&rdquo;. <em>Eine genaue Abgrenzung zum Offline Marketing ist schwierig, da die zunehmende Vernetzung auch klassische Offline-Kanäle betrifft, wie z.B. Außenwerbung.</em> Der Oberbegriff ist das Digital-Marketing, das darüberhinaus auch andere Werkzeuge beinhaltet, die sich digital steuern lassen. Das alles findet innerhalb des Marketings statt, bei dem es natürlich nicht nur um Werbung geht.</em></p>
<h2 id="ziele-wertschöpfung-und-stakeholder">Ziele, Wertschöpfung und Stakeholder</h2>
<p>In der Logistik gibt es die sogenannte <a href="https://de.wikipedia.org/wiki/Sechs-R-Regel">6R-Regel</a>: Das richtige Produkt, zur richtigen Zeit, am richtigen Ort, in der richtigen Menge, in der richtigen Qualität zu den richtigen Kosten.</p>
<p>Dieses Mantra lässt sich auch auf das <strong>Online Marketing</strong> übertragen: Der <strong>richtige Empfänger</strong> (potentieller Kunde) soll das <strong>richtige Produkt</strong> (die passende Werbemaßnahme), zur <strong>richtigen Zeit</strong> und am <strong>richtigen Ort</strong> (Hustensaftwerbung im Winter, Strandballwerbung auf Mallorca: Targeting) in der <strong>richtigen Menge</strong> (Frequency Capping), in der <strong>richtigen Qualität</strong> (systemgerecht, Smartphone versus Desktop) zu den <strong>richtigen Kosten</strong> (Marketing Controlling) erhalten. Die <strong>7R</strong> des Online Marketings:</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-15.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-15-700x615.png" alt=""></a></p>
<p>7R des Online Marketing (eigene Darstellung)</p>
<p>Nicht nur bei den Zielen gibt es Parallelen zur Logistik. Im Online-Marketing gibt es eine besondere Form der Wertschöpfung.</p>
<p>Aber zunächst zu den vier Kategorien bzw. Hauptakteuren im Online Marketing: Einmal sind das die <strong>Nutzer</strong>, die über ihre Geräte und Browser die Dienste des Internets nutzen. Sie sind die Empfänger der Marketing Maßnahmen. Ihr Interesse gilt weniger der Werbung und mehr den Inhalten.</p>
<p>Dann gibt es die <strong>Werbetreibende</strong> (neudeutsch <strong>Advertiser</strong>), die Marketing Maßnahmen zur Verkaufsförderung für ihre Produkte und Dienstleistungen nutzen.</p>
<p>Daneben gibt es noch die <strong>Publisher</strong> und Inhalteanbieter (im folgenden kürze ich diese Kategorie vereinfacht als Publisher ab), die die Marketing-Maßnahmen gegen Bezahlung umsetzen. Zu dieser Kategorie kann der Betreiber einer kleinen Webseite gehören, der ein paar Werbeanzeigen auf seinem privaten Blog schaltet. Oder aber der große Vermarkter, der die Werbeflächen eines großen Netzwerkes von Online-Portalen verwalten.</p>
<p>Und schließlich gibt es die vierte Gruppe der Marketing Technologie Unternehmen (kurz <strong>MarTech-Unternehmen</strong>), die zwischen den Advertisern und Publishern hängen. Hier spielt sich das eigentlich Marketing-Know-How ab.</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-14.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-14-700x627.png" alt=""></a></p>
<p>Teilnehmer im Online Marketing (eigene Darstellung)</p>
<p>Die Grenzen in diesem Quartett lassen sich in der Realität nur schwer beschreiben. Natürlich können Advertiser inhouse auch MarTech-Aufgaben übernehmen. Genauso vertreten Publisher auch Advertiser-Interessen oder bilden bestimmte MarTech-Aufgaben innerhalb ihres Unternehmens ab.</p>
<p>In diesem System lässt sich eine <strong>Wertschöpfungskette</strong> erkennen, bei der das Geld aus den Marketing-Budgets der Advertiser über die MarTech-Unternehmen zu den Publishern fließt.</p>
<p>Die &ldquo;Wahrnehmung&rdquo; durch den Nutzer kann wie bei einer klassischen Wertschöpfung als &ldquo;Rohstoff&rdquo; verstanden werden, den der Publisher &ldquo;erntet&rdquo;. Die MarTech-Unternehmen reichern diesen Rohstoff mit ihrer Technologie und dem KnowHow an, um die Ziele der <strong>7R-Regel</strong> zu erfüllen. Der Advertiser ist an dieser Stelle der Konsument.</p>
<p>Es entsteht eine Art Kreislauf. Die Marketing-Maßnahmen sind im Produkt-Preis einkalkuliert und werden damit, indirekt, durch den Nutzer finanziert. Der Nutzer wiederum konsumiert die Inhalte der Publisher.</p>
<h2 id="wertschöpfung-in-der-praxis">Wertschöpfung in der Praxis</h2>
<p>Der Einfachheit halber will ich mich zunächst auf die Display-Werbung konzentrieren, um einen kleinen Einblick in die Wertschöpfung in der Praxis zu geben.</p>
<p>Der Publisher wird dafür bezahlt, dass der Nutzer das Werbemittel auf seinem Angebot wahrnimmt - die sog. <strong>Ad Impression</strong>. Je mehr Nutzer die Werbung empfangen, desto mehr Geld erhält der Publisher vom Advertiser. Hier spielt der <strong>Tausender-Kontakt-Preis (TKP</strong>, englisch CPM, Cost per Mille) eine wichtige Rolle: Ein Publisher hat auf seinem Angebot 1 Mio. Besucher und verlangt einen TKP von 5 Euro. Der Publisher erhält also vom Advertiser 5 Euro * 1 Mio. / 1.000 = 5.000 Euro für die Ausspielung von Werbung an 1 Mio. Empfänger. Das ist die <strong>Holzhammer-Methode</strong>.</p>
<p>Etwas zielorientierter ist es, die Interaktion der Nutzer zu bewerten. Der Publisher erhält also eine (in der Regel höhere) Vergütung, sobald der Nutzer auch auf ein Werbemittel klickt. Man spricht dann vom <strong>Cost per Click bzw. Pay per Click (CPC, PPC)</strong>.</p>
<p>Noch erfolgsorientierter ist ein Provisions-Modell, das eine tatsächliche Bestellung im Online-Shop berücksichtigt: <strong>Cost Per Order (CPO)</strong> oder <strong>Cost Per Lead (CPL)</strong>, wenn das Ziel nicht die Bestellung sondern z.B. die Anmeldung bei einem Newsletter ist.</p>
<p>CPM und CPC spielen aber nicht nur bei Werbebannern eine Rolle, sondern z.B. auch beim E-Mail-Marketing, beim Suchmaschinen-Marketing oder im Affiliate-Marketing. Und damit stellen sie das Online Marketing vor eine kleine Herausforderung: Was ist, wenn der Nutzer nicht nach dem Kontakt mit einem Werbemittel auf einer Webseite, sondern zeitlich versetzt den Kauf tätigt? Vielleicht nach dem Lesen eines Newsletters oder Anschauen eines Werbevideos auf YouTube? Der Begriff der <strong>Customer Journey</strong> spielt hier eine wichtige Rolle. Man versucht zu erfassen, über welche Marketing-Maßnahmen (sprich Online-Marketing-Kanäle) der Nutzer angesprochen wurde bevor er einen Kauf getätigt hat, um eine <strong>Provision</strong> <strong>leistungsgerecht</strong> zu verteilen.</p>
<p>Das erfordert allerdings die Erfassung und Verarbeitung eines wichtigen Bestandteils im Online Marketing: <strong>Daten</strong>. Es geht darum herauszubekommen, ob und wann ein Nutzer den Newsletter gelesen, das Video gesehen, die Webseite besucht hat. So entsteht eine <strong>Customer Journey</strong>. Die Reise des Nutzers bis zum Einkauf im Online Shop des Advertises.</p>
<p>MarTech-Unternehmen erfassen und kombinieren Zugriffs-Daten, reichern sie aber noch weiter an. Jede zusätzliche Information über den Nutzer, die eine weitere Kategorisierung ermöglicht, hilft den Algorithmen dabei, die Customer Journey zu optimieren bzw. die 7R des Online-Marketings adäquat zu erfüllen.</p>
<p>MarTech-Unternehmen nutzen dazu demografische, geografische oder sogar persönliche Informationen, die die Nutzer mehr oder weniger freiwillig zur Verfügung stellen. Z.B. über ein Social Media Profil, in dem sie ihre Hobbys auflisten und andere Interessen hinterlegen. Aber natürlich auch über die CRM-Systeme der Advertiser oder schlicht über die Surf-Gewohnheiten im WWW.</p>
<p>All diese Daten werden durch die MarTech-Unternehmen erfasst, kombiniert sowie aggregiert und in Modellen und Algorithmen genutzt, um die sieben Ziele immer besser erfüllen zu können.</p>
<p>Möglich wird das alles durch das <strong>Tracking</strong>. Beim Aufruf einer Webseite werden dem Nutzer nicht nur die Bilder und Texte des Online-Angebots übermittelt. Die Webseite enthält außerdem Verweise zu anderen Servern und Diensten. Oft werden dazu Tracking-Pixel genutzt. Dazu werden mithilfe von JavaScript Anfragen zusammengebaut, die relevante marketingtechnische Informationen enthalten und an andere Server übermittelt werden. Die Antwort ist dann z.B. ein extrem kleines Bild mit genau einem Pixel - daher der Begriff Tracking-Pixel. Diese Anfrage an den Server eines MarTech-Unternehmens ermöglicht außerdem das Setzen eines <strong>Cookies</strong>. Wird das Tracking-Pixel des MarTech-Unternehmens auch auf den Seiten andere Publisher eingesetzt, kann man mihtilfe des Cookies nachvollziehen, auf welchen Seiten ein Nutzer unterwegs war.</p>
<h2 id="verschiebung-der-prioritäten">Verschiebung der Prioritäten</h2>
<blockquote>
<p><em>Journalistische Inhalte sind das Vehikel, um die Aufmerksamkeit des Publikums für die werblichen Inhalte zu erreichen</em></p>
<p><a href="https://www.golem.de/news/adblock-plus-axel-springer-sieht-journalismus-nur-als-vehikel-fuer-werbung-1509-116587.html">Springer-Anwälte</a> in 2015</p></blockquote>
<p>Das ganze führte allerdings im Laufe der Zeit zu einigen Problemen. Wie z.B. die Verschiebung der Prioritäten. Anfangs bestand der Hauptzweck eines Werbebanners, aus Sicht des Publishers, in der Finanzierung seines (kostenlosen) Angebots. Das hat sich an vielen Stellen geändert und der Werbebanner ist der Mittelpunkt bestimmter Geschäftsmodelle geworden.</p>
<p>Die Umsatzgenerierung mit Werbung scheint im Vordergrund zu stehen. Inhalte werden nicht mehr nur von Werbung begleitet, sie werden zum <em>willfährigen Erfüllungsgehilfen</em> degradiert. Die Anwälte des Springer-Verlags hatten die Situation 2015 ganz gut auf den Punkt gebracht: Der Inhalt soll den Nutzer auf die Seite locken, um dort die Werbung zu konsumieren. Der Blogger und Entwickler <a href="https://uglyduck.ca/news-websites-are-dumpster-fires/">Bradley Taunt, drückt es in Bezug auf Nachrichtenseiten noch etwas drastischer aus</a>:</p>
<blockquote>
<p>&ldquo;News Websites Are Dumpster Fires&rdquo;</p>
<p>Bradley Taunt, 29. Mai 2019</p></blockquote>
<p>Die Strategie lautet, möglichst viele Nutzer auf das eigene Online-Angebot zu locken, um möglichst viel Werbung auszuspielen. Eine berüchtigte Methode dürfte den meisten bekannt sein: <strong>Click-Bait-Überschriften:</strong></p>
<p>&ldquo;Dieser Artikel wird dein Leben verändern!&rdquo;</p>
<p>&ldquo;Du glaubst nicht was passierte, als eine Mutter ihre Kinder vom Flughafen abholte&rdquo;.</p>
<p>Dahinter verbergen sich oft Artikel, die vielleicht einen gewissen Unterhaltungswert besitzen, mit Journalismus aber nicht mehr viel zu tun haben.</p>
<p>Die Überschriften müssen dabei gar nicht so reißerisch sein, es geht auch salonfähig und etwas subtiler. Immer mit dem Ziel vor Augen, die Neugier des Nutzers zu wecken und ihn auf einen eigentlich banalen Artikel zu locken. Wie z.B. die folgende Überschrift:</p>
<blockquote>
<p>&ldquo;Gerücht: Neues Assassin&rsquo;s Creed heißt Ragnarok &amp; bringt beliebtes Feature zurück.&rdquo;</p>
<p>(<a href="https://www.gamepro.de/artikel/assassins-creed-ragnarok-geruecht,3351463.html">GamePro am 20.11.2019</a>)</p></blockquote>
<p>Der neue Titel der Assasin&rsquo;s Creed-Reihe stand, <a href="https://www.gamepro.de/artikel/vorsicht-angeblicher-assassins-creed-ragnarok-leak-ist-fake,3343677.html">auch bei GamePro, schon länger fest</a>. Das &ldquo;<strong>beliebte Feature</strong>&rdquo; soll dennoch dazu verleiten, auf den Artikel zu klicken. Um welches Feature es sich dabei handelt (die Rekrutierung), erfährt der Leser zum Ende des Artikels in einem Satz, nachdem er vorher, von zahlreichen Werbebanner begleitet, noch ein paar Mal angeteasert wird.</p>
<p>Man kann dem Beitrag die journalistische Leistung nicht komplett absprechen, trotzdem ist diese Art von Berichterstattung sehr weit verbreitet. Die wichtige Information lässt sich gut in einem Tweet oder regelmäßig aktualisiertem Übersichtsartikel oder sogar der Überschrift unterbringen. Stattdessen wird ein kleines Detail mit Bildern und bereits bekannten Informationen so aufbereitet, dass ein komplett neuer Nachrichten-Beitrag entsteht.</p>
<p>Zur Zeit ist die &ldquo;<strong>PlayStation 5</strong>&rdquo; ein Trend-Thema im Technologie-Bereich. Das Theme ist so bedeutent, dass sogar eigentlich themenfremde Portale wie TV-Movie berichten:</p>
<p><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-3-700x111.png" alt=""></p>
<p>Quelle: <a href="https://www.tvmovie.de/news/ps5-haendler-nennt-den-vorbesteller-preis-und-beunruhigt-alle-114370">tvmovie.de</a> (aufgenommen am 09.09.2020)</p>
<p>So sieht die Seite beim ersten Aufruf aus:</p>
<p><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-4-700x356.png" alt=""></p>
<p>Quelle: <a href="https://www.tvmovie.de/news/ps5-haendler-nennt-den-vorbesteller-preis-und-beunruhigt-alle-114370">tvmovie.de</a> (aufgenommen am 09.09.2020)</p>
<p>Der Vorbesteller-Preis, um den es geht, beträgt <strong>500 Pfund</strong>. Und die beunruhigende Information lautet, dass die PlayStation zum Start bereits ausverkauft sein könnte. Zwei Informationen, die nach einem Pop-Up auf einer Seite präsentiert werden, die 10 mal so lang ist, wie der eigentlich informative Inhalt.</p>
<p>Ich möchte diese Erscheinung &ldquo;<strong>kreativen Mikro-Journalismus</strong>&rdquo; nennen. Der Redakteur muss durchaus Kenntnis von der Sache haben. Die Herausforderung besteht dann aber darin, eine dünne Informationslage mit möglichst viel Text aufzuwerten. Das erfordert Kreativität.</p>
<p>Der Nutzer muss nicht nur auf die Seite gelockt sondern auch dort gehalten werden. Demnach darf der wichtige aber kleine Informationshappen nicht schon im ersten Absatz zu finden sein.</p>
<p>Außerdem kann mithilfe vieler kleiner Informationshappen in unterschiedlichen Artikeln auch die Frequenz der neuen Beiträge künstlich erhöht werden. Das ist ein wichtiger Faktor in der Suchmaschinen-Optimierung (SEO). Die Suchmaschine wird eine Seite höher bewerten, wenn sie feststellt, dass dort regelmäßig neue Beiträge veröffentlicht werden.</p>
<p>Im nächsten Schritt geht es übrigens darum, Artikel nicht mehr von einem Menschen verfassen zu lassen werden. Das Ziel ist die <strong>automatisierte Erstellung von Inhalten.</strong> Berichte über Fussballspiele können mittlerweile <a href="https://uebermedien.de/19028/die-schreib-maschine-die-aus-daten-fussballberichte-macht/">durch eine Software erstellt werden</a>. <a href="https://thisarticledoesnotexist.com/">Diese Seite</a> demonstriert die Erstellung fiktionaler Nachrichten. Wann gänzlich automatisiere Nachrichtentexte geliefert werden, ist wohl nur noch eine Frage <a href="https://entwickler.de/online/machine-learning/openai-language-model-gpt-2-579881547.html">der Zeit und der moralischen Flexibilität</a>.</p>
<p>Dass wir davon nicht mehr weit entfernt, <a href="https://www.wuv.de/tech/wie_gpt_3_zum_blogger_star_wurde">demonstrierte küzrlich der Student <strong>Liam Porr</strong></a>. <a href="https://liamp.substack.com/p/my-gpt-3-blog-got-26-thousand-visitors">Sein Blog,</a> den er dank GPT-3 mit künstlich verfassten Text fütterte, zog in 2 Wochen 26.000 Leser an. Ein Beitrag schaffte es auf dem populären Nachrichten-Aggregator <a href="https://news.ycombinator.com/">Hacker News</a> an die erste Stelle, ohne dass den Lesern klar war, dass die Inhalte von einer KI erstellt wurden.</p>
<h2 id="die-herrschaft-von-seo"><strong>Die Herrschaft von SEO</strong></h2>
<blockquote>
<p>The internet is an SEO landfill</p>
<p><a href="https://docs.sendwithses.com/random-stuff/the-internet-is-an-seo-landfill">unbekannt, 25.09.2020</a></p></blockquote>
<p><strong>Serendepity</strong> bechreibt das zufällige Auffinden interessanter Informationen. Der Klick auf einem Link in einem Blog führt zu einem Partner-Blog. So kann man sich durch das WWW hangeln und neue Inhalte entdecken. Ein Klick auf einen Link einer vermeintlich privaten Seite kann aber auch zu einem kommerziellen Angebot führen. Und hier stellt sich immer öfter die Frage, inwieweit die Seite / der Blog transparent handelt und wirklich eine unabhängige Empfehlung abgegeben hat.</p>
<blockquote>
<p>The Internet of creation disappeared. Now we have the Internet of surveillance and control.</p>
<p>Renata Ávila, <a href="http://lab.cccb.org/en/renata-avila-the-internet-of-creation-disappeared-now-we-have-the-internet-of-surveillance-and-control/">lab.cccb.org</a></p></blockquote>
<p>Der Nutzer folgt dem Pfad, den die Marketing-Technologie für ihn vorgesehen hat. Das passiert einerseits durch die Optimierung der Kampagnen. Unter dem Begriff der <strong>Predictive Customer Journey</strong> wird z.B. eine Maßnahme verstanden, die automatisch die Online-Marketing-Kampagne empfiehlt, die den größten Verkaufserfolg für den individuellen Nutzer verspricht. Klingt kompliziert, ist es auch.</p>
<p>Ein wichtiges und relativ leicht zugängliches aber ungleich aufwendigeres Teilgebiet ist <strong>SEO</strong> - Suchmaschinenoptimierung.</p>
<p>SEO ist eigentlich eine sehr nützliches Werkzeug. Die Aufgabe einer Suchmaschine ist es, Inhalte im WWW objektiv zu bewerten. Dank SEO werden Webseiten für das bestmögliche Benutzererlebnis optimiert. Es geht nicht nur um das Layout (genügend große Schrift), sondern auch um technische (Geschwindigkeit) und inhaltliche Faktoren (Lesbarkeitsindex). Die Suchmaschine nutzt derlei Faktoren, um den Wert einer Seite für den Nutzer zu ermitteln und die Seite entsprechend gut in den Suchergebnissen (<strong>SERP</strong>) zu platzieren.</p>
<p>Allerdings führte auch das mit der Zeit zu einer Umkehr der Prioritäten. Mit der ausreichenden Expertise ausgerüstet, gelingt es SEO-Experten Nutzer auf Seiten zu führen, deren Haupt-Zweck es ist, an Affiliate-Programmen zu verdienen. Der Nutzer soll ausgehende Links zu kommerziellen Angeboten klicken, wodurch dem Seiten-Betreiber eine Provision zugesprochen wird (<strong>CPO</strong>, <strong>CPL</strong>, siehe oben).</p>
<p>Wirklich perfektioniert wurde das Konzept mit dem Aufkommen der <strong>Gutschein-Portale</strong>. Ein Nutzer, der bereits eine feste Kaufabsicht besitzt, macht sich kurz vor dem Kaufabschluss auf die Suche nach Gutscheinen. Vom Gutschein-Portal aus klickte er sich dann zum Online-Shop durch und tätigt den Kauf. Das Gutschein-Portal wurde dann als letzter Kontakt wohlwollend bei der Provision berücksichtigt. Ein Gutschein-Portal anzubieten gehört mittlerweile zum guten Ton, auch bei Seiten, bei denen man das eigentlich nicht erwarten würde, wie <a href="https://gutscheine.welt.de/">welt.de</a>, <a href="https://www.stern.de/gutscheine/shops/">stern.de</a>, ja sogar <a href="https://www.spiegel.de/gutscheine/">spiegel.de</a> und vielen, vielen mehr.</p>
<p>Die <strong>Customer Journey Analyse</strong> und die sogenannten <strong>Attribution</strong> helfen dem Online Marketing Manager übrigens, derartige Portale zu entlarven. Man versucht die Reise des Kunden bis zum Kaufabschluss zu erfassen und anhand statistischer Methoden zu erkennen, welcher Kontakt mit den Online Marketing-Maßnahmen des Advertisers am ehesten zur Festigung der Kaufabsicht beigetragen hat. Gutschein-Portale versuchen oft nur die Provision abzugreifen, ohne einen wichtigen konsum-psychologischen Beitrag zu leisten.</p>
<p>Aber auch bei der Suche nach Kaufempfehlungen und Vergleichsstest spielt SEO (bzw. sogar SEA - also das Schalten von Werbeanzeigen über die Suchmaschine) eine wichtige Rolle. Ich möchte das am Beispiel der Suche nach einer Empfehlung für &ldquo;<a href="https://www.google.com/search?q=Universalfernbedienungen">Universalfernbedienungen</a>&rdquo; zeigen. Gleich an erster Stelle hat sich <a href="https://www.chip.de/artikel/Die-beste-Universalfernbedienung_171333632.html">chip.de</a> platziert. Charakteristisch: Jeder ausgehende Link zu Amazon ist mit einem <strong>Affiliate-Parameter</strong> versehen und soll somit die <strong>Provision</strong> beim Kauf der jeweiligen Produkte sicherstellen. Der Artikel behandelt übrigens vornehmlich <strong>Logitech-Produkte</strong>. Die Produkte der Konkurrenz, die in einigen Absätzen nur kurz abgehandelt werden, sind nicht verlinkt.</p>
<p>Auch die anderen Seiten aus den Suchergebnissen machen deutlich, dass es nicht leicht ist, einen Test zu Universalbedienungen zu finden, der halbwegs vertrauenserweckend erscheint. Ein weiteres Ergebnis führt so z.B. zu <a href="https://www.welt.de/vergleich/elektronik/universalfernbedienung-test/">welt.de</a> - einer Nachrichtenseite. Sicher, auch Nachrichtenportale haben Technik-Ressorts. Aber auch hier wird klar, dass man inhaltlich nicht viel erwarten kann. Nach der Auflistung technischer Details, die so auch in der offiziellen Produktbeschreibung zu fnden sind werden ein paar technische Hintergründe erklärt. Einen richtigen Test gibt es nicht. Dafür aber die besagten <strong>Affiliate-Links</strong>. Nun kann man diesen Seiten vielleicht zugestehen, dass diese &ldquo;Tests&rdquo; der Finanzierung des Hauptprodukts dienen.</p>
<p>Doch auf der 1. Ergebnisseite finden sich auch andere Verteter, bei denen noch klarer wird, wie das Geschäftsmodell SEO + Affiliate funktionieren kann:</p>
<p>Die Seite <a href="http://universalfernbedienungtest.com">universalfernbedienungtest.com</a> ist professionell umgesetzt und enthält einige technische Hintergrundinformationen. Jedes Produkt bekommt sogar einen eigenen Artikel, der im wesentlichen aber nur die technischen Daten und Amazon-Rezensionen zusammenfasst. Es wird nicht deutlich, dass sich jemand inhaltlich ausführlich mit Universalfernbedienungen auseinandergesetzt hat, was zumindest bei chip.de noch der Fall war. Das Impressum verweist auf ein Unternehmen in Las Vegas. Unter den Partner-Seiten werden <a href="http://handdampfreinigertest.com">handdampfreinigertest.com</a> und <a href="https://www.plattenspielertests.net/">plattenspielertests.net</a> aufgeführt, die laut Impressum zum gleichen Unternehmen gehören. Spätestens jetzt dürfte klar sein, dass diese Seiten einzig dazu dienen, Umsatz durch Provisions-Abschöpfung zu generieren.</p>
<p>Fernbedienungen sind keine Ausnahme. Grundsätzlich ist jedes Produkt, das konsumiert wird, dafür prädestiniert, in einem Blog-Artikel &ldquo;getestet&rdquo; und empfohlen zu werden. <a href="https://www.google.com/search?channel=trow2&amp;client=firefox-b-d&amp;q=vergleich&#43;kaffeemaschinen">Kaffeemaschinen</a>. <a href="https://www.google.com/search?q=vergleich&#43;kopfh%C3%B6rer">Kopfhörer</a>. <a href="https://www.google.com/search?q=vergleich&#43;kopfh%C3%B6rer">Kopfhörer</a>. Die Grenze zwischen unabhängigen (und ausführlichem) Test und einfacher Auflistung ist dabei sehr verschwommen.</p>
<p><a href="https://docs.sendwithses.com/random-stuff/the-internet-is-an-seo-landfill">Das Web ist zu einer SEO-Deponie verkommen.</a> Der Ausblick? <a href="https://www.sueddeutsche.de/digital/seo-suchmaschinen-optimierung-google-bing-ki-1.4567188">Man vermutet jetzt schon</a>, dass künstliche Intelligenz die Suchmaschinen mit SEO-Reizen überfluten wird.</p>
<h2 id="ein-undurchschaubares-ökosystem">Ein undurchschaubares Ökosystem</h2>
<blockquote>
<p>Der Tracker wurde programmatisch auf unserer Webseite gesetzt, daher können wir den Werbetreibenden dahinter nicht identifizieren.</p>
<p>unbekannter Publisher</p></blockquote>
<p>Schaut man sich die Akteure im Online Marketing von vor 25 Jahren an, dürfte die Bedeutung der MarTech-Unternehmen neben den Advertisern und Publishern auffallend gering gewesen sein. Arbeitsteilung und technische Innovation führten im Laufe der Zeit dazu, dass deren Rolle immer wichtiger wurde.</p>
<p>Unzählige Plattformen und Anbieter stießen auf den Markt, um ihre Dienstleistungen anzubieten. SSP, DSP, DMP, CMP, AdServer, AdExchanges, AdNetworks, Trading-Desks - und das sind nur die bekanntesten Teilnehmer.</p>
<p>Und all diese haben ein großes Arsenal an Werkzeugen im Gepäck, um die 7R-Ziele immer besser zu erfüllen. Mit <strong>Re-Targeting</strong> werden dem Kunden passgenaue Werbebotschaften übermittelt. Die <strong>Predictive Customer Journey</strong> nutzt ausgefeilte Algorithmen, um die Kaufwahrscheinlichkeit zu ermitteln und entsprechende Maßnahmen zu ergreifen. Da das Vertrauen in die Influencer sinkt, versucht man mit <strong>Micro-Influencern</strong> eine &ldquo;familiäre&rdquo; Bindung zu erschaffen, über die die Werbebotschaft übermittelt werden kann. Die <strong>Geolokalisierung</strong> sorgt dafür, dass dein Smartphone den Besuch des Burgerladens empfiehlt, den du gleich passieren wirst. Und die Werbesendung aus Papier in deinem Briefkasten wurde dank <strong>Adress-Matching</strong> genau auf deine Bedürfnisse abgestimmt. Weitere Buzzwords sind <strong>Programmatic Advertising</strong>, <strong>Machine Learning</strong> oder <strong>Blockhain</strong>. Die Technologie-Maschine läuft auf Hochtouren, <a href="https://www.adzine.de/2019/10/blockchain-und-programmatic-laut-owm-studie-noch-nicht-miteinander-vereinbar/?mc_cid=7be6020411&amp;mc_eid=3897523165">auch wenn die Wirksamkeit zweifelhaft ist</a>. <a href="https://www.sueddeutsche.de/wissen/kuenstliche-intelligenz-software-computer-1.5036926?utm_source=pocket-newtab-global-de-DE">Doch das ist nicht nur ein Problem der Online Marketing-Branche.</a></p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/quo-vadis-www/online-marketing-1994.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/online-marketing-1994-700x394.png" alt="Online Marketing in 1994"></a></p>
<p>Online Marketing in 1994</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/quo-vadis-www/online-marketing-2019.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/online-marketing-2019-700x394.png" alt="Nur ein Teil des Online Marketings in 2019: Display Werbung"></a></p>
<p>Nur ein Teil des Online Marketings in 2020: Display Werbung</p>
</li>
</ul>
<p>Das Online-Marketing-Ökosystem im Wandel der Zeit (eigene Darstellung)</p>
<p>Zählte man <a href="https://chiefmartec.com/2019/04/marketing-technology-landscape-supergraphic-2019/">in 2011 noch knapp 150 Mar-Tech-Unternehmen, sind es 2020 bereits über 8.000</a>. Bis 2020 erwartet man weltweit Ausgaben von <a href="https://chiefmartec.com/2019/10/martech-now-121-5-billion-market-worldwide/">121,5 Mrd. USD</a> für Marketing Technologien. 2021? <a href="https://de.statista.com/themen/113/online-werbung/">350 Mrd USD</a>.</p>
<p>Eine Ursache für das Wettrüsten im Digital Marketing ist der Konflikt zwischen den Nutzern, die sich dem ständigen Werbedruck entziehen möchten und den Advertisern, die um genau diese Aufmersamkeit mit dem Wettbewerb buhlen. Die MarTech-Unternehmen haben ihre Chane erkannt und antwortet mit einem unsagbaren Innovationsdruck, der natürlich auch das berühmte <strong>Buzzword-Bullshit-Bingo</strong> befeuert.</p>
<p>So ist eine komplexe Industrie entstanden, die Unmengen an technischen und humanen Ressourcen verschlingt. Im Online-Marketing arbeiten extrem begabte Menschen an extrem ausgefeilten Techologien.</p>
<blockquote>
<p>The best minds of my generation are thinking about how to make people click on ads.</p>
<p>Facebook-Engineer, via <a href="https://thecorrespondent.com/100/the-new-dot-com-bubble-is-here-its-called-online-advertising">thecorrespondent</a></p></blockquote>
<p>Während man anderswo alles daran setzt, mit Automatisierung die Produktivität zu erhöhen, um der von Keynes in 1930 proklamierten 30-Stunden-Woche näher zu kommen, scheint man im Online Marketing nicht müde zu werden, neue Beschäftigungsfelder zu entdecken und aufregende Berufsbezeichnungen zu entwicklen.</p>
<p><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/martech-landscape-growth.jpg" alt="https://cdn.chiefmartec.com/wp-content/uploads/2020/04/martech-landscape-growth.jpg"></p>
<p>Anzahl Unternehmen in der MarTech-Branche (Quelle: <a href="https://cdn.chiefmartec.com/wp-content/uploads/2020/04/martech-landscape-growth.jpg">chiefmartec.com</a>)</p>
<p>Der leider kürzlich verstorbene Anthropologe <a href="https://www.heise.de/newsticker/meldung/Anthropologe-Menschen-verdienen-umso-weniger-je-nuetzlicher-ihr-Job-ist-4192979.html">David Graeber definiert Bullshit Jobs</a> übrigens folgendermaßen: &ldquo;Das ist ein Job, von dem die Leute, die ihn machen, glauben: Wenn es diesen Job nicht gäbe, würde dies nicht auffallen, würden die Dinge sogar ein wenig besser&rdquo;. Die aktuelle Coronoa-Krise und der Begriff &ldquo;systemrelevante Berufe&rdquo; geben dieser Aussage einen gewissen Nachdruck.</p>
<p>Jesse Frederik und Maurits Martijn kommen in einem Artikel, der hinter Online-Advertising eine große Blase vermutet, zu einer absurden Erkenntnis. Trotz des ganzen Aufwandes, trotz immer steigender Werbe-Budgets, trotz einem hyperkomplexen Ökosystem, bestehen Zweifel daran, ob Online Advertising überhaupt effektiv funktioniert:</p>
<blockquote>
<p>&ldquo;Is online advertising working? We simply don’t know&rdquo;</p>
<p>Jesse Frederik und Maurits Martijn, <a href="https://thecorrespondent.com/100/the-new-dot-com-bubble-is-here-its-called-online-advertising">thecorrespondent.com</a></p></blockquote>
<h2 id="fettleibigkeit">Fettleibigkeit</h2>
<blockquote>
<p>Werbung dringt in jede Ritze, jede Pore unseres Lebens. Sie überzieht alles mit einem fiesen, grellen Schleim aus Halbwahrheiten, Stereotypen und Habsucht. Werbung ist Spam, der sich hübsch gemacht hat.</p>
<p>Felix Schwenzel, 24.07.2016, <a href="https://wirres.net/article/articleview/10072/1/6/">wirrest.net</a></p></blockquote>
<p>Ein derartiges Ökosystem hinterlässt auf jeder Webseite seine Spuren und führt damit auch zu ganz handfesten technischen Problemen. <a href="https://idlewords.com/talks/website_obesity.htm#fixes">Die Website-Obesity</a> (&ldquo;Fettleibigkeit&rdquo;) ist ein globales Problem, deren Auslöser zugegeben nicht nur das Online Marketing ist.</p>
<p>Eine Ursache für die Fettleibigkeit bei Webseiten dürften zunächst zahlreiche Popups, Popunder und Banner sein. Ethan Zuckermann, ein Entwickler, der Mitte der 90er Jahre für die Entwicklung der Pop-Ups mit zuständig war, <a href="https://www.horizont.net/medien/nachrichten/Werbung-ist-die-Ursuende-des-Web-Warum-sich-der-Erfinder-der-Pop-ups-fuer-seine-Schoepfung-entschuldigt-121851">hat sich übrigens genau dafür entschuldigt</a> und rechnet gleichzeitig mit Werbung im Internet ab.</p>
<p>Eine andere Ursache sind die unzähligen Prozesse, die im Hintergrund ablaufen. Um auf imgur.com <a href="https://imgur.com/gallery/bapJ6lv">eine Grafik</a> mit einer Größe von 538 KByte zu laden, sendet die Seite 9,62 MByte an Daten und startet 465 HTTP-Anfragen. Initial. Je länger man auf der Seite verweilt, desto mehr Datenvolumen wird in Anspruch genommen. <a href="https://publish.twitter.com/?query=https%3A%2F%2Ftwitter.com%2Fcsswizardry%2Fstatus%2F1185604806901207045&amp;widget=Tweet">Imgur hat die Kontrolle über sein Angebot ganz offensichtlich verloren</a>, steht damit aber auch nicht allein da.</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-6.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-6-700x661.png" alt=""></a></p>
<p>Verbindungen, die beim Aufruf eines Bildes auf imgur.com geöffnet werden</p>
<p>Wie diese große Anzahl entstehen kann, möchte ich am Real Time Bidding (<strong>RTB</strong>) erläutern. Beim RTB geht es um den Handel mit Werbeplätzen. Der Nutzer ruft das Angebot des Publishers auf, der Werbeplätze auf seiner Webseite anbietet. Um nun zu ermitteln, welchen Werbebanner der Nutzer tatsächlich sieht, wird eine Anfrage an die sogenannte <strong>Supply Side Plattform</strong> (<strong>SSP</strong>) abgesetzt. Diese Plattform ist eine Art Sammelbecken für freie Werbeflächen von Publishern.</p>
<p>Auch auf Advertiser-Seite gibt es eine solche Plattform - die <strong>Demand Side Plattform</strong> (<strong>DSP</strong>). Hier werden sozusagen die Wünsche der Advertisers gesammelt, eine bestimmte Werbung auszuspielen. Die Advertiser bieten auf die freien Werbeflächen und die Vermittlung des ganzen geschieht über die <strong>Ad Exchange</strong> - eine Art Börse.</p>
<p>Um die Auswahl der freien Werbeflächen zu optimieren, gibt es auf der Advertiser-Seite außerdem eine <strong>Data Management Plattform</strong> (<strong>DMP</strong>). Natürlich bieten Advertiser nicht blind auf freie Werbeplätze, sondern versuchen ihre Zielgruppe möglichst genau zu erreichen. Die DMP kann dazu sogenannte Segment-Informationen liefern. Befindet sich also ein freier Werbeplatz auf einer Automobil-Seite, werden Advertiser aus der Automobil-Branche bevorzugt dafür Gebote abgeben. Jede dieser Plattformen ist beim Aufruf einer Webseite mit einer Anfrage involviert. Und das ist nur ein kleiner Ausschnitt des Sytems.</p>
<p>Das ganze gehört zum großen Feld des <strong>Programmatic Advertising</strong>. Leider ist das System vor Betrügern nicht gefeit. Aufgrund der schieren Komplexität und langen Lieferketten für den Werbebanner kann man kaum noch vermeiden, dass Betrüger das System für sich ausnutzen und völlig sinnfreie Werbeplätze verkaufen. Adobe, einer der Big Player im Online Marketing, räumt ein, <a href="https://www.heise.de/select/ct/2018/21/1539407897209303">dass 3% der Werbeplätze an Betrüger vermittelt werden</a>.</p>
<h2 id="unzufriedenheit">Unzufriedenheit</h2>
<blockquote>
<p>Advertising is a cancer on society.</p>
<p><a href="http://jacek.zlydach.pl/index.html">Jacek Złydach</a>, _02.<em>10</em>._2019</p></blockquote>
<p>Die technischen Problem sind bei weitem nicht alles. <a href="https://voxeu.org/article/advertising-major-source-human-dissatisfaction">Ein Studie mit 1 Mio. Nutzern zeigte</a> jüngst auf, dass Werbung auch eine wichtige Quelle menschlicher Unzufriedenheit ist. Ein Problem ist, dass Werbung nicht nur informiert sondern auch <strong>Bedürfnisse erzeugt</strong>, die nicht alle gedeckt werden können.</p>
<p>Weiterhin wurde untersucht, wie sich die Zunahme und der Rückgang des Werbeaufkommens auf den nationalen Wohlstand auswirken. Offenbar gibt es auch hier einen Zusammenhang: Wenn sich die <strong>Werbeausgaben</strong> verdoppelt haben, nahm die <strong>Lebenszufriedenheit</strong> um 3% ab.</p>
<p>Zwar geht es in dieser Studie um Werbung allgemein. Die Werbung im Web, einem unserer täglichen Begleiter, dürfte daran aber einen erheblichen Anteil haben.</p>
<h2 id="der-datenschutz">Der Datenschutz</h2>
<blockquote>
<p>&ldquo;Das Problem ist nicht der Datenschutz, es ist die Datensammlung.&rdquo;</p>
<p><a href="https://www.zdnet.com/article/gdpr-is-missing-the-point-says-edward-snowden/">Edward Snowden</a></p></blockquote>
<p>Theoretisch wäre es ohne weiteres denkbar, dass der Schutz (persönlicher) Daten und Online Marketing konfliktfrei koeexisieren. Doch die Versuchung ist groß. Je besser sich die Nutzer identifizieren lassen, desto höher ist die Effizienz der meisten Marketing-Maßnahmen.</p>
<p>Die Ziele und der Ideenreichtum des Online Marketings kollidieren demnach massiv mit dem steigenden Datenschutzbewusstsein innerhalb der Gesellschaft und damit einhergehend den gesetzlichen Vorgaben.</p>
<p>Die wichtigste Waffe im Kampf gegen das Tracking sind seit jeher Browsererweiterungen wie <strong>NoScript</strong>, <strong>AdBlockPlus</strong> (*<a href="https://www.gruenderszene.de/allgemein/adblock-plus-kritik">hust</a>*) usw. Auf die Seite der Konsumenten haben sich außerdem zwei Browserhersteller geschlagen. <strong>Apple</strong> hat seinen Browser <strong>Safari</strong> als einer der ersten Anbieter mit einer Technologie ausgestattet, die das sogenannte Tracking erschweren soll (<strong>ITP</strong>, <strong>Intelligent Tracking Prevention</strong>). <strong>Mozilla</strong> zog wenig später nach**: Firefox** blockiert standardmäßig <strong>3rd-Party-Cookies und</strong> bietet einen Schutz vor ungewollter Aktivitätenverfolgung an. Unmöglich wird das Tracking dadurch lange nicht, aber zumindest erschwert.</p>
<p><strong>Google</strong> ist mit seinem Browser <strong>Chrome</strong> noch etwas zurückhaltender. Nicht ohne Grund. 85% der Einnahmen von Google stammen aus dem Werbegeschäft. <a href="https://www.macrotrends.net/stocks/charts/GOOG/alphabet/net-income">Der Nettogewinn der Muttergesellschaft</a> Alphabet stieg von 12 Mrd. USD in 2017 auf 30 Mrd. USD. <a href="https://stadt-bremerhaven.de/google-viel-umsatz-und-viel-gewinn-mit-viel-werbung/">85% der Einnahmen</a> stammen aus dem Werbegeschäft.</p>
<p><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-700x390.png" alt=""></p>
<p>Der hauseigene Tracking-Dienst &ldquo;Google Analytics&rdquo; gehört für viele zum Quasi-Standard. Egal welchen Zweck ein Webseiten-Betreiber mit der Analyse seiner Besucher verfolgt, der erste Griff geht reflexartig zu Google Analytics. Was dabei gerne übersehen oder einfach ignoriert wird: Man überlässt Google die Daten der eigenen Nutzer und Kunden freimütig. Dabei würde eine selbst gehostete, aggregierte Besucherstatistik vielleicht schon genügen.</p>
<blockquote>
<p>Data is the new oil and GA is Deepwater Horizon.</p>
<p>Kemal Ahmed, 21.01.2020, <a href="https://dev.to/goatandsheep/stop-donating-your-customers-data-to-google-analytics-191">dev.to</a></p></blockquote>
<p>So viel Marktmacht bleibt natürlich nicht ungesehen. <a href="https://www.tagesschau.de/wirtschaft/google-kartellverfahren-103.html">Gerade sieht sich Google in den USA einer Kartellrechtsklage</a> ausgesetzt.</p>
<p>Gegenwind bekommt die Online-Marketing-Industrie auch von Seiten des Gesetzgebers (Nicht erst jetzt seit 2018, Datenschutzgesetze gibt es schon länger, <a href="https://de.wikipedia.org/wiki/Hessisches_Datenschutzgesetz">das erste dieser Art stammt sogar aus Hessen</a>).</p>
<p>Mit der in Mai 2018 inkraft getretenen Datenschutzgrundverordnung (<strong>DSGVO</strong>) versucht der europäische Gesetzgeber dem Datenschutz mehr Bedeutung zu verleihen. Bei der DSGVO geht es ganz allgemein um den Schutz personenbezogener Daten, unabhängig davon ob im Internet, beim Bäcker oder einer Behörde. Eine auf die speziellen Anforderungen des Internets zugeschnittene <strong>ePrivacy-Verordnung</strong>, die vor allem dabei helfen sollte, die entstandene Rechtsunsicherheiten zu beseitigen, lässt seit Jahren auf sich warten. Warum? <a href="https://netzpolitik.org/2018/bericht-ueber-lobbyismus-wie-die-datenindustrie-die-eu-bearbeitet/">Die Online Marketing Branche hat eine starke Lobby</a>.</p>
<p>Nichtsdestotrotz urteilten <a href="https://www.e-recht24.de/artikel/datenschutz/12119-bgh-urteil-cookies-einwilligung.html">europäische</a> und auch <a href="https://www.e-recht24.de/artikel/datenschutz/12119-bgh-urteil-cookies-einwilligung.html">deutsche Gerichte</a> erst kürzlich auch zum Thema Cookies und auch das umstrittene Privacy-Shield <a href="https://www.juris.de/jportal/nav/juris_2015/aktuelles/magazin/schrems-ii-videokonferenz.jsp">wurde mittlerweile kassiert</a>.</p>
<p>Für den Nutzer und die Betrieber kleiner Seiten ist die Situation schon lange nicht mehr durchschaubar. Aber auch &ldquo;<em>Europas Regierungen scheitern an der DSGVO</em>&rdquo;, so <a href="https://www.golem.de/news/dsvgo-nichts-weniger-als-staatsversagen-2005-148700.html">Dave Ryan</a>, Datenschutzspezialist beim Browser Brave.</p>
<blockquote>
<p><em>Werden finanzstarke Großunternehmen mal an den Haken genommen, dann schöpfen diese mit Anwaltsarmeen den Rechtsweg bis zur höchsten Instanz aus und betreiben ihre illegalen und lukrativen Geschäftsmodelle über Jahre hinweg weiter.</em></p>
<p><a href="https://www.golem.de/news/dsvgo-nichts-weniger-als-staatsversagen-2005-148700.html">Thilo Weichert, Datenschutzexperte</a></p></blockquote>
<p>Wer personenbezogen Daten erfasst oder verarbeitet, benötigt laut DSGVO eine Rechtsgrundlage. Als Legitimation bietet sie u.a. das <strong>explizite Einverständnis</strong> (engl. <strong>Consent</strong>) des Nutzers oder ein <strong>berechtigtes Interesse</strong> (engl. <strong>legitimate interest</strong>) an.</p>
<p>Damit soll das ungehinderte Erfassen und Verarbeiten personenbezogener Daten erschwert werden. In der Realität sieht das folgendermaßen aus: Die Hausfrau und der Hausmann sind von der neuen Informationsflut wohl eher überfordert und genervt. Der Webseiten-Besucher muss nun beim Aufrufen einer Webseite der Verarbeitung seiner personenbezogner Daten zustimmen und wird darüber maximal transparent aufgeklärt. Der berühmt-berüchtigte <strong>Cookie-Banner</strong> gehört zum gewohnten Bild.</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-10.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-10-700x162.png" alt=""></a></p>
<p>Cookie-Banner von bildderfrau.de (abgerufen am 24.10.2020)</p>
<p>Der prominente grüne Button führt dazu, dass jede Tracking-Maßnahme akzeptiert wird. Wer nur technische notwendige Cookies zulassen möchte, muss sich über die Einstellungen mit den Hintergründen beschäftigen und wird mit über 250 Unternehmen konfrontiert, die beim Besuch einer Webseite involviert sein könnten:</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-11.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-11-700x407.png" alt=""></a></p>
<p>Cookie-Einstellungen von bildderfrau.de (abgerufen am 24.10.2020)</p>
<p>Schon mal was von Teads, Tapad, Taboola oder Tealoum gehört? Der Otto-Normal-Nutzer wird Schwierigkeiten haben zu verstehen, was hier passiert. Der Cookie-Banner wird nur als störend empfunden und vermutlich ungelesen weggeklickt.</p>
<p>Das ist natürlich kein Einzelfall. So sieht der Cookie Banner bei chefkoch.de aus:</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-12.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-12-700x251.png" alt=""></a></p>
<p>Cookie-Banner von chefkoch.de (abgerufen am 24.10.2020)</p>
<p>&ldquo;Auch wenn du <strong>nicht zustimmst</strong>, siehst du weiterhin Werbung.&rdquo; - aber wo befindet sich der Button, um nicht zuzustimmen?</p>
<p>Natürlich ist es im Interesse der Branche, dass der Nutzer seine volle Zustimmung gibt. Um das zu erreichen bedient man sich gerne sogenanter <a href="https://de.wikipedia.org/wiki/Dark_Pattern">Dark Patterns</a>. Dabei wird ein Benutzerinterface so gestaltet, dass der Nutzer eine Entscheidung fällt, die unter Umständen gegen sein eigentliches Interesse ist.</p>
<p>Im Januar 2020 <a href="https://arxiv.org/abs/2001.02479">hat man die Verwendung von Dark Patterns im Lichte der DSVO untersucht</a>. Nur knapp 12% der untersuchten Seiten setzen die Vorgabe der DSGVO minimal rechtskonform um. Bei allen anderen Seiten stellte man den Einsatz von Dark Patterns oder einer Gestaltung fest, die ein bestimmtes Einverständnis bereits im voraus implizierte.</p>
<p>Der ganze Aufwand und die ausgefeilten Texte und Erklären waren am Ende aber doch umsonst, weil die Nutzer <a href="https://ninja-cookie.com/">Browser-Erweiterungen</a> nutzen, die derartige Pop-Ups einfach wegklicken.</p>
<p>Während die Gesetze kleinere Unternehmen oder selbständige Webseiten-Betreiber vor große Herausforderungen stellen und für den Nutzer komplett nutzlos zu sein schein, spielen sie vor allem den Big Playern wie Facebook und Google in die Arme:</p>
<blockquote>
<p>Die größten Gewinner der DSGVO sind denn auch die großen, meist amerikanischen Konzerne, die von einheitlichen Regeln auf dem Binnenmarkt profitieren. Kleine und mittlere Unternehmen leiden hingegen unter der neuen Datenschutzbürokratie. Und die Verbraucher werden weiter ausgeraubt. Ihre kostbaren Daten gibt es immer noch umsonst, trotz DSGVO.</p>
<p>Zwei Jahre Datenschutzgrundverordnung - Für die Nutzer komplett nutzlos, Eric Bonse, 25.06.2020, <a href="https://taz.de/Zwei-Jahre-Datenschutzgrundverordnung/!5691398/">taz.de</a></p></blockquote>
<h2 id="zwei-neue-mitglieder-im-online-marketing-ökosystem">Zwei neue Mitglieder im Online Marketing Ökosystem</h2>
<p>Ein interessanter Effekt, der die Innovationskraft der Branche sehr gut demonstriert, ist die Entstehung und der Aufstieg der <strong>Consent Management Plattformen</strong> (<strong>CMP</strong>). Damit reiht sich eine weitere Dienstleistung in das Ökosystem des Online-Marketings ein. Bei der CMP handelt es sich um eine Plattform, die den Consent der Nutzer zentral verwaltet. Das erleichtert den Publishern das Einbinden eines einheitlichen Cookie-Banners. Der Nutzer profitiert wiederum von der Wiedererkennung der Abfrage und der zentralen Verwaltung seiner Zustimmung.</p>
<p>Im Hintergrund hat das <strong>IAB</strong> - der Branchenverband des Online-Marketings - einen Standard entwickelt, um das Einholen des Einverständnisses auch aus technischer Sicht zu erleichtern: Das <strong>TCF</strong> - <strong>The Consent Framework</strong>.</p>
<p>Beide Dienste, CMP und TCF, sind natürlich kostenpflichtig. Das TCF ist mittlerweile soweit verbreitet, dass es für Advertiser, Publisher und MarTech-Unternehmen kaum einen Weg daran vorbeigibt. Das erleichtert einerseits die Prozesse, ist andererseits aber auch ein erheblicher zusätzlicher Kostenfaktor. <a href="https://vendorlist.consensu.org/v2/vendor-list.json">Aktuell haben sich knapp 900 Vendoren</a>, also MarTech-Unternehmen, für das TCF registriert (Der Jahresbeitrag beträgt übrigens 1.200 Euro - knapp 1 Mio. Euro mehr oder weniger garantierter jährlicher Umsatz für die Pflege eines Standards sind ein hübsches Sümmchen).</p>
<p>Das TCF ist ein Standard von der Industrie für die Industrie. Zweck der Consent-Banner ist es nicht, dem Nutzer Online-Marketing zu erklären - das würde den Rahmen bei weitem sprengen. Das TCF dient dazu, alle notwendigen Informationen zu präsentieren, um rechtskonform zu handeln und sich nicht angreifbar zu machen.</p>
<p>Will man sich mit der Verwendung seiner Daten ausführlicher beschäftigen, darf man sich <a href="https://support.google.com/displayvideo/answer/9496576?hl=de">mit über einem Dutzend von sogenannten Zwecken und Funktionen des Trackings</a> auseinandersetzen. Darunter z.B. &ldquo;Automatisch Geräteeigenschaften zur Identifizierung empfangen und senden&rdquo;, &ldquo;Offline-Datenquellen zusammenführen und kombinieren&rdquo;, &ldquo;Gerätemerkmale aktiv zu Identifizierungszwecken scannen&rdquo;, &ldquo;Anzeigenleistung messen&rdquo; usw. usf.</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/Screenshot_2020-10-24-TechCrunch-ist-jetzt-Teil-von-Verizon-Media.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/Screenshot_2020-10-24-TechCrunch-ist-jetzt-Teil-von-Verizon-Media-150x150.png" alt=""></a></p>
<p>Tracking-Einstellungen von yahoo.com (abgerufen am 24.10.2020)</p>
<p>Noch Fragen?</p>
<h2 id="ein-sündenbock-namens-cookie">Ein Sündenbock namens Cookie</h2>
<p>Der Cookie muss seit dem gestiegenen Datenschutzbewusstsein in der Öffentlichkeit als Sündenbock herhalten. Dabei ist der Cookie, wenn man so will, nur der unschuldige Überbringer der Nachricht.</p>
<p>Ein Cookie kann in der Regel nur von der Webseite gelesen werden, die ihn auch gesetzt hat. Das ist ein wichtiges Sicherheitsmerkmal. Setzt spiegel.de also einen Cookie, kann nur spiegel.de diesen Cookie lesen. Man spricht vom <strong>First-Party-Cookie</strong>. Nutzt spiegel.de die Dienste eines MarTech-Unternehmens, geschieht das oft über sogenannte <strong>Third-Party-Cookies</strong>. Dazu erzeugt spiegel.de auf seiner Seite z.B. mit JavaScript, einen kleinen, für den Nutzer unaufälligen Aufruf, zu einer anderen Webseite, z.B. track.martech-company.de. Dadurch kann auf dem Computer des Nutzers beim Aufrufen von spiegel.de ein zusätzliches Cookie, eine Third-Party-Cookie, von track.martech-company.de gesetzt werden.</p>
<p>Besucht der Nutzer danach heise.de, wo auch die Dienste von track.martech-company.de eingesetzt werden, kann das MarTech-Unternehmen seinen Cookies auslesen. Dadurch kann das MarTech-Unternehmen eine Verbindung herstellen: Der Nutzer war erst auf spiegel.de, dann auf heise.de und so weiter.</p>
<p>Da viele Browser Third-Party-Cookies standarmäßig blockieren, setzen viele MarTech-Unternehmen auf eine einfache Weiterleitung: Der eben erwähnte unaufällige Aufruf geht einfach an martech.spiegel.de und wird von dort intern zu track.martech-company.de weitergeleitet. Damit handelt es sich wieder um einen “vertrauenswürdigen” First-Party-Cookie.</p>
<p>Der Third-Party-Cookie sind also nicht das Problem, geschweige denn der Cookie ansich. Denn es eine ganze Menge anderer Technologien, um den Benutzer in irgendeiner Form im Web zu identifizieren.</p>
<p>Der <strong>ETag</strong> etwa, essentieller Bestandteil von HTTP, kann als eindeutiges Identifizierungsmerkmal genutzt werden. Mit <strong>Finger Printing</strong> lassen sich verschieden technische Merkmale zu einem eindeutigen Hash zusammensetzen. Die <strong>IP-Adresse</strong> ist nach ebenfalls ein essentieller Bestandteil der Kommunikation im Internet - IP steht für Internet Protokoll.</p>
<p>Eine weitere Möglichkeit sind <strong>Identitäts-Plattformen</strong>. Sie werben mit dem Versprechen, mit einem zentralen Konto den Zugriff auf viele Internetdienste zu ermöglichen (<strong>Single-Sign-On</strong>). <strong>Google</strong> und <strong>Facebook</strong> sind zwei der bekanntesten Plattformen.</p>
<p>Das ist bequem, hat aber auch den Effekt, das in einem Facebook-Konto jede Anmeldung zentral erfasst wird. Egal, ob man sich in einem Auto-Forum oder bei einem Kaffe-Blog angemeldet hat. Die <strong>netId</strong>, ein Projekt von <strong>RTL</strong>, <strong>Pro7Sat1</strong> und <strong>United Internet</strong>, wird als europäischer Antagonist platziert. Der Vorteil dieser Plattformen: Die Nutzung geschieht freiwillig.</p>
<p>Der letzte Schrei sind übrigens <a href="https://piwikpro.de/blog/cookie-tracking-alternative-moeglichkeiten-zu-klassischem-tracking/">Id-Graphen</a>. Dabei werden alle verfügbaren Informationen, E-Mail-Adresse, Geo-Lokalisierung, IP-Adressen, Social-Media-Profile uvm. gesammelt und dann mit Hilfe von deterministischen oder probabilistischen Methoden verknüpft. Der große Vorteil: Dieses Methode funktioniert geräteübergreifend. Egal, ob der Nutzer mit dem Laptop, Smartphone oder Smart-TV im Web unterwegs ist, sein Weg durch das Internet ergibt eine Spur.</p>
<p>Fakt ist im Moment: <a href="https://www.heise.de/ct/artikel/Trotz-neuer-Schutzmassnahmen-koennen-Verbraucher-Tracking-kaum-entgehen-4537827.html">In der Realität wird sich das Tracking nicht vermeiden lassen.</a> Man wird <a href="https://www.heise.de/select/ct/2018/21/1539407897209303">sich der personalisierten Werbung nicht entziehen können</a>.</p>
<h2 id="daten">Daten</h2>
<p><a href="https://chiefmartec.com/2020/04/marketing-technology-landscape-2020-martech-5000/">Laut chiefmartec.com verzeichnt</a> die Anzahl der MarTech-Unternehmen aus der Kategorie &ldquo;Daten&rdquo; mit 25% das größte Wachstum in 2020. Daten sind das Produkt der oben genannten Wertschöpfungskette, in der ein essentieller Teilnehmer, der eigentliche Datenlieferant, gar nicht berücksichtigt wird: Der Nutzer.</p>
<p>Jaron Lanier forderte bereits 2013 ein Ende der Umsonst-Mentalität und <a href="https://www.deutschlandfunkkultur.de/internetkritiker-jaron-lanier-schluss-mit-der-umsonst.1264.de.html?dram:article_id=437491">eine finanzielle Ausgleich für den, der Daten liefert</a>. Auf dem Global Solutions Summit in Berlin forderte Angela Merkel in 2018 dazu auf, <a href="https://www.zeit.de/politik/deutschland/2018-05/steuerreform-angela-merkel-daten-eu">Daten einen angemessenen Wert beizumessen</a>:</p>
<blockquote>
<p>Die Bepreisung von Daten, besonders die der Konsumenten, ist aus meiner Sicht das zentrale Gerechtigkeitsproblem der Zukunft.</p>
<p>Angela Merkel, 2018</p></blockquote>
<p>Der Ruf, dass Daten als Gut auch bezahlt werden müssen, <a href="https://www.latimes.com/opinion/story/2020-06-23/andrew-yang-data-dividend-tech-privacy">wird immer</a> wieder <a href="http://amortizedcost.net/make-them-pay-for-personal-data/">laut</a>.</p>
<p>Das Problem ist übrigens hausgemacht. Die Gründerzeit des Internets hat dem Nutzer eine Kostenlos-Menthalität beigebracht, die es nun gilt ihm wieder abzugewöhnen. Auf der anderen Seite stehen Inhalteanbieter und Werbetreibende, die die Reichweite des Internets schätzen</p>
<p>Eine Möglichkeit wäre, die Inhalteanbieter von der Abhängigkeit der Advertiser zu befreien. Um das zu erreichen, wird bereits seit einiger Zeit auf <strong>Mikotransaktionen</strong> und <strong>Cookie-Walls</strong> oder <strong>Pay-Walls</strong> gesetzt. Spiegel Online setzt das vorbidlich um. Hier wird nicht versucht, dem Nutzer mit Fachbegriffen zu verwirren und zu einer Entscheidung zu verleiten. Der Nutzer kann das Online-Angebot gegen Bezahlung nutzen: Entweder mit seinen &ldquo;Daten&rdquo; oder ganz schnöde und konservativ: Mit Geld.</p>
<p><a href="https://www.nickyreinert.de/files/marketing-killed-the-internet-star/grafik-13.png"><img src="/2020/2020-10-24-marketing-killed-the-internet-star/images/grafik-13-700x602.png" alt=""></a></p>
<p>Daten oder Abo? (abgerufen von spiegel.de am 24.10.2020)</p>
<p>Einen anderen Weg geht <a href="https://coil.com/p/coil/Coil-Mozilla-and-Creative-Commons-Launch-100-Million-Grant-for-the-Web-to-Advance-Web-Monetization-f/Bdp8Hgcf4">Coil, ein Konsortium</a> von <strong>Mozilla</strong> und <strong>Creative Commons</strong>. Das Projekt wurde im September 2019 gestartet, mit dem Ziel das Gerechtigkeitsproblem zu lösen. Mit finanzieller Unterstützung will man Inhaltserzeuger dazu bewegen, auf Werbung und Datenerfassung zu verzichten. Dazu stellt das Konsortium Mittel in Höhe von 100 Mio. USD bereit. Nutzert können sich für 5 USD im Monat registrieren und bekommen so Zugriff auf kostenpflichtige Inhalte im Internet. Die Einnahmen werden dann an die Inhalteanbieter verteilt. Das ganze geschieht natürlich unter strengster Einhaltung von Datenschutzgrundsätzen.</p>
<p>Der <a href="https://de.wikipedia.org/wiki/Brave_%28Browser%29">Browser Brave</a> versucht ebenfalls Nutzer und Publisher direkt zusammenzubringen. Wird Werbung ausgespielt, erhalten Nutzer und Browser-Hersteller <strong>15%</strong> der Einnahmen, der Publisher erhält <strong>70%.</strong> Die Gutschrift erfolgt in Form der digitalen Währung Basic Attention Token. Eine Benutzerverfolgung findet nicht statt.</p>
<h2 id="und-nun">Und nun?</h2>
<p>Jeff Jarvis konstatiert, dass das Problem nicht die Werbung sei, sondern die Ökonomie der Massenmedien, die im Internet nicht funktioniert. Heißt: Es werden mehr Inhalte erzeugt, da diese Clicks bringen. Die Lösung: Nur gute Inhalte liefern und sonst zu verlinken. Der Inhalteanbieter muss sich auf das Erzeugen von Inhalten konzentrieren, nicht das Erzeugen von Werbe-Umsätzen.</p>
<blockquote>
<p>Do what you do best and link to all the rest.</p>
<p><a href="https://www.theguardian.com/media/2007/apr/30/mondaymediasection.internet">Jeff Jarvis, 30.04.2007</a></p></blockquote>
<p>Sein Appell: Werbung nicht abschaffen, sondern reparieren. Denn ein Internet und seine Dienste können ohne Werbung nicht funktionieren. Das muss auch nicht so sein. Das Ziel soll es sein, Inhalteanbieter für ihre Leistung fair zu belohnen. Immer unter der Prämisse: Die Inhalte sind das Produkt, nicht die Nutzer.</p>
<p>Hat Online Marketing das Web umgebracht? Nein. Aber mindestens zu seinen Gunsten geformt, es verändert. <a href="https://www.cjr.org/special_report/building-honest-internet-public-interest.php">Wäre das Internet eine Stadt</a>, &ldquo;wäre Wikipedia ein öffentlicher Park und der Rest wären Einkaufspassagen&rdquo;.</p>
<p>Steht das Online Marketing unter Generalverdacht? Nein. Werbebudgets müssen gerecht verteilt, Kampagnen optimiert werden. Allerdings sollte die Datensouveränität beim Nutzer liegen. Man muss dem Nutzer die Entscheidung in die Hände legen, welche persönlichen Daten er preisgibt und ihn dementsprechend dafür belohnen. Diese Daten müssen denzentral gespeichert werden und nicht durch eine Plattform verwaltet werden, an die der Nutzer sich gebunden fühlt.</p>
<p>Stell dir vor, der Nutzer könnte eine Art <strong>Werbeprofil</strong> in seinem Browser verwalten. Die Informationen sind nur dort und gegebenenfalls auf synchronisierten Geräten verfügbar. Der Nutzer bestimmt, welche persönlichen Informationen er preisgeben will. Je wertvoller diese Daten für die Advertiser sind, desto größer fällt eine &ldquo;Belohnung&rdquo; aus. </p>
<p>Der Nutzer wäre ein gleichberechtigtes Mitglied im Wertschöpfungskreislauf des Online Marketings.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> internet, online-marketing, www</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Online Marketing killed the Internet Star - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Das Memory Limit von PHP und WordPress erhöhen - die vollständige Anleitung</title>
      <link>http://localhost:1313/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/</guid>
      <description>Das Memory Limit, sprich die Speichergrenze, von PHP ist für viele oft ein Rätsel. Es ist nicht klar, wie bzw. wo es gesetzt wird und welche Auswirkungen die …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Das Memory Limit, sprich die Speichergrenze, von PHP ist für viele oft ein Rätsel. Es ist nicht klar, wie bzw. wo es gesetzt wird und welche Auswirkungen die unterschiedlichen Einstellungsorte haben.&#39; reading_time: 10 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Database, Server, Mobile, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Das Memory Limit, sprich die Speichergrenze, von PHP ist für viele oft ein Rätsel. Es ist nicht klar, wie bzw. wo es gesetzt wird und welche Auswirkungen die unterschiedlichen Einstellungsorte haben. <a href="https://wp-ninjas.de/wordpress-php-memory-limit">Viele</a> <a href="https://www.hosttest.de/artikel/was-ist-das-php-memory-limit-1411.html">Anleitungen</a> <a href="https://socialmediadozent.com/php-memory-limit-erhoehen/#Drei_Loesungen_um_das_PHP_Memory_Limit_zu_erhoehen">sind</a> <a href="https://www.how-to-wordpress.de/php-memory-limit/">oft</a> <a href="http://juliusbeckmann.de/blog/php-memory-limit-erhohen.html">unvollständig</a>, und tragen damit eher zur Irritation bei. Denn tatsächlich gibt es unzählige Möglichkeiten das Memory Limit zu setzen:</p>
<ul>
<li>super-global in der php.ini</li>
<li>global in der pool.conf, bei Verwendung von PHP-FPM</li>
<li>oder global in der httpd.conf (Apache) oder server.conf (nginx)</li>
<li>auf Ordner-Ebene in der user.ini</li>
<li>auf Ordner-Ebene in der .htaccess-Datei</li>
<li>auf Applikations-Ebene über die WordPress-Konstanten WP_MEMORY_LIMIT und WP_MAX_MEMORY_LIMIT</li>
<li>oder auf Datei-Ebene im Script mit ini_set();</li>
</ul>
<p><a href="https://www.nickyreinert.de/files/das-memory-limit-von-php-wie-funktioniert-es/grafik-7.png"><img src="/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/images/grafik-7-700x246.png" alt=""></a></p>
<p>Unterschiedliche Orte, um das PHP Memory Limit (und andere Parameter) zu setzen</p>
<p>Die Reihenfolge entspricht übrigens der Hierarchie. Wird das Limit also im PHP-Script mit ini_set() gesetzt, überschreibt das die Einstellung in der <strong>httpd.conf</strong> oder <strong>server.conf</strong>. Wie sich das vermeiden lässt, dazu unten mehr. Das trifft natürlich nicht nur auf das Memory Limit, sondern so ziemlich jede PHP-Einstellung zu.</p>
<p>Außerdem hängen die Möglichkeiten stark davon ab, wie du PHP nutzt, also ob als Modul oder über CGI. Um das Vorgehen besser zu verdeutlichen, gehe ich im Folgenden von zwei WordPress-Setups aus. Einmal wird nginx als HTTP-Server genutzt und dort PHP-FPM über CGI angesprochen. Das zweite Setup nutzt Apache2 als HTTP-Server und dort PHP als Modul (php-mod).</p>
<h2 id="was-bedeutet-das-memory-limit-von-php">Was bedeutet das Memory Limit von PHP?</h2>
<p>Jeder Dienst benötigt für seine Ausführung Platz im Arbeitsspeicher. So auch PHP. Und mit jedem Aufruf eines PHP-Scripts wird PHP aktiviert und fordert somit Platz im Arbeitsspeicher ein. Und genau dort spielt die Speichergrenze eine Rolle: Um zu vermeiden, dass bei der Verarbeitung <strong>eines PHP-Scripts</strong> zu viel Speicher verbraucht und damit der ganze Server in Mitleidenschaft gezogen wird, legt man eine Obergrenze fest, das <strong>memory_limit</strong>.</p>
<p>Diese Grenze gilt <strong>für jeden einzelnen Script-Aufruf</strong>. Ein Beispiel: Dein Server hat 8 GByte (<strong>8.192 MByte</strong>) Arbeitsspeicher. Der Aufruf der Datei index.php, die eine sehr aufwendige Datenbankabfrage durchführt und damit viele Daten verarbeitet, erfordert 10 MByte Arbeitsspeicher (das ist übrigens relativ viel und <a href="https://www.deimeke.net/dirk/blog/index.php?/archives/304-Bytes-auf-Papier-....html">entspricht etwa 5.000 bedruckten A4 Seiten</a>). Das Memory-Limit ist auf <strong>32 MByte</strong> eingestellt. Das physikalische Limit beträgt allerdings <strong>8.192 MByte</strong>. Die index.php kann also <strong>819 mal</strong> gleichzeitig (!) aufgerufen werden; erst dann ist der Arbeitsspeicher voll. Das Memory-Limit hat hier also keine Auswirkungen.</p>
<p>Gehen wir nun davon aus, dass bei einem der <strong>819</strong> Aufrufe bestimmte Parameter gesetzt werden, die eine weitaus größere Datenmenge in der Datenbank abfragen. Die Datenmenge erhöht sich auf <strong>40 MByte</strong>. An dieser Stelle wird das memory_limit aktiv. Der Aufruf dieses Scripts wird abgebrochen mit der Fehlermeldung, dass die erlaubte Speichergrenze überschritten wurde. PHP wird in diesem Fall eine Fehlermeldung wie diese anzeigen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">Fatal error: Allowed memory size of 33554432 bytes exhausted…” followed by something like “(tried to allocate 8388608 bytes) in /home/www/index.php on line 42.”
</span></span></code></pre></div><p>Das Gute daran: Der Aufruf der anderen Scripte wird davon nicht in Mitleidenschaft gezogen.</p>
<p>Es gibt sehr viele Wege, das Speicherlimit zu setzen. Das hat Vorteile aber auch Nachteile: So wird die Suche nach den gesetzen Einstellungen oft zur Suche nach der berühmten Nadel im Heuhaufen. Der Vorteil: Du kannst das Speicherlimit sehr granular an die Anforderungen deiner verschiedenen Anwendungen anpassen. Bereit? Los gehts&hellip;</p>
<h2 id="grundsätzliches">Grundsätzliches</h2>
<p>Der Wert, den du für das Memory Limit übermittelst, kann als einfache Ziffer übergeben werden und legt die Speichergrenze somit in <strong>Byte</strong> fest. PHP unterstützt darüber hinaus einige <strong><a href="https://www.php.net/manual/de/faq.using.php#faq.using.shorthandbytes">Kurzschreibweisen</a></strong>, also z.B. K für Kilobyte (32K), M für Megabyte (256M) und G für Gigabye (2G).</p>
<p>Willst du verhindern möchtest, dass die Speichergrenze später an anderer Stelle überschrieben wird, definierst du sie mithilfe von <strong>php_admin_value</strong> anstatt nur <strong>php_value</strong>. Also z.B.:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php_admin_value[memory_limit] = 256M
</span></span><span class="line"><span class="ln">2</span><span class="cl"># oder
</span></span><span class="line"><span class="ln">3</span><span class="cl">fastcgi_param PHP_ADMIN_VALUE &#34;memory_limit = 256M&#34;;
</span></span><span class="line"><span class="ln">4</span><span class="cl"># oder
</span></span><span class="line"><span class="ln">5</span><span class="cl">php_admin_value memory_limit = 256M
</span></span></code></pre></div><p>Willst du das Memory LImit komplett deaktivieren, dann setzt du es auf -1:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">memory_limit = -1
</span></span></code></pre></div><p>Aber Achtung: Zu Testzwecken mag das sinnvoll sein, in einer Live-Umgebung solltest du immer mit einer Obergrenze arbeiten.</p>
<p>Und abschließend noch der Verweis auf zwei nützliche Funktionen, die eigentlich bekannt sein sollten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">echo ini_get(&#39;memory_limit&#39;); // zeigt das aktuell gesetzte Memory Limit
</span></span><span class="line"><span class="ln">2</span><span class="cl">phpinfo(); // zeigt alle relevanten Parameter, u.a. Memory Limit und verwendete .ini-Dateien
</span></span></code></pre></div><p><a href="https://www.nickyreinert.de/files/das-memory-limit-von-php-wie-funktioniert-es/grafik-1.png"><img src="/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/images/grafik-1-700x25.png" alt=""></a></p>
<p><strong>Wichtig</strong>: Derartige Funktionen dienen der Fehlersuche und sollten im Live-System nicht unbedingt öffentlich abrufbar sein!</p>
<h2 id="das-memory-limit-in-php-einstellen">Das Memory Limit in PHP einstellen</h2>
<h3 id="super-global-in-der-phpini">Super global in der php.ini</h3>
<p>Die erste &ldquo;Konfigurations-Stufe&rdquo; befindet sich natürlich direkt innerhalb von PHP. Wenn du wissen willst, wo sich die Einstellungen für PHP befinden, nutze ganz einfach phpinfo(); Die entsprechende Datei heißt <strong>php.ini</strong> und befindet sich in der Regel in /etc/php/7.0/apache2/php.ini (für PHP als Modul, z.B. in <strong>Apache2</strong>) oder /etc/php/7.4/fpm/php.ini (für PHP als Dienst, z.B. in <strong>nginx</strong>). Der Parameter ist in beiden Fällen gleich:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">memory_limit = 256M
</span></span></code></pre></div><p>Wenn du PHP als Modul unter Apache nutzt, musst du Apache2 neustarten, bzw. die Konfiguration neu einlesen lassen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">service</span> <span class="n">apache2</span> <span class="n">restart</span> 
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">service</span> <span class="n">apache2</span> <span class="n">reload</span>
</span></span></code></pre></div><p>Analog, bei PHP als Dienst, wie z.B. in nginx, erfolgt das Neustarten folgendermaßen (In der Regel reicht es aus, mit reload nur die Konfiguration neu zu laden. Sollte es zu Komplikationen kommen, hilft ein kompletter Neustart des Dienstes eventuell weiter).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">service</span> <span class="n">php7</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="n">fpm</span> <span class="n">restart</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">service</span> <span class="n">php7</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="n">fpm</span> <span class="n">reload</span>
</span></span></code></pre></div><h3 id="für-jeden-php-fpm-pool-in-der-poolconf">Für jeden PHP-FPM Pool in der pool.conf</h3>
<p>Nutzt du PHP-FPM über CGI (also mein erstes Setup mit nginx), gibt es für jeden Server (bzw. virtuellen Host) einen eigenen <strong>Pool</strong>, lies eine Art eigene getrennte PHP-Umgebung für jeden einzelnen virtuellen Host. Die Einstellungen dazu befinden sich z.B. unter <strong>/etc/php/7.4/fpm/pool/my_host.conf</strong>. Hier wird der entsprechende Parameter folgendermaßen gesetzt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[my_host_de]
</span></span><span class="line"><span class="ln">2</span><span class="cl">...
</span></span><span class="line"><span class="ln">3</span><span class="cl">php_value[memory_limit] = 1024M
</span></span><span class="line"><span class="ln">4</span><span class="cl">...
</span></span></code></pre></div><p>Die Einstellung an dieser Stelle überschreibt den Wert in der <strong>php.ini</strong>. Nach der Änderung muss der PHP-Dienst natürlich neu gestartet werden.</p>
<h2 id="das-memory-limit-in-apache2-und-nginx-setzen">Das Memory-Limit in Apache2 und nginx setzen</h2>
<h3 id="super-global-in-der-nginxconf--httpdconf">Super global in der nginx.conf / httpd.conf</h3>
<p>Für die beiden HTTP-Server nginx und Apache2 gibt es die beiden globalen Einstellungsdateien <strong>/etc/nginx/nginx.conf</strong> bzw. <strong>/etc/apache2/httpd.conf</strong>. In nginx kann das PHP-Limit im sogenannten <strong>http-Kontext</strong> gesetzt werden und gilt damit für die komplette Nginx-Instanz. Ich gehe hier und im Folgenden übrigens davon aus, dass nginx den PHP-Interpreter über FastCGI anspricht und PHP eigenständig als FPM läuft.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">http {
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">  fastcgi_param PHP_VALUE &#34;memory_limit = 256M&#34;;
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">}
</span></span></code></pre></div><p>Im Falle von Apache2 gehe ich davon aus, dass PHP als Modul konfiguriert ist. Hier wird das PHP Limit in der <strong>httpd.conf</strong> folgendermaßen gesetzt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php_value memory_limit = 256M
</span></span></code></pre></div><h3 id="global-für-jeden-virtuellen-host">Global für jeden virtuellen Host</h3>
<p>In nginx lässt sich die entsprechende Einstellung auch innerhalb des Server-Blocks setzen und gilt somit für einen ganzen virtuelle Host. Üblicherweise findest du diese Einstellung in <strong>/etc/nginx/conf.d/my_host.conf:</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">server {
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">  fastcgi_param PHP_VALUE &#34;memory_limit = 256M&#34;;
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">}
</span></span></code></pre></div><p>Nutzt du Apache2, findest du die entsprechende Einstellungs-Datei in der Regel unter <strong>/etc/apache2/sites-enabled/my_host.conf</strong>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;VirtualHost&gt;
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">php_value memory_limit 256M
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">&lt;/VirtualHost&gt;
</span></span></code></pre></div><h3 id="global-für-jeden-ordner">Global für jeden Ordner</h3>
<p>Weiter geht es mit dem Ordner-Spezifische Memory-Limit in nginx im location-Kontext (die Datei dürfte in der Regel unverändert sein).</p>
<p>Achtung: <a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html">In nginx kann die Direktive fastcgi_param</a> auch im übergeordneten http-Kontext oder auf Ordner-Ebene innerhalb des location-Blocks gesetzt werden:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">location ~ .(php|php.*)$ {
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">  fastcgi_param PHP_VALUE &#34;memory_limit = 256M&#34;;
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">}
</span></span></code></pre></div><p>Analog dazu kannst du in Apache2 das Limit global in apache2.conf oder auf Ordner-Ebene in der my_host.conf:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="o">&lt;</span><span class="ne">Directory</span><span class="s2">&#34;/var/www/example_de/htdocs/&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">php_value</span> <span class="n">memory_limit</span> <span class="mi">256</span><span class="n">M</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="o">&lt;/</span><span class="ne">Directory</span><span class="o">&gt;</span>
</span></span></code></pre></div><h2 id="das-memory-limit-auf-ordner-ebene-setzen">Das Memory-Limit auf Ordner-Ebene setzen</h2>
<h3 id="für-jeden-ordner-mit-der-userini">Für jeden Ordner mit der .user.ini</h3>
<p>Mit der Datei <strong>.super.ini</strong> kannst du PHP-Einstellungen für beliebige Ordner individuell konfigurieren. Dieser Weg steht dir allerdings nur offen, <a href="https://www.php.net/manual/en/configuration.file.per-user.php">wenn du PHP nicht als Modul nutzt, sondern über CGI/FastCGI</a>. In meinem Beispiel-Setup mit Apache2 und php-mod fällt diese Option also weg.</p>
<p>Du kannst die Datei in jedem Ordner anlegen und dort Parameter so einstellen, wie du es von der php.ini gewohnt bist. Dieser Weg muss allerdings vorher &ldquo;freigeschaltet&rdquo; werden, indem in der php.ini (bzw. den anderen o.g. Orten), der folgende Parameter gesetzt ist:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">user_ini.filename = .user.ini
</span></span></code></pre></div><p>Ob das der Fall ist, erfährst du, wie immer, mithilfe von phpinfo();. Dort siehst du unter &ldquo;Additional .ini files parsed&rdquo; auch, ob sich im aktuellen Ordner eine .user.ini befindet und diese gelesen wurde:</p>
<p><a href="https://www.nickyreinert.de/files/das-memory-limit-von-php-wie-funktioniert-es/grafik-4.png"><img src="/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/images/grafik-4-700x164.png" alt=""></a></p>
<p>Überprüfen, welche .ini-Dateien PHP gelesen hat</p>
<p>Wenn das alles passt, verwendest du die .user.ini wie die php.ini und setzt das Speicherlimit demnach folgenermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">memory_limit=256M
</span></span></code></pre></div><h3 id="für-jeden-ordner-mit-der-htaccess">Für jeden Ordner mit der .htaccess</h3>
<p>Diese Option wiederum steht dir nur mit Apache2 zur Verfügung, da nginx keine .htaccess-Dateien unterstützt. Du setzt das Limit in der .htaccess-Datei folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php_value memory_limit = 256M
</span></span></code></pre></div><h2 id="das-memory-limit-auf-applikations-ebene-setzen">Das Memory-Limit auf Applikations-Ebene setzen</h2>
<p>WordPress verwendet standardmäßig eine Memory Limit von <strong>40</strong> <strong>MByte</strong> im Frontend (bzw. 64 MByte bei einem Multi-Site-Setup) sowie (mindestens) <strong>256 MByte</strong> für das Backend. Wenn du diese Werte ändern möchtest, kannst du dafür die beiden folgenden Konstanten in der <strong>wp-config.php</strong> setzen - achte darauf, diese Konstanten vor der Einbindung von <strong>wp-settings.php</strong> zu definieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;WP_MEMORY_LIMIT&#39;, &#39;256M&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">define(&#39;WP_MAX_MEMORY_LIMIT&#39;, &#39;256M&#39;);
</span></span><span class="line"><span class="ln">3</span><span class="cl">[...]
</span></span><span class="line"><span class="ln">4</span><span class="cl">require_once(ABSPATH . &#39;wp-settings.php&#39;);
</span></span></code></pre></div><p>WordPress nutzt intern allerdings auch nur die PHP-Funktion ini_set um das Memory Limit festzulegen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">ini_set( &#39;memory_limit&#39;, WP_MEMORY_LIMIT );
</span></span></code></pre></div><h2 id="das-memory-limit-auf-datei-ebene-setzen">Das Memory-Limit auf Datei-Ebene setzen</h2>
<p>Zum Abschluss gibt es auch die Möglichkeiten das Memory Limit in jedem Script individuell zu setzen. Diese Möglichkeit steht an letzter Stelle und überschreibt damit alle vorhergehenden Einstellungen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">ini_set(&#39;memory_limit&#39;,&#39;256M&#39;);
</span></span></code></pre></div><p>Durch die Verwendung von <strong>include()</strong>, <strong>require_once()</strong> oder <strong>require()</strong> lassen sich andere PHP-Dateien innnerhalb eines Scripts einzubinden. Grundsätzlich wird das Memory Limit dann zwar vererbt. Was nicht heißt, dass es durch später eingebundene Scripte überschrieben werden kann. Das macht sich z.B. auch bei WordPress bemerkbar: Du kannst das Memory Limit zwar mit WP_MEMORY_LIMIT für WordPress definieren, ein Plugin oder Theme kann das Limit aber trotzdem später überschreiben.</p>
<p>Ein Beispiel: So sieht die Datei <strong>index.php</strong> aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;?php  ini_set(&#39;memory_limit&#39;,&#39;256M&#39;);  (...aufwendige Operation...);  include(&#39;file.php&#39;); 
</span></span></code></pre></div><p>Die Datei <strong>file.php</strong> sieht folgendermaßen aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl"> &lt;?php
</span></span><span class="line"><span class="ln">2</span><span class="cl"> echo ini_get(&#39;memory_limit&#39;);
</span></span><span class="line"><span class="ln">3</span><span class="cl"> (…aufwendige Operation…)
</span></span><span class="line"><span class="ln">4</span><span class="cl"> ini_set(&#39;memory_limit&#39;,&#39;32M&#39;);
</span></span><span class="line"><span class="ln">5</span><span class="cl"> (…aufwendige Operation…);
</span></span></code></pre></div><p>Die zweite Zeile in der file.php gibt als Rückgabe <strong>256M</strong> aus. Das Memory-Limit wird vererbt. Die vierte Zeile setzt das Limit allerdings auf 32 MByte und überschreibt damit den Wert von 256 MByte. Belegt die &ldquo;aufwendige Operation&rdquo; in index.php nur <strong>12 MByte</strong>, in der file.php nur jeweils <strong>5 MByte</strong>, funktioniert das gesamte Script einwandfrei. Wenn die &ldquo;aufwendige Operation&rdquo; in der Datei index.php z.B. mehr als <strong>22 MByte</strong> beansprucht, bricht PHP die Verarbeitung des Scripts ab. Warum? Weil das Limit nachträglich nach unten korrigiert wurde.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> apache, apache2, memory-limit, nginx, php</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>anleitungen</category>
      
      <category>blog</category>
      
      <category>hosting</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Das Memory Limit von PHP und WordPress erhöhen - die vollständige Anleitung - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Automatisierte WordPress Installation</title>
      <link>http://localhost:1313/2020/2020-10-08-automatisierte-wordpress-installation/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-10-08-automatisierte-wordpress-installation/</guid>
      <description>Et voilá. Ein BASH Script, um WordPress automatisiert über die Kommandozeile zu installieren, inklusive Theme und beliebigen Plugins sowie - wenn benötigt - …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Et voilá.&#39; reading_time: 6 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Database, Server, Mobile</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Et voilá. Ein BASH Script, um WordPress automatisiert über die Kommandozeile zu installieren, inklusive Theme und beliebigen Plugins sowie - wenn benötigt - zufälligen Beiträgen, Kategorien, Tags und Bildern.</p>
<h2 id="warnung">Warnung!</h2>
<p>Du solltest geübt im Umgang mit der Shell, Bash und WordPress sein und unbedingt <strong>Backups</strong> nutzen. Das Script verwendet, wenn der entsprechende Parameter gesetzt ist, den Befehl &ldquo;<strong>rm -rf</strong>&rdquo;, um einen Ordner komplett zu <strong>löschen</strong>. Dieser Schritt lässt sich nicht widerrufen. Außerdem wird, sofern per Parameter gefordert, eine Datenbank mit &ldquo;<strong>DROP DATABASE</strong>&rdquo; komplett entfernt. Wenn du das Script auf eine existierende WordPress-Installation oder Datenbank anwendest, können existierende Daten <strong>überschrieben</strong> werden!</p>
<h2 id="funktionsweise">Funktionsweise</h2>
<p>Das Script wird über die Kommandozeile aufgerufen und nutzt die <a href="https://wp-cli.org/de/">WordPress Kommandozeilen-Benutzeroberfläche,</a> um <strong>WordPress</strong> zu installieren sowie samt <strong>Themes</strong> und <strong>Plugins</strong> einzurichten. Du kannst außerdem beliebig viele <strong>Beiträge</strong> anlegen. Die Inhalte für die Beiträge stammen von einem Online-Dienst für zufällige englische Texte: <a href="http://metaphorpsum.com/paragraphs">metaphorpsum.com/paragraphs</a>. Außerdem werden zufällige <strong>Textauszüge</strong> (Excerpts) sowie <strong>Schlagwörter</strong> (Tags) und sogar <strong>Bilder</strong> jedem Beitrag hinzugefügt. Beiträge werden außerdem Kategorien zugeordnet. Diese werden ebenfalls <strong>zufällig</strong> bis zu einer Tiefe von 2 Ebenen erzeugt.</p>
<h2 id="installation">Installation</h2>
<p>Du findest den Sourcecode auf github: <a href="https://github.com/nickyreinert/AutomatedWordPressInstallation">https://github.com/nickyreinert/AutomatedWordPressInstallation</a>.</p>
<p>Nach der Installation kopierst du die Datei settings-template zu .settings, um in dieser Datei die Einstellungen für deine WordPress-Installation vorzunehmen. Du startest den Prozess mit <strong>bash start.sh</strong> oder setzt den Ausführen-Flag für bash.sh um diese direkt auszuführen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">chmod u+x bash.sh
</span></span><span class="line"><span class="ln">2</span><span class="cl">./bash.sh
</span></span></code></pre></div><h2 id="zufällige-inhalte">Zufällige Inhalte</h2>
<p>Das Script ermöglicht das Anlegen von beliebig vielen zufälligen Beiträgen in beliebig vielen zufälligen Kategorien. Was genau dabei passiert, beschreibe ich hier kurz:</p>
<p>Zunächst wird eine Kategorie erzeugt. Dazu wird von der folgenden API ein zufälliges Wort abgerufen: <a href="https://random-word-api.herokuapp.com/word?swear=0&amp;number=">https://random-word-api.herokuapp.com/word?swear=0&amp;number=</a></p>
<p>Dieser Kategorie wird dann ein Beitrag wird mit einer beliebigen Anzahl von <strong>Absätzen</strong> von dieser API zugeordnet: <a href="http://metaphorpsum.com/paragraphs/">http://metaphorpsum.com/paragraphs/</a>. Der Beitrag erhält einen zufälligen Titel (von dort: <a href="http://metaphorpsum.com/sentences/">http://metaphorpsum.com/sentences</a>), einen Textauszug (gleiche API), sowie eine beliebige Anzahl zufälliger Tags (Schlagwörter), ebenfalls von <a href="https://random-word-api.herokuapp.com/word?swear=0&amp;number=">random-word-api.herokuapp.com</a>. Dann werden für diesen Beitrag Revisionen erzeugt - auch diese in beliebiger Höhe. Abschließend erhält jeder Beitrag ein zufälliges Featured Image sowie ein weiteres zufälliges Bild am Ende des Fließtextes.</p>
<p>Je nachdem, wieviele Beiträge und Kategorien bzw. Sub-Kategorien eingerichtet werden soll, wird dieser Prozess natürlich wiederholt.</p>
<p><em>(Bisher werden die Inhalte leider nur auf Englisch eingefügt)</em></p>
<h2 id="einstellungen">Einstellungen</h2>
<p>Alle Einstellungen befinden sich in der Datei <strong>.settings</strong> und werden im Folgenden beschrieben. Der PROJECT-Parameter kann im weiteren Verlauf als Platzhalter verwendet werden und sollte keine Leerzeichen oder Sonderzeichen enthalten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">PROJECT=myWordPressBlog
</span></span></code></pre></div><h3 id="datenbank">Datenbank</h3>
<p>Du kannst eine neue Datenbank anlegen (CREATE_DB) oder auf eine existierende Datenbank zurückgreifen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">DB_DROP=yes|no
</span></span><span class="line"><span class="ln">2</span><span class="cl">CREATE_DB=yes|no
</span></span><span class="line"><span class="ln">3</span><span class="cl">DB_ROOT=root
</span></span><span class="line"><span class="ln">4</span><span class="cl">DB_ROOT_PASSWORD=secret
</span></span></code></pre></div><p>Willst du eine frische Datenbank anlegen, solltest du die alte Datenbank mit DB_DROP=yes löschen. Soll eine neue Datenbank angelegt werden, müssen die Zugangsdaten für einen privilegierten Nutzer angegeben werden: Mit den folgenden Parameter legst du fest, wie WordPress auf die Datenbank zugreift:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">DB_HOST=127.0.0.1
</span></span><span class="line"><span class="ln">2</span><span class="cl">DB_NAME=&#34;${PROJECT}_database&#34;
</span></span><span class="line"><span class="ln">3</span><span class="cl">DB_PREFIX=&#34;wp_&#34;
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">ADD_DB_USER=yes|no
</span></span><span class="line"><span class="ln">6</span><span class="cl">DB_USER=&#34;${PROJECT}_dbuser&#34;
</span></span><span class="line"><span class="ln">7</span><span class="cl">DB_USER_PASSWORD=$(cat /dev/urandom | tr -dc &#39;a-zA-Z0-9&#39; | fold -w 32 | head -n 1)
</span></span></code></pre></div><p>Das Passwort wird im Beispiel zufällig erzeugt, willst du ein eigenes Passwort verwenden, kannst du den Parameter überschreiben, z.B:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">DB_USER_PASSWORT=secret
</span></span></code></pre></div><p>Der DB-Nutzer wird natürlich nur angelegt, wenn ADD_DB_USER=yes gesetzt ist. Andernfalls musst du hier die passenden Zugangsdaten angeben.</p>
<h3 id="wordpress">WordPress</h3>
<p>Du kannst auf eine existierende Installation zurückgreifen, um z.B. dort Beiträge hinzuzufügen, oder WordPress komplett neu installieren. Hier kannst du z.B. auch den oben festgelegten PROJECT-Parameter nutzen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">WP_PATH</span><span class="o">=</span><span class="s2">&#34;/var/nginx/htdocs/${PROJECT}/&#34;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">INSTALL_CORE</span><span class="o">=</span><span class="n">yes</span><span class="o">|</span><span class="n">no</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">WP_DROP</span><span class="o">=</span><span class="n">yes</span><span class="o">|</span><span class="n">no</span>
</span></span></code></pre></div><p>Mit WP_DROP kannst du festlegen, dass der Ordner WP_PATH komplett gelöscht wird. <strong>Vorsicht</strong> ist hier also geboten! Die folgenden Parameter betreffen deine allgemeinen WordPress-Einstellungen. Bei der URL kannst du wieder den PROJECT-Platzhalter nutzen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">WP_TITLE=&#39;WordPress Test&#39;
</span></span><span class="line"><span class="ln">2</span><span class="cl">URL=&#34;https://blog.example.org/${PROJECT}&#34;
</span></span><span class="line"><span class="ln">3</span><span class="cl">WP_ADMIN_NAME=admin
</span></span><span class="line"><span class="ln">4</span><span class="cl">WP_ADMIN_EMAIL=mail@example.org
</span></span><span class="line"><span class="ln">5</span><span class="cl">WP_ADMIN_PASSWORD=secret
</span></span></code></pre></div><p>Willst du ein eigene Passwort vergeben, kannst du auch hier ein zufälliges Passwort erzeugen lassen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">WP_ADMIN_PASSWORD=$(cat /dev/urandom | tr -dc &#39;a-zA-Z0-9&#39; | fold -w 32 | head -n 1)
</span></span></code></pre></div><h3 id="theme-und-plugins">Theme und Plugins</h3>
<p>Mit den folgenden Parametern legst du fest, welches Theme eingerichtet und welche Plugins installiert werden sollen. Der Theme-Name ist der Slug des Themes:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">INSTALL_THEME=yes|no
</span></span><span class="line"><span class="ln">2</span><span class="cl">THEME=&#34;elementor&#34;
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl">INSTALL_PLUGINS=no
</span></span><span class="line"><span class="ln">5</span><span class="cl">PLUGINS=&#34;elementor wordpress-seo tinymce-advanced ninja-forms shortcodes-ultimate instagram-feed ml-slider the-events-calendar amp contact-widgets coblocks woocommerce&#34;
</span></span></code></pre></div><p>Du kannst mehrere Plugins angeben, wenn diese per Leerzeichen voneinander getrennt sind.</p>
<h3 id="inhalte">Inhalte</h3>
<p>Der nächste Abschnitt regelt das (zufällige) Anlegen von Beiträgen, Kategorien usw. Natürlich musst du keine Inhalte anlegen. Ist <strong>RANDOMIZE_EVERY_ITEM</strong> auf <strong>yes</strong> gesetzt, wird jeder Beitrag wie oben zufällig erzeugt. Da das eine Menge HTTP-Requests erfordert, kannst du den Parameter auch auf no setzen. In dem Fall wird jede Zufalls-API genau einmal abgerufen. Der ganze Prozess wird dadurch maßgeblich beschleunigt.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">ADD_CONTENT=yes|no
</span></span><span class="line"><span class="ln">2</span><span class="cl">META_INPUT=&#34;&#34;
</span></span><span class="line"><span class="ln">3</span><span class="cl">RANDOMIZE_EVERY_ITEM=yes|no
</span></span></code></pre></div><p>Manche Themes, wie z.B. <strong>Elementor</strong>, fügen den Inhalten, also Beiträgen, bestimmte Meta-Informationen hinzu. Beim automatisierten Anlegen von Beiträgen passiert das allerdings nicht automatisch. Du kannst das hier also entsprechend einrichten. Der Wert wird als JSON übergeben. Achte auf das einfache Anführungszeichen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">META_INPUT=&#39;{&#34;_elementor_edit_mode&#34;:&#34;&lt;![CDATA[builder]]&gt;&#34;,&#34;_elementor_template_type&#34;:&#34;&lt;![CDATA[kit]]&gt;&#34;,&#34;_elementor_version&#34;:&#34;&lt;![CDATA[2.9.13]]&gt;&#34;}&#39;
</span></span></code></pre></div><p>Die folgenden Paremeter legen fest, wieviele Inhalte du erzeugen möchtest:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">COUNT_CATEGORIES_LEVEL1=10
</span></span><span class="line"><span class="ln">2</span><span class="cl">COUNT_CATEGORIES_LEVEL2=5
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl">COUNT_POSTS=100
</span></span><span class="line"><span class="ln">5</span><span class="cl">COUNT_PARAGRAPHS=20
</span></span><span class="line"><span class="ln">6</span><span class="cl">COUNT_POST_REVISIONS=5
</span></span><span class="line"><span class="ln">7</span><span class="cl">COUNT_TAGS=20
</span></span></code></pre></div><p>Im Beispiel werden 10 Haupt-Kategorien mit jeweils 5 Unter-Kategorien angelegt. Jede Kategorie wird mit 100 Posts befüllt und jeder Post erhält 20 Tags und 5 Revisionen. Das ergibt also 10 * 5 * 100 * 5 Beiträge = 25.000 Beiträge! In diesem Fall macht es Sinn RANDOMIZE_EVERY_ITEM auf no zu setzen, da du sonst mehre tausende Anfragen an die Zufalls-APIs generieren würdest. COUNT_PARAGRAPHS legt die Länge jedes Beitrags in Absätzen fest.</p>
<h3 id="standard-parameter">Standard-Parameter</h3>
<p>Die folgenden Parameter musst du in der Regel nicht anpassen. WP_CLI legt den Pfad zur WordPress Kommandozeilen Oberfläche fest. Wird die Datei nicht gefunden, muss WP CLI installiert werden. Dazu dient der Parameter WP_CLI_SOURCE.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">WP_CLI_EXEC=~/wp-cli.phar
</span></span><span class="line"><span class="ln">2</span><span class="cl">WP_CLI_SOURCE=https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
</span></span></code></pre></div><p>Im folgenden werden die Quellen für die APIs festgelegt. Hier solltest du nichts ändern, da das Script für die Zusammenarbeit mit diesen Quellen eingerichtet ist. Einzig beim Parameter RANDOM_IMAGE_API_URI kannst du bei Bedarf in der URL die Auflösung der abgefragten Bilder festlegen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">RANDOM_WORD_API_URL=&#39;https://random-word-api.herokuapp.com/word?swear=0&amp;number=&#39;
</span></span><span class="line"><span class="ln">2</span><span class="cl">RANDOM_SENTENCE_API_URL=&#39;http://metaphorpsum.com/sentences/&#39;
</span></span><span class="line"><span class="ln">3</span><span class="cl">RANDOM_TEXT_API_URL=&#39;http://metaphorpsum.com/paragraphs/&#39;
</span></span><span class="line"><span class="ln">4</span><span class="cl">RANDOM_IMAGE_API_URI=&#39;https://picsum.photos/200/300.jpg&#39;
</span></span></code></pre></div>
        
        
        <div class="tags">
          <p><strong>Tags:</strong> automatiierung, bash, installation, script, setup, wordpress</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      <category>development</category>
      
      <category>tools</category>
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Automatisierte WordPress Installation - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Das Ticket-Preis-System der Deutschen Bahn - oder: wie findest du den optimalen Fahrschein-Preis?</title>
      <link>http://localhost:1313/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/</guid>
      <description>Update 3.10.2020 - Flexpreis Plus, siehe Teil 1
Ich reise gerne. Nicht viel, aber gerne. Am liebsten jage ich mit einem Porsche Cayenne quer durch die Republik. …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Ich reise gerne. Nicht viel, aber gerne. Am liebsten jage ich mit einem Porsche Cayenne quer durch die Republik. Auf der linken Spur der Autobahn. Mit 250 Sachen. Der linke Blinker im Dauerbetrieb.&#39; reading_time: 34 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Database, Server, Mobile, Ai, Automation</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><em>Update 3.10.2020 - <strong>Flexpreis Plus</strong>, siehe Teil 1</em></p>
<p>Ich reise gerne. Nicht viel, aber gerne. Am liebsten jage ich mit einem Porsche Cayenne quer durch die Republik. Auf der linken Spur der Autobahn. Mit 250 Sachen. Der linke Blinker im Dauerbetrieb. Den Finger am Hebel für die Lichthupe, wie an einem Abzug.</p>
<p>Die Sache hat natürlich einen kleinen Haken: Ich habe weder einen Porsche noch eine Tankkarte mit Flatrate. Ich hab nicht mal ein Auto, das 250 km/h fährt.</p>
<p><strong>Ich fahre aber auch sehr gerne mit der Bahn</strong>. Am liebsten in der 1. Klasse. Bequeme Sitze, ein Schokoherzchen zur Begrüßung, Sitzplatzreservierung inklusive, breite Ledersitze sowieso. Und dann sitze ich da und schaue verträumt nach links aus dem Fenster, zur Autobahn, wo ein paar Unverbesserliche im Stau stehen.</p>
<p>1. Klasse? Moment mal. Ist das nicht <strong>versnobt</strong>? Unbezahlbar? Nein. Ist es nicht. Man kann relativ günstig mit der 1. Klasse fahren, wenn man sich durch das Preis-System der Deutschen Bahn gequält hat und etwas flexibel ist. Und da hätten wir auch schon unser Problem und damit auch die <strong>erste und auch oberste Prämisse</strong> für diesen Essay: Die Suche nach dem optimalen Preis macht nur dann Sinn, wenn Geld mindestens eine Rolle spielt und wenn man flexibel in der Wahl der Abfahrtszeit ist, vielleicht sogar was den Reisetag angeht. Und wenn man trotzdem damit leben kann, an eine Verbindung gebunden zu sein, sobald das Ticket gebucht ist.</p>
<p>Nun ist das Preis-System bzw. dessen Darstellung aber <a href="https://www.heise.de/tp/features/Das-Preissystem-der-Bahn-zwischen-Irrwitz-und-Unverschaemtheit-4268591.html">ein wenig unübersichtlich</a>, so dass <a href="https://www.adac.de/der-adac/aktuelles/guenstig-bahnfahren/">die Suche nach dem besagten optimalen Preis</a> zu einem Geduldsspiel wird, weshalb man sich am Ende wohl schlicht mit dem begnügt, was am günstigsten erscheint: <strong>2. Klasse, Super-Sparpreis.</strong> Dem muss aber nicht so sein&hellip;</p>
<h2 id="überblick">Überblick</h2>
<p>Was dich hier erwartet: Im <strong>1. Teil</strong> erkläre ich, wie das Preis-System der Deutschen Bahn aufgebaut ist. Im <strong>2. Teil</strong> zeige ich, warum die aktuelle Oberfläche kaum dabei hilft, das komplexe Preissystem zu begreifen. Im <strong>3. Teil</strong> erkläre ich dir, wenn dich der technische Hintergrund interessiert, wie du an die Preise für die Verbindungen kommst. Im <strong>4. Teil</strong> versuche ich herauszufinden, ob sich die Preisbildung nachvollziehen und vielleicht sogar eine <strong>Faust-Formel</strong> erkennen lässt und im <strong>5. Teil</strong> schließe stelle ich eine <strong>alternative Oberfläche</strong> vor. Viel Spaß.</p>
<p>Wenn du dich nur für die alternative Oberfläche interessiert und dich der analytische und technische Teil nicht interessiert, dann schau einfach direkt auf <a href="http://nickets.de">nickets.de</a> vorbei bzw. <strong>überspringe Teil 1 bis 4</strong>,</p>
<p><em>Zur Verteidigung der Bahn möchte ich vorab noch festhalten, dass der Vorgang der Bepreisung von Fahrkarten sicher nicht banal ist. Eine Verbindung von Berlin nach Stuttgart ist nicht nur einfach das. Sie kann über mehrere Zwischenbahnhöfe gehen und es gibt zig Faktoren, die die Preisfindung beeinflussen können.</em></p>
<h2 id="teil-1-die-preis-kategorien-der-deutschen-bahn">Teil 1: Die Preis-Kategorien der Deutschen Bahn</h2>
<p>Das Preis-System der Deutschen Bahn ist <strong>komplex</strong>. Die Deutsche Bahn bietet <strong>zwei Klassen</strong> mit jeweils <strong>drei Kategorien</strong> an. Es gibt in der 1. und 2. Klasse jeweils den Flex-Preis, den Spar-Preis und den Super-Spar-Preis:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-74-700x559.png" alt=""></p>
<p>Abbildung 1: Preis-Kategorien für Tickets der Deutschen Bahn</p>
<p>Die insgesamt <strong>sechs Katgegorien</strong> habe ihre Vor- und Nachteile und sind <strong>offensichtliche Faktoren</strong>, die den <strong>Ticketpreis beeinflussen</strong>. Ich will die Eigenschaften der Kategorien nur ganz grob beschreiben, um die Komplexität im Ansatz begreifbar zu machen. Daneben gibt es übrigens noch den Flexpreis Business für Geschäftskunden. Diese Tickets sind einen Tag vor und sieben Tage nach gebuchtem Reisetag gültig.</p>
<h3 id="update-3102020---flexpreis-plus">Update 3.10.2020 - Flexpreis Plus</h3>
<p>Offenbar hat die Bahn eine neue Preis-Kategorie eingeführt. Mit dem <strong>Flexpreis Plus</strong> ist das Ticket nun einen Tag vor und zwei Tage nach gewähltem Reisetag gültig. Die Stornierung ist solange möglich, wie das Ticket gültig ist. Diese Kategorie gibt es offenbar nur in der 1. Klasse und erst für Fahrten ab dem 1. November. Auf der Seite der Bahn habe ich dazu noch keine Informationen gefunden. Der Übersicht ist das natürlich nicht gerade zuträglich.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-73-700x329.png" alt=""></p>
<p>Der Flexpreis Plus, ab dem 1. November 2020?</p>
<h3 id="freie-zugwahl">Freie Zugwahl</h3>
<p>Fangen wir mit dem <strong>Flex-Preis</strong> an, der den wirklich angenehmen Vorteil der freien <strong>Zugwahl</strong> am Reisetag ermöglicht. Man kann die Fahrt sogar unterbrechen und erst am nächsten Tag fortsetzen. Der Flexpreis soll grundsätzlich gleich hoch sein, unterscheidet sich aber in der Realität, um die &ldquo;<a href="https://www.bahn.de/p/view/angebot/flexpreis.shtml"><strong>Nachfragelenkung</strong> zu optimieren</a>&rdquo;. Beim Flex-Preis gibt es allerdings eine zusätzliche Ebene, die Einfluss auf den Preis hat: Die Zug-Art wird, wie z.B. bei der Auto-Vermietung, ebenfalls unterschiedlich bepreist. Ein <strong>ICE-Ticket</strong> gehört zu einer <strong>höheren</strong> <strong>Kategorie</strong> als ein IC-Ticket. Buchst du ein Ticket für den IC, kannst du damit am gleichen Tag alle IC-Verbindungen nutzen, nicht jedoch den ICE (dafür wäre ein Aufschlag nötig, Stichwort <strong>Produktübergang</strong>).</p>
<h3 id="sitzplatzreservierung">Sitzplatzreservierung</h3>
<p>Außerdem gibt es ein wichtiges Detail zur <strong>Sitzplatzreservierung</strong>. Diese ist bei der <strong>1. Klasse inklusive</strong>. In der <strong>2. Klasse</strong> kostet sie <strong>4 Euro</strong>. Wer sich nicht auf ein Abenteuer (Reise nach Jerusalem) einlassen will, sollte diesen Aufschlag immer einkalkulieren. Gerade bei populären Verbindungen ist die Auslastung der Züge relativ hoch.</p>
<p>Der <strong>Super-Spar-Preis</strong> der 2. Klasse ist (siehe Abbildung 1) dann &ldquo;nur&rdquo; noch knapp 25 Euro günstiger als in der 1. Klasse. Der einzige Vorteil des Spar-Preises gegenüber dem Super-Spar-Preis ist übrigens die <strong>Stornomöglichkeit</strong> und das <strong>Cityticket</strong>. Der Storno ist bis vor den Reisetag gegen eine Gebühr von <strong>10 Euro</strong> möglich. Irritierend daran: Die Gebühr ist immer gleich, egal ob das Ticket 17,90 Euro oder über 200 Euro kostet. Am Reisetag ist die Stornierung des Flex-Tickets übrigens auch kostenpflichtig, hier sogar <strong>19,90 Euro</strong>.</p>
<h3 id="das-city-ticket">Das City-Ticket</h3>
<p>Den Vorteil des <strong>City-Ticket</strong> habe ich in meinen Betrachtungen aus mehreren Gründen als vernachlässigbar eingestuft. Zunächst verbaut man sich damit am Start- und Zielort die Möglichkeit, das optimale Reisemittel selber zu wählen. Es gibt ja durchaus günstige Alternativen. Außerdem ist das City-Ticket nur bei Verbindungen über <strong>100 km</strong> und in &ldquo;nur&rdquo; <strong>130 Städten</strong> kostenlos dabei. Hinzu kommen lokalspezifische Einschränkungen: So gilt das City-Ticket z.B. in Berlin nur in den <strong>Tarifbereichen A und B</strong>, nicht jedoch C. Aus diesen Gründen hab ich das City-Ticket und damit die <strong>Spar-Preise</strong> in den folgenden Betrachtungen <strong>komplett ignoriert</strong> (ein weiterer Grund ist technischer Natur, dazu später mehr).</p>
<p>Zum Problem der <strong>Komplexität</strong> trägt der <strong>Spar-Preis</strong> übrigens auch noch bei da der Aufpreis nicht fix ist, sondern zwischen (laut meinen Stichproben) <strong>3,60 und 10 Euro schwankt.</strong> Auch das ist absurd, da das City-Ticket im Preis relativ beständig sein sollte und die Storno-Option, nunja, nur ein &ldquo;Service&rdquo; ist.</p>
<h3 id="andere-einflüsse-auf-den-preis">Andere Einflüsse auf den Preis</h3>
<p>Soviel zu den offensichtlichen Faktoren. Hinzu kommen noch weniger offensichtliche Faktoren, wie z.B. die <strong>Reisezeit</strong>. Wie sehr der Spar-Preis abhängig von der Tageszeit schwanken kann, siehst du in der folgenden Abbildung. Es handelt sich um den geringsten Super-Spar-Preis für die Verbindung Berlin-Stuttgart über den Tag verteilt.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-47-700x433.png" alt=""></p>
<p><strong>Abbildung 2:</strong> Kleinster Super-Spar-Preis für die Verbindung Berlin - Stuttgart in Abhängigkeit von der Tageszeit (Abreise), ohne Umsteigen</p>
<p>Die günstigste Zeit zum Reisen ist für diese Verbindung also der Vormittag. In der ersten Klasse macht es sogar Sinn, erst abends zu reisen. Gegen 21 Uhr ist das <strong>Super-Spar-Preis-Ticket</strong> sogar günstiger als zu anderen Zeiten in der 2. Klasse. <strong>Achtung:</strong> Es handelt sich um die aggregierten Werte über die <strong>Tageszeit</strong>. Das besagte günstige 1. Klasse-Ticket bezieht sich auf einen anderen Tag. Es ist also nicht nur die Uhrzeit ausschlaggebend, sondern auch der Wochentag. Die Preise über den <strong>Wochentag</strong> aggregiert zeigt folgende Abbildung: Dienstag ist also 1.-Klasse-Spar-und-Fahrtag:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/Spar-Preis-ueber-den-Wochentag-Berlin-Stuttgart-700x432.png" alt=""></p>
<p><strong>Abbildung 3:</strong> Kleinster Spar-Preis für die Verbindung Berlin - Stuttgart in Abhängigkeit von der Tageszeit (Abreise), ohne Umsteigen</p>
<p>Der <strong>Preis</strong> einer Verbindung ist also von <strong>vielen Faktoren abhängig</strong>. Da wäre es doch schön, wenn man die Preise in einer schönen Übersicht vergleichen könnte. (Übrigens, just als ich diesen Artikel geschrieben habe, <a href="https://www.deutschebahn.com/de/presse/pressestart_zentrales_uebersicht/ICE-Fahren-zum-kleinen-Preis-Super-Sparpreis-Young-ab-12-90-Euro-5577616">hat die Deutsche Bahn einen Sonderpreis für &ldquo;<strong>junge Leute bis 26</strong>&rdquo; angekündigt</a>. Es handelt sich dabei um ein auf <strong>1 Mio. Tickets</strong> limitiertes Sonderangebot für den Super-Spar-Preis der 2. Klasse.) Das Problem: Derzeit gibt es im Buchungssystem der DB keinen Hinweis darauf.</p>
<p>Wollen wir doch mal schauen, wie einfach es ist, den optimalen Preis für ein Ticket der Deutschen Bahn zu finden.</p>
<h2 id="teil-2-das-buchungssystem-der-deutschen-bahn">Teil 2: Das Buchungssystem der Deutschen Bahn</h2>
<p>Um ein Ticket bei der Bahn zu buchen sind mir bisher zwei (bzw. drei) Wege bekannt: Das Portal für <strong>Tickets und Angebote</strong> (auch <strong>Reiseauskunft</strong>) und der <strong>Sparpreis-Finder</strong>. Wir möchten diese Portale <strong>Oberfläche 1</strong> und <strong>2</strong> nennen. Hinzu kommt <strong><strong>Oberfläche</strong></strong> <strong>3</strong>, das ebenfalls zum Sparpreis-Finder gehört. Oberfläche 1 und 2 erreichst du recht simpel, wenn du <a href="http://bahn.de/">bahn.de</a> direkt aufrufst, über das Menü <strong>Tickets &amp; Angebote</strong>. Oberfläche 2 führt dich am Ende zu Oberfläche 3. Oberfläche 3 ist entweder über die Google-Suche oder wenn du dich durch das Hover-Menü klickst. Es ist liegt außerdem auf einer anderen Sub-Domain, auf der das Hover-Menü &ldquo;Tickets &amp; Angebote&rdquo; nicht mehr existiert. Du kommst also nur auf Umwegen wieder zurück_._</p>
<p>Hinweis: Es gibt noch eine zusätzliche Oberfläche, die mobile Anwendung. Hier ist es aber aufgrund technischer Maßnahmen nicht ohne weiteres möglich, an die HTTP-Abfragen zu kommen. Diese sind per TLS geschützt, lassen sich also nicht ohne weiteres über z.B. einen Proxy abfangen. SSL-Pinning sorgt außerdem dafür, dass man mit einfache Boardmitteln kein eigenes SSL-Zertifikat unterschummeln kann. Der Aufwand hat den Nutzen überstiegen.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-700x443.png" alt=""></p>
<p><strong>Abbildung 4:</strong> Oberfläche 1 - Die Reiseauskunft</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-1-700x544.png" alt=""></p>
<p><strong>Abbildung 5:</strong> Oberfläche 2 - Der Sparpreis-Finder</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-2-700x753.png" alt=""></p>
<p><strong>Abbildung 6:</strong> Oberfläche 3 - Der &ldquo;eigentliche&rdquo; Sparpreis-Finder</p>
<p>Warum gibt es nun drei bzw. zwei Oberflächen? Was ist der Unterscheid? Schauen wir mal.</p>
<h3 id="die-ergebnisseiten">Die Ergebnisseiten</h3>
<p>Die Verbindung <strong>Berlin - Stuttgart</strong> gehört zu meinen &ldquo;Lieblingsverbindungen&rdquo;, da ich hier relativ oft unterwegs bin bzw. war. Als Reisedatum nehme ich den <strong>17.09.2020, einen wunderschönen Donnerstag</strong>. Da wir auf der Suche nach Schnäppchen sind, wähle ich die 2. Klasse und außerdem die einfache Fahrt. <strong>Ohne Rückreise!</strong> Warum? Wenn du beide Fahrten gleichzeitig buchst, kannst du diese nicht getrennt voneinander stornieren. Stornierst du die Hinfahrt, ist auch die Rückfahrt weg. Macht keinen Sinn, ist aber leider so. Deswegen solltest du die <strong>Rückreise immer getrennt buchen</strong>. Keine Sorge, du verschenkst dadurch <strong>keinen Preisnachlass</strong>, wie z.B. bei Flugreisen.</p>
<p><strong>Oberfläche 2 und 3</strong> führen beide zur gleichen Ergebnissseite: Eine ziemlich lange Liste mit Spar-Preisen (sic!), den Abfahrtszeiten, Dauer und Umsteigezeiten Das ganze für den kompletten Tag (bzw. den gewählten Zeitraum). Außerdem wird <strong>angeblich</strong> auch der <strong>Flex-Preis</strong> angezeigt - laut Checkbox. Findest du ihn?</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/Sparpreis-Finder-Ergebnis-Seite-150x150.png" alt=""></p>
<p><strong>Abbildung 7:</strong> Die Tagesübersicht aller Super-Spar-Preis</p>
<p>Der Flex-Preis wird erstens nicht immer ausgewiesen und zweitens nicht explizit als solcher markiert. Er wird erst angezeigt, wenn du mit der Maus darüber hoverst, die Details anklickst oder zur Buchung gehst.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-6-700x245.png" alt=""></p>
<p><strong>Abbildung 8:</strong> Der versteckte Flex-Preis</p>
<p>Verwirrend außerdem. Der Flex-Preis ist an dieser Stelle sogar um einiges günstiger, als der Spar-Preis. Nur blöd, dass man den Flexpreis, mit all seinen Vorteilen, nicht sofort erkennt.</p>
<p>Geht es weiter zur Buchung, erfährst du außerdem, dass die Liste die tatsächlich nur die <strong>Super-Spar-Preise</strong> enthält, nicht die Spar-Preise. Preislich und leistungstechnisch macht das, siehe oben, durchaus einen Unterschied. Diese Information erhält man auch, wenn man auf das kleine i-Symbol der jeweiligen Verbindung klickt.</p>
<p>Diese Übersicht ist trotz allem, wie wir gleich sehen werden, hilfreicher als bei Oberfläche 1, weil man für eine Klasse die Preise eines ganzen Tages sieht.</p>
<p>Kommen wir zu <strong>Oberfläche 1</strong>, die auf den ersten Blick einen viel kompakteren Eindruck macht. Hier wird der Flex-Preis zwar besser ausgezeichnet und die Informationen sind optisch etwas schöner aufbereitet, es gibt sogar eine Auslastungsinformation, allerdings werden in der Regel nur drei Verbindungen angezeigt.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/Preis-Uebersicht-150x150.png" alt=""></p>
<p><strong>Abbildung 9:</strong> Die Preise der Obefläche 1</p>
<p>Mit Klick auf &ldquo;früher&rdquo; oder &ldquo;später&rdquo; kannst du den Zeitraum zwar erweitern, wirst aber nie den kompletten Tag als Übersicht erhalten. Schade.</p>
<p>Soviel zu der Möglichkeit, die für sich optimalste Preiskategorie bzw. Verbindung herauszusuchen.</p>
<h2 id="zwischenfazit-das-problem-der-vergleichbarkeit">Zwischenfazit: Das Problem der Vergleichbarkeit</h2>
<p>Das größte Problem, an dem das Buchungssystem der Deutschen Bahn krankt, ist die <strong>Vergleichbarkeit</strong>. Der Aufschlag für den Spar-Preis schwankt, die Preise schwanken nach der Tageszeit, sie sind abhängig davon, wie knapp man ein Ticket bucht usw. usf. Es ist nachvollziehbar, dass Preise geändert werden, um die Nachfrage zu steuern. Umso hilfreicher wäre es aber, die Preise vergleichbarer darzustellen.</p>
<p>Eine Oberfläche zeigt zwar die Preise im Tagesverlauf an, dafür aber nur die Super-Spar-Preise. Eine andere Oberfläche zeigt die Preise für einen weitaus kleinen Zeitraum an, dafür aber auch den Flex-Preis. Keine Oberfläche zeigt einen direkten Vergleich der Klassen an, außer <strong>wenn die 2. Klasse ausgebucht</strong> ist:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-3-700x132.png" alt=""></p>
<p><strong>Abbildung 10:</strong> 1. Klasse-Preis bei der 2. Klasse-Übersicht</p>
<p>Um das beste Preis-Leistungs-Verhältnis zu finden, <strong>fehlt es an einer einheitlichen Darstellung</strong>. Man kann mit der Komlexität leben, wenn die Übersicht nur etwas sinnvoller gestaltet wäre. Bevor wir uns diesem Problem widmen, will ich trotzdem mal versuchen, eine Regelmäßigkeit in der Bepreisung zu entdecken.</p>
<h2 id="teil-3-wie-funktioniert-die-ticket-api-der-deutschen-bahn">Teil 3: Wie funktioniert die Ticket-API der Deutschen Bahn?</h2>
<p>Bevor ich die Daten auswerte, erkläre ich kurz, für alle technisch interessierten, wie man an die Preise kommt. Auf der Suche nach einer Beschreibung der Preis-Api bin ich auf folgendes Dokument gestoßen: <a href="https://wiki.fhem.de/w/images/6/63/Parametrisierte_%C3%9Cbergabe_Bahnauskunft%28V_5.12-R4.30c%2C_f%C3%BCr.pdf">Externe Aufrufparameter und Rückgabeparameter an externe System (pdf)</a>. Diese Information konnte ich als Grundlage nutzen, um die Anfragen an den DB-Server zu formulieren (die Dokumentation ist allerdings unvollständig und weicht in einigen Punkten ab, ist also vermutlich veraltet).</p>
<h3 id="die-identifikation-der-bahnhöfe">Die Identifikation der Bahnhöfe</h3>
<p>Die beiden wichtigsten Parameter zur Ticket-Suche sind, wie sollte es anders sein, der <strong>Start- und Zielbahnhof</strong>. Hier gibt es mehrere Möglichkeiten, diese zu bestimmen.</p>
<p>Die <strong>erste Methode</strong> ist der offizielle Weg über die (nach Registrierung) frei zugängliche <a href="https://developer.deutschebahn.com/store/apis/info?name=StaDa-Station_Data&amp;version=v2&amp;provider=DBOpenData&amp;">Stations-Daten-API an.</a> Die Liste enthält zu jedem Bahnhof den Namen im Klartext, die Geo-Lokation und eine Kategorie (Hauptbahnhof, Wald-und-Wiesen-Bahnhof, &hellip;) Die dort aufgeführten Bahnhöfe werden in der Regel ohne Probleme auch von der Preis-Auskunft erkannt.</p>
<p>Die zweite Methode führt über einen GET-Request, der dir drei verwertbare Informationen liefert. Der <strong>öffentliche Endpunkt</strong> dazu lautet:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">https://reiseauskunft.bahn.de/bin/ajax-getstop.exe/dn
</span></span></code></pre></div><p>Die wichtigsten Parameter lauten hier:</p>
<ul>
<li>S - Der Suchbegriff, entweder als
<ul>
<li>expliziter String (z.B. <em>Berlin</em>)</li>
<li>String mit Platzhalter (z.B. <em>Berlin*</em>, alles was mit Berlin beginnt)</li>
<li>Fuzzy-Search-String (z.B. <em>Kaulsdorf?</em>, liefert als Ergebnis auch <em>Zaulsdorf</em>)</li>
</ul>
</li>
<li>REQ0JourneyStopsB - die Anzahl der Ergebnisse, optional</li>
</ul>
<p>Das Ergebnis ist ein JSON-Objekt mit sogenannten Vorschlägen (<em>&ldquo;suggestions&rdquo;</em>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">  {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">            &#34;value&#34;: &#34;BERLIN&#34;,
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">            &#34;id&#34;: &#34;A=1@O=BERLIN@X=13386988@Y=52520501@U=80@L=008096003@B=1@p=1598555590@&#34;,
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">            &#34;extId&#34;: &#34;008096003&#34;,
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">            &#34;type&#34;: &#34;1&#34;,
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">            &#34;typeStr&#34;: &#34;[Bhf/Hst]&#34;,
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">            &#34;xcoord&#34;: &#34;13386988&#34;,
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">            &#34;ycoord&#34;: &#34;52520501&#34;,
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">            &#34;state&#34;: &#34;id&#34;,
</span></span><span class="line"><span class="ln">10</span><span class="cl">            &#34;prodClass&#34;: &#34;319&#34;,
</span></span><span class="line"><span class="ln">11</span><span class="cl">            &#34;weight&#34;: &#34;30849&#34;
</span></span><span class="line"><span class="ln">12</span><span class="cl">        }
</span></span></code></pre></div><p>Die Daten erklären sich fast von selber, für uns relevant sind &ldquo;<em>value&rdquo;</em>, &ldquo;<em>id</em>&rdquo; sowie &ldquo;<em>extId&rdquo;.</em> Alle drei Werten können für die Preissuche verwendet werden.</p>
<h3 id="oberfläche-1---die-reiseauskunft">Oberfläche 1 - Die Reiseauskunft</h3>
<p>Wir bleiben bei der Verbindung Berlin-Stuttgart am 17.09.2020, einem wunderschönen Donnerstag. 2. Klasse und der URL</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">https://www.bahn.de/p/view/angebot/index.shtml?dbkanal_007=L01_S01_D001_KIN0014_top-navi-tickets-angebote_LZ01 bzw. https://www.bahn.de/p/view/angebot/index.shtml 
</span></span></code></pre></div><p>Ein Klick auf Suchen feuert einen <strong>GET-Request</strong> an diese URL ab:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">https://reiseauskunft.bahn.de/bin/query.exe/dn
</span></span></code></pre></div><p>Und natürlich gibt es einen ganzen Stapel Parameter. Den kompletten Aufruf mit allen Parametern kannst du dir unten als Postman-Collection herunterladen. Im folgenden werde ich nur die wichtigsten davon besprechen, also die, die mindestens erforderlich sind, um eine Preis-Information zu erhalten:</p>
<ul>
<li><strong>start=1</strong>, liefere Ergebnisse zurück (starte die Suche), ansonsten wird die erweiterte Suchmaske angezeigt</li>
<li><strong>S=BERLIN</strong> - der Name des Startbahnhofs, hier funktioniert in einigen Fällen der String (siehe oben)</li>
<li><strong>REQ0JourneyStopsSID=A=1@O=BERLIN@X=13386988@Y=52520501@U=80@L=008096003@B=1@p=1598383868@</strong> - grundsätzlich macht es aber Sinn, hier die explizite Id des Bahnhofs zu verwenden</li>
<li><strong>Z=Stuttgart Hbf</strong> - der Zielbahnhof</li>
<li><strong>date=Do, 17.09.20</strong> - Tag der Reise</li>
<li><strong>time=08:00</strong> - Uhrzeit der Reise</li>
<li><strong>timesel=depart</strong> - Bestimmen Tag und Uhrzeit Abfahrt oder Ankunft (arrival)?</li>
<li><strong>tariffTravellerType.1=E</strong> - E oder F für Erwachsener oder Kind</li>
<li><strong>tariffClass=2</strong> - 1. oder 2. Klasse</li>
<li><strong>tariffTravellerReductionClass.1=&hellip;</strong> - hiermit lässt sich mit Ziffern von 0 bis 17 festlegen, ob Vergünstigungen einberechnet werden sollen, wie z.B. eine BahnCard. Das kann sich sicherlich auf den Preis der Tickets auswirken, hat aber keinen Einfluss auf die Vergleichbarkeit der Preise bzw. Analyse der Preisstruktur. Ich ignoriere diesen Parameter also.</li>
</ul>
<p>Eine Handvoll anderer Parameter ist wie gesagt in der Postman-Datei genauer beschrieben. Diese Anfrage liefert uns nun die bekannte Übersicht mit in der Regel drei Verbindungen zurück:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-4-700x484.png" alt=""></p>
<p><strong>Abbildung 11:</strong> Preise der 2. Klasse für Berlin -&gt; Stuttgart am 17.09.2020</p>
<p>Außerdem wird ein Cookie gesetzt, der drei sehr wichtige Daten enthält:</p>
<ul>
<li><strong>ld</strong> - ein Identifier, der vorerst unverändert bleibt, z.B: 37226</li>
<li><strong>seqnr</strong> - in Integer, der initial auf 1 gesetzt wird und dann hochzählt</li>
<li><strong>ident</strong> - ein weiterer Identifier, der sich mit jedem Request ändert</li>
</ul>
<p>Diese drei Informationen werden offenbar auch serverseitig gespeichert, um den Request zuordnen bzw. mehr Details liefern zu können. Wenn man mit Klick auf &ldquo;Später&rdquo; weitere Preise anfordert, wird ein GET-Request abgesetzt, der anhand dieser drei Parameter die Preise für drei weitere Abfahrten abfragt. Hinzu kommt noch der Parameter <strong>REQ0HafasScrollDir=1</strong> bzw. <strong>REQ0HafasScrollDir=2</strong> für spätere oder frühere Abfahrten.</p>
<p><strong>Seqnr</strong> muss außerdem mit jedem Request iteriert werden, um zusätzliche Slots abzufragen. So lassen sich zumindest programmatisch beliebig viele darauffolgende Abfahrtszeiten abfragen. In einem Test konnte ich seqnr bis 20 erhöhen und so auch den kompletten Folgetag abzufragen. Das klappt allerdings nur über Postman, im Browser ist nach <strong>seqnr=3</strong> Schluss:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-19-700x402.png" alt=""></p>
<p><strong>Abbildung 12:</strong> Beschränkte Zeitraum-Abfrage im Browser</p>
<p>Zum Vergleich die Abfrage des darauffolgenden Tages mit Postman - <strong>perfekte gute</strong> Voraussetzungen, um die Preise automatisiert abzufragen:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-20-700x268.png" alt=""></p>
<p><strong>Abbildung 13:</strong> Abfrage eines großen Zeitraums mit Postman</p>
<p>Der Nachteil ist allerdings, dass die Antwort vom Server reines <strong>HTML</strong> ist. Man muss die Preise also mit einem <strong>DOM-Parser</strong> aufwendig manuell extrahieren.</p>
<h3 id="oberfläche-2---der-sparpreis-finder">Oberfläche 2 - Der Sparpreis-Finder</h3>
<p>Diese Oberfläche nutzt einen anderen Endpunkt, der etwas bequemer zu bedienen ist. Hier kommt eine Schnittstelle zum Einsatz, die etwas bequemer mit einem JSON-Object gefüttert wird und sogar ein JSON-Object zurückliefert. Aber der Reihe nach.</p>
<p>Die erste Abfrage, aus der Maske heraus fragt diesen Endpunkt ab:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">https://ps.bahn.de/preissuche/preissuche/psc_start.post
</span></span></code></pre></div><p>Hier werden eine Menge Verbindungs-Parameter in dem GET-Request übermittelt (die wie gehabt in der Postman-Collection genauer beschrieben werden). Dieser Request liefert allerdings nur einen <strong>Schlüssel</strong> aus <strong>Timestamp</strong> und offenbar zufälligem <strong>Hex-Wert</strong> zurück: Dieser Schlüssel wird in einer weiteren Abfrage benötigt, um die tatsächliche Preisauskunft zu erhalten. Der Schlüssel nennt sich <strong>pscexpires</strong> und hat z.B. folgenden Inhalt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">0209201557-3f1a35cab18604c875235a194738d672
</span></span></code></pre></div><p>Der Request wurde um 15:37 Uhr abgesetzt, offenbar ist der Schlüssel also 20 Minuten gültig. Um einen aktuellen Schlüssel zu erhalten, reicht ein minimaler Request, der z.B. nur den Start-Bahnhof enthält:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">https://ps.bahn.de/preissuche/preissuche/psc_start.post?S=BERLIN
</span></span></code></pre></div><p>Damit ausgestatttet kann jetzt ein weiterer Request abgesetzt werden, um die tatsächlichen Preise zu erhalten. Der Endpunkt dafür lautet:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">https://ps.bahn.de/preissuche/preissuche/psc_service.go
</span></span></code></pre></div><p><em>Anmerkung: Ist der eben erwähnte Schlüssel <strong>pscexpires</strong> abgelaufen, erhälst du folgende Fehlermeldung:</em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&#34;PSC-Captcha-Session ist abgelaufen!&#34;
</span></span></code></pre></div><p>Hier gibt es zwei relevante Parameter:</p>
<ul>
<li><strong>service=pscangebotsuche</strong> sowie</li>
<li><strong>data={}</strong> ein JSON-Objekt mit den Reise-Parametern</li>
</ul>
<p>Nun können also die Reise-Parameter für die Preissuche übermittelt werden. Das <strong>JSON-Objekt</strong> hat folgenden Aufbau (an dieser Stelle im <strong>YAML-Format,</strong> zur besseren Dokumentation, <a href="https://onlineyamltools.com/convert-yaml-to-json">hiermit</a> kannst du daraus ein gültiges JSON-Objekt erstellen):</p>
<p><em>Anmerkung: Im Gegensatz zur ersten Schnittstelle, kann hier mit der Id der Bahnhöfe gearbeitet werden, die weitaus weniger sperrig ist.</em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">---
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"># Id des Start-Bahnhofs
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">s: 008096003
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"># Id des Ziel-Bahnhofs
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">d: 008000096
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"># Datum
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">dt: 13.09.20
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"># Uhrzeit
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">t: &#39;0:00&#39;
</span></span><span class="line"><span class="ln">10</span><span class="cl"># Zeitraum für die Abfrage in Minuten, mindestens 1, maximal 1440 / 1 Tag
</span></span><span class="line"><span class="ln">11</span><span class="cl">dur: 1440
</span></span><span class="line"><span class="ln">12</span><span class="cl"># der eindeutige Schlüssel (siehe oben)
</span></span><span class="line"><span class="ln">13</span><span class="cl">pscexpires: &#34;{{pscexpires}}&#34;
</span></span><span class="line"><span class="ln">14</span><span class="cl"># ?
</span></span><span class="line"><span class="ln">15</span><span class="cl">dir: 1
</span></span><span class="line"><span class="ln">16</span><span class="cl"># Nur schnellste Verbindungen
</span></span><span class="line"><span class="ln">17</span><span class="cl">sv: false
</span></span><span class="line"><span class="ln">18</span><span class="cl"># Nur Verbindungen ohne ICE
</span></span><span class="line"><span class="ln">19</span><span class="cl">ohneICE: false
</span></span><span class="line"><span class="ln">20</span><span class="cl"># Fahrrad-Mitnahme
</span></span><span class="line"><span class="ln">21</span><span class="cl">bic: true
</span></span><span class="line"><span class="ln">22</span><span class="cl"># ?
</span></span><span class="line"><span class="ln">23</span><span class="cl">tct: &#39;0&#39;
</span></span><span class="line"><span class="ln">24</span><span class="cl"># Klasse (1/2)
</span></span><span class="line"><span class="ln">25</span><span class="cl">c: &#39;2&#39;
</span></span><span class="line"><span class="ln">26</span><span class="cl"># Reisende
</span></span><span class="line"><span class="ln">27</span><span class="cl">travellers:
</span></span><span class="line"><span class="ln">28</span><span class="cl"># E - Erwachsener, F/K - Kind 6 bis 14 Jahre, B - Kind bis 5 Jahre
</span></span><span class="line"><span class="ln">29</span><span class="cl">- typ: E
</span></span><span class="line"><span class="ln">30</span><span class="cl"># Ermäßigungs-Klasse
</span></span><span class="line"><span class="ln">31</span><span class="cl">  bc: &#39;0&#39;
</span></span><span class="line"><span class="ln">32</span><span class="cl"># Alter?
</span></span><span class="line"><span class="ln">33</span><span class="cl">  alter: &#39;&#39;
</span></span></code></pre></div><p>Eine derartige Abfrage liefert ein ziemlich umfangreiches JSON-Objekt zurück, dass ich hier nur grob beschreibe. Unter &ldquo;<em>angebote</em>&rdquo; werden zunächst alle Preise aufgeführt. Die Preiskategorie (Flexpreis, Super Spar-Preis) ist mutmaßlich anhand des Feldes <em>&ldquo;tt&rdquo;</em> erkennbar. SP steht für Super Spar-Preis, NP für Flexpreis. Außerdem gibt es das Feld &ldquo;<em>pky</em>&rdquo;, was wohl für Preiskategorie steht:</p>
<ul>
<li>71830 - Super Sparpreis (Achtung, in der Oberfläche wird oft nur von Spar-Preis gesprochen)</li>
<li>7001 - Flexpreis</li>
</ul>
<p>Unter Verbindungen werden nun alle Fahrten aufgeführt, inklusive der Umstiege und Zeiten und sogar der Zug-Nummern, z.B. ICE 695.</p>
<p>Die Schnittstelle liefert also ein maschinell sehr einfach zu verarbeitendes Ergebnis zurück. Es gibt aber ein <strong>Problem:</strong> Es ist nicht klar, anhand welcher Kriterien entschieden wird, auch den Flexpreis mitzuteilen. Dieser ist nämlich leider nicht immer Teil der Antwort. Bisher konnte ich auch noch nicht herausfinden, ob ich das mit einem Parameter in der Anfage steuern kann.</p>
<h2 id="zwischenfazit">Zwischenfazit</h2>
<p>Wir haben also ein ziemlich komplexes Preissystem und zwei verschiedene Schnittstellen. Wollte man eine alternative Preisübersicht für einen größeren Zeitraum aufbauen, kann man nun</p>
<ul>
<li>die <strong>1. Schnittstelle</strong> nutzen, die zwar Flex-Preis und Spar-Preis auszeichnet, aber immer nur für ein sehr kleines Zeitfenster,</li>
<li>oder auf die <strong>2. Schnittstelle</strong> zurückgreifen, die zwar einen großen Zeitraum mit allen Preisen liefert, aber den Flex-Preis nicht zuverlässig zurück gibt.</li>
</ul>
<p>Bei beiden Schnittstellen fehlt dennoch die <strong>Vergleichbarkeit</strong> mit der 1. Klasse sowie die Aufzählung des (Super-)Spar-Preises, der ja, wie wir wissen, ebenfalls einer Schwankung unterliegt.</p>
<p>Nun, da ich weiß, wie ich programmatisch an die Preise der Deutschen Bahn komme, habe ich ein Script geschrieben, das die Preise für beliebige Verbindungen regelmäßig abrufen kann. Dazu habe ich in mehreren Durchläufen Verbindungen und Preise bis zu <strong>90 Tage</strong> im Voraus abgerufen (90 Tage ist das Limit für das Buchen im Voraus). Die <strong>ersten Durchläufe</strong> (Ende 2019 und Mitte 2020) waren mehr ein Testen und Herantasten, im <strong>finalen Durchlauf</strong> (die &ldquo;relevante Stichprobe&rdquo;) Anfang September 2020 habe ich die folgenden Verbindungen abgefragt:</p>
<ul>
<li>Berlin - Hannover (<a href="https://de.statista.com/statistik/daten/studie/1092635/umfrage/puenktlichkeit-der-zuege-der-deutschen-bahn-auf-den-meistbefahrenen-verbindungen/">die Strecke mit den meisten Verspätungen</a>)</li>
<li>Berlin - Stuttgart (eine selbst gewählte Verbindung, die ich früher oft genutzt habe)</li>
<li>Stuttgart - Berlin (und zurück)</li>
<li>Gotha - Eisenach (eine selbst gewählte möglichst kurze Verbindung)</li>
<li>Ingolstadt - Nürnberg (<a href="https://inside.bahn.de/familie-9-bahnstrecken-mit-wow-effekt/">eine Hochgeschwindigkeitsstrecke</a>)</li>
<li>München - Berlin (eine weitere Hochgeschwindigkeitsstrecke)</li>
<li>Köln - Dresden (eine selbst gewählte Ost-West-Verbindung)</li>
<li>Offenburg - Greifswald (<a href="https://inside.bahn.de/laengste-zugstrecken-deutschlands/">mit 1.300 km die längste Strecke</a>)</li>
</ul>
<p>Erfasst werden die <strong>Abfahrtszeit</strong>, die <strong>Dauer der Reise,</strong> die <strong>Anzahl der Umstiege,</strong> die <strong>erwartete Auslastung,</strong> die <strong>beteiligten Zugarten</strong> und natürlich der <strong>Flex-Preis</strong> sowie der <strong>Super Spar-Preis.</strong> Zur Qualitätssicherung habe ich außerdem die URL zur Preisübersicht erfasst.</p>
<p>Mein <strong>Ziel</strong> ist es zu erkennen, inwiefern Preise von der <strong>Tageszeit</strong> oder dem <strong>Wochentag</strong> abhängen. Wie stark ist der Einfluss der <strong>Auslastung</strong>? Wann muss man ein Ticket spätestens buchen, um noch einen guten Preis zu bekommen? Im nächsten Teil schaue ich mir an, welche Zusammenhänge sich erkennen lassen:</p>
<h2 id="teil-4---analyse-der-ticket-preise-der-deutschen-bahn">Teil 4 - Analyse der Ticket-Preise der Deutschen Bahn</h2>
<p>Als Einstieg werfen wir mal einen Blick auf die Verteilung der Preis. Die folgende Übersicht zeigt die Preise für alle Verbindungen, Klassen und Preis-Kategorien an:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-54-700x412.png" alt=""></p>
<p><strong>Abbildung 14:</strong> Preis-Überblick</p>
<p><em>Anmerkung: &ldquo;Durchschn. Preis&rdquo; meint immer arithmetisches Mittel.</em></p>
<p>Die 1. Klasse bekommt man bei der Deutschen Bahn schon für <strong>12,30 Euro</strong>, das obere Limit liegt bei stabilen <strong>259,70 Euro.</strong> Die günstigste Reise tritt man für <strong>5,60 Euro</strong> an. In Testläufen von 2019 kostete das teuerste Ticket übrigens <strong>294,00 Euro</strong> (Berlin -&gt; Stuttgart, 02.10.2019). Offensichtlich wurden die Preise in 2020 also angepasst.</p>
<p><em>Anmerkung: Die folgende Auswertung zeigt, dass die Verbindung <strong>Offenburg -&gt; Greifswald</strong> nicht mehr als Direktverbindung zu existieren scheint und somit auch nicht, wie angepriesen, die längste zusammenhängende Strecke ist. <a href="https://zugfahrplande.com/ic-zugfahrplan/1846-ic-2216">Offenbar fährt der ICE 2216 nur noch von Stuttgart nach Kiel</a>.</em></p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-4-700x387.png" alt=""></p>
<p><strong>Abbildung 15:</strong> Gegenprobe: Keine Direktverbindungen für Offenburg -&gt; Greifswald?</p>
<p>Die nächste Abbildung zeigt die Dauer, Streckenlänge und mittlere erwartete Auslastung aller abgefragten Verbindungen. Um die Entfernung zu ermittelten, <a href="https://www.evg-online.org/deine-vorteile/services/service-meldungen/entfernungsrechner-fuer-fahrverguenstigungen/">nutze ich dieses Tool</a>.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-55-700x164.png" alt=""></p>
<p><strong>Abbildung 16:</strong> Entferung, Dauer und Auslastung aller Verbindungen</p>
<p>Insgesamt gibt es fünf Stufen der Auslastung, die bei der Ticket-Auswahl angezeigt werden:</p>
<ul>
<li>Außergewöhnliche hohe Auslastung (Stufe 5)</li>
<li>Sehr hohe Auslastung</li>
<li>Hohe Auslastung</li>
<li>Besetzung von mehr als der hälfte der Sitzplätze</li>
<li>Geringe bis mittlere Auslastung (Stufe 1)</li>
</ul>
<p>Im finalen Durchlauf wurde bei alle Verbindungen nur eine <strong>Auslastungen von 1 und 2</strong> erwartet. In früheren Durchläufen gab es auch Auslastungsstufen bis 4 und sogar 5 (nur in 2019). Nichtsdestotrotz: Die Strecke <strong>Berlin -&gt; Hannover</strong> war (siehe oben) zwar eine Verbindung mit den meisten Verspätungen, obgleich sie bei der Auslastung eher im Mittelfeld liegt. Eine Erklärung könnte sein, dass die Deutsche Bahn in 2020 den Fahrplan angepasst hat, um dem entgegen zu wirken. Eine andere Erklärung: <strong>Corona</strong> und damit ein geringeres Reise-Aufkommen.</p>
<h3 id="der-buchungs-zeitpunkt">Der Buchungs-Zeitpunkt</h3>
<p>Schauen wir uns mal die Flex-Preis-Entwicklung (Median über den Tagespreis) aller Direktverbindungen (inkl. Offenburg -&gt; Greifswald mit einem Umstieg) an (2. Klasse). Zur Erinnerung, die Preise wurden am 06. Sept. 2020 abgerufen:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-56-700x441.png" alt=""></p>
<p><strong>Abbildung 17:</strong> Median Flex-Preis 2. Klasse, alle Direktverbindungen (inkl. Offenburg -&gt; Greifswald, 1 Umstieg)</p>
<p>Was fällt auf? <strong>Je höher der Preis, desto größer die Schwankungen</strong>. Der Trend über die 90 Tage ist allerdings relativ stabil. In der 1. Klasse sieht es ähnlich aus. Da wir aber auf der Suche nach Schnäppchen sind, werfen wir doch mal ein Blick auf den günstigsten Preis in dieser Kategorie:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-57-700x444.png" alt=""></p>
<p><strong>Abbildung 18:</strong> günstigster Flex-Preis, 2. Klasse, alle Direktverbindungen (inkl. Offenburg -&gt; Greifswald)</p>
<p>Bei den teuren Strecken (über 100 Euro) und der kurzen Gotha -&gt; Eisenach Verbindung ändert sich nichts. Dazwischen sinken die Preise aber auffällig.</p>
<p>Schauen wir uns mal die Super-Spar-Preise an, auch hier wieder die 2. Klasse (die 1. Klasse verhält sich ähnlich).</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-12-700x572.png" alt=""></p>
<p><strong>Abbildung 19:</strong> 2. Klasse, Super-Spar-Preis, Direktverbindungen (inkl. Offenburg -&gt; Greifswald)</p>
<p>Der Preis sinkt in den hohen Preis-Regionen stärker, je länger das Abfahrtsdatum in der Zukunft liegt. Die teuren Tickets schwanken außerdem auffällig, während es im Niedrig-Preis-Segment kaum noch Preisschwankungen gibt.</p>
<p>Schauen wir uns das ganze noch mal für alle Preis-Kategorien einer Verbindung an, hier Köln -&gt; Dresden:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-58-700x445.png" alt=""></p>
<p><strong>Abbildung 20:</strong> Preise für die Verbindung Köln -&gt; Dresden (nur Direkt)</p>
<p>Wenig überraschend kann man feststellen: Die Kurven der 1. und 2.. Klasse verlaufen ziemlich synchron. Sinkt der Preis in der 1. Klasse, macht es die 2. Klasse ihm gleich. Außerdem erscheinen die Schwankungen zyklisch. Zum Vergleich die Preise für die berüchtigte Verbindung Berlin -&gt; Hannover:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-59-700x441.png" alt=""></p>
<p><strong>Abbildung 21:</strong> Preise für die Verbindung Berlin -&gt; Hannover (nur Direkt)</p>
<p>Ich will die Preise noch etwas genauer untersuchen. Die folgende Abbildung zeigt die Preise der 1. Klasse für die Verbindung Berlin -&gt; Stuttgart. Da jeder Punkt für eine Verbindung bzw. einen Preis steht, lässt sich nun ganz deutlich ein Zusammenhang erkennen. Bzw. nicht.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-62-700x443.png" alt=""></p>
<p><strong>Abbildung 22:</strong> 1. Klasse Preise für die Verbindung Berlin -&gt; Stuttgart (nur Direkt)</p>
<p>Der Flex-Preis folgt einem Schema. Der Grundpreis liegt bei <strong>227,80 Euro</strong>. Am Freitag steigt dieser stark an, am Samstag sinkt er sehr stark und am Sonntag ist er wieder etwas höher als der Grundpreis, aber nicht so hoch wie am Freitag.</p>
<p>Und der <strong>Super-Spar-Preis</strong>? Tja nun. Hier scheint es kein Konzept zu geben. Es scheint, als würde der Preis zufällig bestimmt werden. Auf einer anderen Strecke sieht es bei weitem nicht ganz so chaotisch aus, aber trotzdem noch nicht nachvollziehbar:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-64-700x446.png" alt=""></p>
<p><strong>Abbildung 23:</strong> 1. Klasse Preise für die Verbindung Ingolstadt -&gt; Nürnberg (nur Direkt)</p>
<p>Beim <strong>Flex-Preis</strong> ist fast es egal, wie früh du buchst, es gibt aber durchaus Unterschiede, nämlich am Wochenende. Ansonsten ist das Spar-Potential bei teureren Tickets tendentiell höher. Beim <strong>Super-Spar-Preis</strong> ist es eigentlich auch nicht wichtig, möglichst früh zu buchen. Auch hier kann man kurz vor Reiseantritt noch günstige Preise finden. Es gibt mitunter sehr starke Preisschwankungen, die in höheren Preisregionen größer sind.</p>
<h3 id="gibt-es-eine-nachfrage-steuerung">Gibt es eine Nachfrage-Steuerung?</h3>
<p>Das wirft die Frage auf, inwieweit versucht wird, die Nachfrage zu steuern. Klar ist nun, dass der Flex-Preis an Wochenenden stark schwankt. Untertags macht eine Schwankung auch gar keinen Sinn, da es keine Zugbindung gibt. Hier ist der Super-Spar-Preis besser geeignet. Und tatsächlich schwankt dieser auch, bedingt durch die Tagszeit (dazu unten mehr).</p>
<p>Allerdings steigt die erwartete Auslastung der Züge auch, je näher das Reisedatum liegt. Dazu ein Überblick für die erwartete Auslastung aller Verbindungen (Abbildung 35a berücksichtigt auch Daten aus den vergangenen Abfragen, x-Achse auf 90 Tage gestreckt, um den Vergleich mit Abbildung 22 und 23 zu erleichtern).</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-70-700x444.png" alt=""></p>
<p><strong>Abbildung 35a:</strong> Erwartete Auslastung für alle Verbindungen, 1. und 2. Klasse (alle Stichproben, 2019 und 2020)</p>
<p>Bis zu einem Monat vor Fahrtbeginn wird vom System in der Regel keine Auslastungs-Information gemeldet. Die Auslastung in der 1. Klasse ist geringfügig kleiner. In der 2. Klasse scheint es noch viele Buchungen einen Tag vor Fahrtantritt zu geben - am Reisetag selber ist die erwartete Auslastung überraschenderweise geringer. Klar wird aber, dass die Auslastung steigt, je weniger das Reisedatum in der Zukunft liegt.</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-72-700x442.png" alt=""></p>
<p><strong>Abbildung 35b:</strong> Erwartete Auslastung Berlin -&gt; Stuttgart, 1. und 2. Klasse</p>
<p>Bei der Betrachtung der einzelnen Verbindung <strong>Berlin -&gt; Stuttgart</strong> ist dieser Trend vielleicht nicht ganz so deutlich, aber er existiert, vor allem in der 2. Klasse. Ein Zusammenhang zur Abbildung 22 lässt sich aber kaum erkennen. Zugegeben: Der <strong>Flex-Preis</strong> ist in der fernen Zukunft an zwei Punkten günstiger. Nur beim Super-Spar-Preis ist keine klare Reaktion auf die erwartete steigende Nachfrage erkennbar.</p>
<p>Um hier eine wirklich zuverlässige Aussage treffen zu können, müsste man eine konkrete Verbindungen im zeitlichen Verlauf betrachten. So lässt sich nur die Mutmaßung anstellen, dass die Nachfragesteuerung kaum dynamisch auf die erwartete Auslastung reagiert, sondern vielmehr die typischen Reisezeiten berücksichtigt (Freitag / Sonntag). Aber gut, das Ziel war nicht, die Berechnung des Ticket-Preises zu analysieren, sondern seine Komplexität darzustellen.</p>
<h3 id="der-preis-des-umsteigens">Der Preis des Umsteigens</h3>
<p>Umsteigen ist unbequem und man will es gerne vermeiden. Der Wunsch, sprich die Nachfrage, nach einer Verbindung mit mehreren Umstiegen dürfte also recht gering sein. Im Preis schlägt sich das allerdings kaum wieder. Es gibt durchaus Verbindungen mit mehreren Umstiegen, die teurer sind als die Direktverbindung.</p>
<p>Hier als Beispiel die jeweils günstigsten Flex-Preise der 1. Klasse:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-20-700x228.png" alt=""></p>
<p><strong>Abbildung 24:</strong> 1. Klasse, günstigster Flex-Preis</p>
<p>Die Strecken <strong>Berlin -&gt; Stuttgart</strong> und <strong>München -&gt; Berlin</strong> haben also Schnäppchenpotential im Flex-Preis-Segment (wenn die unterschiedlichen Preise an einem Tag verfügbar sind). Nun ist es aber so, dass man mit dem Flexpreis <strong>nicht</strong> <strong>in der Zug-Kategorie</strong> <strong>aufsteigen</strong> darf (siehe oben). Wer also ein Ticket im IC bucht, darf nicht ICE fahren. Schauen wir uns doch mal die Verbindung Berlin -&gt; Stuttgart genauer an:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-24-700x440.png" alt=""></p>
<p><strong>Abbildung 25:</strong> 1. Klasse, Flex-Preis, Mindest-Flex-Preis x durchschnittliche Dauer und Umstiege, Berlin - Stuttgart</p>
<p>Du siehst, das untere Limit bei der ICE-Fahrt liegt bei etwas über <strong>200 Euro</strong>. Wenn du ein paar Euro auf der Verbindung sparen willst, musst du fast 3 Stunden mehr einplanen und z.B. IC fahren. Aber was mit der Verbindung mit <strong>vier Umstiegen</strong> (blauer Kreis)? Das Ticket kostet <strong>188 Euro</strong> und <strong>beinhaltet eine ICE-Strecke</strong>. Handelt es sich damit um ein vollwertiges ICE-Ticket und kann ich damit auch die direkte aber teurere Verbindung am gleichen Tag nutzen? Der Twitter-Support hat das mehr oder weniger bestätigt:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-25-700x397.png" alt=""></p>
<p><strong>Abbildung 26:</strong> Quelle: <a href="https://twitter.com/DB_Bahn/status/1303241966759665665">Twitter</a></p>
<p><em>Anmerkung: Die gestellte Frage lautete: &ldquo;Bei einem Flex-Preis-Ticket mit einem Umstieg (ICE zu IC) habe ich ja ein ICE-Ticket - für den ersten Teil der Strecke. Das Ticket ist dann nur für den 1. Teil gültig?&rdquo; Mein Verdacht ist allerdings, dass der Support nicht ganz verstanden hat, worauf ich hinaus wollte. Nachfragen lohnt sich also.</em></p>
<p>Wenn dem so ist, ergibt sich daraus ein wichtiges Kriterium bei der Preissuche: Wenn du ein günstiges Flex-Preis-Ticket zu einer &ldquo;verrückten&rdquo; Tageszeit findest, z.B. 0:12 Uhr in der Nacht, das nur eine ICE-Verbindung enthält, kannst du damit den ganzen Tag auf dieser Strecke reisen. Idealerweise auch auf einer Direktverbindung, nur mit dem ICE. In dem Fall ist erst Recht wichtig, Preise immer in einem <strong>großzügigen Zeitfenster</strong> zu vergleichen.</p>
<p>Noch mal zurück zur <strong>Abbildung 25</strong>. Die folgende <strong>Abbildung 27</strong> zeigt die Flex-Preise für die 2. Klasse:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-26-700x441.png" alt=""></p>
<p><strong>Abbildung 27:</strong> 1. Klasse, Flex-Preis, Mindest-Flex-Preis x durchschnittliche Dauer und Umstiege, Berlin - Stuttgart</p>
<p>Das Preisgefüge ändert sich nicht. Man kann also zumindest festhalten, dass die Dauer und die Anzahl der Umstiege zu den festen Faktoren der Preisbildung gehören.</p>
<p>Beim <strong>Super-Spar-Preis</strong> gibt es die <strong>feste Zugbindung</strong>. Hier macht es keinen Sinn, ein ggf. günstigeres Ticket mit vielen Umstiegen zu suchen und dann einfach die Direkt-Verbindung zu nutzen. Das dürfte sich auch bei der Preis-Gestaltung zeigen: Sind weniger bequeme Verbindungen mit mehreren Umstiegen teurer?</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-21-700x205.png" alt=""></p>
<p><strong>Abbildung 28:</strong> 1. Klasse, kleinster Super-Spar-Preis</p>
<p>Ja! Der günstigste Preis wird immer für die Direktverbindung aufgerufen. Kann man die Verbindungen mit mehreren Umstiegen also komplett ignorieren? Schwer zu sagen, denn hierbei handelt es sich um die aggregierte Darstellung. Wie sieht es in der Realität aus? Dazu gleich mehr. Zunächst noch mal der Vergleich mit der <strong>2. Klasse</strong>:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-28-700x229.png" alt=""></p>
<p><strong>Abbildung 29:</strong> 2. Klasse, kleinster Super-Spar-Preis</p>
<p>Was fällt auf? Die Verbindung <strong>Ingolstadt -&gt; Nürnberg</strong> mit einem Umstieg kostet 23,00 Euro, inklusive Sitzplatz also 27,00 Euro. Und ist etwas teurer als die Direktverbindung in der 1. Klasse für 26,40 Euro.</p>
<p>Eine <strong>weitere wichtige Erkenntnis</strong> lautet demnach: Beim Super-Spar-Preis lohnt sich der Vergleich mit der 1. Klasse.</p>
<h3 id="gibt-es-regelmäßigkeiten-bei-der-preisbildung">Gibt es Regelmäßigkeiten bei der Preisbildung?</h3>
<p>Noch mal zurück zum Median Flex-Preis für alle Verbindungen. Als Grundlage für die Berechnung eines <strong>Preises je Reise-Minute</strong> möchte ich einmal die angebene und damit ideale Reisedauer der ICE-Verbindungen ohne Umstiege verwenden, da diese im Datensatz direkt vorliegt. Außerdem kann vielleicht der <strong>Preis je Kilometer</strong> Aufschluss geben. Die folgende Abbildung zeigt die Verhältnisse der 2. zur 1. Klasse für die Flex-Preise aller Direkt-Verbindungen die mit dem ICE bedient werden:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-65-700x224.png" alt=""></p>
<p><strong>Abbildung 30:</strong> Flex-Preis für alle DirektVerbindungen, nur ICE</p>
<p>Der Faktor vom günstigsten zum teuersten Ticket ist in etwa gleich, nämlich knapp 10. Wenn man aber die Dauer als Indiz für die Entfernung nimmt, steigt der Preis nicht so stark an wie die Entfernung. Das zeigt sich in der Veränderung des Preis / Minute. Bei kurzen Strecken ist dieser höher als bei langen Strecken. Das bestätigt auch die Gegenüberstellung in einem Chart:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-67-700x562.png" alt=""></p>
<p><strong>Abbildung 31:</strong> Flex-Preis / Minute und Dauer aller Direkt-Verbindungen, nur ICE</p>
<p>Steigt der Preis also nicht proportional zur Länge der Verbindung, sprich Dauer? Die Werte für Preis / km können das leider nicht eindeutig bestätigen. Hier benötigen wir also mehr Daten.</p>
<p>Aber dafür lässt sich eine andere Feststellung relativ sicher belegen:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-69-700x228.png" alt=""></p>
<p><strong>Abbildung 32:</strong> Differenz 1. und 2. Klasse, Median Flex-Preis</p>
<p>Offensichtlich beträgt der <strong>Preis-Aufschlag für die 1. Klasse knapp 168%</strong> (bzw. der Nachlass zur 2. Klasse etwa 40%). Das ist jetzt keine bahnbrechende Erkenntnis, obgleich wir ja wissen, dass man die Preise der 1. und 2. Klasse nicht ohne weiteres vergleichen kann. Beim Super-Spar-Preis ist das übrigens nicht ganz so offensichtlich. Dieser schwankt aber auch zu stark, um hier eine zuverlässige Abschätzung zu geben.</p>
<h3 id="die-optimale-reisezeit">Die optimale Reisezeit</h3>
<p>Abschließend will ich die Granularität noch etwas erhöhen und mir die Preise über den Tag verteilt anschauen. Die nächste Abbildung zeigt den geringsten Super-Spar-Preise für beide Klassen je Verbindung, über den Tag verteilt:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-42-700x445.png" alt=""></p>
<p><strong>Abbildung 33</strong>: Median-Preis für Direktverbindungen (inkl. Offenburg -&gt; Greifswal) über den Tag verteilt</p>
<p>Die Super-Spar-Preise scheinen relativ stabil zu sein, der Flex-Preis schwankt etwas stärker. Zur Abendzeit werden die Preise aller Kategorien günstiger. Sicherlich ist es hilfreich, hier die Verbindungen im Detail zu untersuchen. Die folgende Abbildung zeigt die Preise der Verbindung München -&gt; Berlin:</p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-43-700x429.png" alt=""></p>
<p><strong>Abbildung 34:</strong> Median-Preise über die Tageszeit für die Verbindung München -&gt; Berlin</p>
<p>Ein Rückschluss auf die Nachfrage-Steuerung, die ich oben schon betrachtet habe, ist hier übrigens nur schwer möglich. Es handelt sich um die aggregierten Preise und Reisezeiten. Nur soviel: Zur Nachmittagszeit, also vermutlich der Haupt-Reisezeit, gibt es Preis-Spitzen beim Super-Spar-Preis. Der Flex-Preis ist relativ stabil.</p>
<h2 id="teil-5---eine-alternative-oberfläche">Teil 5 - Eine alternative Oberfläche</h2>
<p>Nun, da wir die spannenden Zahlenspiele und bunten Grafiken abgearbeitet haben, wollen wir uns eine mögliche Alternative anschauen. Ich habe mich oben schon recht intensiv mit den &ldquo;Preis-APIs&rdquo; der Deutschen Bahn beschäftigt. Diese habe ich nicht nur zur stumpfen Abfrage unzähliger Preise verwendet, sondern auch um eine alternative Ticket-Preis-Suche zu bauen: <a href="https://nickets.de/">nickets.de</a></p>
<p><img src="/2020/2020-09-09-das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/images/grafik-45-700x385.png" alt=""></p>
<p><strong>Abbildung 36:</strong> nickets - Visuelle Ticket-Preissuche</p>
<p>Die Bedienung sollte eigentlich relativ intutiv sein, das war ja das Ziel der ganzen Übung. Du gibst Start- und Zielbahnhof an, legst den Abfahrts-Zeitpunkt fest und lässt dir die entsprechenden Preise in einer Grafik anzeigen. Dort siehst du zu jeder Verbindung den Super-Spar-Preis sowie den Flex-Preis und die Anzahl der Umstiege. Fährst du mit dem Maus-Cursor über die Kreise, erhälst du zusätzliche Informationen zu dem jeweiligen Ticket. Mit Klick auf die kleinen Kreise kommst du zur Buchung auf der Seite der Deutschen Bahn.</p>
<p>Die Oberfläche befindet sich noch im Beta-Stadium, es kann also zu ungewohnten Verhalten kommen. Im Grunde sollten die Preise aber korrekt angezeigt werden und vor allem aktuell sein. Feedback und Wünsche sind natürlich sehr gerne gesehen.</p>
<h3 id="download-der-postman-collection">Download der Postman-Collection</h3>
<p><a href="https://www.nickyreinert.de/files/das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/Deutsche-Bahn-Tickets.postman_collection.json_.7z">Deutsche-Bahn-Tickets.postman_collection.json_</a><a href="https://www.nickyreinert.de/files/das-ticket-preis-system-der-deutschen-bahn-oder-wie-findest-du-den-optimalen-fahrschein-preis/Deutsche-Bahn-Tickets.postman_collection.json_.7z">Herunterladen</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> analyse, deutsche-bahn, fahrscheine, mobilitaet, statistik, tickets</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Das Ticket-Preis-System der Deutschen Bahn - oder: wie findest du den optimalen Fahrschein-Preis? - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Leitfaden für ein sicheres und schnelles WordPress-Setup</title>
      <link>http://localhost:1313/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/</guid>
      <description>Das Thema Geschwindigkeit liegt bei uns allen ganz weit oben auf der Agenda. Oft allerdings nur passiv, wenn man ungeduldig auf der Tastatur trommelt und auf …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Das Thema Geschwindigkeit liegt bei uns allen ganz weit oben auf der Agenda. Oft allerdings nur passiv, wenn man ungeduldig auf der Tastatur trommelt und auf das Laden einer Internetseite wartet.&#39; reading_time: 15 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Database, Server, Mobile</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Das Thema Geschwindigkeit liegt bei uns allen ganz weit oben auf der Agenda. Oft allerdings nur passiv, wenn man ungeduldig auf der Tastatur trommelt und auf das Laden einer Internetseite wartet. Aktiv fehlt oft der richtige Impuls. Was kann man noch tun, außer die Bilder kleinzuhalten, um WordPress zu beschleunigen?</p>
<p>Hier möchte ich dir ein paar einfache Tricks vorstellen, um die Geschwindigkeit deiner WordPress-Seite zu optimieren. Und da neben der Geschwindigkeit die Sicherheit ein weiteres beliebtes Thema ist, werde ich auch dazu ein paar kleine Kniffe mit großer Wirkung zeigen. Doch zunächst ein paar&hellip;</p>
<h2 id="grundsätze">Grundsätze</h2>
<p>Es gibt ein paar Prämissen, die du beim Thema <strong>Geschwindigkeit und Sicherheit</strong> berücksichtigen solltest:</p>
<ul>
<li><strong>Backups</strong> - Nuff said. Du wirst dein System niemals 100% absichern können. Umso wichtiger sind Backup.</li>
<li><strong>Plugin-Sparksamkeit</strong> - jedes zusätzliche Plugin ist nicht nur ein potentielles Sicherheitsrisiko, sondern lässt deine Seite auch unnötig anwachsen. Versuche so viele Funktionen wie möglich selber umzusetzen. Ein Child-Theme erlaubt dir in der <strong>functions.php</strong> nicht nur Anpassungen des Layouts sondern auch des Funktionsumfanges vorzunehmen.</li>
<li><strong>Updates</strong> - Halte WordPress, Plugins und Themes immer auf dem neuesten Stand. Verzichte möglichst auf Plugins und Themes, die lange nicht aktualisiert wurden.</li>
<li><strong>Page Builder</strong> - <a href="https://www.nickyreinert.de/wordpress-page-builder-pro-und-contra/">ich bin wahrlich kein Fan von Page-Buildern</a>, auch wenn es da draußen relativ performante Vertreter dieser Art gibt. Allerdings wohnt jedem Page-Builder in der Regel ein Problem inne: Sie kommen mit einer Menge von Funktionen, die du oft nicht benötigst, die aber trotzdem Ressourcen verbrauchen.</li>
</ul>
<p>Nun, da das geklärt ist und ich meinen Unmut über Page-Builder mal wieder unterbringen konnte: Was kannst du aktiv tun, um die <strong>Geschwindigkeit und Sicherheit</strong> zu optimieren? Im Folgenden werden wir Änderungen an drei Dateien vornehmen:</p>
<ul>
<li>functions.php (deines Child-Themes)</li>
<li>.htaccess-Datei</li>
<li>wp-config.php</li>
</ul>
<p>Du findest alle drei Dateien auf <a href="https://github.com/nickyreinert/wordPressSettings/tree/master">github.com</a>.</p>
<h2 id="warnung">Warnung</h2>
<p>Da es sich mitunter um sehr tiefe Eingriffe in die WordPress-Mechanik handelt, folgender wichtiger Hinweis:</p>
<p>Nehme die hier beschriebenen Änderungen niemals an einer Live-Installation vor; teste sie in einer geschützten Umgebung und übertrage sie dann sorgfältig und ggf. nacheinander in das Live-System!</p>
<p>Lege außerdem immer ein <strong>Backup</strong> von den Dateien an, die du im Laufe dieses Artikels ändern wirst.</p>
<p>Diese Anleitung ist ein <strong>Leitfaden</strong>, den du nicht ungelesen übernehmen solltest. Passe die Änderungen an die Anforderungen deines Projektes an. Klar soweit? Dann los:</p>
<h2 id="nutze-keine-standard-einstellungen">Nutze keine Standard-Einstellungen</h2>
<p>Eigentlich gehört diese Weisheit zu den Prämissen, ich will sie hier trotzem etwas ausführlicher erklären. Dieser Punkt gehört für mich zum Konzept &ldquo;<strong>Secruity through obscurity</strong>&rdquo;. Viele vermeintliche Angriffe auf deine Seite sind nur das Grundrauschen: Automatisierte Scripte, die zahlreiche Webseiten nach bekannten Sicherheitslücken abklopfen. Lass uns das &ldquo;<strong>passive Angriffe</strong>&rdquo; nennen. Du kannst das geduldig über dich ergehen lassen oder schon jetzt dafür sorgen, dass deine Seite gar nicht erst im Rampenlicht steht. Wenn bei den passiven Angriffen keine Lücken erkannt werden, zieht der Bot weiter und widmet sich <strong>schwächeren Seiten</strong>. Das Credo lautet &ldquo;Kosten-Nutzen-Analyse&rdquo;. Warum mit einem unbekannten Ziel beschäftigen, wenn da draußen genug unsichere WordPress-Installationen darauf warten, <em>gehackt</em> zu werden? Also:</p>
<ul>
<li>Nutze als <strong>Benutzername</strong> für den Administrator-Account nicht den Standardwert &ldquo;admin&rdquo;. Erzeuge einen neuen Admin-Nutzer (z.B. MyLittlePony) mit allen Admin-Rechten und entferne den originalen Admin-Nutzer</li>
<li>Nutze ein &ldquo;kryptisches&rdquo; <strong>Tabellen-Prefix</strong> (z.B. x02349d_), um das Auffinden der WordPress-Tabellen in der Datenbank zu erschweren. Bei Angriffen über <strong>SQL-Injection</strong> wird oft vom Standard-Prefix (wp_) ausgegangen.</li>
<li>Ach ja, und nein: Verschiebe nicht die <strong>wp-admin</strong>-URL - das erzeugt mehr Unruhe im System, als dass es nutzt. Hier reicht der zusätzliche Schutz mit <strong>HTTP Basic Auth</strong>.</li>
<li>Setze korrekte Dateirechte ein, um zu vermeiden, dass jemand deine PHP-Dateien ändern und Schadcode einfügen kann (das ist ein etwas größeres Thema auf Serverseite, <a href="https://binary-butterfly.de/artikel/dateirechte-wie-stelle-ich-das-bei-meinem-hoster-ein/">was hier ganz gut beschrieben ist</a>).</li>
<li>Kein Standard-Passwort. Ok. Muss ich das wirklich erwähnen? ;)</li>
</ul>
<h2 id="emoticons-und-emojis">Emoticons und Emojis</h2>
<p>Emojis sind zwar unstrittig ein fester Bestandteil der modernen Kommunikation, was nicht heißt, dass man sie überall nutzen muss. In WordPress gehören sie leider zum Standard, was die Ladezeit verringert. Um sich der kleinen Kecker zu entledigen, ist eine ganze Menge PHP-Code (<a href="https://kinsta.com/de/wissensdatenbank/deaktivierst-emojis-wordpress/">lose basierend auf diesem Beitrag</a>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">function disable_emojis() {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;print_emoji_detection_script&#39;, 7 );
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    remove_action( &#39;admin_print_scripts&#39;, &#39;print_emoji_detection_script&#39; );
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    remove_action( &#39;wp_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    remove_action( &#39;admin_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    remove_filter( &#39;the_content_feed&#39;, &#39;wp_staticize_emoji&#39; );
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    remove_filter( &#39;comment_text_rss&#39;, &#39;wp_staticize_emoji&#39; );
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    remove_filter( &#39;wp_mail&#39;, &#39;wp_staticize_emoji_for_email&#39; );
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    add_filter( &#39;tiny_mce_plugins&#39;, &#39;disable_emojis_tinymce&#39; );
</span></span><span class="line"><span class="ln">10</span><span class="cl">    add_filter( &#39;wp_resource_hints&#39;, &#39;disable_emojis_remove_dns_prefetch&#39;, 10, 2 );
</span></span><span class="line"><span class="ln">11</span><span class="cl">}
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">function disable_emojis_tinymce( $plugins ) {
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">    if ( is_array( $plugins ) ) {
</span></span><span class="line"><span class="ln">16</span><span class="cl">        
</span></span><span class="line"><span class="ln">17</span><span class="cl">        return array_diff( $plugins, array( &#39;wpemoji&#39; ) );
</span></span><span class="line"><span class="ln">18</span><span class="cl">
</span></span><span class="line"><span class="ln">19</span><span class="cl">    } else {
</span></span><span class="line"><span class="ln">20</span><span class="cl">        
</span></span><span class="line"><span class="ln">21</span><span class="cl">        return array();
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">    }
</span></span><span class="line"><span class="ln">24</span><span class="cl">}
</span></span><span class="line"><span class="ln">25</span><span class="cl"> 
</span></span><span class="line"><span class="ln">26</span><span class="cl">function disable_emojis_remove_dns_prefetch( $urls, $relation_type ) {
</span></span><span class="line"><span class="ln">27</span><span class="cl">    if ( &#39;dns-prefetch&#39; == $relation_type ) {
</span></span><span class="line"><span class="ln">28</span><span class="cl">    
</span></span><span class="line"><span class="ln">29</span><span class="cl">        /** This filter is documented in wp-includes/formatting.php */
</span></span><span class="line"><span class="ln">30</span><span class="cl">        $emoji_svg_url = apply_filters( &#39;emoji_svg_url&#39;, &#39;https://s.w.org/images/core/emoji/2/svg/&#39; );
</span></span><span class="line"><span class="ln">31</span><span class="cl">
</span></span><span class="line"><span class="ln">32</span><span class="cl">        $urls = array_diff( $urls, array( $emoji_svg_url ) );
</span></span><span class="line"><span class="ln">33</span><span class="cl">    }
</span></span><span class="line"><span class="ln">34</span><span class="cl">
</span></span><span class="line"><span class="ln">35</span><span class="cl">    return $urls;
</span></span><span class="line"><span class="ln">36</span><span class="cl">}    
</span></span><span class="line"><span class="ln">37</span><span class="cl">
</span></span><span class="line"><span class="ln">38</span><span class="cl">function disable_emojicons_tinymce( $plugins ) {
</span></span><span class="line"><span class="ln">39</span><span class="cl">
</span></span><span class="line"><span class="ln">40</span><span class="cl">    if ( is_array( $plugins ) ) {
</span></span><span class="line"><span class="ln">41</span><span class="cl">    
</span></span><span class="line"><span class="ln">42</span><span class="cl">        return array_diff( $plugins, array( &#39;wpemoji&#39; ) );
</span></span><span class="line"><span class="ln">43</span><span class="cl">
</span></span><span class="line"><span class="ln">44</span><span class="cl">    } else {
</span></span><span class="line"><span class="ln">45</span><span class="cl">
</span></span><span class="line"><span class="ln">46</span><span class="cl">      return array();
</span></span><span class="line"><span class="ln">47</span><span class="cl">
</span></span><span class="line"><span class="ln">48</span><span class="cl">    }
</span></span><span class="line"><span class="ln">49</span><span class="cl">}
</span></span><span class="line"><span class="ln">50</span><span class="cl">
</span></span><span class="line"><span class="ln">51</span><span class="cl">function disable_wp_emojicons() {
</span></span><span class="line"><span class="ln">52</span><span class="cl">
</span></span><span class="line"><span class="ln">53</span><span class="cl">    remove_action( &#39;admin_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln">54</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;print_emoji_detection_script&#39;, 7 );
</span></span><span class="line"><span class="ln">55</span><span class="cl">    remove_action( &#39;admin_print_scripts&#39;, &#39;print_emoji_detection_script&#39; );
</span></span><span class="line"><span class="ln">56</span><span class="cl">    remove_action( &#39;wp_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln">57</span><span class="cl">    remove_filter( &#39;wp_mail&#39;, &#39;wp_staticize_emoji_for_email&#39; );
</span></span><span class="line"><span class="ln">58</span><span class="cl">    remove_filter( &#39;the_content_feed&#39;, &#39;wp_staticize_emoji&#39; );
</span></span><span class="line"><span class="ln">59</span><span class="cl">    remove_filter( &#39;comment_text_rss&#39;, &#39;wp_staticize_emoji&#39; );
</span></span></code></pre></div><p>Hier passiert eine ganze Menge, weil die Emojis relativ breit implementiert wurden. Die einfachste Erklärung ist: Wir entfernen alle möglichen Verweise auf Emojis. Du musst die Trigger allerdings noch aktivieren indem du sie folgendermaßen aufrufst:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_filter( &#39;tiny_mce_plugins&#39;, &#39;disable_emojicons_tinymce&#39;);}
</span></span><span class="line"><span class="ln">2</span><span class="cl">add_action( &#39;init&#39;, &#39;disable_emojis&#39; );
</span></span><span class="line"><span class="ln">3</span><span class="cl">add_filter( &#39;emoji_svg_url&#39;, &#39;__return_false&#39; );
</span></span><span class="line"><span class="ln">4</span><span class="cl">add_action( &#39;init&#39;, &#39;disable_wp_emojicons&#39; );
</span></span></code></pre></div><h2 id="gravatar-deaktivieren">Gravatar deaktivieren</h2>
<p>Du kannnst die Nutzung der Gravatare auch in den Einstellungen deaktivieren. Ich bevorzuge aber die Variante in der functions.php, da man sich so ein kleines Boilerplate erstellen kann. So deaktivierst du die Gravatar-Funktion:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_filter( &#39;option_show_avatars&#39;, &#39;__return_false&#39; );
</span></span></code></pre></div><p>Wie du siehst, spart uns das mindestens zwei Anfragen und ein paar Millisekunden ein:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-700x57.png" alt=""></p>
<h2 id="gzip-und-deflate">GZIP und Deflate</h2>
<p>Sehr naheliegend ist natürlich die Komprimierung von Dateien. Du nimmst diese Änderung in der .htaccess-Datei vor:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;IfModule mod_deflate.c&gt;
</span></span><span class="line"><span class="ln">2</span><span class="cl">    &lt;FilesMatch &#34;.*\.(html|php|css|js|xml)$&#34;&gt;
</span></span><span class="line"><span class="ln">3</span><span class="cl">        SetOutputFilter DEFLATE
</span></span><span class="line"><span class="ln">4</span><span class="cl">    &lt;/FilesMatch&gt;
</span></span><span class="line"><span class="ln">5</span><span class="cl">    AddOutputFilterByType DEFLATE application/rss+xml
</span></span><span class="line"><span class="ln">6</span><span class="cl">    AddOutputFilterByType DEFLATE application/xml application/xhtml+xml
</span></span><span class="line"><span class="ln">7</span><span class="cl">    AddOutputFilterByType DEFLATE application/javascript application/x-javascript
</span></span><span class="line"><span class="ln">8</span><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></div><p>Achtung: Du solltest deine Seite genau beobachten. Die Aktivierung von GZIP führt bei sehr kleinen Dateien nicht zu einem Größenvorteil, kann sich aber negativ auf die Antwortzeit des Servers auswirken, da die kleinen Dateien ja trotzdem einmal &ldquo;angefasst&rdquo; werden.</p>
<h2 id="cron-job-deaktivieren">Cron-Job deaktivieren</h2>
<p>Bei jedem Aufruf der Seite wird ein internes Cron-Job-Script ausgeführt. Das ist vor allem für das Suchen nach Updates wichtig. Wenn dein Hoster Cron-Jobs anbietet, ist das natürlich unnötig und verlangsamt jeden Aufruf deiner Seite. Du kannst die Cron-Job-Aufrufe in der wp-config.php folgendermaßen deaktivieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;DISABLE_WP_CRON&#39;, true);
</span></span></code></pre></div><p>Danach musst diese Anfrage aber trotzdem irgendwie ausführen. Das machst du im Backend deines Hosters, bei <strong>all-inkl z</strong>.B. im KAS unter Tools:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-700x125.png" alt=""></p>
<p>Als Intervall genügt hier eigentlich stündlich.</p>
<h2 id="scripte-im-footer-laden">Scripte im Footer laden</h2>
<p>In der Regel müssen JavaScript-Dateien nicht sofort zur Verfügung stehen, da sie z.B: Benutzerinteraktion ermöglichen bzw. darauf reagieren. Trotzdem können Sie den Aufbau der Seite verzögern, wenn sie ganz am Anfang oder in der Mitte eingebunden werden.</p>
<p>Aus dem Grund sollte man die Scripte ganz am Ende einer Seite auflisten, die nicht für den Seitenaufbau direkt benötigt werden. Die grobe Methode funktioniert folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_action(&#39;after_setup_theme&#39;, &#39;footer_enqueue_scripts&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">function footer_enqueue_scripts() {
</span></span><span class="line"><span class="ln">3</span><span class="cl">    remove_action(&#39;wp_head&#39;, &#39;wp_print_scripts&#39;);
</span></span><span class="line"><span class="ln">4</span><span class="cl">    remove_action(&#39;wp_head&#39;, &#39;wp_print_head_scripts&#39;, 9);
</span></span><span class="line"><span class="ln">5</span><span class="cl">    remove_action(&#39;wp_head&#39;, &#39;wp_enqueue_scripts&#39;, 1);
</span></span><span class="line"><span class="ln">6</span><span class="cl">    add_action(&#39;wp_footer&#39;, &#39;wp_print_scripts&#39;, 5);
</span></span><span class="line"><span class="ln">7</span><span class="cl">    add_action(&#39;wp_footer&#39;, &#39;wp_print_head_scripts&#39;, 5);
</span></span><span class="line"><span class="ln">8</span><span class="cl">    add_action(&#39;wp_footer&#39;, &#39;wp_enqueue_scripts&#39;, 5);
</span></span><span class="line"><span class="ln">9</span><span class="cl">}
</span></span></code></pre></div><p>Nachdem du diese Zeilen übernommen hast, solltest du deine Seite einmal z.B. im Inkognito-Modus, ohne Cache, neu laden. Flackert die Seite in der ersten Millisekunden auffällig, also wird für einen kurzen Augenblick der fast roh anmutende Inhalt der Seite und dann das Layout angezeigt, kommentiere in der Callback-Funktion die beiden Zeilen aus, die <strong>wp_enqueue_scripts</strong> in den Footer verlagern.</p>
<h2 id="javascript-ausführung-verzögern">JavaScript Ausführung verzögern</h2>
<p>Die etwas elegantere Methoden nennen sich &ldquo;<strong>defer</strong>&rdquo; und &ldquo;<strong>async</strong>&rdquo;. Mit defer teilst du dem Browser mit, dass die JavaScript-Datien im Hintergrund geladen und erst ausgeführt werden, wenn die eigentlichen Inhalte fertig sind.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">add_filter</span><span class="p">(</span> <span class="s1">&#39;script_loader_tag&#39;</span><span class="p">,</span> <span class="s1">&#39;defer_parsing_of_js&#39;</span><span class="p">,</span> <span class="mi">10</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">function</span> <span class="n">defer_parsing_of_js</span><span class="p">(</span> <span class="o">$</span><span class="n">url</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="k">if</span> <span class="p">(</span> <span class="n">is_user_logged_in</span><span class="p">()</span> <span class="p">)</span> <span class="k">return</span> <span class="o">$</span><span class="n">url</span><span class="p">;</span> <span class="o">//</span><span class="n">don</span><span class="s1">&#39;t break WP Admin</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="k">if</span> <span class="p">(</span> <span class="n">strpos</span><span class="p">(</span> <span class="o">$</span><span class="n">url</span><span class="p">,</span> <span class="s1">&#39;.js&#39;</span> <span class="p">)</span> <span class="o">===</span> <span class="n">FALSE</span><span class="p">)</span> <span class="k">return</span> <span class="o">$</span><span class="n">url</span><span class="p">;</span> <span class="o">//</span> <span class="n">only</span> <span class="n">process</span> <span class="n">JavaScript</span> <span class="n">files</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="k">if</span> <span class="p">(</span> <span class="n">strpos</span><span class="p">(</span> <span class="o">$</span><span class="n">url</span><span class="p">,</span> <span class="s1">&#39;jquery.js&#39;</span> <span class="p">)</span> <span class="p">)</span> <span class="k">return</span> <span class="o">$</span><span class="n">url</span><span class="p">;</span>  <span class="o">//</span> <span class="n">skip</span> <span class="n">JQuery</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="k">return</span> <span class="n">str_replace</span><span class="p">(</span> <span class="s1">&#39; src&#39;</span><span class="p">,</span> <span class="s1">&#39; defer src&#39;</span><span class="p">,</span> <span class="o">$</span><span class="n">url</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Der defer-Flag macht nur bei Scripten Sinn, die mit <strong>src</strong> eingebunden werden. Inline-Scripte werden immer sofort gelesen und geparsed. Daneben gibt es noch async. Mit async wird die Datei ebenfalls parallel geladen und sofort ausgeführt, wenn die Datei vollständig ist. Das macht vor allem bei Tracking-Scripten Sinn, die keinen Bezug zum inhaltlichen Aufbau haben.</p>
<h2 id="versionsinfos-entfernen">Versionsinfos entfernen</h2>
<p>Style- und Script-Dateien werden oft mit einem Anhang übermittelt, z.B. <strong>style.css?ver=123</strong>. Das macht Sinn um Änderungen nachzuverfolgen, hat aber auch einen entscheidenen Nachteil: Damit werden Cache-Mechanismen umgangen, weil der Cache denkt, es handelt sich um eine dynamische Ressource. Aus dem Grund solltest du die Versions-Infos komplett deaktivieren. Achte beim Arbeiten an der Webseite einfach daran, sämtliche Caches zu deaktivieren.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">add_filter</span><span class="p">(</span> <span class="s1">&#39;script_loader_src&#39;</span><span class="p">,</span> <span class="s1">&#39;remove_version_parameter&#39;</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">add_filter</span><span class="p">(</span> <span class="s1">&#39;style_loader_src&#39;</span><span class="p">,</span> <span class="s1">&#39;remove_version_parameter&#39;</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="n">function</span> <span class="n">remove_version_parameter</span><span class="p">(</span><span class="o">$</span><span class="n">src</span><span class="p">){</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="o">//</span> <span class="n">Check</span> <span class="k">if</span> <span class="n">version</span> <span class="n">parameter</span> <span class="n">exist</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="o">$</span><span class="n">parts</span> <span class="o">=</span> <span class="n">explode</span><span class="p">(</span> <span class="s1">&#39;?ver&#39;</span><span class="p">,</span> <span class="o">$</span><span class="n">src</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="o">//</span> <span class="k">return</span> <span class="n">without</span> <span class="n">version</span> <span class="n">parameter</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="k">return</span> <span class="o">$</span><span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="google-fonts-deaktivieren">Google Fonts deaktivieren</h2>
<p>Die Einbindung der Fonts über Google ist bequem, birgt neben dem Performance-Nachteil aber unter Umständen auch ein Datenschutz problem. (Grundsätzlich solltest du versuchen, alle Ressourcen von deinem Server zu laden und auch auf CDN zu verzichten - <a href="https://binary-butterfly.de/artikel/warum-dir-ein-cdn-vermutlich-keinen-geschwindigkeitsvorteil-bringen-wird/">das bringt selten einen Vorteil</a>.)</p>
<p>Leider ist das Entfernen nicht ohne weiteres möglich. Du musst erst herausfinden, unter welchem Handler das Theme die Google Fonts einbindet (Eine Liste bekannter Themes und der verwendeten Font-Handler findest du hier.) Dazu durchsuchst du die functions.php nach z.B. Google. Für das Theme Rowling sieht das dann folgendermaßen aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">wp_register_style( &#39;rowling_google_fonts&#39;, &#39;//fonts.googleapis.com/css?family=Lato:400,700,900,400italic,700italic|Merriweather:700,900,400italic&#39; );
</span></span></code></pre></div><p>Der Handler lautet also &ldquo;<strong>rowling_google_fonts</strong>&rdquo;. Auf gehts:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_action( &#39;wp_print_styles&#39;, &#39;dequeue_google_fonts_style&#39; );
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">function dequeue_google_fonts_style() {
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">      wp_dequeue_style( &#39;rowling_style&#39; );
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl">}
</span></span></code></pre></div><p>Achte darauf, dass jetzt natürlich die Fallback-Schriftart aus dem CSS verwendet wird.</p>
<h2 id="die-beitrags-historie-verschlanken">Die Beitrags-Historie verschlanken</h2>
<p>Seit einiger Zeit gibt es in WordPress das ansich ganz nützliche Feature der Revisionen: Bei jeder Änderung und jeder Speicherung legt WordPress in der Datenbank eine Kopie der vorherigen Version des Beitrages an. Das ist praktisch. Aber auch grenzenlos.<br>
Zunächst solltest du die Anzahl der Revisionen pro Beitrag eingrenzen. Dazu setzt du in der wp-config.php folgenden Parameter:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;WP_POST_REVISIONS&#39;, 5);
</span></span></code></pre></div><p>Die Fünf beschreibt die Anzahl der erlaubten Revisionen. Du kannst die Zahl natürlich beliebig anpassen. Damit ist es aber noch nicht getan, du solltest die alten Revisionen natürlich noch aufräumen. Dazu kannst du dir das Plugin <a href="https://de.wordpress.org/plugins/wp-sweep/">WP Sweep installieren</a>. Du kannst nun ganz bequem alle Revisionen löschen:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-2-700x102.png" alt=""></p>
<p>Alle Revisionen mit WP Sweep löschen</p>
<h2 id="oembeds-deaktivieren">oEmbeds deaktivieren</h2>
<p>Hierbei handelt es sich um ein Feature, das WordPress seit Version 4.4 mitbringt, die sogenannten Embeds. Dir ist es vielleicht schon mal aufgefallen: Beim Einfügen von URL in den Beitrag, wird nicht die URL angezeigt, sondern eine Art Snippet mit zusätzlichne Informationen und sogar einer Vorschau. Das sieht schick aus, braucht aber vielleicht nicht jeder. Wenn du Embed also nicht benötigst, erspart dir das wieder ein paar Zeilen im HTML-Header und sogar eine zusätzliche JavaScript-Bibliothek:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-4-700x52.png" alt=""></p>
<p>Die Embed-Bibliothek von WordPress</p>
<p>Füge dazu folgendes in die <strong>functions.php</strong> ein (<a href="https://kinsta.com/de/wissensdatenbank/deaktivierst-embeds-wordpress/#disable-embeds-code">Quelle</a>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">add_action( &#39;init&#39;, &#39;disable_embeds_code_init&#39;, 9999 );
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">function disable_embeds_code_init() {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    remove_action( &#39;rest_api_init&#39;, &#39;wp_oembed_register_route&#39; );
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    add_filter( &#39;embed_oembed_discover&#39;, &#39;__return_false&#39; );
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    remove_filter( &#39;oembed_dataparse&#39;, &#39;wp_filter_oembed_result&#39;, 10 );
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;wp_oembed_add_discovery_links&#39; );
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;wp_oembed_add_host_js&#39; );
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    add_filter( &#39;tiny_mce_plugins&#39;, &#39;disable_embeds_tiny_mce_plugin&#39; );
</span></span><span class="line"><span class="ln">10</span><span class="cl">    add_filter( &#39;rewrite_rules_array&#39;, &#39;disable_embeds_rewrites&#39; );
</span></span><span class="line"><span class="ln">11</span><span class="cl">    remove_filter( &#39;pre_oembed_result&#39;, &#39;wp_filter_pre_oembed_result&#39;, 10 );
</span></span><span class="line"><span class="ln">12</span><span class="cl">}
</span></span><span class="line"><span class="ln">13</span><span class="cl">
</span></span><span class="line"><span class="ln">14</span><span class="cl">function disable_embeds_tiny_mce_plugin($plugins) {
</span></span><span class="line"><span class="ln">15</span><span class="cl">    return array_diff($plugins, array(&#39;wpembed&#39;));
</span></span><span class="line"><span class="ln">16</span><span class="cl">}
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">function disable_embeds_rewrites($rules) {
</span></span><span class="line"><span class="ln">19</span><span class="cl">    foreach($rules as $rule =&gt; $rewrite) {
</span></span><span class="line"><span class="ln">20</span><span class="cl">        if(false !== strpos($rewrite, &#39;embed=true&#39;)) {
</span></span><span class="line"><span class="ln">21</span><span class="cl">            unset($rules[$rule]);
</span></span><span class="line"><span class="ln">22</span><span class="cl">        }
</span></span><span class="line"><span class="ln">23</span><span class="cl">    }
</span></span><span class="line"><span class="ln">24</span><span class="cl">    return $rules;
</span></span><span class="line"><span class="ln">25</span><span class="cl">}
</span></span></code></pre></div><h2 id="den-header-aufräumen">Den Header aufräumen</h2>
<p>Kommen wir zu ein paar Maßnahmen, die das HTML ein wenig verschlanken, aber aus Performance-Sicht nur Peanuts sind: Wir räumen den Header-Bereich auf. Diese Maßnahmen sind nicht wirklich notwendig, außer du willst es wirklich auf die Spitze treiben.</p>
<p>Los geht es mit dem Manifest für den <strong>Windows Live Writer</strong>, einer App um Blog-Beiträge zu schreiben (was mit deaktivierter XML-RPC, siehe unten, sowieso nicht mehr möglich ist):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;link rel=&#34;wlwmanifest&#34; type=&#34;application/wlwmanifest+xml&#34; href=&#34;https://example.com/wp-includes/wlwmanifest.xml&#34;&gt;
</span></span></code></pre></div><p>Und so deaktivierst du den Spaß:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action( &#39;wp_head&#39;, &#39;wlwmanifest_link&#39;);
</span></span></code></pre></div><p>Weiter geht es mit dem Verweis zum <strong>Shortlink</strong> des jeweiligen Beitrages. Shortlinks sind praktisch, um mit kurzem URL auf Inhalte deiner Webseite zu verweisen. Anstatt dem langen Permalink <a href="https://www.example.com/das-ist-mein-allererster-beitrag-hier-und-ich-liebe-es">www.example.com/das-ist-mein-allererster-beitrag-hier-und-ich-liebe-es</a> nutzt du z.B. einfach <strong><a href="https://www.example.com/?p=1">www.example.com/?p=1</a></strong>. Wenn du das nicht brauchst, entferne den Shortlink-Verweis aus dem HTML-Header und dem HTTP-Antwort-Header:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-3-700x336.png" alt=""></p>
<p>Der Shortlink-Verweis im HTTP-Header</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action( &#39;wp_head&#39;, &#39;wp_shortlink_wp_head&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">add_filter(&#39;after_setup_theme&#39;, &#39;remove_shortlink_from_http_header&#39;);
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">function remove_shortlink_from_http_header() {
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl">    remove_action( &#39;template_redirect&#39;, &#39;wp_shortlink_header&#39;, 11);
</span></span><span class="line"><span class="ln">8</span><span class="cl">
</span></span><span class="line"><span class="ln">9</span><span class="cl">}
</span></span></code></pre></div><p>Im Header findest Verweise auf den vorherigen, den nächsten Beitrag oder die Startseite. Diese Funktionalität sollte theoretisch durch dein Template abgedeckt sein. Diese Verweise entfernst du folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;start_post_rel_link&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;index_rel_link&#39;);
</span></span><span class="line"><span class="ln">3</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;adjacent_posts_rel_link&#39;);
</span></span></code></pre></div><p>Zu guter Letzt die Versions-Information. Das Verbergen der WordPress-Version kann auch als Sicherheitsfeature verstanden werden (<strong>Security through obscurity</strong>, Sicherheit durch Unklarheit, siehe oben). Wenn der potentielle Angreifer nicht weiß, welche Version du verwendest, erschwerst du ihm zumindest das Identifizieren potentieller Sicherheitslücken. In der Realtität wird das nur die Bots aufhalten, die dein System automatisiert scannen. Bei einem aktiven Angriff ist das ziemlich sicher nutzlos. Nutze dazu folgende Zeile in der functions.php:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;wp_generator&#39;);
</span></span></code></pre></div><h2 id="cache-plugin">Cache-Plugin</h2>
<p>Wenn du immer noch nicht zufrieden bist, kannst du auch auf ein Cache-Plugin zurück greifen. Das sorgt dafür, dass die Seiten nicht bei jedem Aufruf komplett neu über PHP erstellt, sondern statische Inhalte ausgeliefert werden. Das bringt noch mal einen enormen Geschwindigkeitsgewinn.</p>
<h2 id="die-xml-rpc-schnittstelle-deaktivieren">Die XML-RPC-Schnittstelle deaktivieren</h2>
<p>XML-RPC steht für Extensible Markup Language Remote Procedure Call. Klingt kompliziert, ist es auch. Dabei handelt es sich um eine Schnittstelle. mit der du, ganz einfach gesagt, WordPress steuern kannst, ohne auf das Backend zuzugreifen (<a href="https://www.kuketz-blog.de/wordpress-angriffe-auf-die-xmlrpc-schnittstelle-xmlrpc-php-unterbinden/">mehr Hintergründe dazu hier</a>). Wenn du diese Schnittstelle deaktivierst, verlierst du also Funktionalität, wie z.B. <strong>Pingbacks</strong> oder das <strong>Verwalten von WordPress mit einer externen App</strong>. Auch Jetpack greift auf die XML-RPC zu! Du gewinnst aber auch etwas an Sicherheit dazu. Entscheide selber.</p>
<p>In den aktuellen Apache-Versionen (ab 2.4) sperrst du den Zugriff auf xmlrpc.php in der .htaccess-Datei folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;FilesMatch &#34;(^\.|wp-config\.php|xmlrpc\.php|(?&lt;!robots)\.txt|(liesmich|readme)\.*)&#34;&gt;
</span></span><span class="line"><span class="ln">2</span><span class="cl">   Require all denied
</span></span><span class="line"><span class="ln">3</span><span class="cl">&lt;/FilesMatch&gt;
</span></span></code></pre></div><p>Eigentlich sollte das schon genügen. Willst du auf Nummer sicher gehen, kannst du durchaus mehrt tun. Der weniger disruptive Weg wäre, <a href="https://developer.wordpress.org/reference/hooks/xmlrpc_enabled/">alle</a> <a href="https://developer.wordpress.org/reference/hooks/xmlrpc_enabled/"></a><a href="https://developer.wordpress.org/reference/hooks/xmlrpc_enabled/">Methoden zu deaktivieren, die eine Authentifizierung erfordern</a>. Das funktioniert folgendermaßen (in der functions.php deines Child-Themes):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl"># XML RPC deaktivieren
</span></span><span class="line"><span class="ln">2</span><span class="cl">add_filter( &#39;xmlrpc_enabled&#39;, &#39;__return_false&#39; );
</span></span><span class="line"><span class="ln">3</span><span class="cl"># XML RPC Verweis aus Header entfernen
</span></span><span class="line"><span class="ln">4</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;rsd_link&#39;);
</span></span></code></pre></div><p>Allerdings ist das ganze Sub-System weiterhin aktiv. <a href="https://www.scottbrownconsulting.com/2020/03/two-ways-to-fully-disable-wordpress-xml-rpc/">Willst du das also komplett deaktivieren</a>, füge der functions.php folgendes hinzu:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">// disable xmlrpc
</span></span><span class="line"><span class="ln">2</span><span class="cl">function remove_xmlrpc_methods( $methods ) {
</span></span><span class="line"><span class="ln">3</span><span class="cl">  return array();
</span></span><span class="line"><span class="ln">4</span><span class="cl">}
</span></span><span class="line"><span class="ln">5</span><span class="cl">add_filter( &#39;xmlrpc_methods&#39;, &#39;remove_xmlrpc_methods&#39; );
</span></span></code></pre></div><p>Aber wie gesagt, das sind zusätzliche Maßnahmen. In der Regel kannst du vielleicht schon gut schlafen, wenn der Webserver den Zugriff auf xmlrpc.php einfach nicht zulässt.</p>
<h2 id="die-rest-api-verweise-entfernen">Die REST-API-Verweise entfernen</h2>
<p>Seit Version 4.4 hat WordPress eine REST-API an Bord, die wie XML-RPC eine Schnittstelle bietete, um bestimmte Informationen über deine Seite automatisiert auszulesen. Obgleich das Sicherheitsrisiko der REST-API ungleich niedriger ist als bei XML-RPC, kannst du auch hier ein wenig aufräumen, indem du den Verweis auf die REST-API folgendermaßen aus den HTML- sowie HTTP-Header entfernst:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;rest_output_link_wp_head&#39;, 10);
</span></span><span class="line"><span class="ln">2</span><span class="cl">remove_action(&#39;template_redirect&#39;, &#39;rest_output_link_header&#39;, 11, 0);
</span></span></code></pre></div><p>Ganz deaktivieren solltest du die API allerdings nicht, da sie vor allem auch für die reibungslose Backend-Funktionalität wichtig ist. Was du aber machen kannst, ist die REST-API <a href="https://developer.wordpress.org/rest-api/frequently-asked-questions/">nur nach Anmeldung zulassen:</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">add_filter(&#39;rest_authentication_errors&#39;, &#39;rest_api_auth&#39;);
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">function rest_api_auth($result) {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    // bereits erfolgreich authentifiziert?
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    if ( true === $result || is_wp_error( $result ) ) {
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">        return $result;
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    }
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"> 
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    // noch nicht authentifiziert?
</span></span><span class="line"><span class="ln">10</span><span class="cl">    if ( ! is_user_logged_in() ) {
</span></span><span class="line"><span class="ln">11</span><span class="cl">        return new WP_Error(
</span></span><span class="line"><span class="ln">12</span><span class="cl">            &#39;rest_not_logged_in&#39;,
</span></span><span class="line"><span class="ln">13</span><span class="cl">            __( &#39;You are not currently logged in.&#39; ),
</span></span><span class="line"><span class="ln">14</span><span class="cl">            array( &#39;status&#39; =&gt; 401 )
</span></span><span class="line"><span class="ln">15</span><span class="cl">        );
</span></span><span class="line"><span class="ln">16</span><span class="cl">    }
</span></span><span class="line"><span class="ln">17</span><span class="cl"> 
</span></span><span class="line"><span class="ln">18</span><span class="cl">    // sonst zurück
</span></span><span class="line"><span class="ln">19</span><span class="cl">    return $result;
</span></span><span class="line"><span class="ln">20</span><span class="cl">}
</span></span></code></pre></div><h2 id="fazit">Fazit</h2>
<p>Das war es erstmal. Wenn du jetzt noch das Gefühl hast, dass dein WordPress zu langsam ist, wirf mal einen Blick in die Entwickler-Konsole und schau nach, welche Ressourcen lange dauern oder ob du Anfragen doppelt absetzt. Es gibt vor allem auf Server-Seite, also unterhalb von WordPress, noch eine Menge Möglichkeiten. Einige davon habe ich in der <a href="https://www.nickyreinert.de/mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/">Artikel-Serie zum perfekten Web-Server-Setup aufgeführt</a>. Außerdem gibt es hier eine wirklich brilliante Artikel-Serie zum Thema Sicherheit, die du dir unbedingt lesen solltest. Hier werden unzählige wichtige Hinweise gegeben,</p>
<p>Zum Abschluss noch mal der Hinweis: Es handelt sich hierbei um mitunter tiefe Eingriffe in die <strong>WordPress-Mechanik</strong>. Solltest du in der Zukunft Probleme mit deiner Seite haben, nimm diese Änderungen Schritt für Schritt zurück. Arbeite mit einem Staging-System und nutze Backups. Bei Probleme und Inkompatiblitäten freue ich mich über sachdienliche Hinweise, die ich in den Artikel einbauen kann!</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> einstellungen, setup, wordpress</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Leitfaden für ein sicheres und schnelles WordPress-Setup - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Dinge, die nicht existieren</title>
      <link>http://localhost:1313/2020/2020-06-22-dinge-die-nicht-existieren/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-06-22-dinge-die-nicht-existieren/</guid>
      <description>Dinge, die nicht existieren, weil sie mit künstlicher Intelligenz, Deep Learning bzw. Algorithmen erschaffen wurden. Dabei handelt es sich nicht nur um Bilder …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dinge, die nicht existieren, weil sie mit künstlicher Intelligenz, Deep Learning bzw. Algorithmen erschaffen wurden.&#39; reading_time: 9 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Git, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Dinge, die nicht existieren, weil sie mit künstlicher Intelligenz, Deep Learning bzw. Algorithmen erschaffen wurden. Dabei handelt es sich nicht nur um Bilder von Personen, sondern auch Texte, Animationen, Musik, Dialoge und&hellip;Füße. Viel Spaß.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/existiert-nicht/grafik-2.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-2-272x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/existiert-nicht/grafik-1.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-1-291x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/existiert-nicht/grafik.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-285x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-15.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-15-247x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-14.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-14-175x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-9.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-9-300x207.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-10.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-10-700x475.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-11.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-11-700x390.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-12.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-12-700x468.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-13.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-13-700x467.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-8.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-8-700x381.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-7.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-7-700x835.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-6.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-6-295x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-5.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-5-300x279.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-4.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-4-300x119.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-3.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-3-300x123.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-2.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-2-300x300.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik-1.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-1-300x298.png" alt=""></a></p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/this-does-not-exit/grafik.png"><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-300x208.png" alt="Existiert nicht"></a></p>
</li>
</ul>
<h2 id="personen">Personen</h2>
<p><a href="https://thispersondoesnotexist.com/">https://thispersondoesnotexist.com/</a></p>
<p>Das ist wohl der Klassiker und aus meiner Sicht das beeindruckenste Werk. Bei jedem Aufruf der Seite wird ein neues Foto eines Menschen erstellt, der nicht existiert. Die Darstellung ist dennoch verblüffend realistisch. Diese Seite stammt von Phillip Wang, einem Ingeni eur bei Uber. Dem Vorbild dieser Seite folgen eine Reihe anderer Seiten. Projekt ist Teil einer ganzen Serie von Seiten mit ähnlichem Aufbau. Erzeugt wird das ganze mit einem <a href="https://de.wikipedia.org/wiki/Generative_Adversarial_Networks">Generative Adversarial Networks</a>, genauer dem von NVidia stammenden <a href="https://en.wikipedia.org/wiki/StyleGAN">StyleGAN2</a>.</p>
<p><img src="#ZgotmplZ" alt="This Person does not exist"></p>
<h2 id="friends-dialoge">Friends-Dialoge</h2>
<p><a href="https://thispersondoesnotexist.com/friends/">https://thispersondoesnotexist.com/friends/</a></p>
<p>Dass das auch für Dialoge funktioniert zeigt diese Unterseite. Hier werden künstliche Dialoge erzeugt. Grundlage sind die Dialoge aus der <a href="https://de.wikipedia.org/wiki/Friends">Comedy-Serie Friends</a>.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-5-700x650.png" alt="Friends KI erzeugte Dialoge"></p>
<p>Quelle: <a href="https://thispersondoesnotexist.com/friends/">https://thispersondoesnotexist.com/friends/</a></p>
<h2 id="the-office-dialoge">The Office-Dialoge</h2>
<p><a href="https://thispersondoesnotexist.com/office/">thispersondoesnotexist.com/office/</a></p>
<p>Das gleiche funktioniert natürlich auch für andere Serien, hier für die Serie The Office.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-6-700x711.png" alt=""></p>
<p>Quelle: <a href="https://thispersondoesnotexist.com/office/">https://thispersondoesnotexist.com/office/</a></p>
<h2 id="moderne-kunst">Moderne Kunst</h2>
<p><a href="https://thisartworkdoesnotexist.com/">https://thisartworkdoesnotexist.com/</a></p>
<p>Bei jedem Aufruf wird ein neues Kunstwerk erzeugt. Bei &ldquo;abstrakten&rdquo; Kunstwerken ist das Ergebnis weitaus weniger beeindruckend, aber mitunter trotzdem schön.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-700x486.png" alt=""></p>
<p>Quelle: <a href="https://thisartworkdoesnotexist.com/">https://thisartworkdoesnotexist.com/</a></p>
<h2 id="katzen">Katzen</h2>
<p><a href="https://thiscatdoesnotexist.com/">https://thiscatdoesnotexist.com/</a></p>
<p>Ein weiterer Beitrag aus dieser Serie. Hier geht es um nicht existierende Katzen. Die Bilder sind etwas kleiner als bei den vorherigen Seiten und es gibt keine Hintergrundinformationen. Aber Katzen gehören eben auch dazu.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-1.png" alt=""></p>
<p>Quelle: <a href="https://thiscatdoesnotexist.com/">https://thiscatdoesnotexist.com/</a></p>
<h2 id="pferde">Pferde</h2>
<p><a href="https://thishorsedoesnotexist.com/">https://thishorsedoesnotexist.com/</a></p>
<p>Das ganze gibt es auch für Pferde. Hier gerät der Algorithmus aber scheinbar an seine Grenzen. Bei allen erzeugten Bildern sind Fehler, oft an den Füßen, erkennbar.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-2.png" alt=""></p>
<p>Quelle: <a href="https://thishorsedoesnotexist.com/">https://thishorsedoesnotexist.com/</a></p>
<h2 id="moleküle">Moleküle</h2>
<p><a href="https://thischemicaldoesnotexist.com/">thischemicaldoesnotexist.com/</a></p>
<p>Einen etwas anderen Weg geht diese Seite. Hier wird nicht einfach ein Bild erzeugt, sondern die räumliche Darstellung eines Moleküls.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-3-700x287.png" alt=""></p>
<p>Quelle: <a href="https://thischemicaldoesnotexist.com/">https://thischemicaldoesnotexist.com/</a></p>
<h2 id="schlagzeilen">Schlagzeilen</h2>
<p><a href="https://thisarticledoesnotexist.com/">https://thisarticledoesnotexist.com/</a></p>
<p>Auch dieses Projekt ist maximal faszinierend. Hier werden Schlagzeilen erzeugt. Die Grundlage ist <a href="https://github.com/rowanz/grover">Grover</a>, ein Model für &ldquo;Neurale Fake News&rdquo;. Die Seite zieht sich alle 30 Minuten die populärsten Schlagzeilen von Reddit und HackerNews und erzeugt daraus neue Nachrichten.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-4-700x278.png" alt=""></p>
<p>Quelle: <a href="https://thisarticledoesnotexist.com/">https://thisarticledoesnotexist.com/</a></p>
<h2 id="shan-shui">Shan Shui</h2>
<p><a href="http://shan-shui-inf.lingdong.works/">http://shan-shui-inf.lingdong.works/</a></p>
<p>Hierbei handelt es sich um eine tradionalle chinesische Malerei, bei der Landschaften dargestellt werden. Das Projekt erzeugt eine prozedural erzeugte Landschaft unendlicher Breite. Du kannst die horizontale Scrollgeschwindigkeit einstellen und das Ergebnis sogar als SVG-Datei herunterladen. Der Sourcecode ist auf <a href="https://github.com/LingDong-/shan-shui-inf">github</a> verfügbar.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/screen001.jpg" alt=""></p>
<p>Quelle: <a href="http://shan-shui-inf.lingdong.works/">ttp://shan-shui-inf.lingdong.works/</a></p>
<h2 id="fursona">Fursona</h2>
<p><a href="https://thisfursonadoesnotexist.com/">https://thisfursonadoesnotexist.com/</a></p>
<p>Fursona sind Mischungen aus Menschen und Tieren. Das Projekt erzeugt Icons mit Fursons in einer Matrix, die unendlich in eine beliebige Richtung scrollt.</p>
<p><img src="#ZgotmplZ" alt=""></p>
<p>Quelle: <a href="https://thisfursonadoesnotexist.com/">https://thisfursonadoesnotexist.com/</a></p>
<h2 id="waifus">Waifus</h2>
<p><a href="https://www.thiswaifudoesnotexist.net/">thiswaifudoesnotexist.net/</a></p>
<p>Auch bei den Waifus handelt es sich um Kunstfiguren. <a href="https://de.wikipedia.org/wiki/Waifu">Waifus sind weibliche Komikfiguren aus Mangas, Animes oder japanischen Computerspielen</a>. Diese Seite erzeugt Waifus und liefert auch die passende Beschreibung dazu.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-8-700x381.png" alt=""></p>
<p>Quelle: <a href="https://www.thiswaifudoesnotexist.net/">https://www.thiswaifudoesnotexist.net/</a></p>
<h2 id="anzeigen-für-wohnungs-vermietungen">Anzeigen für Wohnungs-Vermietungen</h2>
<p><a href="https://thisrentaldoesnotexist.com">https://thisrentaldoesnotexist.com</a></p>
<p>Auch das ist möglich: Ein komplette Anzeige für die Vermietung einer Wohnung, mit Bildern und Beschreibung.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-7-700x835.png" alt=""></p>
<p>Quelle: <a href="https://thisrentaldoesnotexist.com/">https://thisrentaldoesnotexist.com/</a></p>
<h2 id="lebenslauf">Lebenslauf</h2>
<p><a href="https://thisresumedoesnotexist.com/">https://thisresumedoesnotexist.com/</a></p>
<p>Weiter geht es mit Lebensläufen. Diese Seite erzeugt einen kompletten Lebenslauf mit Namen, Kontaktdaten und allem, was ein Lebenslauf so ausmacht. Die Bilder der Personen stammen von thispersondoesnotexist.com.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-9-700x484.png" alt=""></p>
<p>Quelle: <a href="https://thisresumedoesnotexist.com/">https://thisresumedoesnotexist.com/</a></p>
<h2 id="gefäße">Gefäße</h2>
<p><a href="https://thisvesseldoesnotexist.com/#/">thisvesseldoesnotexist.com/#/</a></p>
<p>Ja, du hast richtig gelesen. Gefäße, Englisch: Vessels. Die Seite präsentiert dir eine Matrix aus nicht existierenden Gefäßen, die in ihrer Form und Bemalung aninimiert sind. Der Anblick hat etwas beruhigendes.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-11-700x390.png" alt=""></p>
<p>Quelle: <a href="https://thisvesseldoesnotexist.com/#/">https://thisvesseldoesnotexist.com/#/</a></p>
<h2 id="songtexte">Songtexte</h2>
<p><a href="https://theselyricsdonotexist.com/">theselyricsdonotexist.com/</a></p>
<p>Was für Schlagzeilen funktioniert, funktioniert natürlich auch für Musik. Hier legst du ein Genre fest, bestimmst die Stimmung und gibst ein frei wählbares Thema an. Die Seite erzeugt dir dann einen englischsprachigen Song.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-12-700x468.png" alt=""></p>
<p>Quelle: <a href="https://theselyricsdonotexist.com/">https://theselyricsdonotexist.com/</a></p>
<h2 id="musik">Musik</h2>
<p><a href="http://allthemusic.info/">http://allthemusic.info/</a> und <a href="https://github.com/allthemusicllc">https://github.com/allthemusicllc</a></p>
<p>Passend dazu gibt es natürlich auch ein Projekt für Musik. Damien Riehl und Noah Rubin haben einen Algorithmus entwickelt, der jede denkbare Melodie erzeugt. Das Ergebnis haben sie in Midi-Dateien gepackt und diese für die öffentliche Verwendung freigegeben. <a href="https://www.vice.com/en_us/article/wxepzw/musicians-algorithmically-generate-every-possible-melody-release-them-to-public-domain">Ziel ist es, Musiker davor zu schützen verklagt zu werden</a>.</p>
<h2 id="emotionen">Emotionen</h2>
<p><a href="https://jschn.github.io/FaceApp/">jschn.github.io/FaceApp/</a></p>
<p>Hierbei handelt es sich eigentlich nicht um das Ergebnis eines lernenden Algorithmuses. Allerdings werden auch hier Datensätze verarbeitet, die den Zusammenhang zwischen Emotionen und Mimik beschreiben. Auf dieser Seite kannst du mit ein paar Schieberegeln die Emotionen eines Strich-Gesichts steuern.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-10-700x475.png" alt=""></p>
<p>Quelle: <a href="https://jschn.github.io/FaceApp/">https://jschn.github.io/FaceApp/</a></p>
<h2 id="memes">Memes</h2>
<p><a href="https://imgflip.com/ai-meme">https://imgflip.com/ai-meme</a></p>
<p>Natürlich dürfen Memes auch nicht fehlen. Imgflip ist als Portal für Memes bekannt. Dort hat man nun einen Algorithmus gebaut, der die bekannten Memes auswertet und daraus neue Memes erstellt. Die erzeugten Memes überzeugen nicht sofort, man muss ein paar Runden drehen, bevor ein halbwegs brauchbares Meme auftaucht.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-13-700x467.png" alt=""></p>
<p>Quelle: <a href="https://imgflip.com/ai-meme">https://imgflip.com/ai-meme</a></p>
<h2 id="füße">Füße</h2>
<p><a href="https://thisfootdoesnotexist.com/">https://thisfootdoesnotexist.com/</a></p>
<p>Füße? Ja. Auch dieser Fetisch wird bedient. Das Ergebnis ist die Animation eines Fußpaares, die aber augenscheinlich künstlich sind.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-15-700x851.png" alt=""></p>
<p>Quelle: <a href="https://thisfootdoesnotexist.com/">https://thisfootdoesnotexist.com/</a></p>
<h2 id="gesichter">Gesichter</h2>
<p><a href="https://generated.photos/">https://generated.photos/</a></p>
<p>Im Gegensatz zu den meisten obigen Projekten, die nur als Tech-Demo fungieren, geht es hier um eigenständiges Produkt. Die Datenbank umfasst mittlerweile fast 2 Mio. Gesichter. Über einen Suchfilter kann man die Ergebnismenge eingrenzen, z.B. nach der Hintergrundfarbe, dem Geschlecht, Alter und sogar der Emotion. Es lassen sich sogar nur die Fotos anzeigen, die dem gängigen Schönheitsideal entsprechen. Eine API wird kostenpflichtig angeboten.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-700x738.png" alt=""></p>
<p>Quelle: <a href="https://generated.photos/">https://generated.photos/</a></p>
<h2 id="musik-1">Musik</h2>
<p>Auch hierbei handelt es sich um ein etwas aufwendigeres Projekt (was nicht heißt, dass die anderen Projekte nicht aufwendig sind). Hier lässt sich ein komplettes Musik-Stück anhand bestimmter Parameter erstellen. Dazu gehört einmal der Stil, der sich an bekannten Künstlern aller Genres orientiert (Chopin, Beatles, &hellip;), sowie ein Intro als Grundlage und die zu verwendenden Instrumente. Bis zur 4 Stücke werden dann live im Browser &ldquo;erzeugt&rdquo;.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-1-700x722.png" alt=""></p>
<p>Quelle: <a href="https://openai.com/blog/musenet/">https://openai.com/blog/musenet/</a></p>
<h2 id="noch-mehr-musik">Noch mehr Musik</h2>
<p><a href="https://magenta.tensorflow.org/piano-transformer">https://magenta.tensorflow.org/piano-transformer</a></p>
<p>Hierbei handelt es sich um ein ähnliches Projekt. Zur Echzeiterzeugng wird auf ein Colab-Notebook verwiesen. Die Steuerung ist etwas komplizierter als bei den vorangegangen Projekten, hier ist der Fokus wohl etwas technischer. Ich habe dort ein paar Minuten rumgespielt, aber kein Ergebnis zustande bekommen.</p>
<h2 id="zitate">Zitate</h2>
<p><a href="https://inspirobot.me/">https://inspirobot.me/</a></p>
<p>Den vorläufigen Abschluss bildet ein Projekt, dass mithilfe von KI &ldquo;inspirirende Zitate zur endlosen Bereicherung der zwecklosen menschlichen Existenz&rdquo; erzeugt. Das ganze wird stilecht mit einem schönen Bild hinterlegt, natürlich auch künstlich erzeugt. Wie auch beim Meme-Generator von imgflip sind die Sprüche hier auch etwas starr und es dauert eine Weile, bis man halbwegs brauchbare Ergebnisse erhält.</p>
<p><img src="/2020/2020-06-22-dinge-die-nicht-existieren/images/grafik-2-700x773.png" alt=""></p>
<p>Quelle: <a href="https://inspirobot.me/">https://inspirobot.me/</a></p>
<h2 id="inspirirende-musik-bilder-und-worte">Inspirirende Musik, Bilder und Worte</h2>
<p><a href="https://inspirobot.me/mindfulnessmode">https://inspirobot.me/mindfulnessmode</a></p>
<p>Das Angebot gehört noch zum eigentlich schon versprochenen Abschluss und ich will es auch nicht unerwähnt untergehen lassen. Der Name lautet &ldquo;<strong>Mindfulness Mode</strong>&rdquo;. Zu &ldquo;inspirierenden Bildern&rdquo; wird entspannte Musik gespielt und eine Stimme liest motivierende Sprüche und Weisheiten vor. Das ist also das Komplettangebot.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> ai, ki, kuenstliche-intelligenz, uebersicht</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Dinge, die nicht existieren - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>WordPress Word Cloud 2.0</title>
      <link>http://localhost:1313/2020/2020-06-09-wordpress-word-cloud-2-0/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-06-09-wordpress-word-cloud-2-0/</guid>
      <description>Mein Word Cloud Plugin für WordPress liegt in einer neuen Version vor! Die Word Cloud unterstützt nun OCR, Tags, interne und externe Quellen und vieles mehr. Da …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Mein Word Cloud Plugin für WordPress liegt in einer neuen Version vor. Die Word Cloud unterstützt nun OCR, Tags, interne und externe Quellen und vieles mehr.&#39; reading_time: 12 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Git, Database, Server, Automation, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Mein Word Cloud Plugin für WordPress liegt in einer neuen Version vor! Die Word Cloud unterstützt nun <strong>OCR</strong>, <strong>Tags</strong>, <strong>interne</strong> und <strong>externe Quellen</strong> und vieles mehr. Da ich also sehr viele grundlegende Änderungen vorgenommen habe, gibt es an dieser Stelle eine komplett neue Dokumentation. Viel Spass.</p>
<h2 id="was-ist-eine-word-cloud">Was ist eine Word Cloud?</h2>
<p>Eine <strong>Word Cloud</strong>, auch <strong>Schlagwortwolke</strong>, <strong>Wortwolke</strong> usw., dient der besseren Visualisierung von Texten. Um eine Word Cloud zu erstellen, werden die Vorkommen von Wörtern eines Textes gezählt. Die Wörter mit der größten <strong>Häufigkeit</strong> werden groß dargestellt, Wörter mit geringerer Häufigkeit weniger groß. Und das ganze wird dann in einer <strong>Wolkenform</strong> dargestellt, mit den größten Wörtern in der Mitte.</p>
<p>So ist es möglich auf einen Blick zu erkennen, welche Wörter in einem Text am häufigsten vorkommen. Das ist nicht nur bei der Analyse von Texten sondern auch von Webseiten nützlich. So kannst du z.B. bei WordPress eine Word Cloud aus Tags erstellen (<strong>Tag Cloud</strong>), anhand der man sehen kann, welche Tags auf einer Seite am meisten verwendet wurden.</p>
<p>Die folgende Word Cloud zeigt auf einen Artikel, <a href="https://www.nickyreinert.de/wie-erstelle-ich-ein-labyrinth-mit-javascript/">in dem ich einen Algorithmus beschreibe, um in JavaScript ein Labyrinth zu erstellen</a>:</p>
<p>[wp-word-cloud source-type=&ldquo;id&rdquo; id=&ldquo;demo1&rdquo; size-factor=50 min-alpha=0.5 count-words=1]3334[/wp-word-cloud]</p>
<h2 id="was-kann-dieses-plugin">Was kann dieses Plugin?</h2>
<p><strong>WP Word Cloud</strong> stellt einen Shortcode zur Verfügung, mit dem du beliebig viele <strong>Word Clouds</strong> auf deinen Seiten einfügen kannst. Du kannst verschiedene Quellen nutzen, um dort die Wörter zu zählen und in einer <strong>Word Cloud</strong> darstellen zu lassen.</p>
<ul>
<li>inline - du gibst den Text direkt im Shortcode im Beitrag an</li>
<li>url - ein Verweis auf eine Internetadresse</li>
<li>id - der Verweis auf eine Seite / einen Beitrag</li>
<li>sql - eine SQL-Abfrage um Text aus der Datenbank zu lesen</li>
<li>custom-field - Text aus einem custom field des Beitrages / der Seite</li>
<li>Text, den der Besucher der Webseite selber eingeben kann</li>
<li>Text von einem Bild, das der Besucher der Website hochlädt</li>
</ul>
<p>Das Plugin greift auf zwei sehr großartige Bibliotheken zurück: WodCloud2.js von TimDream (<a href="https://github.com/timdream/wordcloud2.js/">github.com</a>). Sowie die Offline-Implementierung von Tesseract in JavaScript (<strong><a href="https://github.com/jeromewu/tesseract.js-offline">github.com</a></strong>).</p>
<h2 id="installation">Installation</h2>
<h3 id="über-die-kommandozeile">Über die Kommandozeile</h3>
<p>Wenn du Zugriff auf deinen Server über SSH hast, kannst du das Plugin folgendermaßen installieren:</p>
<p>Wechsle in den Plugin-Ordner deiner WordPress-Installation und lege dort einen neuen Ordner an: WP-Word-Cloud, wechsle danach in diesen Ordner:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">mkdir /htdocs/wp-content/plugins/WP-Word-Cloud
</span></span><span class="line"><span class="ln">2</span><span class="cl">cd /htdocs/wp-content/plugins/WP-Word-Cloud
</span></span></code></pre></div><p>Danach kannst du das Plugin-Repository mit git klonen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">git clone https://github.com/nickyreinert/wordCloud-for-Wordpress.git .
</span></span></code></pre></div><p>Wenn du git nicht benutzen möchtest oder kannst, kannst du das Plugin auch mit wget herunterladen und dann entpacken. Dann musst du den Plugin-Ordner allerdings nicht selber erstellen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">cd /htdocs/wp-content/plugins/
</span></span><span class="line"><span class="ln">2</span><span class="cl">wget https://github.com/nickyreinert/wordCloud-for-Wordpress/archive/wordCloud-for-wordPress-2.zip --no-check-certificate
</span></span><span class="line"><span class="ln">3</span><span class="cl">unzip wordCloud-for-wordPress-2.zip -d WP-Word-Cloud
</span></span></code></pre></div><h3 id="mit-einem-ftp-programm">Mit einem FTP-Programm</h3>
<p>Wenn du keinen Zugriff auf die Kommandozeile hast, kannst du das Plugin von dieser Adresse herunterladen:</p>
<p><a href="https://github.com/nickyreinert/wordCloud-for-Wordpress/archive/wordCloud-for-wordPress-2.zip">https://github.com/nickyreinert/wordCloud-for-Wordpress/archive/wordCloud-for-wordPress-2.zip</a></p>
<p>Danach entpackst du das Archiv und lädst den kompletten Ordner in das Plugin-Verzeichnis deiner WordPress-Installation. Du kannst den Ordner mit dem FTP-Programm dann umbenennen:</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik.png" alt=""></p>
<p>Der Order für das Word Cloud Plugin</p>
<h2 id="abschluss-der-installation">Abschluss der Installation</h2>
<p>Abschließend muss das Plugin noch im Backend von WordPress aktiviert werden. Dazu suchst du im Plugin-Bereich nach dem Eintrag &ldquo;WP Word Cloud&rdquo; und klickst auf &ldquo;aktivieren&rdquo;. Fertig.</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-1-700x70.png" alt=""></p>
<p>Aktiviere das Plugin in der Plugin-Übersicht von WordPress</p>
<h2 id="erste-verwendung">Erste Verwendung</h2>
<p>Das Plugin aktiviert für deine WordPress-Installation einen neuen Shortcode: <strong>[ wp-word-cloud ]</strong>. Diesen kannst du nun auf jeder Seite und in jedem Beitrag beliebig oft einfügen. Wenndu den <strong>Gutenberg-Editor</strong> verwendest, benötigst du dafür den Block &ldquo;<strong>Shortcode</strong>&rdquo;. Im konventionellen Editor kannst du den Shortcode einfach in deinen Text einfügen.<br>
Eine einfache Implementierung sieht z.B. so aus:</p>
<p><code>[ wp-word-cloud source-type=&quot;url&quot; id=&quot;meine-word-cloud&quot; ]https://www.spiegel.de[ /wp-word-cloud ]</code></p>
<p>Es gibt <strong>drei Parameter</strong>, die du <strong>immer</strong> angeben musst:</p>
<ul>
<li><strong>id</strong>, eine eindeutige Id, mit der die <strong>Word Cloud</strong> auf deiner Seite angesprochen wird, z.B. <strong>meine-word-cloud</strong> oder einfach nur <strong>test</strong></li>
<li><strong>source-type</strong>, welcher Art die Quelle für die Word Cloud ist, also z.B. von einer <strong>url</strong> oder den <strong>tags</strong></li>
<li>sowie Inline-Text, als Verweis auf die Quelle, von wo der Inhalt für die Word Cloud kommt, also z.B. die URL <strong><a href="https://www.spiegel.de">https://www.spiegel.de</a></strong> oder die Id eines Beitrages (123)</li>
</ul>
<h2 id="zusätzliche-einstellungen">Zusätzliche Einstellungen</h2>
<p>Natürlich gibt es noch <strong>eine Menge weiterer Parameter</strong>, mit denen du das Erscheinungsbild der Word Cloud steuern kannst. Das Plugin setzt bei der ersten Installation für all diese Parameter <strong>Standard-Einstellungen</strong> fest. Diese sind grundsätzlich <strong>global gültig</strong> und können auf der Einstellungseite angepasst werden:</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-2.png" alt=""></p>
<p>In den Einstellungen findest du eine eigene Seite für das WP Word Cloud Plugin - wunderbar!</p>
<p>Jeden dieser globalen Parameter kannst du auch in deinem Shortcode verwenden. So wir die globale Einstellung überschrieben. So ist die <strong>Hintergrundfarbe</strong> z.B. standardmäßig <strong>transparent</strong> eingestellt. Möchtest du sie für die aktuelle Word Cloud auf <strong>grün und halbtransparent</strong> ändern, übergibst du einfach den Parameter <strong>background-color</strong> folgendermaßen:</p>
<p><code>[ wp-word-cloud source-type=&quot;url&quot; id=&quot;meine-word-cloud&quot; background-color=&quot;rgba(0,255,255,0.5)&quot; ]https://www.spiegel.de[ /wp-word-cloud ]</code></p>
<p>Eine genaue Beschreibung aller Parameter folgt jetzt:</p>
<h2 id="parameter">Parameter</h2>
<h3 id="id">id</h3>
<p>Dieser Parameter ist für jeden Shortcode, den du einfügst, <strong>verpflichtend</strong>! Die Id adressiert jede Word Cloud auf einer Seite oder in einem Beitrag. Damit ist es möglich, mehrere Word Clouds gleichzeitig einzubinden. Mit der Id kannst du außerdem das Aussehen der Word Cloud mit CSS steuern. Beispiel:</p>
<p><code>[ wp-word-cloud source-type=&quot;inline&quot; id=&quot;wordcloud1&quot; ]Lorem Ipsum[ /wp-word-cloud ]</code></p>
<p><code>[ wp-word-cloud source-type=&quot;inline&quot; id=&quot;wordcloud2&quot; ]Lorem Ipsum[ /wp-word-cloud ]</code></p>
<h3 id="source-type"><strong>source-type</strong></h3>
<p>Damit legst du fest, um was für eine Quelle es sich handelt. Dieser Parameter ist <strong>verpflichtend</strong>. Die folgenden Quellen werden unterstützt:</p>
<h4 id="source-typeinline">source-type=inline</h4>
<p>Der Text wird innerhalb des Shortcodes übermittelt, z.B:</p>
<p><code>[ wp-word-cloud source-type=inline id=&quot;demo&quot; ]Lorem Ipsum[ /wp-word-cloud ]</code></p>
<h4 id="source-typeurl">source-type=<strong>url</strong></h4>
<p>Im Shortcode wird eine URL angegeben, von der der Text abgerufen wird, z.B:</p>
<p><code>[ wp-word-cloud source-type=url id=&quot;demo&quot; ]https://www.spiegel.de[ /wp-word-cloud ]</code></p>
<h4 id="source-typeid">**source-type=**id</h4>
<p>Im Shortcode wird eine Id übergeben, die auf eine Seite oder einen Beitrag deiner Webseite verweist, z.B:</p>
<p><code>[ wp-word-cloud source-type=id id=&quot;demo&quot; ]123[ /wp-word-cloud ]</code></p>
<h4 id="source-typesql">source-type=sql</h4>
<p>Im Shortcode wird eine SQL-Abfrage übergeben, die eine bereits gezählte Wortliste zurück gibt, z.B:</p>
<p><code>[ wp-word-cloud source-type=sql id=&quot;demo&quot;]SELECT word,count FROM table;[ /wp-word-cloud]</code></p>
<h4 id="source-typetags">source-type=tags</h4>
<p>Die Word Cloud zeigt alle Tags deiner Seite an, hier musst du im Shortcode nichts weiter übergeben:</p>
<p><code>[ wp-word-cloud source-type=tags id=&quot;demo&quot;]SELECT word,count FROM table;[ /wp-word-cloud]</code></p>
<h4 id="source-typecustom-field">source-type=custom-field</h4>
<p>Im Shortcode wird auf ein custom field, also benutzerdefiniertes bzw. eigenes Feld verwiesen, z.B:</p>
<p><code>[ wp-word-cloud source-type=custom-field id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]</code></p>
<p>Die Darstellung der <strong>eigenen Felder</strong> musst du im Gutenberg-Edito ggf. erst aktivieren. Klicke dazu das Punkt-Menü und dann ganz unten auf &ldquo;Ansicht anpassen&rdquo;. Es öffnet sich nun eine Liste, in der du die &ldquo;eigenen Felder&rdquo; aktivieren kannst:</p>
<ul>
<li>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-10.png" alt=""></p>
</li>
<li>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-11-700x1059.png" alt=""></p>
</li>
</ul>
<p>Anzeigen der benutzerdefinierten Felder im Gutenberg-Editor</p>
<h3 id="count-words"><strong>count-words</strong></h3>
<p>Wenn die im Shortcode angegebene Quelle einen kompletten Text enthält, müssen die Wörter darin erst gezählt werden. Dazu muss <strong>count-words</strong> auf <strong>1</strong> gesetzt werden. Ist <strong>count-words=0</strong> gesetzt, erwartet das Plugin eine List mit gezählten Wörtern.</p>
<h3 id="enable-frontend-edit"><strong>enable-frontend-edit</strong></h3>
<p>Ist dieser Parameter auf 1 gesetzt, wird auf der Seite ein Textfeld angezeigt. Das Textfeld enthält den Text, der mit dem Shortcode definiert wurde. Der Besucher kann den Text dann beliebig verändern oder eigenen Text hinzufügen, um so die <strong>Word Cloud</strong> selber zu steuern. Die Berechnung der <strong>Word Cloud</strong> findet im Browser statt. Im folgenden Beispiel kommt der Text von einem benutzerdefiniertem Feld im Backend. Er wird an das Frontend ausgeliefert und dort in der Word Cloud dargestellt. Gleichzeitig kann man den Text aber auch anpassen und die Wolke neu zeichnen lassen:</p>
<p><code>[ wp-word-cloud source-type=&quot;custom-field&quot; enable-frontend-edit</code>=1 <code>id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]</code></p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-8-700x755.png" alt=""></p>
<p>Ein Textfeld für die Besucher deiner Webseite</p>
<h3 id="ocr---texterkennung">OCR - Texterkennung</h3>
<h4 id="enable-ocr"><strong>enable-ocr</strong></h4>
<p>Ist dieser Parameter auf 1 gesetzt, kann der Benutzer auf der Webseite ein Bild hochladen oder mit der Kamera aufnehmen. Im Browser findet dann eine Text-Erkennung statt. Die Wörter werden dann gezählt und die Word Cloud darauf basierend gezeichnet. Wenn <strong>enable-frontend-edit</strong> nicht aktiv ist, hat dieser Parameter keine Wirkung.</p>
<p><code>[ wp-word-cloud source-type=&quot;custom-field&quot; enable-frontend-edit=1 enable-ocr=1 id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]</code></p>
<p>Für diese Funktionalität greift das Plugin auf die <a href="https://tesseract.projectnaptha.com/">Tesseract-Bibliothek</a> zurück. Diese ermöglicht die Texterkennung von abfotografierten Dokumenten in verschiedenen Sprachen. Die Texterkennung erfolgt komplett im Browser, also beim Besucher der Webseite. Das Bild wird <strong>nicht zum Server hochgeladen</strong>.</p>
<h4 id="ocr-language">ocr-language</h4>
<p>Mit diesem Parameter legst du fest, welche Sprache(n) das ORC-Modul unterstützen soll. Standardmäßig ist hier deu eingestellt. Du kannst mehre Sprachen angeben, wenn du sie mit einem + trennst, z.B. Deutsch + Englisch:</p>
<p><code>`[ wp-word-cloud source-type=&quot;custom-field&quot; enable-frontend-edit=1 enable-ocr=1 ocr-language=&quot;deu+eng&quot; id=&quot;demo&quot;]my-custom-field[ /wp-word-cloud]`</code></p>
<p>Eine Liste aller unterstützten Sprachpakete findest du hier:</p>
<p><a href="https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016">https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016</a></p>
<h4 id="ocr-local-libraries">ocr-local-libraries</h4>
<p>Das OCR-Modul lädt einige, größere Dateien von einem anderen Server nach, unter anderem auch die Sprachpakete. Du kannst diese Dateien auch auf deinem Server anbieten. Dazu musst du die folgenden Dateien herunterladen und im Unterordner &ldquo;<strong>lib</strong>&rdquo; innerhalb des Plugin-Ordners ablegen:</p>
<ul>
<li>[https://unpkg.com/tesseract.js@v2.0.0/dist/worker.min.js](<a href="https://unpkg.com/tesseract.js@v2.0.0/dist/worker.min.js%27">https://unpkg.com/tesseract.js@v2.0.0/dist/worker.min.js'</a> defer=&lsquo;defer)</li>
<li>[https://unpkg.com/tesseract.js-core@v2.0.0/tesseract-core.wasm.js](<a href="https://unpkg.com/tesseract.js-core@v2.0.0/tesseract-core.wasm.js%27">https://unpkg.com/tesseract.js-core@v2.0.0/tesseract-core.wasm.js'</a> defer=&lsquo;defer)</li>
</ul>
<p>Außerdem benötigst du die von dir konfigurierten Sprachpakete. Diese kannst <a href="https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016">du hier für die Version 4 herunterladen</a>. Die Sprachpakete gehören ebenfalls in den Unterordner &ldquo;lib&rdquo;. Außerdem <strong>musst du manuell</strong> die Dateiendung &ldquo;.gz&rdquo; anhängen.</p>
<h3 id="eingrenzen-der-wortliste">Eingrenzen der Wortliste</h3>
<h4 id="min-word-length">min-word-length</h4>
<p>Hiermit legst du fest, wie lang ein Wort mindestens sein soll, um beim Zählen berücksichtigt zu werden. Diese Einstellung wird <strong>nicht</strong> berücksichtigt, wenn du eine fertige Wortliste als Quelle angibst. In diesem Beispiel wird das Wort Foo beim Zählen ignoriert.</p>
<p><code>`[ wp-word-cloud source-type=&quot;inline&quot; count-words=1 min-word-lenght=4 id=&quot;demo&quot;]Lorem Ipsum Foo[ /wp-word-cloud]`</code></p>
<h4 id="min-word-occurence">min-word-occurence</h4>
<p>Mit diesem Parameter legst du fest, wie oft ein Wort mindestens vorkommen muss, um in der word cloud dargestellt zu werden. Diese Einstellung wird <strong>immer</strong> berücksichtigt, auch wenn du eine fertige Wortliste als Quelle angibst. Im Beispiel werden nur Wörter in der word cloud dargestellt, die mindestens 2 mal vorkommen:</p>
<p><code>`[ wp-word-cloud source-type=&quot;inline&quot; count-words=1 min-word-occurence=2 id=&quot;demo&quot;]Lorem Ipsum Foo[ /wp-word-cloud]`</code></p>
<h4 id="black-list-und-enable-black-list">black-list und enable-black-list</h4>
<p>Die Blacklist enthält Wörter, die beim Zählen nicht berücksichtigt werden dürfen. Das können z.B. Funktionswörter oder Fremdwörter sein, die du nicht in der word cloud sehen möchtest. Die Wörter werden mit einem Leerzeichen getrennt angegeben. Wenn du den Parameter im Shortcode angibst, wird die globale Einstellung komplett ignoriert. Die Blacklist wird nur verwendet, wenn der Parameter enable-black-list auf 1 gesetzt ist. Im Beispiel wird das Wort &ldquo;Lorem&rdquo; beim Zählen ignoriert, das es sich auf der Blacklist befindet.</p>
<p><code>`[ wp-word-cloud source-type=&quot;inline&quot; count-words=1 enable-black-list`</code>=1 <code>`black-list=&quot;Lorem&quot; id=&quot;demo&quot;]Lorem Ipsum Foo[ /wp-word-cloud]`</code></p>
<h4 id="enable-custom-black-list">enable-custom-black-list</h4>
<p>Ist dieser Parameter aktiviert, kann der Besucher deiner Webseite Wörter in der word cloud anklicken, um sie aus der word cloud zu entfernen. Die Wörter erscheinen dann unter der word cloud in einer &ldquo;benutzerdefinierten&rdquo; Blacklist. Wenn sie dort erneut angeklickt werden, erscheinen sie wieder in der word cloud.</p>
<p><img src="/2020/2020-06-09-wordpress-word-cloud-2-0/images/grafik-9-700x569.png" alt=""></p>
<p>Eine word cloud mit benutzerdefinierter Blacklist, so schön!</p>
<h4 id="persistent-custom-black-list">persistent-custom-black-list</h4>
<p>Hiermit kannst du festlegen, dass die Blacklist erhalten bleibt, wenn der Besucher einen neuen Text in das Eingabefeld eingibt. Ist der Parameter deaktiviert, wird die benutzerdefnierte Blacklist gelöscht, sobald der Besucher einen neuen Text eingibt. Dieser Parameter ist nur wirksam, wenn auch das Textfeld aktiviert ist.</p>
<h4 id="ignore-chars">ignore-chars</h4>
<p>Mit diesem Parameter legst du fest, welche Zeichen aus dem Text entfernt werden, bevor er gezählt wird. Hier wird ein regulärer Ausdruck dieser Form erwartet:</p>
<p><code>ignore-chars=&quot;\(\)\[\]\,\.;&quot;</code></p>
<p>Auf diese Art kannst du ungewollte Satzzeichen, Sonderzeichen oder Steuerzeichen entfernen.</p>
<h3 id="erscheinungsbild-anpassen">Erscheinungsbild anpassen</h3>
<h4 id="style">style</h4>
<h4 id="text-transform">text-transform</h4>
<p>Hiermit kannst du festlegen, dass der Text beim Darstellen in der word cloud groß oder kleingeschrieben werden soll. Dieser Parameter kann dementsprechend drei Werte annehmen:</p>
<ul>
<li>uppercas (alle Wörter groß schreiben)</li>
<li>lowercase (alle Wörter klein schreiben)</li>
<li>none (keine Änderung)</li>
</ul>
<p>Diese word cloud nutzt als Ressource die aktuellen Mitteilungen von <a href="http://blog.fefe.de">fefe</a>:</p>
<p>[wp-word-cloud source-type=&ldquo;url&rdquo; id=&ldquo;demo2&rdquo; count-words=1 min-word-occurence=1 min-word-length=3 size-factor=100 min-alpha=0.5 count-words=1]https://blog.fefe.de[/wp-word-cloud]</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> wordpress-word-cloud-2-0</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>WordPress Word Cloud 2.0 - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>CSS über den HTTP-Header ausspielen</title>
      <link>http://localhost:1313/2020/2020-06-04-css-ueber-den-http-header-ausspielen/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2020/2020-06-04-css-ueber-den-http-header-ausspielen/</guid>
      <description>Jeder kennt das Problem: Man hat stundenlang an einem Stylesheet auf dem Staging-Server rumgebastelt, will es nun auf den Live-Server kopieren und die Änderung …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Jeder kennt das Problem: Man hat stundenlang an einem Stylesheet auf dem Staging-Server rumgebastelt, will es nun auf den Live-Server kopieren und die Änderung ist nicht sichtbar.&#39; reading_time: 2 content_type: &#39;guide</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Server, Mobile, Ai, Performance</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Jeder kennt das Problem: Man hat stundenlang an einem Stylesheet auf dem Staging-Server rumgebastelt, will es nun auf den Live-Server kopieren und die Änderung ist nicht sichtbar. Die Fehlersuche beginnt. Man prüft den Cache. Vom Browser. Vom Server. Ist man überhaupt auf dem richtigen Server? Hat der Upload geklappt? Und so weiter. Eric Meyer hat das ganze Dilemma 2009 treffend beschrieben und auch eine Lösung mitgeliefert, von der ich noch nicht gehört habe:</p>
<p>Nutze doch einfach die HTTP-Header um deine Staging- und Live-Umgebung eindeutig voneinander zu unterscheiden. Der Link-Parameter im HTTP-Header nämlich auch die Angabe von Style-Sheet-Dateien. Und das sieht dann so aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">Header add Link &#34;&lt;/staging.css&gt;;rel=stylesheet;type=text/css;media=all&#34;
</span></span></code></pre></div><p>In nginx kann man das folgendermaßen im Server-Block implementieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_header Link &#34;&lt;/wp-content/themes/nickyreinert/style.header.css&gt;;rel=stylesheet;type=text/css;media=all&#34;;
</span></span></code></pre></div><p>Wer Apache nutzt, setzt den &ldquo;CSS-Header&rdquo; folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">Header add Link &#34;&lt;/wp-content/themes/nickyreinert/style.header.css&gt;;rel=stylesheet;type=text/css;media=all&#34;
</span></span></code></pre></div><p>Natürlich habe ich die Spielerei gleich bei mir eingebaut:</p>
<p><img src="/2020/2020-06-04-css-ueber-den-http-header-ausspielen/images/grafik-700x382.png" alt=""></p>
<p>CSS-Datei im HTTP-Header ausgeliefert</p>
<p>Damit lässt sich grundsätzlich auch das Stylesheet deines Wordpress-Themes ausliefern: Da WordPress aber die style.css nutzt, um Theme-Informationen zu verarbeiten, musst du auf dieses kleine Feature dann verzichten. Außerdem wird CSS im Link-Header nicht von jedem Browser unterstützt.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> css, http</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>CSS über den HTTP-Header ausspielen - Guide</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Fefes Blog - Eine Analyse</title>
      <link>http://localhost:1313/2019/2019-11-05-fefes-blog-eine-analyse/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-11-05-fefes-blog-eine-analyse/</guid>
      <description>Nach der gar nicht mal so großen öffentlichen Wahrnehmung meiner laienhaften statistischen Analyse des Flirtportals der BVG &ldquo;Augenblicke&rdquo;, habe ich …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Nach der gar nicht mal so großen öffentlichen Wahrnehmung meiner laienhaften [statistischen Analyse des Flirtportals der BVG &#39;Augenblicke&#39;](https://www.nickyreinert.de/augenblicke-eine-statistische-an.</p>
          
          
          <p><strong>Hauptthemen:</strong> Python, Web, Mac, Git, Server, Mobile, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Nach der gar nicht mal so großen öffentlichen Wahrnehmung meiner laienhaften <a href="https://www.nickyreinert.de/augenblicke-eine-statistische-analyse-des-flirt-portals-der-bvg/">statistischen Analyse des Flirtportals der BVG &ldquo;Augenblicke&rdquo;</a>, habe ich mich mal einem anderem Projekt gewidmet. Es geht um <a href="http://blog.fefe.de">Fefes Blog</a>, einer meiner ersten Anlaufstellen, wenn ich mir die tägliche Nachrichtendosis gebe. Inspiriert wurde ich dazu durch eine <a href="https://www.netaction.de/datenvisualisierung-von-fefes-blogzeiten/">Analyse der Blogzeiten von Fefe</a>, die allerdings schon acht Jahre zurück liegt.<br>
Für meine Analyse des BVG-Portal hatte ich damals noch PHP gewählt, um die Seiten auszulesen und in eine Datenbank zu hauen. Das war ziemlich aufwendig. Diesmal wollte ich es mit Python probieren und damit auch gleich mein erstes Projekt in dieser Sprache realisieren (der Quellcode steht <a href="https://github.com/nickyreinert/fefeScrape">auf Github</a> zur Verfügung).</p>
<p>Die ersten Schritte mit Python waren etwas holprig. Mit der Zeit zeigt sich aber, dass das Scraping hier weitaus bequemer ist als mit PHP. Außerdem ist Fefes Blog eine ziemlich angenehme Datenquelle, da Fefe seit Anbeginn auf eine wirklich saubere und konsistente Seitenstruktur setzt. Pures HTML. Es ist ein Traum. Danke, Fefe. Ein paar Hintergründe zur Datenerfassung gibt es am Ende.</p>
<h2 id="auswertung">Auswertung</h2>
<p>Insgesamt habe ich 43.908 Einträge im Zeitraum von Ende März 2005 bis Anfang November 2019 ausgewertet. Nach meiner Zählung hat Fefe einen sehr reichen Wortschatz: ich konnte 141.048 verschiedene &ldquo;Wörter&rdquo; ausfindig machen. Außerdem verweißt Fefe auf 8.862 externe Quellen. Auf sich selber hat Fefe innerhalb des Zeitraums 2.661 mal verlinkt. Auch wenn Fefe den Spiegel oft als &ldquo;ehemaliges Nachrichtenmagazin&rdquo; bezeichnet: Der Spiegel ist mit 4.447 Verlinkungen die meist genutzt Quelle, gefolgt von heise.de (3.252). Man muss aber auch eingestehen, dass die Verlinkung zum Spiegel seit 2010 stark abnimmt.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/fefe_words-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/fefe_words-1-700x339.png" alt="Fefes Quellen - Spiegel Online, Heise und… er selbst ;)"></a></p>
<p>Fefes Quellen - Spiegel Online, Heise und&hellip; er selbst ;)</p>
<p>Insgesamt kann man einen Abwärtstrend der Nachrichtenfrequenz bei Fefe feststellen. Seinen Höhepunkt hatte Fefe gleich zu Beginn: Im Juli 2005 gab es 528 Einträge. Den zweiten Höhepunkt erreichte Fefes Blog knapp 10 Jahre später. Im April 2015 gab es 440 Einträge. Ansonsten zeigt der Trend leider nach unten. Im Schnitt gibt es jeden Monat 244 Beiträge (Median 238). Für November 2019 sagt das Prognosemodul von Tableau übrigens 182 Einträge voraus.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/monthly.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/monthly-700x361.png" alt="Anzahl der Einträge pro Monat im Jahresverlauf"></a></p>
<p>Anzahl der Einträge pro Monat im Jahresverlauf</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/blogging-times.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/blogging-times-62x300.png" alt="Anzahl der Nachrichten je Tageszeit im Jahresverlauf"></a></p>
<p>Anzahl der Nachrichten je Tageszeit im Jahresverlauf</p>
<p>In Anlehnung an mein Vorbild, habe ich mir natürlich auch angeschaut, zu welcher Tagszeit Fefe aktiv ist. Zunächst erkennt man, dass Fefe bevorzugt nachmittags aktiv ist. Aber scheinbar gibt es auch hier saisonale Unterschiede. So ist er im Januar bis Juli 2006, den März ausgeschlossen, eher ab 17 Uhr aktiv, danach aber wieder über den ganzen Tag verteilt (Nachtstunden ausgeschlossen). Im April und Mai 2007 konzentrieren sich die Nachrichten wieder auf den späten Nachmittag. In den folgenden Jahren, bis 2015, sind es immer wieder die Frühsommer / Frühlingsmonate, in denen sich die Beiträge zu dieser Tageszeit konzentrieren. Entweder ist Fefe ist ein ausgesprochener Frühlingsmensch. Eine andere Erklärung sind Projekte, die in diesen Monaten stattfinden und ein Bloggen erst zum Nachmittag zulassen. Denkbar ist auch, dass Fefe aufgrund seiner (zyklischen?) Reisetätigkeit und dem damit verbundenen Zeitzonenwechsel zu unterschiedlichen Zeiten bloggt.</p>
<p>Kreuzt man den Wochentag mit der Tageszeit, zeigt sich, wann Fefe die meisten Beiträge absetzt. Mittwochs um 17 Uhr. Das Wochenende ist Fefe heilig, die Beitragsfrequenz ist hier sehr niedrig. Auch zu den typischen Nachtzeiten gibt es nur sehr wenige Einträge. Hier gibt es öfter auffällige Konzentrationen, wie z.B. im Frühling 2015, die ich auch auf Zeitzonenwechsel - sprich Reisen - schiebe.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-nachrichten-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-nachrichten-1.png" alt="Anzahl der Nachrichten je Wochentag und Tageszeit"></a></p>
<p>Anzahl der Nachrichten je Wochentag und Tageszeit</p>
<p>Die längsten Nachrichten entstehen übrigens zur Nachtzeit (oder je nach Sichtweise, während den Reisen in andere Zeitzonen). Montags, um 5 Uhr, ist die durchschnittliche Wortzahl am höchsten. Der Median weist dazu übrigens den Sonntag um 2 Uhr nachts aus.</p>
<ul>
<li>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-avg-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-avg-1.png" alt=""></a></p>
<p>Wortanzahl (Mittelwert) je Wochentag und Tageszeit</p>
</li>
<li>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-median-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-median-1.png" alt=""></a></p>
<p>Wortanzahl (Median) je Wochentag und Tageszeit</p>
</li>
</ul>
<p>Eine Wortwolke, analog der Wolke der externen Quellen, ist aufgrund der schieren Menge etwas zu aufwendig und hätte auch nur wenig Informationsgehalt, weshalb ich darauf mal verzichte. Hier nur eine Darstellung der häufigsten Wörter, weil es so schön aussieht:</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/woerter.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/woerter-700x387.png" alt="Spektakuläre Topliste der verwendeten Wörter"></a></p>
<p>Spektakuläre Topliste der verwendeten Wörter</p>
<p>Was ich allerdings liefern kann, ist eine Liste der Fefe-Kunstwörter, wie z.B. &ldquo;<a href="https://blog.fefe.de/?ts=a27615a6">Notfall-Soforthilfe-Klopapier&rdquo;</a>. Das längste dieser Art ist &ldquo;<a href="https://blog.fefe.de/?ts=b293636b">Webforen-Besserwisser-Klugscheißer-Korinthenkacker-Sockenpuppen-Grabenkriegen</a>&rdquo;. Das folgende Diagramm zeigt die Top 33 der Fef&rsquo;schen Wortschöpfungen:</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik-700x368.png" alt="Fefes Wortschöpfungen Top 33"></a></p>
<p>Fefes Wortschöpfungen Top 33</p>
<p>Kommen wir zu den Verweisen auf externe Quellen. Der Spiegel (Online) gehört wie gesagt zu den favorisierten Quellen von Fefe. Ansonsten ist Fefe nicht wählerisch, was Quellen angeht. Die Auswahl ist immens. Interessant ist, wie z.B. <em>Twitter</em> seit 2009 immer öfter zu den verlinkten Quellen gehört. Auf <em>The Guardian</em> hingegen wurde von Fefe 2013 zum letzten Mal verwiesen. Auf sich selber verweist Fefe natürlich auch hin und wieder. Am häufigsten in 2008, mit abnemender Tendenz.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/jahr-quellen-ab-50.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/jahr-quellen-ab-50-700x391.png" alt="Verwendete Quellen / Domains"></a></p>
<p>Verwendete Quellen / Domains</p>
<h2 id="fazit">Fazit</h2>
<p>Und was ist jetzt Fefes WLAN-Passwort? Wir wissen es nicht. Und wir werden es auch nicht erfahren, wenn wir seinen Blog noch drölf mal parsen. Vielleicht sind die zahlreichen zusammengesetzen Substantive als Indiz hilfreich? Egal.</p>
<p>Also gibt es kein Fazit, mit Ausnahme der Feststellung, dass es zeitliche Muster gibt, Fefe ein außerordentliche fleißiger Autor ist aber sonst, leider, die Tendenz der Nachrichtenanzahl in den letzten Jahren zurück gegangen ist.</p>
<h2 id="fehlerquellen-und-technische-hintergründe">Fehlerquellen und technische Hintergründe</h2>
<p>Auch wenn der HTML-Code sehr aufgeräumt ist, vor Fehlern ist auch Fefe nicht gefeit. So gibt es zum Beispiel 110 nicht bzw. falsch geschlossene <A>-Tags. Hier musste ich per Script stumpf ein schließendes </a> setzen, was die Auswertung der Quellen / Domains ein wenig, aber kaum merklich, verfälscht.</p>
<p>Auch bei den Wörtern musste ich etwas aufräumen, um so z.B. alle möglichen Nicht-Buchstaben entfernen. Danach musste ich die Liste noch ein wenig von Hand sortieren, un so z.B. ein paar verirrte URL zu entfernen.</p>
<p>Die verlinkten Quellen war recht einfach zu handhaben. Hier habe ich lediglich die Präfixe entfernt, wenn diese mit www und ggf. einer Ziffer beginnen. Trotzdem muss bei dieser Liste berücksichtigt werden, dass manche Quellen über mehrere Domains erreichbar sind. So verweist Fefe z.B. auf das Angebot der BBC mit zehn verschiedenen Varianten:</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik-1-700x341.png" alt="Varianten für den Verweis zur BBC"></a></p>
<p>Varianten für den Verweis zur BBC</p>
<p>Der Fefe-Timestamp ist eine Geschichte für sich. Alleine wäre ich vermutlich kaum auf die Idee gekommen, dass hinter der eindeutigen Id, mit der jeder Beitrag erreichbar ist, tatsächlich eine Zeitangabe steckt. <a href="https://www.netaction.de/datenvisualisierung-von-fefes-blogzeiten/">Meine Inspirationsvorlage</a> hat hier zum Glück sehr gute Vorarbeit geleistet und erklärt, wie sich der alphanumerische Wert in ein lesbares Datum umwandeln lässt. Es handelt sich bei dem Wert nämlich um einen Hexadezimalangabe, die zunächst in eine Dezimalziffer umgewandelt werden muss. Danach erfolgt eine bitweise XOR-Operation um einen bestimmten Schlüssel: <strong>0xFEFEC0DE</strong>. Das ergibt schließlich einen Unix-Zeitstempel, der sich in ein lesbares Datum umwandeln lässt.</p>
<p>Zuletzt noch ein Hinweis zu den Daten aus den Anfangszeiten, also März bis Juni 2005. Vermutlich hat Fefe diese nachträglich eingefügt, da dort der Zeitstempel jeweils auf 12 bis 13 Uhr zeigt. Diese Monate habe ich aus den Analysen mit den Tageszeiten ausgeschlossen.</p>
<p>Zuletzt noch ein Hinweis zu den verwendeten Tools:</p>
<p>Einerseits nutze ich für die Auswertung und Darstellung <a href="https://public.tableau.com/en-us/s/">Tableau Public</a>, dass es auch als kostenlose Variante gibt. Für die Wordcloud nutze ich <a href="http://www.wordle.net/">Wordle</a>. Wordle gab es eine zeitlang nur als WebApp, mittlerweile läuft Wordle aber auch als native OSX- oder Windows-Anwendung. Das Python-Script habe ich mit <a href="https://code.visualstudio.com/">Visual Studio Code</a> geschrieben, das im Begriff ist, Notepad++ als Allround-IDE abzulösen. Und mit Excel habe ich die Daten etwas bereinigt, das klappt damit immer noch fixer als mit Tableau.</p>
<h2 id="update">UPDATE</h2>
<p>Durch Zufall bin ich eben noch auf <a href="https://weltliteratur.net/Fefe-Research-Institute/">eine etwas tiefere Textanalyse</a> gestoßen, die auch sehr interessant ist.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Fefes Blog - Eine Analyse - Project</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 8 Minuten</dc:subject>
      
      
      
      <dc:type>project</dc:type>
      
      
    </item><item>
      <title>Apache und nginx parallel betreiben und mit ApacheBench gegeneinander antreten lassen</title>
      <link>http://localhost:1313/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/</guid>
      <description>Mein Ziel ist es, nginx und Apache als Webserver auf einem System laufen zu lassen. Alle HTTP/HTTPS-Anfragen werden von nginx beantwortet. Anfragen an den Port …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Mein Ziel ist es, nginx und Apache als Webserver auf einem System laufen zu lassen. Alle HTTP/HTTPS-Anfragen werden von nginx beantwortet.&#39; reading_time: 5 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Mein Ziel ist es, <strong>nginx</strong> und <strong>Apache</strong> als Webserver auf einem System laufen zu lassen. Alle HTTP/HTTPS-Anfragen werden von nginx beantwortet. Anfragen an den Port 8080 (für HTTP) oder 4443 (HTTPS) werden von Apache beantwortet. So kann ich nginx und Apache in einem <strong>Benchmark</strong> vergleichen, indem ich einfach nur die Ports ändere. Das Setup ist aber auch für andere Zwecke sinnvoll, wenn du z.B. die Burst-Einstellungen von nginx in Aktion sehen oder bestimmte Web-Dienste strikt mit Apache bedienen willst. Los gehts&hellip;</p>
<p>Ich gehe mal davon aus, dass du nginx und Apache fertig eingerichtet hast. Nginx läuft idealerweise schon (<a href="https://www.nickyreinert.de/mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/">siehe meine 3-Teilige Anleitung</a>) Dann musst du zunächst mal dafür sorgen, dass die Firewall (z.B. iptables) die alternativen Ports 8080 und 4443 auch durchlässt. Das funktioniert folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">sudo iptables -A INPUT -p tcp -m multiport --dports 8080,4443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
</span></span></code></pre></div><p>Wenn du prüfen willst, ob die Änderung übernommen wurde, machst du das mit</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">iptables -L --line-numbers
</span></span></code></pre></div><p>Den line-numbers-Parameter kannst du dir schenken - willst du aber einen Eintrag in iptables löschen, können die Zeilennummern sehr hilfreich sein, siehe:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">iptables -D INPUT 3
</span></span></code></pre></div><p>Die 3 verweist auf die Zeilennummer, INPUT auf die Chain. Aber das nur um Rande. Weiter gehts mit unserem Server-Setup.</p>
<p>Als nächstes teilst du Apache mit, dass ab sofort auf den alternativen Ports nach Anfragen gelauscht wird. Dazu passt du die Porteinstellung in der Datei /etc/apache2/ports.conf entsprechend an. Die if-Kondition macht die Sache etwas sauber, muss aber nicht sein:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">Listen 8080
</span></span><span class="line"><span class="ln">2</span><span class="cl">&lt;IfModule mod_ssl.c&gt;
</span></span><span class="line"><span class="ln">3</span><span class="cl">    Listen 4443
</span></span><span class="line"><span class="ln">4</span><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></div><p>Weiter geht es mit der Einstellung des virtuellen Hosts für Apache. Dazu legst du eine Datei mit der Endung <strong>&ldquo;conf&rdquo;</strong> im Ordner <strong>/etc/apache2/sites-available/</strong> an und füllst sie folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="o">&lt;</span><span class="n">VirtualHost</span> <span class="o">*</span><span class="p">:</span><span class="mi">8080</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">        <span class="n">ServerName</span> <span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">        <span class="n">ServerAlias</span> <span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">        <span class="n">Redirect</span> <span class="n">permanent</span> <span class="o">/</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="p">:</span><span class="mi">4443</span><span class="o">/</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">        <span class="n">DocumentRoot</span> <span class="s2">&#34;/var/nginx/apache2_example_com/htdocs&#34;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">        <span class="n">DirectoryIndex</span> <span class="n">index</span><span class="o">.</span><span class="n">html</span> <span class="n">index</span><span class="o">.</span><span class="n">php</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="o">&lt;/</span><span class="n">VirtualHost</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="o">&lt;</span><span class="n">VirtualHost</span> <span class="o">*</span><span class="p">:</span><span class="mi">4443</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">        <span class="n">ServerName</span> <span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">        <span class="n">ServerAlias</span> <span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">        <span class="n">ErrorLog</span> <span class="s2">&#34;/var/log/apache2/example.com.error.log&#34;</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">        <span class="n">CustomLog</span> <span class="s2">&#34;/var/log/apache2/example.com.log&#34;</span> <span class="n">common</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">        <span class="n">LogLevel</span> <span class="n">warn</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">        <span class="n">DocumentRoot</span> <span class="s2">&#34;/var/nginx/apache2_example_com/htdocs&#34;</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">        <span class="n">DirectoryIndex</span> <span class="n">index</span><span class="o">.</span><span class="n">html</span> <span class="n">index</span><span class="o">.</span><span class="n">php</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">        <span class="o">&lt;</span><span class="ne">Directory</span> <span class="s2">&#34;/var/nginx/apache2_example_com/htdocs&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">                <span class="n">Options</span> <span class="o">-</span><span class="n">Indexes</span> <span class="o">+</span><span class="n">FollowSymLinks</span> <span class="o">+</span><span class="n">MultiViews</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">                <span class="n">DirectoryIndex</span> <span class="n">index</span><span class="o">.</span><span class="n">php</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">                <span class="n">AllowOverride</span> <span class="n">All</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl">                <span class="n">Require</span> <span class="n">all</span> <span class="n">granted</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">        <span class="o">&lt;/</span><span class="ne">Directory</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">
</span></span><span class="line"><span class="ln">30</span><span class="cl">        <span class="n">RewriteEngine</span> <span class="n">on</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">        <span class="n">Include</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">letsencrypt</span><span class="o">/</span><span class="n">options</span><span class="o">-</span><span class="n">ssl</span><span class="o">-</span><span class="n">apache</span><span class="o">.</span><span class="n">conf</span>
</span></span><span class="line"><span class="ln">32</span><span class="cl">
</span></span><span class="line"><span class="ln">33</span><span class="cl">        <span class="n">SSLCertificateFile</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">letsencrypt</span><span class="o">/</span><span class="n">live</span><span class="o">/</span><span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">fullchain</span><span class="o">.</span><span class="n">pem</span>
</span></span><span class="line"><span class="ln">34</span><span class="cl">        <span class="n">SSLCertificateKeyFile</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">letsencrypt</span><span class="o">/</span><span class="n">live</span><span class="o">/</span><span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">privkey</span><span class="o">.</span><span class="n">pem</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">
</span></span><span class="line"><span class="ln">36</span><span class="cl"><span class="o">&lt;/</span><span class="n">VirtualHost</span><span class="o">&gt;</span>
</span></span></code></pre></div><p>Ich will die Einstellungen nur kurz überspringen, da sie sich eigentlich selber erklären. Der erste Block greift die HTTP-Anfragen ab und leitet diese sofort weiter (<em>Redirect permanent</em>). Ich definiere hier zwar auch DocumentRoot und Index, aber das nur der Vollständigkeit halber. Der zweite Block kümmert sich um die HTTPS-Anfragen. Wie du siehst, passiert hier kein großer Zauber. Ich nutze PHP nur als Modul, setze ein paar Logging-Eigenschaften fest und übermittle die SSL-Zertifikate. <em>Easy peasy. Lemon squeezy.</em><br>
Wie du siehst, nutze ich für Apache außerdem ein separates Verzeichnis. Achte bei <strong>Wordpress</strong> auch darauf, die URLs entsprechend anzupassen, sonst wird Wordpress die Anfragen immer wieder zu nginx weiteschicken:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;WP_HOME&#39;,&#39;https://example.com:4443&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">define(&#39;WP_SITEURL&#39;,&#39;https://example.com:4443&#39;);
</span></span></code></pre></div><p>Als nächstes gönnst du dem Apache-Server einen Neustart:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">sudo service apache2 restart
</span></span></code></pre></div><p>Und das war es auch schon. Jetzt kannst du mit ApacheBench ein paar Requests abfeuern. Denk dran, dass du auf Windows ab für HTTP-Requests und abs für HTTPS-Requests nutzen musst. Mit diesem Aufruf teste ich erstmal die Performance von meinem Apache-Setup:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">abs -n 1000 -c 100 https://www.example.com:4443/
</span></span></code></pre></div><p>Der Parameter <em>n</em> steht für die Anzahl von Anfragen insgesamt. Mit <em>c</em> kannst du festlegen, wieviele Anfragen du gleichzeitig abfeuern willst (<em>c</em> muss demnach kleiner sein als <em>n</em>). Der Forward-Slash am Ende ist wichtig, andernfalls erkennt <strong>abs</strong> die URL nicht an. Das gleiche mache ich ohne Port-Angabe um den nginx-Server anzusprechen. Und das sind die Ergebnisse:</p>
<h3 id="auswertung-der-ergebnisse">Auswertung der Ergebnisse</h3>
<p><img src="/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/images/grafik.png" alt=""></p>
<p>Abbildung 1: Vergleich der Antwortzeiten von Apache und nginx</p>
<p>Die Abbildung zeigt, wie hoch der Anteil der Anfragen ist, der nach einer bestimmten Zeit (in Millisekunden) beantwortet wurde. Nginx ist ganz klar Gewinner. Alle Anfrgaen wurden inerhalb von 4 Sekunden bearbeitet, die Hälfte der Anfragen soger innerhalb knapp 1 Sekunde. Bei Apache sieht das ungleich schlimmer aus. Allerdings wurden bei nginx 68 Anfragen abgewiesen, bei Apache 0 - eine Folge meiner Warteschlangen-Einstellung.<br>
Die folgenden Diagramme zeigen noch mal die Zusammensetzung der Anfrage:</p>
<ul>
<li>Connect - Zeit bis die Verbindung hergestellt wird</li>
<li>Waiting - Zeit bis zum ersten Datenpaket (Time-To-First-Byte, TTFB)</li>
<li>Processing - Zeit, bis die vollständige Antwort vom Server eingangen ist, seit die Verbindung geöffnet wurd</li>
<li>Total - Gesamte Wartezeit</li>
</ul>
<p><img src="/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/images/grafik-1.png" alt=""></p>
<p>Abbildung 2: Messergebnisse für die Anfragen an Apache</p>
<p><img src="/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/images/grafik-2.png" alt=""></p>
<p>Abbildung 3: Messergebnisse für die Anfragen an nginx</p>
<p>Die reine Verbindungszeit ist bei beiden Servern relativ niedrig, dieser Wert gibt aber auch eher Rückschlüsse auf die Qualität des Netzwerks. Die TTFB ist bei Apache relativ hoch., es dauert also eine ganze Weile, bis Apache die Anfrage verarbeitet und entsprechend die ersten Daten sendet. Das wird mit ziemlicher Sicherheit am grundsätzlich nicht sehr performanten php-mod liegen. Insgesamt ist das Ergebnis natürlich wenig überraschend. Mein Ziel war ja, mit nginx und php-fpm ein schnelles Setup zu schaffen. Was hiermit wohl gelungen sein dürfte (Anmerkungen zur Repräsentativität werden gerne entgegengenommen). Fairerweise sei aber noch angemerkt, dass ich Apache in der Standard-Einstellung verwende und wirklich keine Maßnahmen unternommen habe, um die Geschwindigkeit zu optimieren.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Apache und nginx parallel betreiben und mit ApacheBench gegeneinander antreten lassen - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 3 / 3)</title>
      <link>http://localhost:1313/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</guid>
      <description>Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups. Wenn alles …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups.&#39; reading_time: 7 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Server, Ai, Automation, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups. Wenn alles korrekt eingerichtet ist, solltet ihr nun einen gut funktionierenden Webserver auf Basis von nginx haben, der PHP-FPM nutzt und gut mit Wordpress laufen sollte. Der Server arbeitet für mehrere unterschiedliche Domains, die so gut wie möglich im System getrennt sind.</p>
<h2 id="die-einrichtung-der-php-pools">Die Einrichtung der PHP-Pools</h2>
<p>Um den ganzen Bums zum Laufen zu bringen fehlt jetzt nur noch PHP. Den Großteil haben wir schon geschafft, weshalb ich die Einrichtung von PHP nicht in einen neuen Beitrag gepackt habe.</p>
<p>Wie im ersten Teil schon angedeutet, nutze ich PHP-FPM. Die Einstellungen jedes einzelen virtuellen Servers befinden sich demnach in <strong>/etc/php/7.3/fpm/pool.d/</strong> und hat die Endung .conf.</p>
<p>Mit dem Parameter <strong>listen</strong> stellst du die Verbindung zu nginx her. Es wird ein Socket erstellt, über den nginx und PHP-FPM Informationen austauschen. Die Variable <strong>$pool</strong> enthält den Namen des Pools. Mit <strong>prefix</strong> legst du Standard-Ordner dieses Pools fest.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># der Namen des Pools (kann mit $pool referenziert werden</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="p">[</span><span class="n">example_com</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">listen</span> <span class="o">=</span> <span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">php</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">-$</span><span class="n">pool</span><span class="o">.</span><span class="n">sock</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="n">prefix</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/$</span><span class="n">pool</span>
</span></span></code></pre></div><p>Jetzt gibt ein paar wichtige Sicherheitsfeatures: Jeder <strong>Pool</strong> hat seinen eigenen Benutzer. Hierzu muss man nicht viel erklären: Der Vorteil hier ist, dass sich die PHP-Prozesse verschiedener Server, da sie ja unterschiedlichen Nutzer &ldquo;gehören&rdquo; grundsätzlich erstmal nicht in die Quere kommen können:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">user = $pool-php
</span></span><span class="line"><span class="ln">2</span><span class="cl">group = www-data
</span></span><span class="line"><span class="ln">3</span><span class="cl">listen.owner = $pool-php
</span></span><span class="line"><span class="ln">4</span><span class="cl">listen.group = www-data
</span></span></code></pre></div><p>Mit chdir und chroot schließt du diesen Pool in einen bestimmten Ordner ein. Ich hatte oben ja bereits <strong>$prefix</strong> definiert. Diese Parameter arbeiten eng mit den FastCGI-Einstellungen von <strong>nginx</strong> zusammen und sind eine beliebte Fehlerquelle. Mit chroot denkt PHP, dass dieser Ordner der Root-Ordner ist. Warum ist das wichtig? Unsere Root-Ordner liegen (siehe Teil 1) alle in einem eigenen Unterordner. So kann PHP nicht ausbrechen und z.B. auf <strong>sensible Systembereiche</strong> oder die Unterordner anderer Pools / Server zugreifen. Der Parameter <strong>chdir</strong> legt lediglich fest, dass root auch wirklich root ist. Hier könnte man htdocs als Root festlegen. Da wir in der nginx-Einstellung aber <strong>htdocs</strong> als Pfad voranstellen, kann das hier so bleiben. Bedenke, dass sich alle folgenden Pfadangaben immer relativ zu den hier festgelegten Einstellungen stattfinden.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">chdir</span> <span class="o">=</span> <span class="o">/</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">chroot</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">example1</span>
</span></span></code></pre></div><p>Weiter geht es mit der Konfiguration der PHP-Prozesse. Mit <strong>pm=dynamic</strong> legen wir fest, dass der Prozess-Manager prozesse dynamisch starten kann. Mit <strong>pm=static</strong> startest du immer eine feste Anzahl von Prozessen. (Bei Servern mit hoher Last kann das durchaus Sinn machen, <a href="https://haydenjames.io/php-fpm-tuning-using-pm-static-max-performance/">wie hier beschrieben wird</a>). Bei einer kleineren Seite reicht <strong>pm=ondemand</strong> völlig aus. Wir erinnern uns: Die Prozesse dienen als Interpretor für unsere PHP-Scripte. Ein Prozess bearbeitet eine Anfrage. Wenn du mehr Traffic erwartest, solltest du diese Werte also erhöhen.</p>
<p><strong>max_children</strong> gibt die Obergrenze dafür fest. <strong>start_servers=1</strong> besagt, dass mindestens 1 Prozess sofort gestartet wird. Mit <strong>min_spare_servers</strong> legst du fest, wieviele Prozesse mindestens &ldquo;vorrätig&rdquo; sind, <strong>max_spare_servers</strong> legt dafür die Obergrenze fest. Wie viele Prozesse du maximale starten solltest, errechnest du ganz einfach folgender maßen:</p>
<p>Rufe den folgenden Code auf um den Speicherverbrauch deines PHP-Services zu erhalten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">ps --no-headers -o &#34;rss,cmd&#34; -C php-fpm7.3 | awk &#39;{ sum+=$1 } END { printf (&#34;%d%s\n&#34;, sum/NR/1024,&#34;Mb&#34;) }&#39;
</span></span></code></pre></div><p>Den freien Speicher lässt du folgendermaßen anzeigen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">free -h
</span></span></code></pre></div><p>Angenommen, du hast 4.096 MByte freien Speicher zur Verfügung und ein PHP-Prozess verbraucht 4 MByte, dann kannst du insgesamt 1.024 Prozesse starten. Wenn du mehrere virtuelle Server betreibst, teilen diese sich natürlich dieses Kontingent. Im folgenden ein Beispiel: Es werden maximal 1.024 Prozesse gestartet. 100 Prozesse sind immer aktiv, auch wenn sie ungenutzt sind. Sind alle 100 Prozesse beschäftigt, werden mindestens 50 Prozesse gestartet, aber niemals mehr als 200 - das Spiel funktioniert so lange, bis das Kontingent von 1.024 ausgeschöpft ist.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">pm = dynamic
</span></span><span class="line"><span class="ln">2</span><span class="cl">pm.max_children = 1024
</span></span><span class="line"><span class="ln">3</span><span class="cl">pm.start_servers = 100
</span></span><span class="line"><span class="ln">4</span><span class="cl">pm.min_spare_servers = 50
</span></span><span class="line"><span class="ln">5</span><span class="cl">pm.max_spare_servers = 200
</span></span></code></pre></div><p>Wenn dein Server relativ klein ist, solltest du den <strong>On-Demand-Modus</strong> nutzen. Hier wird ein Prozess nur dann gestartet, wenn der Bedarf da ist. Das spart Speicher und ist in der Regel auch nicht merkbar langsamer.</p>
<p>Der Parameter <strong>catch_workers_output</strong> steuert die Ausgabe des PHP-Prozesses. Wie alle Log-Einstellungen, kann <a href="https://twitter.com/leofeyer/status/486862436948250624">dieser erhebliche Auswirkungen auf die Performance haben</a>. Falls du also noch ein paar Millisekunden mehr herausholen willst, setze diesen Wert auf <strong>no</strong>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">catch_workers_output = yes
</span></span></code></pre></div><p>Die folgenden Einstellungen werden eigentlich in der php.ini vorgenommen. Ich will sie hier aber auf Server-Ebene definieren, da die virtuellen Server ja durchaus unterschiedliche Ansprüche haben.</p>
<h3 id="sessions-cookies-und-referrer">Sessions, Cookies und Referrer</h3>
<p>Wenn du eine zusätzliche Sicherheitshürde einbauen willst, kannst du den Pfad der <strong>PHP-Sessions</strong> hier ändern. Wenn du in deiner Web-Anwendung nicht mit <strong>JavaScript</strong> auf <strong>Cookies</strong> zugreifen willst, kannst du den Cookie-Zugriff außerdem nur auf HTTP einschränken. Und schließlich macht es Sinn, dass eine Session nur vom eigenen Server genutzt werden kann, wenn also dein Server im Referrer übermittelt wird.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php_value[session.save_path] = /sessions
</span></span><span class="line"><span class="ln">2</span><span class="cl">php_value[session.cookie_httponly] = 1
</span></span><span class="line"><span class="ln">3</span><span class="cl">php_value[session.referer_check] = example.com
</span></span></code></pre></div><p>Sehr nützlich und ein wichtiges Sicherheitsfeature ist <strong>disable_functions</strong>. Es gibt eine nicht geringe Anzahl von PHP-Funktionen, mit denen sich Systemfunktionen steuern lassen. Diese solltest du grundsätzlich nicht zulassen. Ein weiteres Sicherheitsfeature sind <strong>allow_url_fopen</strong> und <strong>allow_url_include</strong>. Damit unterbindest du das Einbinden von schadhaften Code.<br>
Die Einstellungen zum Log werde ich nicht weiter erläuter, da sie wie so oft selbsterklärend sind. Beachte, dass das Logging immer auch gewisse Auswirkungen auf die Performance haben. Andererseits kann die regelmäßige Log-Analyse aber auch rechzeitig wichtige Hinweise auf (Sicherheits-)Probleme deines Systems liefern!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">php_admin_value</span><span class="p">[</span><span class="n">disable_functions</span><span class="p">]</span> <span class="o">=</span> <span class="n">php_uname</span><span class="p">,</span> <span class="n">getmyuid</span><span class="p">,</span> <span class="n">getmypid</span><span class="p">,</span> <span class="n">passthru</span><span class="p">,</span> <span class="n">leak</span><span class="p">,</span> <span class="n">listen</span><span class="p">,</span> <span class="n">diskfreespace</span><span class="p">,</span> <span class="n">tmpfile</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">ignore_user_abord</span><span class="p">,</span> <span class="n">shell_exec</span><span class="p">,</span> <span class="n">dl</span><span class="p">,</span> <span class="n">set_time_limit</span><span class="p">,</span> <span class="n">exec</span><span class="p">,</span> <span class="n">system</span><span class="p">,</span> <span class="n">high</span><span class="o">$</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">php_admin_flag</span><span class="p">[</span><span class="n">allow_url_fopen</span><span class="p">]</span> <span class="o">=</span> <span class="n">on</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="n">php_admin_flag</span><span class="p">[</span><span class="n">allow_url_include</span><span class="p">]</span> <span class="o">=</span> <span class="n">off</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="c1"># das Speicherlimit pro Script-Aufrufeinstellen</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="n">php_admin_value</span><span class="p">[</span><span class="n">memory_limit</span><span class="p">]</span> <span class="o">=</span> <span class="mi">256</span><span class="n">M</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="c1"># Logging-Einstellung</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="n">php_flag</span><span class="p">[</span><span class="n">display_errors</span><span class="p">]</span> <span class="o">=</span> <span class="n">off</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="n">php_admin_value</span><span class="p">[</span><span class="n">error_log</span><span class="p">]</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="nb">log</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">/$</span><span class="n">pool</span><span class="o">.</span><span class="n">log</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="n">php_admin_flag</span><span class="p">[</span><span class="n">log_errors</span><span class="p">]</span> <span class="o">=</span> <span class="n">on</span>
</span></span></code></pre></div><p>Die Einstellung von PHP ist damit abgeschlossen. Zum Abschluss gönne <strong>PHP</strong> und <strong>nginx</strong> noch einen Neustart. Danach sollte dein System rund laufen.</p>
<h2 id="zusammenfassung">Zusammenfassung</h2>
<p>Wenn du es bis hierhin geschafft hast, unterstützt dein Setup nun einen relativ performanten Server für mehrere Domains (aka virtuelle Server, virtual Hosts), der PHP-FPM nutzt und eine ziemlich solide Sicherheits-Grundeinstellung mitbringt.</p>
<p>Jeder einzelne virtuelle Server hat seine eigene Umgebung im Dateisystem, aus der er kaum ausbrechen kann. Die PHP-Prozesse sind voneinander getrennt, genauso wie die Speicherbereiche für den Cache. Außerdem ist das ganze darauf ausgerichtet, möglichst gut mit Wordpress zu laufen. Um das ganze System für Wordpress perfekt abzurunden, gibt es noch eine Handvoll Möglichkeiten, die ich gesondert vorstellen werden.</p>
<p><img src="/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/images/zusammenfassung-700x394.png" alt=""></p>
<p>Grobe schematische Übersicht des Setups für mehrere virtuelle Server mit nginx und PHP-FPM</p>
<h2 id="nachtrag">Nachtrag</h2>
<p>Wenn du noch ein paar zusätzliche Informatioen benötigst, sei dir der der ähnlich ausgerichtete Artikel auf <a href="https://binary-butterfly.de/artikel/das-perfekte-php-wordpress-setup/">binary-butterfly.de</a> empfohlen. Die Einstellungen für nginx und PHP unterscheiden sich kaum, dafür erfährst du dort auch, wie du zusätzlich mehrere SSH-Nutzer mit ins Boot holen kannst.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 3 / 3) - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 2 / 3)</title>
      <link>http://localhost:1313/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/</guid>
      <description>Im zweiten Teil geht es um die individuelle Einrichtung der virtuellen Server für nginx.
Server oder virtual hosts? Im Gegensatz zu den &ldquo;virtual …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Im zweiten Teil geht es um die individuelle Einrichtung der virtuellen Server für nginx. Im Gegensatz zu den &#39;virtual hosts&#39; von Apache spricht man bei nginx von &#34;servern&#34;.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Database, Server, Mobile</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Im zweiten Teil geht es um die individuelle Einrichtung der virtuellen Server für nginx.</p>
<h2 id="server-oder-virtual-hosts">Server oder virtual hosts?</h2>
<p>Im Gegensatz zu den &ldquo;<strong>virtual hosts</strong>&rdquo; von Apache spricht man bei nginx von &ldquo;<strong>servern</strong>&rdquo;. Ich möchte das Aufgreifen und nutze im Folgenden einfach nur von &ldquo;<strong>Server</strong>&rdquo; wenn ich von einem individuellen Host oder virtuellem Server spreche. Wie bei Apache werden diese idealerweise in eigenständigen Konfig-Dateien definiert. Hier gibt es verschiedene Vorlieben, ob die Konfig-Dateien unter <strong>/etc/nginx/sites-available</strong> oder <strong>/etc/nginx/conf.d</strong> abgelegt werden.</p>
<p>Aus technischer Sicht macht es wirklich überhaupt <strong>gar keinen Unterschied</strong>. Bei der ersten Variante wird im Ordner <strong>/etc/nginx/sites-enabled</strong> mit einem symbolischen Link auf die tatsächliche Konfig-Datei an einem anderen Ort verwiesen. Um sie zu de-aktivieren, wird dann einfach der symbolische Link gelöscht. Das ist auch der klassische Apache-Weg.</p>
<p>Bei der zweiten Variante muss man die Konfig-Dateien im Order <strong>/etc/nginx/conf.d</strong> mit der Endung <strong>conf</strong> anlegen. Um den Server zu deaktivieren, <strong>entfernt man die Endung .conf</strong>. Entscheide selber, was dir lieber ist.</p>
<p>Eine beispielhafte Konfiguration für einen Server ist folgendermaßen aufgebaut. Die interessante Parameter beschreibe ich weiter unten etwas ausführlicher. Ich versuche möglichst viel mit <strong>Platzhaltern</strong> zu arbeiten (<em>set $server &ldquo;example_com;</em>) um die Nutzung für neue Server zu vereinfachen. Leider funktioniert das bei nginx nicht für jeder <strong>Direktive</strong>. (So werden in nginx die Parameter genannt. Warum? Weil eine Direktive selber auch Parameter besitzen kann, wie du gleich sehen wirst.)</p>
<p>Außerdem habe aus Gründen der Übersicht sich wiederholdene Einstellungen in Dateien (sogenannte <strong>Snippets</strong>) ausgelagert. Diese befinden sich im Ordner <strong>/etc/nginx/snippets/</strong>. Diese Snippets werden an der entsprechenden Stelle mit <strong>include</strong> eingebunden.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">fastcgi_cache_path</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">example_com</span><span class="o">/</span><span class="n">cache</span> <span class="n">use_temp_path</span><span class="o">=</span><span class="n">off</span> <span class="n">levels</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">:</span><span class="mi">2</span> <span class="n">keys_zone</span><span class="o">=</span><span class="n">cache_example_com</span><span class="p">:</span><span class="mi">100</span><span class="n">m</span> <span class="n">inactive</span><span class="o">=</span><span class="mi">60</span><span class="n">m</span> <span class="n">max_size</span><span class="o">=</span><span class="mi">2048</span><span class="n">m</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="n">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="c1"># der erste Server-Block ist für HTTP </span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="c1"># mit listen lege ich die Ports fest, die zweite Zeile wird für IPv6 benötigt</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="n">listen</span> <span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="n">listen</span> <span class="p">[::]:</span><span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="c1"># über welche Domain-Namen wird der Server angesprochen?</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="n">server_name</span> <span class="n">example</span><span class="o">.</span><span class="n">com</span> <span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">    <span class="c1"># da ich HTTPS erzwinge, wird direkt dahin weitergeleitet</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="k">return</span> <span class="mi">301</span> <span class="n">https</span><span class="p">:</span><span class="o">//$</span><span class="n">server_name</span><span class="o">$</span><span class="n">request_uri</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="n">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="c1"># der zweite Server-Block ist für HTTPS gedacht, hier gehts ans Eingemachte</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">    <span class="c1"># siehe oben</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="n">server_name</span> <span class="n">nickyreinert</span><span class="o">.</span><span class="n">de</span> <span class="n">www</span><span class="o">.</span><span class="n">nickyreinert</span><span class="o">.</span><span class="n">de</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl">    <span class="c1"># Platzhalter setzen</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">    <span class="n">set</span> <span class="o">$</span><span class="n">server</span> <span class="s2">&#34;nickyreinert_de&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">    <span class="c1"># in welchem Ordner befinden sich die (öffentlichen) Dateien des Servers</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">    <span class="n">root</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nickyreinert_de</span><span class="o">/</span><span class="n">htdocs</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl">
</span></span><span class="line"><span class="ln">28</span><span class="cl">    <span class="c1"># diese Einstellungen musst du nicht selber vornehmen, der Certbot kümmert sich darum, siehe unten</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">    <span class="n">ssl_certificate</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">letsencrypt</span><span class="o">/</span><span class="n">live</span><span class="o">/</span><span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">fullchain</span><span class="o">.</span><span class="n">pem</span><span class="p">;</span> <span class="c1"># managed by Certbot</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">    <span class="n">ssl_certificate_key</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">letsencrypt</span><span class="o">/</span><span class="n">live</span><span class="o">/</span><span class="n">www</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">privkey</span><span class="o">.</span><span class="n">pem</span><span class="p">;</span> <span class="c1"># managed by Certbot</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">	
</span></span><span class="line"><span class="ln">32</span><span class="cl">    <span class="c1"># natürlich nutzen wir auch individuelle Log-Dateien:</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">    <span class="n">access_log</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nickyreinert_de</span><span class="o">/</span><span class="n">logs</span><span class="o">/</span><span class="n">access</span><span class="o">.</span><span class="n">log</span> <span class="n">main</span> <span class="k">if</span><span class="o">=$</span><span class="n">log_this</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">34</span><span class="cl">    <span class="n">error_log</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nickyreinert_de</span><span class="o">/</span><span class="n">logs</span><span class="o">/</span><span class="n">error</span><span class="o">.</span><span class="n">log</span> <span class="n">error</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">	
</span></span><span class="line"><span class="ln">36</span><span class="cl">    <span class="c1"># an der Stelle binde ich die restlichen Einstellungen ein</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">default_https</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">38</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">gzip</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">39</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">wordpress</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">40</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">logging</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">41</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">caching</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">42</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">fastcgi</span><span class="o">-</span><span class="n">php</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">43</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">sitemap</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">44</span><span class="cl">    <span class="n">include</span> <span class="n">snippets</span><span class="o">/</span><span class="n">safety</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">45</span><span class="cl">
</span></span><span class="line"><span class="ln">46</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="der-cache">Der Cache</h3>
<h3 id="was-soll-gecached-werden">Was soll gecached werden?</h3>
<p>Im 1. Teil habe ich das Thema ja schon kurz angerissen und zwei Direktiven beschrieben. Auf Server-Ebene will ich den Cache nun noch etwa feiner einstellen. Zunächst geht es an ein paare globale Einstellungen, die ich im Snippet <strong>/etc/nginx/snippets/caching.conf</strong> abgelegt habe.</p>
<p>Nicht jede Anfrage darf gecached werden, wie z.B. POST-Requests, die ja tendentiel eher unterschiedliche Daten bei jeder Anfrage enthalten. Für diese Unterscheidung nutze ich die Variable <strong>$no_cache.</strong> So kann ich mit einfachen if-Abfragen festlegen, welche Requests vom Cache ignoriert werden sollen, wie z.B:</p>
<ul>
<li>POST-Requests</li>
<li>Requests, die einen Query-String enthalten (GET)</li>
<li>Requests, deren URL auf ein bestimmtes Muster passen</li>
<li>Requests von eingeloggten Bentzern (Wordpress-Spezifisch!)</li>
<li>Requests, bei denen das Cookie PHPSESSID gesetzt ist</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">set $no_cache 0;
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">if ($request_method = POST)
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">{
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">	set $no_cache 1;
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">}
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">if ($query_string != &#34;&#34;)
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">{
</span></span><span class="line"><span class="ln">10</span><span class="cl">	set $no_cache 1;
</span></span><span class="line"><span class="ln">11</span><span class="cl">}
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">if ($request_uri ~* &#34;/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml&#34;) {
</span></span><span class="line"><span class="ln">14</span><span class="cl">	set $no_cache 1;
</span></span><span class="line"><span class="ln">15</span><span class="cl">}   
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">if ($http_cookie ~* &#34;comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in&#34;) {
</span></span><span class="line"><span class="ln">18</span><span class="cl">	set $no_cache 1;
</span></span><span class="line"><span class="ln">19</span><span class="cl">}
</span></span><span class="line"><span class="ln">20</span><span class="cl">
</span></span><span class="line"><span class="ln">21</span><span class="cl">if ($http_cookie = &#34;PHPSESSID&#34;)
</span></span><span class="line"><span class="ln">22</span><span class="cl">{
</span></span><span class="line"><span class="ln">23</span><span class="cl">	set $no_cache 1;
</span></span><span class="line"><span class="ln">24</span><span class="cl">}  
</span></span></code></pre></div><h3 id="wie-soll-gecached-werden">Wie soll gecached werden?</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">fastcgi_cache_path</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">example_com</span><span class="o">/</span><span class="n">cache</span> <span class="n">use_temp_path</span><span class="o">=</span><span class="n">off</span> <span class="n">levels</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">:</span><span class="mi">2</span> <span class="n">keys_zone</span><span class="o">=</span><span class="n">cache_example_com</span><span class="p">:</span><span class="mi">100</span><span class="n">m</span> <span class="n">inactive</span><span class="o">=</span><span class="mi">60</span><span class="n">m</span> <span class="n">max_size</span><span class="o">=</span><span class="mi">2048</span><span class="n">m</span><span class="p">;</span>
</span></span></code></pre></div><p>Um den Zweck der Parameter hinter <a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key">fastcgi_cache_path</a> zu verstehen, werde ich grob erklären, wie der nginx-Cache funktioniert:</p>
<p>Über <strong>FastCGI</strong> wird zunächst die PHP-Datei an den PHP-Interpreter übergeben. Das Ergebnis, z.B. ein HTML-Dokument geht dann an den Empfänger. Ist diese Ressource als &ldquo;<strong>cachable</strong>&rdquo; markiert, legt nginx das zu Ergbnis außerdem in <strong>temporär</strong> in einen Ordner ab und kopiert es von dort in den <strong>eigentlich Cache-Ordner</strong>. Damit diese Resource später wiedergefunden wird, wird ein <strong>Schlüssel</strong> erstellt. Ein Liste (&ldquo;Cache-Verzeichnis&rdquo;) dieser Schlüssel und ein paar Meta-Daten (z.B. der letzte Abruf) werden im <strong>Arbeitsspeicher</strong> abgelegt.</p>
<p><img src="/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/images/grafik-700x222.png" alt=""></p>
<p>Zugegeben: Eine wirklich stark vereinfachte Darstellung des Cachings mit nginx</p>
<p>Mit <strong>fastcgi_cache_path</strong> legst du also den eigentlichen Cache-Ordner fest. Danach deaktivierst du mit <strong>use_temp_path=off</strong> die Zwischenspeicherung in einem temporären Ordner, um den Cache-Prozess zu beschleunigen. Mit <strong>levels</strong> kannst du die Tiefe des Cache-Ordners festlegen. Jede Position steht zwischen den Doppelpunkten für ein Level, drei Level sind möglich. Die Ziffer legt fest, wieviel Zeichen die Dateinamen enthalten. Folgende Angabe reduziert die Tiefe z.B. auf 2 Level deren Ordnernamen 1 Zeichen enthalten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">levels=1:1
</span></span></code></pre></div><p>Der Parameter <strong>keys_zone</strong> gibt dem Bereich im Arbeitsspeicher einen eindeutigen Namen, der das &ldquo;Cache-Verzeichnis&rdquo; enthält. Das ist notwendig, da du auch andere Cache-Bereich anlegen kannst (z.b. den <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache">proxy_cache</a>). Die Ziffer hinter dem Doppelpunkt gibt die Größe der Liste an. 1 MByte entspricht etwa 8.000 cache keys - mit 100 MB solltest du also eine Weile auskommen.</p>
<p>Mit <strong>inactive=60m</strong> legst du fest, wie lange ein Objekt im Cache gültig ist, in diesem Fall 60 Minuten. Wenn du mit Inhalten arbeitest, die sich sehr oft ändern, solltest du diesen Wert natürlich verkleinern. Schließlich kannst du mit <strong>max_size</strong> die tatsächlicheGröße des Caches im Dateisystem begrenzen.</p>
<p>Die Direktive <strong>fastcgi_cache_path</strong> wird <strong>nicht auf Server-Ebene</strong> angegeben, sondern global unter <strong>http</strong>. Du kannst damit beliebig viele Caches anlegen, musst aber unbedingt auf die <strong>Unterscheidbarkeit</strong> achten, damit nginx die Caches deiner unterschiedlichen Server nicht zusammenhaut. Wie macht sich das bemerkbar? Wenn du eine deiner Seiten lädst (<strong><a href="https://www.example.com">www.example.com</a></strong>) und plötzlich auf einer völlig anderen deiner Seiten (Domain) landest (<strong><a href="https://www.test.com">www.test.com</a></strong>), solltest du dir die Direktiven fastcgi_cache_path oder fastcgi_cache_key noch mal genauer anschauen.</p>
<h2 id="die-php-einstellungen">Die PHP-Einstellungen</h2>
<p>Jetzt wird es spannend um nicht zu sagen: etwas kompliziert. Die Einstellungen für den PHP-Interpreter in <strong>fastcgi-php.conf</strong>. Diese bezieht sich alleine auf Dateien, deren Dateiendung ich in <strong>location</strong> festlege. Zunächst nutzen wir ein paar Standard-Einstellungen aus der bei nginx mitgelieferten fastcgi.conf-Datei. Hier werden einige Werte festgelegt, wie z.B. Document Root, Protokolle usw. Das muss zwingend zu Beginn passieren, da wir einige Parameter weiter unten überschreiben. Außerdem wird noch die Standard-Script-Datei festgelegt, sollte keine Datei in der URL mitgegeben werden.</p>
<p>Mit <a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache">fastcgi_cache</a> verweise ich nun auf <strong>Cache-Zone</strong>, die ich oben bereits definiert habe. Hier kannst du mit Parameter arbeiten ($server). Mit <a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_valid">fastcgi_cache_valid</a> kann ich für jeden HTTP-Antwortcode festlegen, wie lange der Cache gültig ist. Ich verweise hier nur auf erfolgreiche Anfragen (HTTP 200). Weiter oben habe ich bereits festgelegt, welche Anfragen überhaupt gecached werden, hier kann ich diese Anfragen mit <a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_bypass">fastcgi_cache_bypass</a> nun explizit ausklammern.</p>
<p>Danach folgt eine wordpress-exklusive Einstellung: Die PHP-Datei wird nur an den PHP-Interpreter weitergereicht, wenn sie sich <strong>nicht</strong> im Ordner &ldquo;uploads&rdquo; befinden. Das ist ein Sicherheitsfeature: Sollte irgendwie eine PHP-Datei mit schadhaften Code in den (üblicherweise) schreibbaren Ordner &ldquo;Uploads&rdquo; gelangen, wird nginx diesen <strong>niemals</strong> an PHP weitergeben.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">location</span> <span class="o">~</span> \<span class="o">.</span><span class="p">(</span><span class="n">php</span><span class="o">|</span><span class="n">php</span><span class="o">.*</span><span class="p">)</span><span class="o">$</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">        <span class="n">include</span> <span class="n">fastcgi</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">	<span class="n">fastcgi_index</span> <span class="n">index</span><span class="o">.</span><span class="n">php</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">        <span class="n">fastcgi_cache</span> <span class="n">cache_</span><span class="o">$</span><span class="n">server</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">	<span class="n">fastcgi_cache_valid</span> <span class="mi">200</span> <span class="mi">60</span><span class="n">m</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">	<span class="n">fastcgi_cache_bypass</span> <span class="o">$</span><span class="n">no_cache</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">	<span class="n">fastcgi_no_cache</span> <span class="o">$</span><span class="n">no_cache</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="o">$</span><span class="n">uri</span> <span class="o">!~</span> <span class="s2">&#34;^/uploads/&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">		<span class="n">fastcgi_pass</span> <span class="n">unix</span><span class="p">:</span><span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">php</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">-$</span><span class="n">server</span><span class="o">.</span><span class="n">sock</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">	<span class="c1"># die URL in $fastcgi_script_name und $fastcgi_path aufbrechen:</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">	<span class="n">fastcgi_split_path_info</span> <span class="o">^</span><span class="p">(</span><span class="o">.+</span>\<span class="o">.</span><span class="n">php</span><span class="p">)(</span><span class="o">/.+</span><span class="p">)</span><span class="o">$</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">	<span class="c1"># try_files setzt $fastcgi_path_info zurück, deshalb neu festlegen</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">        <span class="n">set</span> <span class="o">$</span><span class="n">path_info</span> <span class="o">$</span><span class="n">fastcgi_path_info</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">	<span class="c1"># PHP-Dateien nur verarbeiten, wenn sie überhaupt existieren:</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">	<span class="n">try_files</span> <span class="o">$</span><span class="n">fastcgi_script_name</span> <span class="o">=</span><span class="mi">404</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">
</span></span><span class="line"><span class="ln">26</span><span class="cl">	<span class="n">fastcgi_param</span> <span class="n">PATH_INFO</span> <span class="o">$</span><span class="n">path_info</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl">	<span class="n">fastcgi_param</span> <span class="n">SCRIPT_FILENAME</span> <span class="o">/</span><span class="n">htdocs</span><span class="o">/$</span><span class="n">fastcgi_script_name</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">	<span class="n">fastcgi_param</span> <span class="n">SCRIPT_NAME</span> <span class="o">$</span><span class="n">fastcgi_script_name</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">
</span></span><span class="line"><span class="ln">30</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Weiter geht es mit einer wichtigen Einstellung für Sicherheit und Geschwindigkeit. Wir haben oben zwar schon grob festgelegt, welche Dateien nicht als Script zu PHP geschickt werden. Das ist aber noch ziemlich wacklig (warum, <a href="https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx">das ist hier ganz gut beschrieben</a>): Was wir bisher nicht vermeiden, ist der Aufruf von z.B. /test.jpg/index.php - die Datei index.php würde vom Interpreter nicht gefunden werden. Er würde demnach versuchen, test.jpg auszuführen und den Anhang als Parameter verstehen. Das wollen wir vermeiden.</p>
<p>Es gibt viele Möglichkeiten, das zu verhindern. Einige davon werden wir hier nutzen.</p>
<p>Mit <strong>fastcgi_split_path_info</strong> zerlegst du die URL in den Pfad und den Dateinamen um zielsicher zu erkennen, welcher Teil der URL auf eine Datei zeigt und was als Ordner verstanden wird. Die RegExe beinhaltet deswegen zwei Capture-Gruppen. Der Inhalt der ersten Gruppe (.+.php) wird in der Variable <strong>$fastcgi_script_name</strong> abgelegt, der der zweiten Gruppe (/.+) landet in <strong>$fastcgi_path_info</strong>.</p>
<p>Mit <strong>try_files</strong> bestimmst du nun, dass nur PHP-Dateien verarbeitet werden, die überhaupt exisiterien. Das Problem dabei ist, dass dadurch der Parameter <strong>$fastcgi_path_info</strong> zurückgesetzt wird (<a href="http://trac.nginx.org/nginx/ticket/321">siehe auch hier</a>). Deshalb wird dessen Inhalt einen Schritt davor in die Variable <strong>$path_info</strong> geschrieben. Danach legen die Parameter für FastCGI fest und greifen nun auf die eben per RegExe extrahierten Infos für das Script und den Pfad zurück:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">fastcgi_param PATH_INFO $path_info;
</span></span><span class="line"><span class="ln">2</span><span class="cl">fastcgi_param SCRIPT_FILENAME /htdocs/$fastcgi_script_name;
</span></span><span class="line"><span class="ln">3</span><span class="cl">fastcgi_param SCRIPT_NAME $fastcgi_script_name;
</span></span></code></pre></div><p>Damit das ganze wirklich reibungslos funktioniert, musst du in der php.ini den Parameter <strong><a href="https://www.php.net/manual/de/ini.core.php#ini.cgi.fix-pathinfo">cgi.fix_pathinfo</a></strong> auf 1 setzen - das ist zwar die Standardeinstellungen, schau aber trotzdem noch mal nach:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">cgi.fix_pathinfo=1
</span></span></code></pre></div><h2 id="die-https-einstellungen">Die HTTPS-Einstellungen</h2>
<p>Die nächsten Parameter sind wieder etwas unkompliziert und auch selbsterklärend. Wir kommen zu den HTTP- und HTTPS-Einstellungen, die ich in einer Datei zusammengefasst habe (<strong>default_https.conf</strong>). Hier werden nur die Port-Einstellungen festgelegt, SSL korrekt eingerichtet und auf eine Standard-Datei verwiesen, wenn die Anfrage nicht auf eine Datei verweist:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl"># welche Datei wird standardmäßig aufgerufen?
</span></span><span class="line"><span class="ln">2</span><span class="cl">index index.php;
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl"># Nutze 443 als Port für HTTPS und aktiviere HTTP2
</span></span><span class="line"><span class="ln">5</span><span class="cl">listen 443 ssl http2;
</span></span><span class="line"><span class="ln">6</span><span class="cl">listen [::]:443 ssl http2;
</span></span><span class="line"><span class="ln">7</span><span class="cl"># Verweis von Let&#39;s Encrypt:
</span></span><span class="line"><span class="ln">8</span><span class="cl">include /etc/letsencrypt/options-ssl-nginx.conf;
</span></span><span class="line"><span class="ln">9</span><span class="cl">ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
</span></span></code></pre></div><h3 id="die-gzip-einstellungen">Die GZIP-Einstellungen</h3>
<p>Auch die Datei gzip.conf bedarf keiner großen Erklärung. Einen Großteil habe ich bereits global konfiguriert, hier werden auf Server-Ebene noch einige Einstellungen vorgenommen. Dabei setze ich das Kompressions-Level auf 3 und lege fest, welche Ressourcen komprimiert werden. Welches Level du wählst, hängt von deiner Hardware ab. Die Kompression kann die Auslieferung deiner Seite auf jeden Fall beschleunigen, einen etwas ausführlicheren Beitrag dazu findest du bei <a href="https://royal.pingdom.com/can-gzip-compression-really-improve-web-performance/">pingdom.com</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">gzip             on;
</span></span><span class="line"><span class="ln">2</span><span class="cl">gzip_comp_level  3;
</span></span><span class="line"><span class="ln">3</span><span class="cl">gzip_types       text/plain text/html text/css application/javascript image/*;
</span></span></code></pre></div><h3 id="die-wordpress-einstellungen">Die Wordpress-Einstellungen</h3>
<p>Weiter geht es mit der Datei <strong>wordpress.conf</strong> und noch ein paar Sicherheitsfeatures:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># Maximale Dateigröße für Uploads</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">client_max_body_size</span> <span class="mi">64</span><span class="n">M</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="n">location</span> <span class="o">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">	<span class="c1"># Permalinks wieder funktionsfähig machen</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl">	<span class="n">try_files</span> <span class="o">$</span><span class="n">uri</span> <span class="o">$</span><span class="n">uri</span><span class="o">/</span> <span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">php</span><span class="err">?</span><span class="o">$</span><span class="n">args</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">7</span><span class="cl">        <span class="n">limit_req</span> <span class="n">zone</span><span class="o">=</span><span class="n">one</span> <span class="n">burst</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">8</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Wie du siehst beziehe ich mir hier erneut auf die Rate Limit Einstellung aus dem ersten Teil in der Datei <strong>nginx.conf</strong>. Mit Verweis auf meine Zone (<strong>one</strong>) beschränke ich die Warteschlange auf 10: <strong>burst=10;</strong> Wenn als mehr Anfragen als erlaubt ankommen (ich hatte 5 pro Sekunde zugelassen), werden bis zu 10 der darauf folgenden Anfragen in eine Warteschlange gepackt. Die anderen Parameter habe ich inline erklärt.</p>
<h3 id="die-logging-einstellungen">Die Logging-Einstellungen</h3>
<p>Auf zur Datei <strong>logging.conf</strong>. Diese Einstellungen betreffen nicht nur das Log-Verhalten ansich, sondern haben auch Auswirkungen auf <strong>Geschwindigkeit</strong> und <strong>Sicherheit</strong>. Ich lege nämlich fest, welche Anfragen nicht ins Log-File geschrieben werden bzw. gänzlich ignoriert werden. Eine aus führliche Dokumentation findest du auf <a href="https://www.if-not-true-then-false.com/2011/nginx-and-php-fpm-configuration-and-optimizing-tips-and-tricks">diesem Blog</a>. Die Einträge sind inline beschrieben und erklären sich, so blöd das klingt, eigentlich selber. Nicht jeder Aufruf muss auch im Log dokumentiert werden. Uns interessieren ja eigentlich nur Fehler oder ungewöhnliche Anfragen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl"># nicht loggen: Bilder, XML, CSS, usw.
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"># außerdem das Cache-Datum auf 360 Tage setzen
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">	access_log        off;
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">	log_not_found     off;
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">	expires           360d;
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">}    
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"># noch mehr nicht loggen: Doc, XLS, EXE, uvm.
</span></span><span class="line"><span class="ln">10</span><span class="cl"># außerdem: den Cache komplett deaktivieren!
</span></span><span class="line"><span class="ln">11</span><span class="cl">location ~* .(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
</span></span><span class="line"><span class="ln">12</span><span class="cl">	expires max;
</span></span><span class="line"><span class="ln">13</span><span class="cl">	log_not_found off;
</span></span><span class="line"><span class="ln">14</span><span class="cl">	access_log off;
</span></span><span class="line"><span class="ln">15</span><span class="cl">}
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl"># nicht loggen: versteckte Dateien die mit . anfange
</span></span><span class="line"><span class="ln">18</span><span class="cl"># außerdem: Den Zugriff verweigern!
</span></span><span class="line"><span class="ln">19</span><span class="cl">location ~ /\. {
</span></span><span class="line"><span class="ln">20</span><span class="cl">	access_log off;
</span></span><span class="line"><span class="ln">21</span><span class="cl">	log_not_found off; 
</span></span><span class="line"><span class="ln">22</span><span class="cl">	deny all;
</span></span><span class="line"><span class="ln">23</span><span class="cl">}
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl"># nicht loggen: robots.txt
</span></span><span class="line"><span class="ln">26</span><span class="cl">location = /robots.txt {
</span></span><span class="line"><span class="ln">27</span><span class="cl">	access_log off;
</span></span><span class="line"><span class="ln">28</span><span class="cl">	log_not_found off;
</span></span><span class="line"><span class="ln">29</span><span class="cl">}
</span></span></code></pre></div><h2 id="eine-sitemap-korrekt-einbinden">Eine Sitemap korrekt einbinden</h2>
<p>Die Einstellungen im Snippet sitemap.conf kommen ein wenig den berühmten &ldquo;Kanonen auf Spatzen&rdquo; gleich. Im Grunde bilde ich eine ganze Reihe von Spezialfällen ab, die beim Betrieb von Wordpress und Sitemaps auftreten. Du kannst hier sicher einige Zeilen auslassen oder die Datei ganz ignorieren, wenn du ein komplett anderes Setup nutzt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&amp;sitemap_n=$2 last;
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">location ~ ([^/]*)sitemap(.*).x(m|s)l$ {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">        rewrite ^/sitemap.xml$ /sitemap_index.xml permanent;
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">        rewrite ^/([a-z]+)?-?sitemap.xsl$ /index.php?xsl=$1 last;
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">        rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">        rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&amp;sitemap_n=$2 last;
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">}
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ &#34;/index.php?xml_sitemap=params=$2&#34; last;
</span></span><span class="line"><span class="ln">10</span><span class="cl">rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ &#34;/index.php?xml_sitemap=params=$2;zip=true&#34; last;
</span></span><span class="line"><span class="ln">11</span><span class="cl">rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ &#34;/index.php?xml_sitemap=params=$2;html=true&#34; last;
</span></span><span class="line"><span class="ln">12</span><span class="cl">rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ &#34;/index.php?xml_sitemap=params=$2;html=true;zip=true&#34; last;
</span></span></code></pre></div><h2 id="sicherheits-features">Sicherheits-Features</h2>
<p>Zum Abschluss will ich noch ein paar Sicherheitsfeatures implementieren. In der Datei <strong>safety.conf</strong> passiert nicht viel, außer dass ich den Zugriff auf bestimmte kritische Dateien verbiete. Einiges davon bezieht sich explizit auf eine Wordpress-Installation. Was du aus diesen Einstellungen mitnehmen solltest, ist die Info, wie du mit <strong>location</strong>, einer <strong>RegExe</strong> und <strong>deny all</strong> den Zugriff auf bestimmte Ressourcen verbietest.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1"># Den Upload-Ordner zusätzlich sichern und nur den Zugriff auf HTML- und Medien-Dateien zulassen:</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">location</span> <span class="o">~*</span> <span class="o">^/</span><span class="n">wp</span><span class="o">-</span><span class="n">content</span><span class="o">/</span><span class="n">uploads</span><span class="o">/.*.</span><span class="p">(</span><span class="n">html</span><span class="o">|</span><span class="n">htm</span><span class="o">|</span><span class="n">shtml</span><span class="o">|</span><span class="n">php</span><span class="o">|</span><span class="n">js</span><span class="o">|</span><span class="n">swf</span><span class="p">)</span><span class="o">$</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">        <span class="n">deny</span> <span class="n">all</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="c1"># In Wordpress die XML-RPC Schnittstelle deaktivieren, die ein beliebtes Angriffsziel darstellt:</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="n">location</span> <span class="o">^~</span> <span class="o">/</span><span class="n">xmlrpc</span><span class="o">.</span><span class="n">php</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">        <span class="n">deny</span> <span class="n">all</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="c1"># Apache nutzt unter anderem .htaccess - das ist für uns vielleicht nicht relevant, sollte sich aber trotzdem mal eine derartige Datei in unser Dateisystem verirren, schützen wir sie vor ungewollten Blicken und zwar für alle Dateien die mit einem Punkt anfangen:</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="n">location</span> <span class="o">~</span> <span class="o">/</span>\<span class="o">.</span> <span class="p">{</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">        <span class="n">deny</span> <span class="n">all</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="c1"># Theoretisch ist es nicht möglich, dass der Nutzer im Browser den Inhalt von PHP-Dateien sieht - trotzdem schaffen wir zusätzliche Sicherheit, indem wir die wp-config.php gar nicht erst ausliefern</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="n">location</span> <span class="o">~*</span> <span class="n">wp</span><span class="o">-</span><span class="n">config</span><span class="o">.</span><span class="n">php</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">        <span class="n">deny</span> <span class="n">all</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="c1"># Brutforce erschweren, siehe unten</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl"><span class="n">location</span> <span class="o">~</span> <span class="o">/</span><span class="n">wp</span><span class="o">-</span><span class="n">login</span><span class="o">.</span><span class="n">php</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">        <span class="n">limit_req</span> <span class="n">zone</span><span class="o">=</span><span class="n">one</span> <span class="n">burst</span><span class="o">=</span><span class="mi">1</span> <span class="n">nodelay</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">        <span class="n">fastcgi_pass</span> <span class="n">unix</span><span class="p">:</span><span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">php</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">-$</span><span class="n">server</span><span class="o">.</span><span class="n">sock</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Natürlich wollen wir nicht nur den Zugriff auf kritische Ressourcen verhindern, sondern ggf. auch andere Angriffsvektoren erschweren, wie z.B. BruteForce-Attacken. In einer Wordpress-Installation ist ein beliebter Angriffspunkt z.B. die Datei <strong>wp-login.php</strong>. Weiter oben haben wir schon mal festgelegt, wie oft eine Ressouce abgefragt werden kann. Für <strong>wp-login.php</strong> wollen wir diese Grenze noch etwa enger ziehen. Unser Setup erlaubt 5 Anfragen / Sekunde. Mit Burst verkürze ich zuerst die Warteschlange auf 1. Mit <strong>nodelay</strong> sorge ich nun dafür, dass Anfragen sofort beantwortet werden, aber der Slot in de Warteschlange nicht gleich wieder frei wird. Ergo werden direkt darauf folgende Zugriffe im erlaubten Zeitfenster mit dem <strong>HTTP-Fehler 503</strong> (Service temporarly not available) abgelehnt.</p>
<p>Weiter gehts abschließend mit der Einrichtung von <a href="https://www.nickyreinert.de/mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/">PHP in Teil 3.</a></p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 2 / 3) - Analysis</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 14 Minuten</dc:subject>
      
      
      
      <dc:type>analysis</dc:type>
      
      
    </item><item>
      <title>Wie kannst du SSH sicherer machen? Security through obscurity?</title>
      <link>http://localhost:1313/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/</link>
      <pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/</guid>
      <description>Diese Abbildung, meine geneigten Freunde, zeigt die Zugriffsversuche für SSH auf meinen Server. Zugegeben: Es ist nicht viel und wird sich vermutlich kaum auf …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Diese Abbildung, meine geneigten Freunde, zeigt die Zugriffsversuche für SSH auf meinen Server.&#39; reading_time: 4 content_type: &#39;review</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Server, Ai, Security, Performance</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Diese Abbildung, meine geneigten Freunde, zeigt die Zugriffsversuche für SSH auf meinen Server. Zugegeben: Es ist nicht viel und wird sich vermutlich kaum auf die Performance des gesamten Systems auswirken. Mit diesem Grundrauschen muss aber eigentlich jeder leben, der einen SSH-Dienst über den Standard-Port 22 betreibt.</p>
<p><img src="/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/images/grafik-700x335.png" alt=""></p>
<p>SSH-Zugriff der letzten 30 Tage</p>
<p>Wenn sich diese Zugriffe nicht auf die Performance auswirken, macht es dann wenigstens aus Sicherheitsgründen Sinn, diese Zugriffe zu unterbinden? Und die einfachste Möglichkeit das zu erreichen ist es, den SSH-Standardport (22) zu ändern. Mit meiner Argumentation folge ich denen <a href="https://security.stackexchange.com/questions/189726/does-it-improve-security-to-use-obscure-port-numbers">in einem sehr interessanten SO-Thread</a> zu dem Thema: <strong>Security through obscurity</strong>.</p>
<p>Es gibt da draußen einen Haufen Bots, die sämtliche erreichbare IP-Adressen des Internets permanent nach Schwachstellen absuchen, nicht nur für SSH. In der Regel wird dazu eine Anfrage, z.B. mit einem Standardpasswort, an den Standardport von SSH gesendet. Die Chance, dass jemand sein System nicht ausreichend oder überhaupt nicht gesichert hat, sind scheinbar hoch genug, sonst würde sich dieses stumpfe Abgrasen nicht lohnen.</p>
<p>Um das zu vermeiden, bietet es sich an, den Standard-Port zu ändern. Du wirst das abgrasen nicht verhindern, aber die Chancen stehen recht gut, dass die Bots das Interesse an dir verlieren und die Anfragen irgendwann nachlassen. Das ist aber spekulativ und auch nur ein kosmetischer Faktor. Wichtiger ist: Du wirst dein System dadurch ein ganz bisschen sicherer machen. Sollte morgen z.B. eine Sicherheitslücke für SSH bekannt werden, grasen die Bots die Standard-Ports ab um diese Lücke auszutesten. Die Zeit, alle denkbaren Ports zu testen, haben die Bots nicht, da Aufwand-Nutzen hier in keinem Verhältnis stehen.</p>
<p>Zunächst änderst du den Port von 22 auf eine beliebige Ziffer unter 1024. Warum das? Ports ab 1024 können auch von &ldquo;nicht-priviligerten&rdquo; Nutzern verwendet werden. Jemand, der Zugriff auf dein System hat, kann ohne Root-Rechte einen Port öffnen. Läuft SSH nun auf Port 12345, könnte ein normaler Benutzer SSH zum Absturz bringen, seinen eigenen Dienst auf diesem Port lauschen lassen und somit SSH simulieren. Blöd. Also Port &lt; 1024. Das stellst du in der Datei <strong>/etc/ssh/sshd_config</strong> ein:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl"># What ports, IPs and protocols we listen for
</span></span><span class="line"><span class="ln">2</span><span class="cl">Port 22
</span></span><span class="line"><span class="ln">3</span><span class="cl">Port 999
</span></span></code></pre></div><p>Du kannst du beliebig viele Ports definieren, indem du einfach eine weitere Zeile einfügst. Für den Anfang empfehle ich, SSH weiterhin auf Port 22 laufen zu lassen, damit du dich nicht aussperrst. Danach startest du den SSH-Daemon neu (<strong>service sshd restart</strong>), verbindest dich auf den neuen Port und de-aktivierst Port 22 final, indem du die Zeile auskommentierst.<br>
Wenn du schon mal da bist: Der Vollständigkeit halber solltest du auch daran denken, SSH nur mit Private-Publi-Key-Authenzifizierung zu nutzen und unbedingt die Passwort-Authentifizierung deaktivieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">PubkeyAuthentication yes
</span></span><span class="line"><span class="ln">2</span><span class="cl">PasswordAuthentication no
</span></span><span class="line"><span class="ln">3</span><span class="cl">PermitRootLogin no
</span></span></code></pre></div><p>Den SSH-Zugriff für den <strong>Root-Benutzer zu deaktivieren</strong>, ist eine weitere wichtige Sicherheitseinstellung. Du solltest dich nur mit &ldquo;unpriviligierten&rdquo; Nutzern am System anmelden können. Der Zugriff auf der CLI erfolgt dann immer mit <strong>sudo.</strong> Aber das nur am Rande&hellip;</p>
<p>Wenn du <strong>iptables</strong> als Firewall nutzt, was hoffentlich der Fall ist, wirst du feststellen, dass du dich noch nicht auf Port 999 mit SSH verbinden kannst. Natürlich musst du den Port auch noch in der Firewall freigeben:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 999 -j ACCEPT
</span></span></code></pre></div><p>Beim Einsatz von fail2ban solltest du auch dort einstellen, dass SSH auf einem anderen Port arbeitet, damit fail2ban weiterhin Anmeldeversuche und BruteForce-Attacken abwehren kann. Die Einstellung dazu findest du in der Datei /etc/fail2ban/jail.conf oder /etc/fail2ban/jail.local. Dort gibt es einen Abschnitt [sshd], in dem du den Port von ssh auf deinen neuen Port, z.B. 999, festlegst:</p>
<p><img src="/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/images/grafik.png" alt=""></p>
<p>Gegebenenfalls musst du diese Einstellung auch noch für SSH-Varianten wie z.B. Dropbear anpassen.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie kannst du SSH sicherer machen? Security through obscurity? - Review</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Den korrekten MySQL ODBC-Treiber für deinen Linux-Server installieren</title>
      <link>http://localhost:1313/2019/2019-04-24-den-korrekten-mysql-odbc-treiber-fuer-deinen-linux-server-installieren/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-04-24-den-korrekten-mysql-odbc-treiber-fuer-deinen-linux-server-installieren/</guid>
      <description>Wenn du denkst, du hast alles richtig gemacht, nachdem du einer der halb vollständigen Anleitungen da draußen gefolgt bist, und dann wirst du nach der …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 4 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Database, Server, Automation, Security, Design</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Wenn du denkst, du hast alles richtig gemacht, nachdem du einer der halb vollständigen Anleitungen da draußen gefolgt bist, und dann wirst du nach der mühseligen Installation von ein paar ODBC-Treibern doch mit der folgenden Fehlermeldung begrüßt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[ISQL]ERROR: Could not SQLDriverConnect
</span></span><span class="line"><span class="ln">2</span><span class="cl">[01000][unixODBC][Driver Manager]Can&#39;t open lib &#39;/usr/local/lib/libmyodbc8w.so&#39; : file not found
</span></span><span class="line"><span class="ln">3</span><span class="cl">[ISQL]ERROR: Could not SQLDriverConnect
</span></span></code></pre></div><p>Doch tatsächlich existiert die Datei. Die Fehlermeldung ist nur etwas unpräzise und vermutlich hast du die falschen Treiber heruntergeladen. Damit dir das nicht noch mal passiert, hier eine endgültige, hoffentlich vollständige Anleitung zur Installation der MySQL-ODBC Treiber (unter Ubuntu, aber leicht übertragbar auf andere Distributionen):</p>
<h2 id="die-richtige-treiber-version-herunterladen">Die richtige Treiber-Version herunterladen</h2>
<p>Zunächst musst du herausbekommen, welche Betriebssystem-Version du nutzt. Das funktioniert mit:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ lsb_release -a
</span></span><span class="line"><span class="ln">2</span><span class="cl">Distributor ID: Ubuntu
</span></span><span class="line"><span class="ln">3</span><span class="cl">Description:    Ubuntu 16.04.5 LTS
</span></span><span class="line"><span class="ln">4</span><span class="cl">Release:        16.04
</span></span><span class="line"><span class="ln">5</span><span class="cl">Codename:       xenial
</span></span></code></pre></div><p>Außerdem benötigst du noch deinen Architektur-Typ, also 32- oder 64bit. Wenn LSB diese Info nicht liefert, kannst du folgendes probieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ uname -a
</span></span><span class="line"><span class="ln">2</span><span class="cl">Linux 192.168.10.10 4.4.0-042stab136.1 #1 SMP Wed Feb 27 09:04:24 MSK 2019 x86_64 x86_64 x86_64 GNU/Linux
</span></span></code></pre></div><p>Mit diesen Informationen ausgestattet, besorgst du dir nun die passenden Treiber-Dateien von <a href="https://dev.mysql.com/downloads/connector/odbc/">https://dev.mysql.com/downloads/connector/odbc/</a> - ich gehe mal davon aus, dass du die aktuellste MySQL-Version benutzt und deshalb auch die Treiber in der Version 8 benötigst.</p>
<p>Kopiere dir am besten den Download-Link, damit du das Archiv direkt auf dem Server mit wget herunterladen kannst, z.B. so:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="o">$</span> <span class="n">wget</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">dev</span><span class="o">.</span><span class="n">mysql</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">get</span><span class="o">/</span><span class="n">Downloads</span><span class="o">/</span><span class="n">Connector</span><span class="o">-</span><span class="n">ODBC</span><span class="o">/</span><span class="mf">8.0</span><span class="o">/</span><span class="n">mysql</span><span class="o">-</span><span class="n">connector</span><span class="o">-</span><span class="n">odbc</span><span class="o">-</span><span class="mf">8.0</span><span class="o">.</span><span class="mi">15</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">ubuntu16</span><span class="o">.</span><span class="mi">04</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mi">64</span><span class="n">bit</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span></span></code></pre></div><h2 id="die-treiber-installieren-und-registrieren">Die Treiber installieren und registrieren</h2>
<p>Wenn der Download beendet wurde, entpackst du die Datei mit den folgenden Befehlen und wechselst danach in das soeben entstandene Verzeichnis:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ gunzip mysql-connector-odbc-8.0.15-linux-ubuntu16.04-x86-64bit.tar.gz
</span></span><span class="line"><span class="ln">2</span><span class="cl">$ tar xvf mysql-connector-odbc-8.0.15-linux-ubuntu16.04-x86-64bit.tar
</span></span><span class="line"><span class="ln">3</span><span class="cl">$ cd mysql-connector-odbc-8.0.15-linux-ubuntu16.04-x86-64bit
</span></span></code></pre></div><p>Nun kopierst du das Installations-Script - was du vermutlich nicht benötigen wirst - und die Treiber-Dateien in die entsprechenden Ordner:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ cp bin/* /usr/local/bin
</span></span><span class="line"><span class="ln">2</span><span class="cl">$ cp lib/* /usr/local/lib
</span></span></code></pre></div><p>Das war es schon fast. Als nächstes musst du die Treiber noch &ldquo;anmelden&rdquo;. Mit diesem Befehl bekommst du heraus, wo sich die Einstellungs-Datei für ODBC befindet.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ odbcinst -j
</span></span><span class="line"><span class="ln">2</span><span class="cl">unixODBC 2.3.6
</span></span><span class="line"><span class="ln">3</span><span class="cl">DRIVERS............: /etc/odbcinst.ini
</span></span><span class="line"><span class="ln">4</span><span class="cl">SYSTEM DATA SOURCES: /etc/odbc.ini
</span></span><span class="line"><span class="ln">5</span><span class="cl">FILE DATA SOURCES..: /etc/ODBCDataSources
</span></span><span class="line"><span class="ln">6</span><span class="cl">USER DATA SOURCES..: /root/.odbc.ini
</span></span><span class="line"><span class="ln">7</span><span class="cl">SQLULEN Size.......: 8
</span></span><span class="line"><span class="ln">8</span><span class="cl">SQLLEN Size........: 8
</span></span><span class="line"><span class="ln">9</span><span class="cl">SQLSETPOSIROW Size.: 8
</span></span></code></pre></div><p>Es kann durchaus sein, dass die Datei für die Treiber (/etc/odbcinst.ini) noch nicht existiert, dann legst du sie einfach an und ergänzt die folgenden Zeilen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ nano /etc/odbcinst.ini
</span></span><span class="line"><span class="ln">2</span><span class="cl">[MySQL ODBC 8.0 Unicode Driver]
</span></span><span class="line"><span class="ln">3</span><span class="cl">Driver=/usr/local/lib/libmyodbc8w.so
</span></span><span class="line"><span class="ln">4</span><span class="cl">UsageCount = 1
</span></span><span class="line"><span class="ln">5</span><span class="cl">[MySQL ODBC 8.0 ANSI Treiber]
</span></span><span class="line"><span class="ln">6</span><span class="cl">Driver=/usr/local/lib/libmyodbc8a.so
</span></span><span class="line"><span class="ln">7</span><span class="cl">UsageCount = 1
</span></span></code></pre></div><p>Wie du siehst, steckt dahinter keine Raktentechnologie und in den meisten Fällen dürften diese Grundeinstellungen ausreichen. Du kannst die Datei natürlich noch ausbauen, eine ganze Menge zusätzlicher Parameter festlegen und nicht nur für MySQL nutzen (<a href="https://www.systutorials.com/docs/linux/man/5-odbcinst.ini/">siehe hier</a>).</p>
<h2 id="die-funktionalität-testen">Die Funktionalität testen</h2>
<p>Zum Abschluss kannst du folgendermaßen prüfen, ob die Einrichtung funktioniert hat. Wie du siehst, referenzierst du die oben registrierten Treiber:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ isql -v -k &#34;DRIVER={MySQL ODBC 8.0 Unicode Driver};SERVER=192.168.10.99;UID=root;PWD=password&#34;
</span></span></code></pre></div><p>Sollte der Aufruf mit der folgenden Fehlermeldung quittiert werden, prüfe zunächst, ob die Datei vorhanden ist. Wenn dem so ist, ist es möglich, dass du oben die falschen Architektur oder Version der Treiber ausgewählt hast - auch dann beschwert sich isql, dass die Datei &ldquo;nicht gefunden werden kann&rdquo;:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[01000][unixODBC][Driver Manager]Can&#39;t open lib &#39;/usr/local/lib/libmyodbc8w.so&#39; : file not found
</span></span><span class="line"><span class="ln">2</span><span class="cl">[ISQL]ERROR: Could not SQLDriverConnect
</span></span></code></pre></div><p>Ansonsten solltest du auf die Konsole von deinem MySQL-Server gelangen, die in etwa so aussieht - und dann hast du alles richtig gemacht:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">+---------------------------------------+
</span></span><span class="line"><span class="ln">2</span><span class="cl">| Connected!                            |
</span></span><span class="line"><span class="ln">3</span><span class="cl">|                                       |
</span></span><span class="line"><span class="ln">4</span><span class="cl">| sql-statement                         |
</span></span><span class="line"><span class="ln">5</span><span class="cl">| help [tablename]                      |
</span></span><span class="line"><span class="ln">6</span><span class="cl">| quit                                  |
</span></span><span class="line"><span class="ln">7</span><span class="cl">|                                       |
</span></span><span class="line"><span class="ln">8</span><span class="cl">+---------------------------------------+
</span></span><span class="line"><span class="ln">9</span><span class="cl">SQL&gt;
</span></span></code></pre></div>
        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Den korrekten MySQL ODBC-Treiber für deinen Linux-Server installieren - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 1 / 3)</title>
      <link>http://localhost:1313/2019/2019-04-12-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-04-12-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/</guid>
      <description>Bisher war ich immer recht zufrieden mit der Geschwindigkeit meiner selbstgehosteten Wordpress-Seiten. Im Schnitt hat es nicht länger als 2 Sekunden gedauert, …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Bisher war ich immer recht zufrieden mit der Geschwindigkeit meiner selbstgehosteten Wordpress-Seiten. Im Schnitt hat es nicht länger als 2 Sekunden gedauert, bis die Inhalte aufgebaut waren.&#39; reading_time: 16 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Python, Web, Wordpress, Mac, Git, Database, Server</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Bisher war ich immer recht zufrieden mit der Geschwindigkeit meiner selbstgehosteten Wordpress-Seiten. Im Schnitt hat es nicht länger als 2 Sekunden gedauert, bis die Inhalte aufgebaut waren. Mal mehr, mal weniger. Und das schien mir ein akzeptabler Wert zu sein. Ich nutzte eine der üblichen Standard-Installationen, die da draußen wohl weit verbreitet ist: <strong>Apache2</strong> mit <strong>mod_php</strong>. Der PHP-Interpreter ist dabei &ldquo;Teil&rdquo; des Apache2-Servers. Das ist unkompliziert und schnell zu installieren und somit einfach eine pragmatische Lösung und auch deshalb wohl sehr weit verbreitet. Aber: Die einfachsten Lösungen sind oft nicht die besten. Geschweige denn, die sichersten.</p>
<h2 id="ziel">Ziel</h2>
<p>Um es kurz zu machen: Das Ziel ist es, einen sicheren und schnellen Web-Server mit <strong>Nginx</strong>, <strong>PHP-FPM</strong> und <strong>chroot</strong> aufzusetzen, mit dem sich mehrere getrennte Webseiten betreiben lassen. Um der Sache einen Zweck zu geben, werde ich mich im Folgenden an Wordpress orientieren.</p>
<p><strong>Warum chroot?</strong> Wenn sich mehrere Wordpress-Installationen einen (virtuellen) Server teilen, ist es fast schon fahrlässig diese einfach in ein paar Unterordner zu packen und die Domains darauf zeigen zu lassen. Wird eine Wordpress-Installation kompromittiert, ist es für den Angreifer nicht sonderlich schwer, sich im gesamten System zu auszubrreiten. Mit <strong>chroot</strong> sorge ich dafür, dass jede Wordpress-Instanz sich nur in ihrem eigenen Verzeichnis bewegen kann. Das ist in etwa zu vergleichen mit der PHP-Direktive <strong>open_basedir</strong> aber noch etwas restriktiver.</p>
<p><strong>Warum PHP-FPM?</strong> Weil es sicherer und schneller ist und weil <strong>mod_php</strong> nur unter Apache2 funktioniert. Hier stand anfangs auch <strong>FastCGI</strong> zur Wahl.  CGI bedeutet Common Gateway Interface. Mit dieser Schnittstelle können Anfragen über einen Port oder einen Datei-Socket an den PHP-Interpreter weitergeleitet werden, der dazu aber immer wieder komplett neu gestartet wird. Bei <strong>FastCGI</strong>, einer Weiterentwicklung, wird der Interpreter nicht jedes mal neu gestartet, sondern läuft permanent im Hintergrund.</p>
<p>Und <strong>FPM</strong> schließlich steht für <strong>FastCGI Process Manager</strong>, eine weitere Weiterentwicklung. Ein Neuerung ist unter anderem, dass nun mehrere PHP-Interpreter im Hintergrund laufen. Einen tieferen Überblick über die Grundlagen und Unterschiede <a href="https://www.admin-magazin.de/Das-Heft/2012/06/Der-PHP-Interpreter-PHP-FPM">bietet dieser Artikel</a>.</p>
<p><strong>Und warum nginx?</strong> Meine Seite ist nicht der größte Krümel auf dem Kuchenblech, weshalb die Performance-Vorteile vielleicht kaum ins Gewicht fallen. Dennoch: <strong>Nginx</strong> ist leichtfüßiger als der mit allen möglichen Paketen ausgestattete Apache. Außerdem hatte ich bisher frustriert versucht, <strong>PHP-FPM</strong> mit <strong>chroot</strong> unter Apache zum Laufen zu bringen. Ohne Erfolg.</p>
<p>Und den Zahn muss ich allen nginx-Kritikern gleich einmal ziehen: <strong>nginx ist nicht komplizierter zu bedienen als Apache</strong>. Wer sich bisher für Apache durch die Config-Dateien gewühlt hat, bekommt das locker auch mit nginx hin. Beide Server nehmen sich in Punkte Komplexität, Community und Dokumentation aus meiner Sicht nichts.</p>
<p>Da das ganz jetzt schon ziemlich umfangreich ist, ich den Beitrag in zwei Teile getrennt. Viel Spass beim Lesen.</p>
<h2 id="installation">Installation</h2>
<p>Alles beginnt mit einem apt für <strong>nginx</strong> und zwei wichtigen Helfern:</p>
<p>apt install nginx nscd python-certbot-nginx</p>
<p><strong>Nscd</strong> steht für Name Service Cache Daemon und dient dazu, DNS-Anfragen auch im chroot zu ermöglichen, gleichzeitig anhand eines internen Caches aber auch zu beschleunigen. Die genauen Hintergründe <a href="https://blog.kthx.at/2015/09/23/php-fpm-chroot">sind hier beschrieben</a>. Außerdem nutze ich die SSL-Zertifikate von <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a>, da diese kostenlos sind und sich die Re-Zertifizierung außerdem bequem automatisieren lässt. Ich muss also den entsprechenden <strong>certbot</strong> für <strong>nginx</strong> installieren.</p>
<h2 id="ordnerstruktur">Ordnerstruktur</h2>
<p>Chroot (<em>change root</em>) bedeutet, dass einem Prozess (sprich: der entsprechend konfigurierten Website) ein eigenes Root-Verzeichnis <em>vorgegaugelt</em> wird. Das ist sehr sinnvoll, weil der Prozess so nicht auf die gesamte Partition zugreifen kann. Das erschwert die Sache allerdings auch, da ihm wichtige Systemfunktionen zur Verfügung gestellt werden müssen, die sich sonst irgendwo auf der Partition befinden. Die Lösung dafür lautet <em>mount</em>. Grundsätzlich forderte chroot mir bei der Konfiguration sämtlicher Pfade etwas mehr Konzentration ab, da das Root-Verzeichnis nun nicht mehr unter / sondern z.B. unter /var/www/nickyreinert/ liegt.</p>
<p>Jede Website bekommt grundsätzlich erstmal ein eigenes Verzeichnis, in dem sich jedoch nun nicht nur - wie gewohnt - die Ressourcen der Webseite befinden. Hier werden System-Funktionen, Sockets etc. eingebunden, die PHP und nginx für die einwandfreie Funktion benötigen. Die Ordner-Struktur sieht also folgendermaßen aus:</p>
<p>/ &lt;- tatsächlicher root-Ordner des Systems
/var
/var/www
/var/www/nickyreinert_de &lt;- root-Ordner für diese Website
- cache
- data
- dev
- etc
- htdocs
- logs
- sessions
- tmp
- usr
- var
/var/www/foobar_de &lt;- root-Ordner für eine andere Website
- &hellip;</p>
<p><strong>Htdocs</strong>, <strong>logs</strong>, <strong>tmp</strong> und <strong>sessions</strong> sind fester und individueller Bestandteil des Ordners. Alle anderen sind Verweise auf die tatsächlichen System-Order und werden daher per mount <strong>lesend</strong> eingebunden.</p>
<p>Um die Ordner und die fixen Bestandteile einmal initial anzulegen, nutze ich folgendes Script. Als erster Parameter wird der Name der Website erwartet.</p>
<p>#!/bin/sh
cd /var/www/
mkdir $1
cd $1
mkdir -p htdocs logs tmp sessions cache
chown root:sudo htdocs
chown $1:www-data logs
chown $1:www-data sessions
chmod 700 sessions</p>
<p>Um nun noch das das mounten zu erleichtern, nutze ich <a href="https://blog.kthx.at/2015/09/23/php-fpm-chroot">das Init-Script von kthx.at</a>, das ich noch etwas angepasst habe (Unterstützung für <em>sendmail</em> und <em>php-gettext</em>):</p>
<p>#!/bin/bash</p>
<h3 id="begin-init-info">BEGIN INIT INFO</h3>
<h1 id="provides----------php5-fpm-chroot-setup">Provides:          php5-fpm-chroot-setup</h1>
<h1 id="required-start----nscd">Required-Start:    nscd</h1>
<h1 id="required-stop">Required-Stop:</h1>
<h1 id="default-start-----2-3-4-5">Default-Start:     2 3 4 5</h1>
<h1 id="default-stop------0-1-6">Default-Stop:      0 1 6</h1>
<h1 id="short-description-mounts-needed-sockets-and-other-data-into-a-previously-set-up-chroot-environment">Short-Description: Mounts needed sockets and other data into a previously set up chroot environment.</h1>
<h3 id="end-init-info">END INIT INFO</h3>
<h1 id="hier-die-dateien-und-ordner-die-in-die-chroot-umgebung-gemountet-werden-sollen">Hier die Dateien und Ordner die in die Chroot-Umgebung gemountet werden sollen</h1>
<p>CHROOT_FILES=&quot;/usr/lib/sendmail /etc/hosts /etc/resolv.conf /etc/ssl/certs /usr/share/ca-certificates /dev/null /dev/random /dev/urandom /dev/zero /var/run/mysqld /var/run/nscd /usr/share/zoneinfo /usr/share/php/php-gettext&quot;</p>
<h1 id="siehe-unten">siehe unten!</h1>
<p>CACHE_FOLDER=&quot;/var/run/nginx/_SERVER_&quot;</p>
<p>case &ldquo;$1&rdquo; in
restart|force-reload|start)
# Aufräumen bevor wir aufbauen
$0 stop 2&gt;/dev/null</p>
<h1 id="0-stop">$0 stop</h1>
<pre><code>    for chrootdir in /var/nginx/\*; do
        # Nur in Ordnern mit eigenem /tmp Verzeichnis als Markierung einen Chroot aufsetzen
        if \[ -d &quot;${chrootdir}/tmp&quot; \]; then
            # Berechtigungen von /tmp korrigieren
            chmod 777 &quot;${chrootdir}/tmp&quot;
            chmod +t &quot;${chrootdir}/tmp&quot;

            echo &quot;Setting up ${chrootdir}...&quot;
            for f in $CHROOT\_FILES; do
                if \[ -d &quot;$f&quot; \]; then
                    # $f ist ein Pfad zu einem Verzeichnis
                    mkdir -p &quot;${chrootdir}${f}&quot;
                    mount --bind -o ro &quot;${f}&quot; &quot;${chrootdir}${f}&quot;
                else
                    # $f ist ein Pfad zu einer Datei
                    mkdir -p &quot;${chrootdir}$(dirname &quot;${f}&quot;)&quot;
                    touch &quot;${chrootdir}${f}&quot;
                    mount --bind -o ro &quot;${f}&quot; &quot;${chrootdir}${f}&quot;
                fi
            done
            # willst du den Cache-Ordner auf eine existierende RAM-Disk mounten,
            # kommentiere diesen Bereich aus und setze CACHE\_FOLDER auf den 
            # entsprechenden Zielordner
</code></pre>
<h1 id="for-c-in-cache_folder-do">for c in $CACHE_FOLDER; do</h1>
<h1 id="-f-enthält-_server_-was-als-platzhalter-dient"># f enthält _SERVER_, was als Platzhalter dient</h1>
<h1 id="serverbasename-chrootdir">server=$(basename ${chrootdir})</h1>
<h1 id="cc_server_server">c=${c/_SERVER_/$server}</h1>
<h1 id="if----d-c--then">if [ ! -d &ldquo;${c}&rdquo; ]; then</h1>
<h1 id="mkdir--p-c">mkdir -p ${c}</h1>
<h1 id="fi">fi</h1>
<h1 id="echo-setting-up-cache-in-c">echo &ldquo;Setting up cache in $c&rdquo;</h1>
<h1 id="mkdir--p-chrootdircache">mkdir -p &ldquo;${chrootdir}/cache&rdquo;</h1>
<h1 id="mount-bind--o-rw-c-chrootdircache">mount &ndash;bind -o rw &ldquo;${c}&rdquo; &ldquo;${chrootdir}/cache&rdquo;</h1>
<h1></h1>
<h1 id="done">done</h1>
<pre><code>        fi
    done
;;

stop)
    for chrootdir in /var/nginx/\*; do

        if \[ -d &quot;${chrootdir}/tmp&quot; \]; then
            echo &quot;Destructing ${chrootdir}...&quot;
            for f in $CHROOT\_FILES; do
                umount &quot;${chrootdir}${f}&quot;
                if \[ -d &quot;${chrootdir}${f}&quot; \] &amp;&amp; \[ ! $(ls -A &quot;${chrootdir}${f}&quot;) \]; then
                    # Leerer Ordner, kann man löschen
                    rmdir &quot;${chrootdir}${f}&quot;
                elif \[ -f &quot;${chrootdir}${f}&quot; \]; then
                    # Datei, kann man löschen
                    rm &quot;${chrootdir}${f}&quot;
                fi
            done
        fi
    done
;;

\*)
    echo &quot;Usage: $N {start|stop|restart|force-reload}&quot; &gt;&amp;2
    exit 1
;;
</code></pre>
<p>esac</p>
<p>exit 0</p>
<p>Soll das Script bei jedem Systemstart geladen werden, legst du es unter <strong>/etc/init.d/php-fpm-chroot-setup</strong> ab und setzt das Ausführen-Flag (chmod +x). Danach wird es für den Systemstart vorgemerkt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">update-rc.d php-fpm-chroot-setup defaults
</span></span></code></pre></div><h2 id="die-globale-konfiguration-für-nginx">Die globale Konfiguration für nginx</h2>
<p>Meine <strong>globale Konfiguration</strong> (für gewöhnlich unter <em>/etc/nginx/nginx.conf</em>) für nginx sieht folgendermaßen aus. Die Standard-Parameter von nginx werde ich nicht näher erläutern sondern nur kurz inline kommentieren. Wichtige Anpassungen erkläre ich darunter etwas genauer.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">  1</span><span class="cl"><span class="c1"># in welcher Datei soll die Programm-Id abgelegt werden:</span>
</span></span><span class="line"><span class="ln">  2</span><span class="cl"><span class="n">pid</span> <span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">nginx</span><span class="o">.</span><span class="n">pid</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">  3</span><span class="cl"><span class="c1"># der Benutzer, unter dem nginx gestartet wird:</span>
</span></span><span class="line"><span class="ln">  4</span><span class="cl"><span class="n">user</span> <span class="n">www</span><span class="o">-</span><span class="n">data</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">  5</span><span class="cl"><span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln">  6</span><span class="cl"><span class="n">worker_processes</span> <span class="mi">8</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">  7</span><span class="cl">
</span></span><span class="line"><span class="ln">  8</span><span class="cl"><span class="n">events</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">  9</span><span class="cl">		<span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln"> 10</span><span class="cl">		<span class="n">worker_connections</span> <span class="mi">768</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 11</span><span class="cl">		<span class="c1"># soll jeder Worker mehr als eine Verbindung gleichzeitig annehmen? Standard: off</span>
</span></span><span class="line"><span class="ln"> 12</span><span class="cl">		<span class="n">multi_accept</span> <span class="n">off</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 13</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln"> 14</span><span class="cl">
</span></span><span class="line"><span class="ln"> 15</span><span class="cl">
</span></span><span class="line"><span class="ln"> 16</span><span class="cl"><span class="n">http</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 17</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 18</span><span class="cl">		<span class="c1"># Basic Settings</span>
</span></span><span class="line"><span class="ln"> 19</span><span class="cl">		<span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln"> 20</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 21</span><span class="cl">
</span></span><span class="line"><span class="ln"> 22</span><span class="cl">		<span class="n">sendfile</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 23</span><span class="cl">		<span class="n">tcp_nopush</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 24</span><span class="cl">		<span class="n">tcp_nodelay</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 25</span><span class="cl">
</span></span><span class="line"><span class="ln"> 26</span><span class="cl">		<span class="n">client_body_timeout</span> <span class="mi">12</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 27</span><span class="cl">		<span class="n">client_header_timeout</span> <span class="mi">12</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 28</span><span class="cl">		<span class="n">keepalive_timeout</span> <span class="mi">65</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 29</span><span class="cl">    <span class="n">send_timeout</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 30</span><span class="cl">
</span></span><span class="line"><span class="ln"> 31</span><span class="cl">		<span class="n">types_hash_max_size</span> <span class="mi">2048</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 32</span><span class="cl">		<span class="n">server_names_hash_bucket_size</span> <span class="mi">128</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 33</span><span class="cl">    <span class="c1"># server_name_in_redirect off;</span>
</span></span><span class="line"><span class="ln"> 34</span><span class="cl">
</span></span><span class="line"><span class="ln"> 35</span><span class="cl">		<span class="n">limit_req_zone</span> <span class="o">$</span><span class="n">binary_remote_addr</span> <span class="n">zone</span><span class="o">=</span><span class="n">one</span><span class="p">:</span><span class="mi">10</span><span class="n">m</span> <span class="n">rate</span><span class="o">=</span><span class="mi">5</span><span class="n">r</span><span class="o">/</span><span class="n">s</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 36</span><span class="cl">
</span></span><span class="line"><span class="ln"> 37</span><span class="cl">		<span class="n">include</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">mime</span><span class="o">.</span><span class="n">types</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 38</span><span class="cl">		<span class="n">default_type</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 39</span><span class="cl">
</span></span><span class="line"><span class="ln"> 40</span><span class="cl">		<span class="c1"># Verhindere, dass nginx auf Fehlerseiten die Versionsnummer mitliefert</span>
</span></span><span class="line"><span class="ln"> 41</span><span class="cl">		<span class="c1"># Frei nach dem Motto &#34;securtiy through obscurity&#34;</span>
</span></span><span class="line"><span class="ln"> 42</span><span class="cl">		<span class="n">server_tokens</span> <span class="n">off</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 43</span><span class="cl">
</span></span><span class="line"><span class="ln"> 44</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 45</span><span class="cl">		<span class="c1"># Logging Settings</span>
</span></span><span class="line"><span class="ln"> 46</span><span class="cl">		<span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln"> 47</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 48</span><span class="cl">
</span></span><span class="line"><span class="ln"> 49</span><span class="cl">		<span class="n">log_format</span> <span class="n">cache_status</span> <span class="s1">&#39;[$time_local] &#34;$request&#34;  $upstream_cache_status&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 50</span><span class="cl">
</span></span><span class="line"><span class="ln"> 51</span><span class="cl">		<span class="n">log_format</span> <span class="n">main</span> <span class="s1">&#39;$time_local|$ip_anonymized|$remote_user|&#39;</span>
</span></span><span class="line"><span class="ln"> 52</span><span class="cl">				<span class="s1">&#39;&#34;$request&#34; $status $body_bytes_sent &#39;</span>
</span></span><span class="line"><span class="ln"> 53</span><span class="cl">				<span class="s1">&#39;&#34;$http_referer&#34; &#34;$http_user_agent&#34; $upstream_cache_status&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 54</span><span class="cl">
</span></span><span class="line"><span class="ln"> 55</span><span class="cl">		<span class="n">map</span> <span class="o">$</span><span class="n">remote_addr</span> <span class="o">$</span><span class="n">ip_anonym1</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 56</span><span class="cl">		    <span class="n">default</span> <span class="mf">0.0</span><span class="o">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 57</span><span class="cl">		    <span class="s2">&#34;~(?P&lt;ip&gt;(\d+)\.(\d+)\.(\d+))\.\d+&#34;</span> <span class="o">$</span><span class="n">ip</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 58</span><span class="cl">		    <span class="s2">&#34;~(?P&lt;ip&gt;[^:]+:[^:]+):&#34;</span> <span class="o">$</span><span class="n">ip</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 59</span><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="ln"> 60</span><span class="cl">
</span></span><span class="line"><span class="ln"> 61</span><span class="cl">		<span class="n">map</span> <span class="o">$</span><span class="n">remote_addr</span> <span class="o">$</span><span class="n">ip_anonym2</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 62</span><span class="cl">		    <span class="n">default</span> <span class="o">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 63</span><span class="cl">		    <span class="s2">&#34;~(?P&lt;ip&gt;(\d+)\.(\d+)\.(\d+))\.\d+&#34;</span> <span class="o">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 64</span><span class="cl">		    <span class="s2">&#34;~(?P&lt;ip&gt;[^:]+:[^:]+):&#34;</span> <span class="p">::;</span>
</span></span><span class="line"><span class="ln"> 65</span><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="ln"> 66</span><span class="cl">
</span></span><span class="line"><span class="ln"> 67</span><span class="cl">		<span class="n">map</span> <span class="o">$</span><span class="n">ip_anonym1</span><span class="o">$</span><span class="n">ip_anonym2</span> <span class="o">$</span><span class="n">ip_anonymized</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 68</span><span class="cl">		    <span class="n">default</span> <span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 69</span><span class="cl">		    <span class="s2">&#34;~(?P&lt;ip&gt;.*)&#34;</span> <span class="o">$</span><span class="n">ip</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 70</span><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="ln"> 71</span><span class="cl">
</span></span><span class="line"><span class="ln"> 72</span><span class="cl">		<span class="n">map</span> <span class="o">$</span><span class="n">http_ignoreMe</span> <span class="o">$</span><span class="n">log_this</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 73</span><span class="cl">		    <span class="o">~</span><span class="bp">true</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 74</span><span class="cl">		    <span class="n">default</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 75</span><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="ln"> 76</span><span class="cl">
</span></span><span class="line"><span class="ln"> 77</span><span class="cl">		<span class="n">access_log</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="nb">log</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">access</span><span class="o">.</span><span class="n">log</span> <span class="n">main</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 78</span><span class="cl">		<span class="n">error_log</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="nb">log</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">error</span><span class="o">.</span><span class="n">log</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 79</span><span class="cl">
</span></span><span class="line"><span class="ln"> 80</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 81</span><span class="cl">		<span class="c1"># SSL Settings</span>
</span></span><span class="line"><span class="ln"> 82</span><span class="cl">		<span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln"> 83</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 84</span><span class="cl">
</span></span><span class="line"><span class="ln"> 85</span><span class="cl">		<span class="n">ssl_session_cache</span> <span class="n">shared</span><span class="p">:</span><span class="n">SSL</span><span class="p">:</span><span class="mi">5</span><span class="n">m</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 86</span><span class="cl">		<span class="n">ssl_session_timeout</span> <span class="mi">1</span><span class="n">h</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 87</span><span class="cl">		<span class="n">add_header</span> <span class="n">Strict</span><span class="o">-</span><span class="n">Transport</span><span class="o">-</span><span class="n">Security</span> <span class="s2">&#34;max-age=15768000; includeSubDomains&#34;</span> <span class="n">always</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 88</span><span class="cl">
</span></span><span class="line"><span class="ln"> 89</span><span class="cl">		<span class="n">ssl_protocols</span> <span class="n">TLSv1</span> <span class="n">TLSv1</span><span class="o">.</span><span class="mi">1</span> <span class="n">TLSv1</span><span class="o">.</span><span class="mi">2</span><span class="p">;</span> <span class="c1"># Dropping SSLv3, ref: POODLE</span>
</span></span><span class="line"><span class="ln"> 90</span><span class="cl">		<span class="n">ssl_prefer_server_ciphers</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 91</span><span class="cl">	  <span class="n">ssl_ciphers</span> <span class="n">ECDH</span><span class="o">+</span><span class="n">AESGCM</span><span class="p">:</span><span class="n">ECDH</span><span class="o">+</span><span class="n">AES256</span><span class="p">:</span><span class="n">ECDH</span><span class="o">+</span><span class="n">AES128</span><span class="p">:</span><span class="n">DHE</span><span class="o">+</span><span class="n">AES128</span><span class="p">:</span><span class="o">!</span><span class="n">ADH</span><span class="p">:</span><span class="o">!</span><span class="n">AECDH</span><span class="p">:</span><span class="o">!</span><span class="n">MD5</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 92</span><span class="cl">
</span></span><span class="line"><span class="ln"> 93</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln"> 94</span><span class="cl">		<span class="c1"># Cache</span>
</span></span><span class="line"><span class="ln"> 95</span><span class="cl">		<span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln"> 96</span><span class="cl">		<span class="c1">#</span>
</span></span><span class="line"><span class="ln"> 97</span><span class="cl">
</span></span><span class="line"><span class="ln"> 98</span><span class="cl">		<span class="n">fastcgi_cache_key</span> <span class="s2">&#34;$scheme$request_method$host$request_uri&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 99</span><span class="cl">		<span class="n">add_header</span> <span class="n">X</span><span class="o">-</span><span class="n">Cache</span> <span class="o">$</span><span class="n">upstream_cache_status</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">100</span><span class="cl">
</span></span><span class="line"><span class="ln">101</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln">102</span><span class="cl">		<span class="c1"># Gzip Settings</span>
</span></span><span class="line"><span class="ln">103</span><span class="cl">		<span class="c1"># Beschreibung siehe unten</span>
</span></span><span class="line"><span class="ln">104</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln">105</span><span class="cl">
</span></span><span class="line"><span class="ln">106</span><span class="cl">		<span class="n">gzip</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">107</span><span class="cl">		<span class="n">gzip_vary</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">108</span><span class="cl">		<span class="n">gzip_min_length</span> <span class="mi">10240</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">109</span><span class="cl">		<span class="n">gzip_proxied</span> <span class="n">expired</span> <span class="n">no</span><span class="o">-</span><span class="n">cache</span> <span class="n">no</span><span class="o">-</span><span class="n">store</span> <span class="n">private</span> <span class="n">auth</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">110</span><span class="cl">		<span class="n">gzip_types</span> <span class="n">text</span><span class="o">/</span><span class="n">plain</span> <span class="n">text</span><span class="o">/</span><span class="n">css</span> <span class="n">text</span><span class="o">/</span><span class="n">xml</span> <span class="n">text</span><span class="o">/</span><span class="n">javascript</span> <span class="n">application</span><span class="o">/</span><span class="n">x</span><span class="o">-</span><span class="n">javascript</span> <span class="n">application</span><span class="o">/</span><span class="n">xml</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">111</span><span class="cl">		<span class="n">gzip_disable</span> <span class="s2">&#34;MSIE [1-6]\.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">112</span><span class="cl">
</span></span><span class="line"><span class="ln">113</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln">114</span><span class="cl">		<span class="c1"># Virtual Host Configs</span>
</span></span><span class="line"><span class="ln">115</span><span class="cl">		<span class="c1"># wo befinden sich die Einstellungen für die Server / virtual hosts?</span>
</span></span><span class="line"><span class="ln">116</span><span class="cl">		<span class="c1"># welche Variante du nutzt, ist Geschmackssache und dir überlassen</span>
</span></span><span class="line"><span class="ln">117</span><span class="cl">		<span class="c1">##</span>
</span></span><span class="line"><span class="ln">118</span><span class="cl">
</span></span><span class="line"><span class="ln">119</span><span class="cl">		<span class="n">include</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">conf</span><span class="o">.</span><span class="n">d</span><span class="o">/*.</span><span class="n">conf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">120</span><span class="cl">	<span class="c1">#	include /etc/nginx/sites-enabled/*.conf;</span>
</span></span><span class="line"><span class="ln">121</span><span class="cl">
</span></span><span class="line"><span class="ln">122</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><a href="https://nginx.org/en/docs/ngx_core_module.html#worker_processes">worker_processes</a> - Natürlich kannst du nginx mit einem einzigen Prozess laufen lassen. Du kannst aber auch dafür sorgen, dass sich mehrere Prozesse um die Beantwortung der Anfragen kümmern. Es empfiehlt sich <strong>für jeden Prozessor-Kern</strong> einen Prozess zu starten. Mit dem Wert &ldquo;auto&rdquo; kümmert sich nginx selber darum. Mit </p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">grep processor /proc/cpuinfo | wc -l
</span></span></code></pre></div><p>findest du heraus, wieviele Kerne dein System hat, um diesen Wert manuell zu setzen.</p>
<p><a href="https://nginx.org/en/docs/ngx_core_module.html#worker_connections">worker_connections</a> - Dieser Wert legt fest, wieviele Anfragen jeder einzelne <em>worker process</em> verarbeiten kann. Hat nginx also 8 simultane <em>worker processes</em> gestartet und ist dieser Wert  auf 1024 eingestellt, wird nginx insgesamt 8.192 Verbindungen gleichzeitig vertragen. Der Wert für diese Direktive wird allerdings durch die Anzahl gleichzeitiger offener Dateien für einen Prozess begrenzt. Diese erfährst du mit <em>ulimit -n</em>.</p>
<p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile">sendfile</a>, tcp_nopush und tcp_nodelay - Jetzt geht es ein wenig ans Eingemachte. Diese Parameter können einerseits einen wichtigen Geschwindigkeitsgewinn bedeuten oder völlig sinnlos sein. Da mir aber kein negative Impact bekannt ist, möchte ich an der Stelle pauschal erwähnen, diesen Parameter zu aktivieren. Wenn ich mich hier irre, lasst mir gerne einen Kommentar dazu da. Sendfile optimiert die Art, wie auf eine angefragte Datei zugegriffen wird. Tcp_nopush sorgt dafür, dass die Antwort in einem Paket verschickt wird und tcp_nodelay schließlich vermeidet das Buffern von Daten die zum Versand bereit liegen. Planst du den Einsatz von Cache, solltest du unbedingt prüfen, wie sich diese Parameter dann auswirken, da ein Cache durchaus ein Kontraindikator sein kann!</p>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration">client_body_timeout, client_header_timeout</a> - Diese Parameter werden die tatsächliche Geschwindigkeit weniger beeinflussen, sondern nur dafür sorgen, dass der HTTP Fehler 408 (Request time out) schneller ausgeliefert wird.</p>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration">keepalive_timeout und send_timeout</a> - Diese Parameter machen vermutlich eher Sinn, wenn du mit wirklich vielen (organischen) Verbindungen konfrontiert wirst. Sie sorgen dafür, dass nicht genutzte Verbindungen schneller geschlossen werden und der Prozess so neue Anfragen annehmen kann.</p>
<p><a href="http://nginx.org/en/docs/http/ngx_http_limit_req_module.html">limit_req_zone</a> - Mit dieser Direktive legst du fest, wie viele Anfragen der Server innerhalb eines Zeitraums annimmt, bevor er mit einem Fehler antwortet. Als Indikator habe ich die IP-Adresse gewählt ($binary_remote_addr), mit $server_name lässt sich das Limit je Server einstellen. Mit zone lege ich einen Namen für diese Einstellung fest. So kann ich z.B. mehrer Zonen für beliebige Orte oder Ordner einrichten. 10m beschreibt die Größe des Speichers, in dem die IP-Adressen abgelegt werden. 10 MByte sollte für etwa 160.000 IP-Adressen reichen. Rate legt fest, wie viele Anfragen pro Sekunde erlaubt sind. Mit burst kann eine Warteschlange eingerichtet werden, die (hier) 20 Anfragen zurückstellt um sie dann abzuarbeiten.</p>
<p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#server_names_hash_bucket_size">server_names_hash_bucket_size</a> - Damit kommst du unter Umständen in Berührung, wenn nginx dich mit der Fehlermeldung &ldquo;<em>could not build the server_names_hash, you should increase server_names_hash_bucket_size</em>&rdquo; begrüßt. Die Direktive beschreibt ihre Funktion eigentlich schon ganz gut: Die Größe des Buckets für die Hash-Werte der Server-Namen. Oder: Dein Server-Name ist zu groß und passt nicht in den Eimer.</p>
<h3 id="logging">Logging</h3>
<p>An erster Stelle definiere ich meine eigenen Log-Templates <strong>main</strong> und <strong>cache_status</strong>. Beachte, dass ich die IP-Adresse nur anonymisiert übernehme. Dies übernimmt die map-Direktive, die per regulärem Ausdruck das letzte Tupel der IP-Adresse entfernt. Das ganze ist <a href="https://blag.nullteilerfrei.de/2018/05/26/anonymize-ip-addresses-in-nginx-log-files/">hier etwas genauer dokumentiert</a>. Ebenfalls mit <strong>map</strong> lese ich einen HTTP-Header aus, um das Logging vom Client aus zu deaktivieren - warum ich das mache, <a href="https://www.nickyreinert.de/zugriff-nicht-loggen-wenn-ein-bestimmter-http-request-header-gesetzt-ist/">ist hier beschrieben</a>.</p>
<p>Schließlich lege ich mit <strong>access_log</strong> und <strong>error_log</strong> fest, an welchem Ort die Log-Files per default abgelegt werden. Das ändere ich später natürlich noch auf Server-Ebene.</p>
<h3 id="der-cache">Der Cache</h3>
<p>In der globalen Konfig-Datei werde ich nur zwei Direktiven vorgeben, die für alle Server gleich sind. Mit der Direktive <strong><a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key">fastcgi_cache_key</a></strong>, lege ich fest, wie nginx die Cache-Keys erstellt. Hier sollte natürlich jeder Server unterscheidbar sein.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">fastcgi_cache_key &#34;$scheme$request_method$host$request_uri&#34;;
</span></span></code></pre></div><p>Außerdem soll jede Antwort einen Header enthalten, der den Cache-Status enthält. Mit der Variable <em>upstream_cache_status</em> kann z.B. ich so <a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html">HIT, MISS oder EXPIRED</a> übermitteln.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_header X-Cache $upstream_cache_status;
</span></span></code></pre></div><p>Wie der Cache bei nginx funktioniert und auf den wichtigsten Parameter fastcgi_cache_path gehe ich im 2. Teil genauer ein.</p>
<h3 id="welches-dateisystem-für-den-cache---tempfs-oder-ramfs">Welches Dateisystem für den Cache - tempfs oder ramfs?</h3>
<p>Der <strong>FastCGI</strong>-Cache ist dafür gedacht, die Auslieferung der PHP-Dateien zu beschleunigen. Es macht nämlich durchaus Sinn, eine PHP-Datei nicht jedes mal durch den PHP-Interpreter zu jagen, wenn sich am Inhalt nichts geändert hat. Dazu wird die &ldquo;interpretierte&rdquo; PHP-Datei einfach in einem Cache-Ordner abgelegt und bei Bedarf abgerufen. Dieser Ordner kann sich auf der Festplatte oder im Arbeitsspeicher befinden. Auf die Unterschiede gehe ich hier kurz ein:</p>
<p>Im <strong>Init-Script</strong> (siehe oben) wird dir ein großer, auskommentierter Block aufgefallen sein. Mein Setup ist darauf ausgelegt, dass der Cache auf der Festplatte abgelegt wird. Es ist aber wie gesagt auch möglich, eine <strong>RAM-Disk</strong> zu nutzen, wobei der Arbeitsspeicher als Ablage dient. Das ist in den meisten Fällen weitaus schneller ist als die Festplatte. <a href="https://www.searchstorage.de/tipp/Linux-Server-Unnoetige-Dateien-mit-tmpfs-vom-Storage-fernhalten">Man unterscheidet</a> zwischen zwei nutzbaren Dateisystemen: <strong>ramfs</strong> und <strong>tempfs</strong>.</p>
<p>Der <strong>Vorteil von ramfs</strong> ist, dass direkt der <strong>Arbeitsspeicher</strong> genutzt wird. Der <strong>Nachteil</strong> ist: Es gibt <strong>keine Größenbeschränkung</strong>. Mit den falschen Einstellungen kann man also ungewollt den Arbeitsspeicher volllaufen lassen. Bei <strong>tempfs</strong> kann zwar eine <strong>Obergrenze</strong> angegeben werden. Es kann aber sein, dass das <strong>Dateisystem</strong> selber eine Swap-Partition zum Zwischenspeichern nutzt (vor allem dann, wenn die vorgegeben Speichergrenze erreicht ist). Ein Test mit tempfs und normaler Festplatte hat bei mir ergeben, dass der <strong>Cache</strong> um den <strong>Faktor 10</strong> langsamer wird. Aus diesem Grund ist der Bereich hier deaktiviert. Um das Thema kümmere ich mich also vielleicht an anderer Stelle noch mal</p>
<h3 id="ssl">SSL</h3>
<p>Natürlich gehört auch SSL zu meinem Server-Setup. Ich nutze dazu <strong>Let&rsquo;s Encrypt</strong> in Verbindung mit dem certbot, da das so ziemlich den ganzen Prozess automatisiert. Der Parameter <em>ssl_session_cache</em> beschreibt, wie groß der Cache für Session-Caches ist. Der Standardwert von 5 MByte sollte hier völlig ausreichen und reicht für knapp 20.000 Sessions. Auch beim <em>ssl_session_timeout</em> kann der Standardwert übernommen werden. Nach 1 Stunde verfällt also die SSL-Session. Außerdem sorgen wir mit <em>add_header</em> Strict-Transport-Security dafür, dass nur Verbindungen über HTTPS aufgebaut werden können (HTTP Strict Transport Security, HSTS).</p>
<p>Schließlich solltest du über <em>ssl_protocols</em> die verwendeten SSL-Protokolle einschränken. Die meisten modernen Browser kommen mit TLS 1.2 schon ganz gut klar und seit August 2018 gibt es auch TLS 1.3. Ältere Versionen haben hier nichts mehr verloren, um z.B. Lücken wie <a href="https://de.wikipedia.org/wiki/Poodle">Poodle</a> keine Angriffsfläche zu bieten. Außerdem kannst du mit <em>ssl_prefer_server_ciphers</em> und <em>ssl_ciphers</em> festlegen, welche Verschlüsselungsmethoden akzeptiert werden sollen. Auch hier gibt es schwache und langsame Methoden. <a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla bietet dafür übrigens ein Online-Tool</a> an, dessen Einstellung ich für einen guten Kompromiss zwischen Kompatibilität und Sicherheit halte</p>
<h3 id="gzip---kompression">GZIP - Kompression</h3>
<p>Neben dem Cache ist Kompression eine sinnvolle Maßnahme um den Seitenaufbau noch etwas zu beschleunigen. Die Kompression aktivierst du mit - Überraschung - <em>gzip on</em>.</p>
<p>Mit <em>gzip_vary</em> sorgst du dafür, dass komprimierte und unkomprimierte Ressourcen gecached werden. Der Parameter <em>gzip_min_length</em> legt fest, wie groß eine Ressource mindestens sein muss, um komprimiert zu werden. Mit gzip_proxied sorgst du dafür, dass Anfragen von Proxies komprimierte Daten bekommen und <em>gzip_types</em> definiert die Ressourcen-Typen, die komprimiert werden. Und schließlich sorgen wir noch dafür, dass Anfragen vom alten Internet Explorer nicht komprimiert werden, da dieser damit nicht arbeiten kann: <em>gzip_disable</em>.</p>
<p>Das war es mit der Einrichtung von nginx. Weiter geht es im 2. Teil mit den <strong>Servern</strong> bzw. wie sie unter Apache genannt werden: <strong>virtual hosts</strong>.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 1 / 3) - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>PHP - Mit welcher Methode durchsucht man ein Array am schnellsten?</title>
      <link>http://localhost:1313/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/</guid>
      <description>Das schöne an PHP: Viele Wege führen nach Rom.
Das Problem mit PHP: Viele Wege führen nach Rom.
Denn diese Vielfallt stellt den Entwickler von Welt mituner vor …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Das schöne an PHP: Viele Wege führen nach Rom. Das Problem mit PHP: Viele Wege führen nach Rom.&#39; reading_time: 14 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Git, Database, Server, Mobile, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Das schöne an PHP: Viele Wege führen nach Rom.</p>
<p>Das Problem mit PHP: Viele Wege führen nach Rom.</p>
<p>Denn diese Vielfallt stellt den Entwickler von Welt mituner vor eine schwierige Frage: <a href="http://nickology.com/2012/07/03/php-faster-array-lookup-than-using-in_array/">Welcher Weg ist der kürzeste</a>? Will man z.B. einen Wert (<em>needle</em>) in einem Array (<em>haystack</em>) suchen, gibt es in PHP zehn verschiedene Methoden. Du hast richtig gelesen: Zehn. Ich unterscheide einerseits auch die strikten und nicht-strikten Vergleiche, andererseits lasse ich die wirklich exotischen Methoden außen vor. Welche Methoden am schnellsten sind, werde ich versuchen im Folgenden herauszufinden. Außerdem schaue ich mir an ob es unter den letzten PHP-Versionen (7.0 bis 7.3*) Unterschiede in der Geschwindigkeit gibt.</p>
<p><em>* Genau genommen sind es PHP 7.0.33-1, PHP 7.1.26-1, PHP 7.2.14-1, PHP 7.3.1-3</em></p>
<p>Eins vorweg: Wenn du mit Schmalspur-Arrays arbeitest, die nur 12 Einträge enthalten, deren Werte nur ein ein Zeichen lang sind, kannst du hier gleich aussteigen. Du wirst schnell feststellen, dass sich Geschwindigkeitsvorteile erst bemerkbar machen, wenn die Arrays und ihre Werte länger werden.</p>
<p>Im folgenden Stelle ich die Methoden kurz vor. Dann beschreibe ich, wie ich die Messungen durchgeführt habe. Danach gibts das bunte Zahlenwerk, in dem ich erst die Methoden miteinander vergleiche und dann die PHP-Versionen.</p>
<p><em><strong>tl;dr:</strong></em> in_array() und nicht strikter Vergleich schlägt alle anderen Methoden. Ende der Durchsage.</p>
<h2 id="welche-methoden-gibt-es-um-ein-array-nach-einem-wert-zu-durchsuchen">Welche Methoden gibt es, um ein Array nach einem Wert zu durchsuchen</h2>
<h3 id="array_search---strikt--nicht-strikt">array_search - strikt / nicht strikt</h3>
<p>Diese Methode ist der klassische Weg. Array_search() durchsucht ein Array nach einem beliebigen Wert und liefert dann den dazugehörigen Schlüssel zurück. Ist der dritte Parameter auf TRUE gesetzt, erfolgt eine strikte Suche, bei dem nicht nur Inhalt sondern auch Typ überprüft werden (ein &ldquo;typstarker Vergleich&rdquo;).</p>
<h3 id="in_array---strikt--nicht-strikt">in_array - strikt / nicht strikt</h3>
<p>Diese Methode ist ähnlich zu der erst genannten. Allerdings wird hier nur ein Booleanscher Wert zurückgegeben, der anzeigt, ob der Wert im Array enthalten ist. Oder nicht. Auch in_array unterstützt typstarke Vergleiche.</p>
<h3 id="foreach---strikt--nicht-strikt">foreach - strikt / nicht strikt</h3>
<p>Natürlich hat man auch die Möglichkeit mit einer Schleife die Suche maximal zu individualisieren. Innerhalb der Schleife kann man beliebige Ereignise definieren und natürlich auch einen typstarken Vergleich anstellen. Ich habe die Schleife, für die Vergleichbarkeit, sehr einfach gehalten. Ist der Vergleich erfolgreich, wird die Schleife mit break; verlassen.</p>
<h3 id="isset">isset</h3>
<p>Diese Methode ist eigentlich nicht das Mittel der Wahl, um ein Array nach einem Wert zu durchsuchen. Da ich aber sehen will, wie sich dieser Umweg im Vergleich schlägt, habe ich die Methode trotzdem mit aufgenommen. Zunächst nutze ich array_flip() um aus Schlüsseln Werte und vice versa zu machen. Dann kann ich mit isset() prüfen, ob der Schlüssel sprich der ehemalige Wert vorhanden ist.<br>
Dazu muss gesagt werden, dass diese Methode ansich sehr schnell sein kann. Wenn der Anwendungsfall es zulässt, dass du deine Daten als Schlüssel und nicht als Wert in einem Array ablegst, solltest du diese Funktion bevorzugen! Das klappt natürlich nicht, wenn du mit NULL-Werten oder nicht uniquen Werten arbeitest!</p>
<h3 id="array_intersect">array_intersect</h3>
<p>Auch das ist ein Exot, der für diese Zwecke eigentlich wenig sinnvoll ist. Was nicht heißt, dass es auch hierfür Anwendungsfälle geben kann. Mit <strong>array_intersect()</strong> wird eine Teilmenge von zwei Arrays erzeugt. Ich übergebe die zu suchende <em>needle</em> als Array und bilde die Teilmenge mit dem <em>haystack</em>. Ist das Ergebnis-Array größer als 0, enthält der Heuhaufen die Nadel. Der Vorteil: Sucht man mehr als eine Nadel, kann man mit der Schnittmenge sehr gut weiterarbeiten. Von dieser Methode gibt es einige verrückte Abwandlungen, die ich hier aber nicht alle getrennt betrachten möchte.</p>
<h3 id="array_keys---strikt--nicht-strikt">array_keys - strikt / nicht strikt</h3>
<p>Der nächste Exot in dieser Reihe ist <strong>array_keys().</strong> Hier kann man ebenfalls einen striken typsicheren Vergleich anstrengen. Die Methode arbeitet ähnlich wie <strong>array_intersect()</strong>, liefert jedoch eine Teilmenge der Schlüssel zurück, die den gesuchten Wert enthalten. Auch dieser Weg ist eigentlich ein Umweg der nur in bestimmten Situationen anwendbar.</p>
<h2 id="methodik-und-testaufbau">Methodik und Testaufbau</h2>
<p>Um der ganzen Sache wenigstens einen blassen wissenschaftlichen Anstrich zu verpassen, will ich das Vorgehen kurz erläutern. Der Quellcode ist auf <a href="https://github.com/nickyreinert/compareArrayLookupMethodsInPHP/tree/master">github.com</a> verfügbar.</p>
<p>Ich habe etwa 10.000 Arbeitsstunden in einer sehr ausgeklügeltes PHP-Script investiert. Dieses Script erzeugt ein zufälliges Array mit einer vorgegeben Länge an Keys (<strong>initArrayLength</strong>) und füllt dieses mit Werte, die eine vorgebene Länge haben (<strong>arrayValueLengths</strong>). Die Länge des Arrays kann zur Laufzeit erhöht werden, indem eine Potenz (<strong>maxPowers</strong>) angwendet wird. Danach wird dieses Array mit der angegeben Methode durchsucht (<strong>lookupMethod</strong>). Die Anzahl der Suchvorgänge wird mit <strong>maxIterations</strong> angegeben. Ist <strong>forceNewRandomArray</strong> auf 1 (aka TRUE) gesetzt, wird nach jedem Durchgang ein neues Array erzeugt.</p>
<p>Um die in PHP eingebaute &ldquo;static optimization&rdquo; zu umgehen, gibt es den Parameter <strong>disableOptimization</strong>. Ist dieser mit 1 aktiviert, wird vor jedem Aufruf ein <strong>sleep(0);</strong> abgesetzt. Das verzögert den Programmablauf nicht, blockiert aber dieses Feature. Für die Messung habe ich den Parameter stets deaktiviert.</p>
<p>Außerdem lässt sich mit <strong>forceNewRandomArray</strong> = 0 festlegen, dass das Array nicht bei jedem Durchlauf neu erzeugt wird. Das beschleunigt die Laufzeit bei großen Arrays erheblich.</p>
<p>Die <em>needle</em>, also der zu suchende Wert, befindet sich immer am Ende des Arrays.</p>
<p>Die Zeitmessung wird mit <strong>microtime(true);</strong> vorgenommen. Diese Methode erlaubt eine mikrosekunden-genaue Messung. So sieht beispielhaft die Implementierung für die Methode <strong>in_array()</strong> aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">		private function useInArray($strictMode) {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">			$startTime = microtime(true);
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">			if ($this-&gt;disableOptimization) {sleep(0);}
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">			$result = in_array($this-&gt;needle, $this-&gt;haystack, $strictMode);
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">			$endTime = microtime(true);
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">			$this-&gt;currentResults[&#39;delay&#39;] = number_format(($endTime - $startTime), 25, &#34;,&#34;, &#34;.&#34;);
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">			$this-&gt;currentResults[&#39;memory_usage&#39;] = memory_get_usage(true);
</span></span></code></pre></div><p>Das ganze Script wird in der Kommandozeile ausgeführt. <strong>Pro-Tipp:</strong> In einer Screen-Session! Ein Beispiel-Aufruf sieht demnach so aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php-cgi7.0 -q compareLookups.php initArrayLength=10 arrayValueLengths=1,10,50,100 maxPowers=5 maxIterations=1000 forceNewRandomArray=1 breakAfterFound=1 disableOptimization=0 lookupMethod=in_array phpVersion=7.0 comment=initial_comparison
</span></span></code></pre></div><p>Damit das ganze automatisiert und für alle Methoden einmal aufgerufen wird habe ich diese Zeile etwas abgewandelt in ein Shell-Script gepackt und dieses Script dann ausgeführt. Das Shell-Script gibt es ebenfalls bei github - siehe oben. Die ganze Chose läuft auf einem virtuellen self-managed Server, der mit <strong>Ubuntu 16.04</strong> betrieben wird. Die Kiste hat acht Kerne mit jeweils einer <strong>Intel Xeon CPU E5-2680 v3 @ 2.50GHz</strong> und <strong>16 GByte RAM</strong>.</p>
<p>Ich habe Arrays mit einer Länge von 10, 100, 1.000, 10.000 und 100.000 Schlüsseln untersucht, die jeweils Werte mit einer Länge von 1, 10, 50, 100 Zeichen enthalten. Jede Variation wurde mit jeder Methode 1.000 mal gemessen. Insgesamt habe ich so 800.000 mal Arrays durchsucht, oder: Je Methode 80.000 Durchläufe.</p>
<h2 id="ergebnisse">Ergebnisse</h2>
<p>Zunächst zur Übersicht des Gesamtergebnisses in Abbildung 1 und 2: Die durchschnittliche Dauer in Mikrosekunden über alle Durchläufe hinweg. <strong>Die Länge der Arrays wirkt sich überproportional auf die Dauer aus</strong>. Das fällt vor allem bei <strong>array_intersect()</strong> auf: Ein Array mit 10.000 Schlüsseln benötigt durchschnittlich 2,479 ms, bei 100.000 Schlüsseln sind es 38,572 ms. Anders bei zunehmender Größe der Werte: Steigen dies um den Faktor 10 (10 Zeichen bzw. 100 Zeichen je Wert), dauert die Suche im Schnitt nicht mal 2 ms länger.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-2-700x227.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-2-700x227.png" alt="Durchschnittliche Dauer in Mikrosekunden je Methode"></a></p>
<p>Durchschnittliche Dauer in Mikrosekunden je Methode</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-1-700x241.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-1-700x241.png" alt="Durchschnittliche Dauer in Mikrosekunden je Methode"></a></p>
<p>Durchschnittliche Dauer in Mikrosekunden je Methode</p>
</li>
</ul>
<p>Die folgenden Abbildungen 3 bis 7 zeigen die exakten Messwerte für alle Methoden.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-3-700x421.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-3-700x421.png" alt="Abbildung 3: Durchschnittliche Dauer bei 10 Schlüsseln"></a></p>
<p>Abbildung 3: Durchschnittliche Dauer bei 10 Schlüsseln</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-4-700x470.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-4-700x470.png" alt="Abbildung 4: Durchschnittliche Dauer bei 100 Schlüsseln"></a></p>
<p>Abbildung 4: Durchschnittliche Dauer bei 100 Schlüsseln</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-5-700x419.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-5-700x419.png" alt="Abbildung 5: Durchschnittliche Dauer bei 1.000 Schlüsseln"></a></p>
<p>Abbildung 5: Durchschnittliche Dauer bei 1.000 Schlüsseln</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-6-700x421.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-6-700x421.png" alt="Abbildung 6: Durchschnittliche Dauer bei 10.000 Schlüsseln"></a></p>
<p>Abbildung 6: Durchschnittliche Dauer bei 10.000 Schlüsseln</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-7-700x425.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-7-700x425.png" alt="Abbildung 7: Durchschnittliche Dauer bei 100.000 Schlüsseln"></a></p>
<p>Abbildung 7: Durchschnittliche Dauer bei 100.000 Schlüsseln</p>
</li>
</ul>
<p>Zur bessern Übersicht zeigen die folgenden beiden Abbildungen die Messungen ohne <strong>array_intersect()</strong>. Man sieht, dass <strong>isset()</strong> bei Werten mit einer Länge von 1 zumindest bei der foreach-Schleife mithalten kann. Ob der strikte Vergleich ein Nachteil ist, kann man schwer sagen. In der foreach-Schleife ist der strikte Vergleich minimal schneller, die anderen Methoden sind mit dem strikten Vergleich etwas langsamer. Tendentiell scheint <strong>non strict</strong> aber <strong>immer etwas schneller</strong> zu sein, wenn auch nur wenige Mikrosekunden.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-12-700x254.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-12-700x254.png" alt="Abbildung 12: Durchschnittliche Dauer ohne array_intersect()"></a></p>
<p>Abbildung 12: Durchschnittliche Dauer ohne array_intersect()</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-11-700x261.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-11-700x261.png" alt="Abbildung 11: Durchschnittliche Dauer ohne array_intersect()"></a></p>
<p>Abbildung 11: Durchschnittliche Dauer ohne array_intersect()</p>
</li>
</ul>
<p>Wie machen sich die aktuellen PHP-Versionen im Vergleich? Das zeigt Abbildung 13**. Im Vergleich zu PHP 7.0 bringen Version 7.1 und 7.3 einen Geschwindigkeitsschub**. Nicht jedoch PHP 7.2, hier waren die Durchläufe im Schnitt viel langsamer als unter PHP 7.0. Am auffälligsten sind die Auswirkungen bei der foreach-Schleife. PHP 7.3 sorgt hier durchschnittlich 25% schnellere Durchläufe.</p>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-13.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-13-700x429.png" alt=""></a></p>
<p>Abbildung 13: Veränderung der durchschnittlichen Dauer je Methode und PHP-Version.</p>
<p>Ähnlich geht es beim Speicherverbrauch zu. Hier tut sich erst mit PHP 7.3 einiges, der Verbrauch sinkt um knapp 25%!</p>
<h2 id="fehlerquellen">Fehlerquellen</h2>
<p>Die gibt es. Zum einen meine zauberhafte Implementierung des Scripts. Wer weiß, ob mir da nicht irgendwo ein Fehler untergelaufen ist. Außerdem meine vielleicht etwas lasche Interpretation der Ergebnisse. Statistik war zwar Teil meines Studiums, aber erstens ist das lange her und zweitens hatte ich an dem Tag einen starken Kater. An die Party dazu kann ich mich in Teilen gut erinnern, die Vorlesung ist wie ausgelöscht.</p>
<p>Außerdem sollte erwähnt werden, dass ich den Server nebenbei auch als öffentlichen Web-Server benutze (allerdings ohne nennenswerte Auslastung). Die Messung habe ich deshalb nachts ausgeführt. Ich gehe aber trotzdem davon aus, dass die meisten Ausreißer auf dieses Setup zurückzuführen sind.</p>
<h3 id="ausreißer">Ausreißer</h3>
<p>Davon gibt es eine Menge. Die Ursache sind mannigfaltig und schwer nachvollziehbar. Ich habe hier nicht viel wissenschaftlichen Aufwand betrieben sondern nur die augenscheinlichen Fehlmessungen entfernt. Die folgenden Abbildungen sollen beispielhaft zeigen, wie oft und offensichtlich Ausreißer aufgetreten sind.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-8-700x690.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-8-700x690.png" alt="Abbildung 8: Ausreißer"></a></p>
<p>Abbildung 8: Ausreißer</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-9-700x450.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-9-700x450.png" alt="Abbildung 9: Durchschnittliche Dauer je Methode"></a></p>
<p>Abbildung 9: Durchschnittliche Dauer je Methode</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-10-700x543.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-10-700x543.png" alt="Abbildung 10: Durchschnittliche Dauer je Methode, bereinigt"></a></p>
<p>Abbildung 10: Durchschnittliche Dauer je Methode, bereinigt</p>
</li>
</ul>
<h2 id="static-optimization">Static Optimization</h2>
<p>Wenn man sich die Ergebnisse einmal anschaut, fällt etwas auf: Obwohl <strong>microtime()</strong> mit einer sehr hohen Genauigkeit misst, scheinen manche Methoden bereits nach 0 Sekunden fertig zu sein. Der Grund dafür dürfte einerseits natürlich die Hardware und andererseits die <a href="http://biagiocosenza.com/papers/PopovCC17.pdf">static optimization</a> sein. Das Feature übersteigt meinen Kompetenzbereich leider bei weitem, deswegen kann ich nur laienhaft daherplappern:</p>
<ul>
<li>Mit <em>sleep(0);</em> innerhalb der Zeitmessung (siehe auch oben) kann man dieses Feature ausbooten.</li>
<li>Und außerdem scheint es eine Art unteres Limit für diese &ldquo;schnellste Zeit&rdquo; zu geben. So gibt es Messungen mit größeren Arrays, die exakt die gleiche Dauer aufweisen: 0,000000953674 Sekunden. Wird das Array noch größer, dauert es sogar <strong>exakt</strong> doppelt so lang, nämlich 0,000001907349 Sekunden. Diese Reihe kann man in Grenzen weiterführen. Zufall? Fragen! Wer dazu eine fundierte Erklärung hat, kann das gerne in den Kommentaren mitteilen.</li>
</ul>
<p>Die folgenden Abbildungen zeigen die Häufigkeiten der unterschiedlicher Messwerte bis 10 Mikrosekunden. Auch hier ist noch mal interessant zu beobachten, wie die Messungen der Durchläufe kaum voneinander abweichen.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-14.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-14.png" alt="Abbildung 14: Verteilung der Messwerte für alle Messungen"></a></p>
<p>Abbildung 14: Verteilung der Messwerte für alle Messungen</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-15-700x171.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-15-700x171.png" alt="Abbildung 15: Verteilung der Messwerte für die foreach-Schleife (nicht strikter Vergleich)"></a></p>
<p>Abbildung 15: Verteilung der Messwerte für die foreach-Schleife (nicht strikter Vergleich)</p>
</li>
</ul>
<h2 id="fazit">Fazit</h2>
<p>Grundsätzlich sollte man eines nicht vergessen: Die Messungen finden im <strong>Mikrosekundenbereich</strong> statt. Selbst die langsamste Methode <strong>array_intersect()</strong> hat für große Arrays nur 120 Mikrosekunden benötigt, im Schnitt liegt die Dauer bei etwa 8 Millisekunden. Auch große Arrays (100.000 Schlüssel, 100 Zeichen je Wert) waren im Schnitt nach 45 Millisekunden abgefertigt. Soviel zu den subjektiven, absoluten Zahlen, die abhängig von den Begleitumständen natürlich weitaus schlechter aussehen können.</p>
<p>Im Vergleich mit allen anderen Methoden ist <strong>array_intersect()</strong> absolut keine Wahl. <strong>Isset()</strong> kann unter bestimmten Bedingungen tatsächlich das Mittel der Wahl sein (siehe oben), verliert im direkten Vergleich aber.</p>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-16.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-16-700x281.png" alt="Abbildung 16: Durchschnittliche Dauer insgesamt je Methode"></a></p>
<p>Abbildung 16: Durchschnittliche Dauer insgesamt je Methode</p>
<p>Interessant ist, dass der nicht strikte Vergleich insgesamt etwas schneller ist - außer bei der Verwendung der foreach-Schleife! Diese ist allerdings grundsätzlich fast doppelt so langsam wie die anderen Methoden. Und diese liegen fast immer gleich auf so das man sagen kann, dass es hier keine Präferenz gibt.</p>
<p><a href="https://www.nickyreinert.de/files/in-einem-array-suchen-mit-foreach-in_array-isset-oder-intersect-was-ist-schneller/grafik-17.png"><img src="/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/images/grafik-17-700x238.png" alt=""></a></p>
<p>Abbildung 17: Durchschnittliche Dauer insgesamt der schnellsten Methoden.</p>
<p>Um es mit den Worten einer weisen Philosophin zu sagen: <em>&ldquo;Ich kann Dir nur die Tür zeigen. Hindurchgehen musst Du alleine&rdquo;</em>. Nutze die Erkenntnisse dafür, die richtige Methode für den richtigen Zweck zu wählen. Du weißt nun, mit welcher Methode man einen großen Array in PHP optimal durchsuchen kann. Und nebenbei hast du vielleicht noch gelernt, welche Methoden es überhaupt gibt. Wenn dich das glücklich macht, habe ich mein Ziel erreicht.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>PHP - Mit welcher Methode durchsucht man ein Array am schnellsten? - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Zugriff nicht loggen, wenn ein bestimmter HTTP-Request-Header gesetzt ist</title>
      <link>http://localhost:1313/2018/2018-11-28-zugriff-nicht-loggen-wenn-ein-bestimmter-http-request-header-gesetzt-ist/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-11-28-zugriff-nicht-loggen-wenn-ein-bestimmter-http-request-header-gesetzt-ist/</guid>
      <description>OK, ich tu mich etwas schwer, das folgende in einen Titel zu gießen, der nicht länger ist, als die eigentlich Anleitung. Wenn du an deiner Webseite arbeitest, …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>OK, ich tu mich etwas schwer, das folgende in einen Titel zu gießen, der nicht länger ist, als die eigentlich Anleitung.&#39; reading_time: 2 content_type: &#39;tutorial</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>OK, ich tu mich etwas schwer, das folgende in einen Titel zu gießen, der nicht länger ist, als die eigentlich Anleitung. Wenn du an deiner Webseite arbeitest, möchtest du vielleicht vermeiden, dass deine Aufrufe mit deinem Browser im Log-File von <strong>nginx</strong> landen. Dafür gibt es eine Menge Möglichkeiten, ich mag die folgende aber besonders.</p>
<p>Zuerst benötigst du dafür ein Plugin, um den <strong>HTTP-Request-Header</strong> zu modifizieren. Ich nutze dafür <a href="https://addons.mozilla.org/en-US/firefox/addon/modheader-firefox/">ModHeader für Firefox,</a> für Chrome gibt es ähnliche Plugins. Dort legst du einen benutzerdefinierten Header an, dem du z.B. &ldquo;true&rdquo; als Wert zuweist. Bei diesem Plugin kannst du außerdem festlegen, dass der Header nur auf einer bestimmten Seite hinzugefügt wird.</p>
<p>[caption id=&ldquo;attachment_2395&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/zugriff-nicht-loggen-wenn-ein-bestimmter-request-header-gesetzt-ist/modHeader.png"><img src="/2018/2018-11-28-zugriff-nicht-loggen-wenn-ein-bestimmter-http-request-header-gesetzt-ist/images/modHeader-300x163.png" alt="ModHeader Firefox Plugin"></a> ModHeader Firefox Plugin[/caption]</p>
<p>Als nächstes definierst du in deiner nginx-Config eine Regel, die diesen Header ausliest:</p>
<p>map $http_ignoreMe $log_this {</p>
<pre><code>~true 0;

default 1;
</code></pre>
<p>}</p>
<p>Mit $http_ignoreMe sprichst du den zuvor angelegten Header an, $log_this erzeugt eine Variable, auf die du später zugreifen kannst. Enthält der Header &ldquo;true&rdquo; (~true), wird die Variable $log_this auf 0 gesetzt, ansonsten bleibt sie 1. Als nächstes öffnest du den Server-Bereich deiner Webseite und suchst nach deiner Logging-Einstellung (alternativ kannst du natürlich auch die globale Logging-Einstellung anpassen:</p>
<pre><code>access\_log /var/logs/access.log main if=$log\_this;
</code></pre>
<p>Der zweite Parameter ist das Log-File - natürlich. Der dritte Parameter verweist auf mein benutzerdefiniertes Log-Format, das muss hier nicht unbedingt stehen. Und am Ende schließlich kommt die Bedingung, dass nämlich nur geloggt wird, wenn $log_this wahr bzw. 1 ist. Jetzt startest du nginx neu&hellip; et voilá - Anfragen an deine Seite von deinem Browser aus werden ignoriert.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Zugriff nicht loggen, wenn ein bestimmter HTTP-Request-Header gesetzt ist - Tutorial</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Wordpress Debugging und Wartung oder: Keine Panik vor dem White Screen of Death und HTTP 500</title>
      <link>http://localhost:1313/2018/2018-11-18-wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-11-18-wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/</guid>
      <description>Deine Wordpress-Seite besteht nur aus einem weißen Bildschirm, dem HTTP-Fehlercode 500 oder lädt irsinnig langsam? White Screen of Death (WSoD), die …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Deine Wordpress-Seite besteht nur aus einem weißen Bildschirm, dem HTTP-Fehlercode 500 oder lädt irsinnig langsam.&#39; reading_time: 10 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Python, Web, Wordpress, Mac, Server, Ai, Automation</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Deine Wordpress-Seite besteht nur aus einem weißen Bildschirm, dem <strong>HTTP-Fehlercode 500</strong> oder lädt irsinnig langsam? <strong>White Screen of Death</strong> (WSoD), die berüchtigten <strong>500´er</strong> sowie lange <strong>Ladezeiten</strong> scheinen zu den größten Herausforderungen im Umgang mit WordPress zu gehören und sie hinterlassen regelmäßig lange Gesichter. Zwar gehören Ladezeit, PHP- und HTTP-Fehler nicht unbedingt zusammen, sie erfordern aber in der Regel das gleiche Vorgehen: Nämlich die <strong>Analyse</strong>, was da im <strong>Hintergrund</strong> so passiert.<br>
Die Suche nach der Ursache ist oft relativ simpel. Es sagt einem oft nur niemand. Der beliebteste Tipp bei Wordpress lautet oft:</p>
<blockquote>
<p><em>&ldquo;Deaktiviere mal alle Plugins und aktiviere sie nacheinander wieder.&rdquo;</em></p>
<p><em>Anonymer Ratgeber, Mai 2018</em></p></blockquote>
<p>Das ist alles andere als effizient, ja nicht einmal effektiv: Du erfährst nach 27 Minuten und zwei Tassen Kaffe, dass das Plugin &ldquo;Foobar&rdquo; für den Fehler verantwortlich ist, weil das den <strong>WSoD</strong> auslöst. Aber dann weißt du immer noch nicht, was genau der Fehler ist. Danke für nichts?</p>
<p>Tatsächlich gibt es nur <strong>drei Dinge</strong>, die dir helfen können, dir selber zu helfen, wenn WordPress dich mal wieder im Stich lässt. Und diese drei Werkzeuge zur <strong>Fehlersuche</strong> und <strong>Diagnose</strong> langsamer Wordpress-Installation stelle ich jetzt einmal vor:</p>
<h2 id="1-die-entwickler-konsole-deines-browsers">1. Die Entwickler-Konsole deines Browsers</h2>
<p>Dieses Werkzeug bringt mittlerweile jeder moderne Browser mit und das sollte auch die <strong>erste Anlaufstelle</strong> für dich sein. Welche Entwicklerkonsole du verwendest, ist deinem Geschmack überlassen, in der Funktionalität unterscheiden sie sich kaum. Du öffnest die Entwicklerkonsole auf vielfältige Weise über</p>
<ul>
<li>das Kontextmenü (Rechte Maustaste -&gt; Element untersuchen) oder</li>
<li>über mit der Funktionstaste F12 oder</li>
<li>mit dem Shortcut CTRL+SHIFT+I (Windows) / CMD+OPT+I (OS X)</li>
</ul>
<p>[gallery link=&ldquo;file&rdquo; columns=&ldquo;4&rdquo; ids=&ldquo;2356,2357,2358,2359&rdquo;]</p>
<h2 id="2-der-query-monitor---warum-ist-dein-wordpress-so-langsam">2. Der Query Monitor - warum ist dein Wordpress so langsam?</h2>
<p>Der <a href="https://de.wordpress.org/plugins/query-monitor/">Query Monitor</a> ist ein wirklich nützliches <strong>Plugin</strong> für Wordpress. Eines der wenigen. Du fragst dich, warum deine Seite so lange lädt und die Entwicklerkonsole gibt nicht vielmehr her als ein <strong>TTFB</strong> (Time To First Byte) von 60 Sekunden?</p>
<p>Die Entwicklerkonsole sagt dir nur, wie lange der Browser auf den Inhalt wartet. Hier kann maximal identifiziert werden, dass die reine Wartezeit (<strong>TTFB</strong>) 60 Sekunden beträgt und der Inhalt in 10 Sekunden heruntergeladen wird (die ganzen anderen Nerd-Kennzahlen jetzt mal außen vor gelassen). Letzteres liegt ziemlich wahrscheinlich an der Internetleitung von dir oder dem Hoster. Aber TTFB? Das ist im Grunde die Zeit, die der Server benötigt um die Ausgabe einmal zusammenzuschustern und zu deinem Browser zu schicken. Also das ganze PHP-Gedöns einmal &ldquo;interpretieren&rdquo; und ein paar Datenbankabfragen durchführen. Je umfangreicher deine WordPress-Seite ist (sprich Plugin-Vielfalt), desto mehr gibt es hier zu tun. Und was da im Hintergrund genau passiert, sagt dir der <strong>Query Monitor</strong>.</p>
<p>[gallery link=&ldquo;file&rdquo; columns=&ldquo;2&rdquo; ids=&ldquo;2354,2355&rdquo;]</p>
<p>Nach der Installation siehst du in der Admin-Toolbar erstmal ein paar oberflächliche Zahlen: <strong>Ladezeit,</strong> <strong>Größe</strong> und <strong>Anzahl der Queries.</strong> Wirklich spannend wird es, wenn du mal auf diese Zahlen klickst. Dann öffnet sich eine &ldquo;<em>Entwickler-Konsole&rdquo;,</em> die deiner WordPress-Seite mal gehörig unter die Haube schaut. Du siehst <strong>Datenbankabfragen,</strong> <strong>Scripte,</strong> <strong>Funktionen</strong> und alle möglichen Diagnostiken - einfach alles. Du kannst nun relativ zügig erkennen, ob manche Abfragen einfach nur doppelte durchgeführt wurden oder die Datenbank grundsätzlich zu langsam ist.</p>
<h2 id="3-der-debug-modus">3. Der Debug-Modus</h2>
<p>DasBbeste zum Schluss - der Debug-Modus verrät dir wirklich alles und ist eigentlich der Premium-Weg der Problemlösung.</p>
<p>Du wirst nur selten erleben, dass Wordpress bzw. dein Server dich wirklich gar nicht mit einer Fehlermeldung erhellen will. Der unliebsame <strong>White Screen of Death</strong> und der gefürchtete <strong>HTTP-Fehler 500</strong> sind im Grunde nur der Standardeinstellungen geschuldet. Du kannst dann entweder ein Ticket bei deinem Hoster öffnen und im nächsten Jahr mit einer Antwort rechnen oder versuchen, selber an die Fehlermeldung zu gelangen und das Problem eigenständig zu analysieren: <strong>Der geheime Trick</strong> lautet nämlich, einfach mal das Internet nach der Fehlermeldung zu durchsuchen. <strong>In 99,99% der Fälle</strong> bist du bei weitem nicht der erste mit diesem banalen Problem..</p>
<p>Die wahre Herausforderung ist allerdings, dass die Ausgabe von Fehlermeldungen eben standardmäßig unterdrückt  wird. Aus Gründen der Sicherheit und Bedienbarkeit ist das grundsätzlich nicht verkehrt. Wenn du doch mal wissen willst, woher der <strong>White Screen of Death</strong> wirklich kommt, gehst du folgendermaßen vor:</p>
<h3 id="a-du-aktivierst-die-fehlerausgabe-von-wordpress">A: Du aktivierst die Fehlerausgabe von Wordpress</h3>
<p>Dazu öffnest du die Datei wp-config.php, nachdem du sie lokal gespeichert hast, und setzt folgenden Parameter direkt an den Anfang, aber hinter das <em>&lt;?php</em>:</p>
<?php
define( 'WP\_DEBUG', true );
define( 'WP\_DEBUG\_LOG', true ); 
define('WP\_DEBUG\_DISPLAY', false);

Der 1. Parameter ist für das debuggen _essentiell:_ Damit aktivierst du die Ausgabe von Fehlermeldungen.

Mit dem 2. Parameter gibst du die Anweisung, dass die Fehlermeldungen in einer Datei gespeichert werden. Das ist aus zwei Gründen nützlich: Du kannst es später einfacher Nachvollziehen und außerdem solltest du vermeiden, dass Fehlermeldungen, die vielleicht sensible Informationen enthalten, direkt im Frontend landen.

Die besagte Datei befindet sich um Order /wp-content und heißt **debug.log**. etzt du **WP\_DEBUG\_LOG** auf true, wird Wordpress Fehlermeldungen in die Date _/wp-content/debug.log_ schreiben. Für die nachträgliche Analyse ist das sehr praktisch. Das funktioniert natürlich nur, wenn der Ordner beschreibbar ist. Andernfalls musst du diesen Parameter und den folgenden weglassen.

Der letzte Parameter sorgt noch einmal explizit dafür, dass die Fehlermeldungen nicht im Frontend angezeigt werden.

Neben diesen 3 Parameter gibt es noch **SCRIPT\_DEBUG**. Mit true aktiviert, sorgt dieser Schalter dafür, dass Wordpress die "echten" CSS- und JS-Dateien liest, anstatt der minifizierten. Das wird dich nur in Spezialfällen betreffen, solltest du aber kennen. Der nächste **Spezialparameter** in der Riege ist **SAVEQUERIES** - hiermit wird dir WordPress die Datenbank-Anfragen ausgeben. Auch das ist in der Regel nicht notwendig, aber gut zu wissen.

Denke daran, dass die Parameter im weiteren Verlauf der Config-Datei nicht wieder vorkommen und deine Einstellung so aufheben und vor allen, dass du die Parameter in einem Live-System nach der Fehlersuche **wieder auf _false_ zurücksetzen** solltest.

### B: Du aktivierst die Fehlerausgabe deines Servers

Eigentlich sollte dir **Nummero A** bereits weiterhelfen, denn damit wird auch die Fehlerausgabe von PHP aktiviert. Sollte deine Seite trotzdem weiß bleiben und dich nicht mit zusätzlichen Fehlernachrichten beglücken, kannst du etwas tiefer in die Trickkiste greifen. Diese Parameter machen im Grunde nichts anderes, als oben schon beschreiben ist, sie greifen allerdings etwas "früher" ein.

Ergänze, ebenfalls direkt hinter dem _<?php_ der Datei _wp-config.php_ die folgenden Zeilen:

<?php
error\_reporting(E\_ALL);
ini\_set('display\_errors', 1);
ini\_set('display\_startup\_errors', 1);
// ini\_set("log\_errors", 1);
// ini\_set("error\_log", "/pfad/zu/wordpress/temp/php-error.log");

Die beiden letzten Zeilen aktivieren, ähnlich wie oben, dass PHP Fehlermeldungen in eine Datei schreibt. Da die Log-Datei bei der ad hoc Fehlersuche nicht zwingend hilfreich ist, sind diese beiden Zeilen auskommentiert.

Wenn du den Pfad zu deiner Installation nicht kennst, bekommst du sie mit folgendem PHP-Befehl heraus. Wenn du diese Information nicht mehr benötigst, entferne sie aber sofort aus deinem Script. **Security through obscurity** - das _Document Root_ geht niemanden außer dich etwas an!

var\_dump($\_SERVER\["DOCUMENT\_ROOT"\]);

Achtung: Auf manchen Seiten wird dir empfohlen, den Zeilen ein @ vorzustellen. Das ist **ziemlich kontraproduktiv** - denn [das @ am Anfang der Zeile unterbindet Fehlermeldungen](http://php.net/manual/de/language.operators.errorcontrol.php) und weshalb bist du hier? Genau...

Das ist aber noch nicht alles - die Trickkiste ist noch tiefer. Doch obacht! Das folgende ist **Premium-Klasse-Debuggung** und auf den meisten Shared-Hostern gar nicht möglich. Die essentiellen Parameter befinden sich in der ersten Zeile. Die noch tiefergreifenden und wirklich nur in absoluten Sonderfällen benötigten Einstellungen sind darunter aufgeführt.

Öffne die Datei **.htaccess** und ergänze die folgenden Zeilen - auch hier gilt, achte darauf, dass die Parameter nicht an anderer Stelle ungewollt überschrieben werden:

\# Easy-Peasy Lemon-Squeezy:
php\_flag display\_startup\_errors on
php\_flag display\_errors on
php\_flag html\_errors on
php\_flag log\_errors on

# Fürs Protokoll: Wenn du das volle Entertainment brauchst
# nimm auch das hier mit - für alle Copy&Paste-Cowbowys, die 
# den Warnhinweis nicht lesen, habe ich die Zeilen auskommentiert
# php\_flag ignore\_repeated\_errors off
# php\_flag ignore\_repeated\_source off
# php\_flag report\_memleaks on
# php\_flag track\_errors on
# php\_value docref\_root 0
# php\_value docref\_ext 0
# php\_value error\_log /pfad/zu/wordpress/temp/php-error.log
# php\_value error\_reporting -1
# php\_value log\_errors\_max\_len 0

# <Files php\_errors.log>
#      Order allow,deny
#      Deny from all
#      Satisfy All
# </Files>

Warum A und warum B? Es ist möglich, dass die Server-Konfiguration es aus Sicherheitsgründen nicht zulässt, dass diese sogenannten **PHP-Direktiven** (aka Parameter) an beliebigen Stellen (aka .htaccess, in der PHP-Datei, ...) konfiguriert wird. Deshalb.  
Und was ist mit C - der **php.ini**\-Datei? Gute Frage, werter Leser, die bei dir ein gewisses Grundwissen erkennen lässt. Chapeau. In dem Fall gehe ich sehr stark davon aus, dass du Zugriff auf eben diese Datei hast. Und wer Zugriff auf diese Datei hat, mit diesem Vorwissen, ist ziemlich sicher und hoffentlich mit der notwendigen Erfahrung ausgestattet. Andernfalls: Ruf deinen SysOp an. ;) Fühle dich trotzdem herzlich dazu eingeladen, diesen Beitrag mit etwas zuästzlichem Fachwissen in den **Kommentaren** zu bereichern.

### C: Den Debug-Modus bei deinem Hoster aktivieren

Bei der Einstellung des Debug-Modus gibt es eine Hierarchie. Die Debug-Einstellung in der PHP-Datei (**wp-config.php**) ist hierbei die oberste Ebene, darunter folgt die Einstellung in der **.htaccess-Datei** und auf unterster Ebene lässt sich diese Funktion in der Einstellung des Servers bzw. PHP-Interpreters direkt einstellen (z.B. **php.ini**). Damit unbedarfte Laien wie wir an dieser Datei nicht wahllos rumfingern, ist bleibt uns diese Möglichkeit entweder komplett verwehrt oder ist nur über das Interface bei deinem Hoster einstellbar. Dort kann der Hoster auch festlegen, dass diese Einstellung (in Fachkreisen gerne auch **Direktive** genannt) in den Ebenen darüber gar nicht anpassen werden darf - **Schritt A und B bleiben also unwirksam.** Das ist der Zeitpunkt, wenn du in den Einstellungen bei deinem Hoster nach dieser Einstellung suchst - oder den Hoster darum bittest, den Debug-Modus für dich zu aktivieren.

Bei HostEurope kannst du das z.B. sehr leicht selber tun:

[![Host Europe Debug Modus aktivieren ](images/host_europe_debug_aktivieren-300x232.png)](https://www.nickyreinert.de/files/wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/host_europe_debug_aktivieren.png)

Host Europe Debug Modus aktivieren

## Freibier - Nachwort - Lies  mich!

Das ist jetzt wirklich wichtig: Wie immer, und oben bereits erwähnt, gilt auch hier: **Security through obscurity**.

> Wenn du den Debug-Modus auf dem Live-System nicht mehr benötigst, deaktiviere ihn. Basta.

Auf **Live-Systemen** hat der **Debug-Modus nur in Ausnahmefällen** etwas verloren. Und Fehler sollten zur Ausnahme zählen. Und auch, wenn du hier nur ein wenig an den PHP-Dateien rumschraubst, wobei eigentlich nicht viel kaputt gehen kann:

> Denke an die obligatorische Sicherungskopie.

Und jetzt viel Spass beim d_ebuggen_...

Ach ja - wenn all das da oben nicht funktioniert, dann kannst du tatsächlich auch mal den Holzhammer rausholen: **Plugins aktivieren und deaktivieren**. In der Regel helfen dir die hier geschilderten Schritte aber, genau diesen mühsamen Schritt zu übergehen.

        
        
        <div class="tags">
          <p><strong>Tags:</strong> wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death-und-http-500</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wordpress Debugging und Wartung oder: Keine Panik vor dem White Screen of Death und HTTP 500 - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Was ist HTTP/3 bzw. HTTP over QUIC oder kurz QUIC?</title>
      <link>http://localhost:1313/2018/2018-11-13-was-ist-http-3-bzw-http-over-quic-oder-kurz-quic/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-11-13-was-ist-http-3-bzw-http-over-quic-oder-kurz-quic/</guid>
      <description>UPDATE: Eine ausführliche Version dieses Artikels erschien im August 2019 im Entwickler-Magazin.
Die meisten wissen noch nicht einmal, was HTTP/2 eigentlich …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>**UPDATE**: Eine ausführliche Version dieses Artikels erschien im August 2019 [im Entwickler-Magazin](https://entwickler.de/online/web/http3-quic-einfuehrung-579902482.html).&#39; reading_time: 4 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Server, Ai, Security, Design</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><strong>UPDATE</strong>: Eine ausführliche Version dieses Artikels erschien im August 2019 <a href="https://entwickler.de/online/web/http3-quic-einfuehrung-579902482.html">im Entwickler-Magazin</a>.</p>
<p>Die meisten wissen noch nicht einmal, was <strong>HTTP/2</strong> eigentlich ist, geschweige denn, dass es überall eingesetzt wird, da bahnt sich schon der Nachfolger an, genannt <strong>HTTP/3</strong>. Vor ein paar Jahren hat Google sich mit der Optimierung der Kommunikation im Internet beschäftigen. Früher ging daraus <strong>SPDY</strong> hervor, <a href="https://en.wikipedia.org/wiki/HTTP/2">aus dem schließlich HTTP/2 hervorging.</a> Das nächste Entwicklungs-Projekt aus dem Google-Labor hört nun auf den Namen <a href="https://www.golem.de/news/internet-protokoll-quic-soll-der-neue-kick-fuer-sicheres-surfen-werden-1611-123738.html">QUIC</a> - was ausgesprochen für <a href="https://de.wikipedia.org/wiki/Quick_UDP_Internet_Connections">Quick UDP Internet Connections</a> steht.</p>
<h2 id="das-schichten-modell">Das Schichten-Modell</h2>
<p>Bevor man das ganze verstehen kann, möchte ich ganz grob noch mal auf eine wichtige Grundlage eingehen, dem <a href="https://de.wikipedia.org/wiki/OSI-Modell">OSI-Schichten-Modell</a>. Das klingt kompliziert, ist es auch. Es reicht allerdings völlig aus, wenn man das Prinzip dahinter versteht: Die Webseite, die dir dein Browser hier anzeigt, kommt aus dem Netzwerk-Kabel in deinem Laptop (oder über dein WLAN&hellip;). Das sind allerdings nur ein paar elektronische Signale, die dein Browser so sicher nicht verstehen kann. Dieses ziemlich einfache elektronische Signal muss deshalb erst auf verschiedenen Stufen bzw. Schichten verarbeitet werden, bis daraus das berühmte HTML extrahiert wird, mit dem auch dein Browser arbeiten kann.</p>
<p>Das OSI-Schichten-Modell besteht aus 7 dieser Schichten. Die ersten 6 Schichten dürften dich nicht weiter interessieren, die ursprünglich elektronischen Daten werden hier nach immer weiter &ldquo;ausgepackt&rdquo;. Dabei werden immer mehr Informationen und Daten extrahiert und an die darüber liegende Schicht weitergegeben. Jede Schicht erfüllt so eine spezielle Aufgabe, angefangen bei der eigentlichen physikalischen Übertragung, über die Qualitätssicherung bis hin zur Darstellung in einer Anwendung, wie dem Browser.</p>
<p>Genau das passiert in der 7. Schicht, über die der HTML-Code für deinen Browser zur Verfügung gestellt wird. Eine dieser Schichten nun, nämlich die 4., ist für den Transport zuständig. Dort wird u.a. das schon ziemlich in die Jahre gekommene TCP - Transmission Control Protokoll - eingesetzt. Eine Alternative dazu ist UDP, das etwas schneller aber auch ungesichert funktioniert. Soviel zu den langweiligen und verzwickten technischen Einzelheiten.</p>
<h2 id="quic">QUIC</h2>
<p>Google hat nun auf Basis von UDP ein eigenes Protokoll für diese Schicht entwickelt: QUIC. QUIC kombiniert, ganz stark reduziert, die Vorteile von TLS, HTTP/2, TCP und UDP und bietet so z.B. schnelle, verschlüsselte Verbindungen an. Google nutzt QUIC bereits <a href="https://www.golem.de/news/google-auf-spdy-folgt-quic-1306-100077.html">seit 2013</a> auf den eigenen Servern, <a href="https://www.heise.de/newsticker/meldung/Google-will-neues-Netzwerk-Protokoll-fuers-Web-2614437.html">seit Version 29</a> versteht auch der hauseigene Browser Chrome QUIC. Sogar Opera soll QUIC seit Version 16 unterstützen. Die Entwicklung steckt also lange nicht mehr in den Kinderschuhen.</p>
<h2 id="http-over-quic">HTTP over QUIC</h2>
<p>Mit HTTP hat das ganze freilich noch nicht viel zu tun, denn das liegt ja eine Schicht weiter oben. Die <strong>Internet Engineering Task Force</strong> hat sich aus diesem Grund in zwei Arbeitsgruppen mit QUIC beschäftigt. Daraus entstand einerseits eine standardisierte Fassung von QUIC, die inoffiziell den namen <strong>iQUIC</strong> trägt, als Abgrenzung zur inoffiziellen Bezeichnung <strong>gQUIC</strong> für Googles Original-Protokoll.</p>
<p>Und außerdem arbeitet man am neuesten HTTP-Standard, HTTP over QUIC, bzw. HTTP/QUIC oder ganz offiziell: HTTP/3. Diese Entkopplung ermöglicht jetzt, dass neben HTTP auch andere Protokolle der oberen Anwendungsschicht, wie z.B. E-Mail, QUIC nutzen können.</p>
<p><a href="https://blog.cloudflare.com/the-road-to-quic/">Laut Cloudfare</a> soll noch dieses Jahr ein finaler offzieller Standard zu QUIC verabschiedet werden. Da aber wie gesagt HTTP/2 eher noch ein Exot zu sein scheint, wird es vermutlich noch eine Weile dauern, bis HTTP/3 entsprechend weit verbreitet ist.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Was ist HTTP/3 bzw. HTTP over QUIC oder kurz QUIC? - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Termine buchen im BA Friedrichshain/Kreuzberg</title>
      <link>http://localhost:1313/2018/2018-11-12-termine-buchen-im-ba-friedrichshain-kreuzberg/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-11-12-termine-buchen-im-ba-friedrichshain-kreuzberg/</guid>
      <description>Frei nach dem Motto: Auch die kleinen Dinge sind wichtig, hab ich mal alle meine L33T-Haxx0r-Skillz herausgeholt und 13 Minuten in einen kleinen Bug auf den …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 3 content_type: &#39;review</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Frei nach dem Motto: Auch die kleinen Dinge sind wichtig, hab ich mal alle meine L33T-Haxx0r-Skillz herausgeholt und 13 Minuten in einen kleinen Bug auf den behördlichen Seiten der Berliner Bezirksämter investiert.</p>
<p>Willst du einen <strong>Termin</strong> beim <strong>Bezirksamt</strong> Friedrichshain/Kreuzberg von Berlin <strong>buchen</strong>, weil das telefonisch nicht möglich ist? Dann stehst du vor einer kleinen Herausforderung: Das funktioniert nämlich ausgerechnet bei diesem Bezirksamt nicht. Die <a href="https://service.berlin.de/dienstleistung/318991/">Übersichtsseite für die Terminbuchung</a> führt beim Klick auf &ldquo;<a href="https://www.berlin.de/terminvereinbarung/termin/tag.php?id=383&amp;anliegen=318991&amp;dienstleister=0&amp;termin=1&amp;herkunft=1">Termin buchen</a>&rdquo; nur zu einer lapidaren Fehlermeldung, während alle anderen Links zu funktionieren scheinen:</p>
<p>[caption id=&ldquo;attachment_2319&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/termine-buchen-im-ba-friedrichshain-kreuzberg/fehlermeldung_ba_xberg-fhain.png"><img src="/2018/2018-11-12-termine-buchen-im-ba-friedrichshain-kreuzberg/images/fehlermeldung_ba_xberg-fhain-300x81.png" alt="Fehlermeldung Terminbuchung Bezirksamt Friedrichshain/Kreuzberg"></a> Fehlermeldung Terminbuchung Bezirksamt Friedrichshain/Kreuzberg[/caption]</p>
<p>Das Problem ist, dass es erstens keinen anderen Weg gibt, um an die Terminplanung zu kommen - oder diese sehr gut versteckt ist. Du kannst jetzt also die Id für die Logdatei am Telefon den vermutlich irritierten BA-Mitarbeiter/innen mitteilen oder das Problem selber fixen. Das ist nämlich gar nicht so schwierig. Außerdem gibt es auch gar keine E-Mail-Adresse, an die man sich wenden kann. Also schauen wir mal, was da falsch läuft.</p>
<p>Das ist die URL, die sich hinter dem defekten Link versteckt:</p>
<p><a href="https://www.berlin.de/terminvereinbarung/termin/tag.php?id=383&amp;anliegen=318991&amp;dienstleister=0&amp;termin=1&amp;herkunft=1">https://www.berlin.de/terminvereinbarung/termin/tag.php?id=383&anliegen=318991&dienstleister=0&termin=1&herkunft=1</a></p>
<p>Und so sieht die URL aus, die hinter einem funktionierenden Link zur Terminbuchung steckt:</p>
<p><a href="https://service.berlin.de/terminvereinbarung/termin/tag.php?termin=1&amp;dienstleister=122900&amp;anliegen">https://service.berlin.de/terminvereinbarung/termin/tag.php?termin=1&dienstleister=122900&anliegen</a>[]=318991&amp;herkunft=1</p>
<p>Offenbar hat sich also etwas an der internen Struktur geändert und man vergessen, die Verknüpfung für das Bezirksamt Fhain/Xberg anzupassen. Was hat sich geändert? Zunächst einmal lautet die Domain offenbar <strong>service.berlin.de,</strong> nicht mehr <strong><a href="https://www.berlin.de">www.berlin.de</a>.</strong> Das ist aber nicht der fehlerhafte Teil, beide Domains funktionieren.</p>
<p>Außerdem wird der GET-Parameter <em><strong>anliegen</strong></em> wohl als Array erwartet: <strong><em>anliegen[]</em></strong>. Außerdem ist der Parameter <em><strong>dienstleister</strong></em> nicht gesetzt, der wohl die Id für die entsprechende Abteilung erwartet. Die Id für das Standesamt im BA Fhain/Xberg findet man in der URL zur Übersichtsseite dieser Behörde:</p>
<p><a href="https://service.berlin.de/dienstleistung/318991/standort/122898/">https://service.berlin.de/dienstleistung/318991/standort/122898/</a></p>
<p>Die Id 318991 steht für das Bezirksamt selber, die Id für das Standesamt ist <strong>122898</strong>, das Jugendamt versteckt sich hinter der Id <strong>123593</strong>. Das die Terminverbeinbarung nur für das Standesamt funktioniert, packen wir dessen Id also in eine funktionierende URL:</p>
<p><a href="https://service.berlin.de/terminvereinbarung/termin/tag.php?termin=1&amp;dienstleister=122898&amp;anliegen">https://service.berlin.de/terminvereinbarung/termin/tag.php?termin=1&dienstleister=122898&anliegen</a>[]=318991&amp;herkunft=1</p>
<p>Wenn du also einen Termin beim Standesamt vom Bezirksamt Friedrichshain/Kreuzberg buchen möchtest, nutze doch gerne diesen Link:</p>
<p><a href="https://service.berlin.de/terminvereinbarung/termin/tag.php?anliegen[]=318991&amp;dienstleister=122898&amp;termin=1&amp;herkunft=1">Termin buchen</a></p>

        
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Termine buchen im BA Friedrichshain/Kreuzberg - Review</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>NGinx mit PHP-FPM, MySQL und Xdebug mit Docker auf Mac OS einrichten</title>
      <link>http://localhost:1313/2018/2018-09-16-nginx-mit-php-fpm-mysql-und-xdebug-mit-docker-auf-mac-os-einrichten/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-09-16-nginx-mit-php-fpm-mysql-und-xdebug-mit-docker-auf-mac-os-einrichten/</guid>
      <description>Ich habe mich eine ganze weile erfolgreich vor Docker als lokale Entwicklungsumgebung gedrückt. Der Grund: Ich nutze eine kommerzielle Parallels Lizenz, über …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Ich habe mich eine ganze weile erfolgreich vor Docker als lokale Entwicklungsumgebung gedrückt.&#39; reading_time: 12 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Docker, Mac, Database, Server, Mobile</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Ich habe mich eine ganze weile erfolgreich vor <strong>Docker</strong> als lokale Entwicklungsumgebung gedrückt. Der Grund: Ich nutze eine kommerzielle Parallels Lizenz, über die ich Ubuntu virtualisiert laufen lasse und bin damit bisher ganz gut gefahren. Bisher. Paralles hat nämlich immer wieder Problem gemacht. So konnte ich nach manchen Updates von Parallels oder Ubuntu die <em>Parallels Tools</em> nicht mehr nutzen und musste diese umständlich neu installieren. Da die Doku dazu auch nur unvollständig vorliegt, war das regelmäßig eine ziemliche Zeitverschwendung. Die <em>Parallels Tools</em> sind aber notwendig, um von Ubuntu aus auf die Dateien des Gastsystems, Mac OS X, zuzugreifen.</p>
<p>Beim letzten Update auf Ubuntu 18.04 ließen sich die <em>Parallels Tools</em> gar nicht mehr installieren. Die Ursache dafür ist wohl irgendeine Inkompatibilität eines abhängigen Paketes mit dem neuen Linux-Kernel. Wie auch immer: Ich war die Sorgen leid und auf der Suche nach einer Alternative. Weshalb ich <strong>Docker</strong> stieß. Der Vorteil: Docker ist weitaus performanter und portabler. Der Nachteil: Um damit eine funktionierende Entwicklungsumgebung zu schaffen, kommt man um die Shell nicht herum. Das mitgelieferte UI Kitematic liegt noch als Beta vor und lässt einige Funktionen einfach vermissen. Es gibt also einige kleinere Fallstricke, die es zu überwinde galt. Was mir gelungen ist. Wie, das werde ich nun genauer erläutern. <em>Viel Spass</em>.</p>
<p>[caption id=&ldquo;attachment_2166&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/nginx-mit-php-fpm-und-mysql-mit-docker-auf-mac-os-einrichten/kitematic-scho%CC%88n-aber-noch-nutzlos.png"><img src="images/kitematic-scho%CC%88n-aber-noch-nutzlos-300x181.png" alt="Kitematic - schön aber (noch) weitestgehend nutzlos"></a> Kitematic - schön aber (noch) weitestgehend nutzlos[/caption]</p>
<h2 id="erste-schritte">Erste Schritte</h2>
<p>Grundsätzlich kann man bei der  Installation der Docker-Anwendung nicht viel falsch machen: Account anlegen, Docker herunterladen, installieren, anmelden - fertig. Auf die zugrunde liegende Technologie will ich hier nicht weiter eingehen, das machen andere weitaus besser (z.B. <a href="https://www.ab-heute-programmieren.de/docker-teil-1-was-ist-docker/">ist diese Anleitung sehr zu empfehlen</a>).</p>
<p>Nur soviel soll gesagt sein: Du lädst ein <strong>Image</strong> herunter, dass du dann <em>starten</em> kannst. Dadurch erhältst du einen <strong>Container</strong>, der bestimmte Dienste bereitstellt. Dieser Container ist kein vollständiges Betriebssystem mit all seinem Ballast. So kannst du z.B. nicht ohne weiteres per SSH darauf zugreifen. Das funktioniert nur, wenn der entsprechende SSH-Dienst auch im Image vorgesehen ist. Das schöne an Docker ist aber, dass du das Image mit beliebigen Funktionalitäten über ein sogenanntes <strong>Dockerfile</strong> relativ unkompliziert nachrüsten kannst. Das erfordert zwar eine gewisse Umgewöhnung im Arbeitsablauf ab, bringt aber auch viele Vorteile mit sich.</p>
<p>Wer will kann sich mit der <strong>Kitematic UI</strong> durch die vorhandenen Docker-Images wühlen und auch direkt herunterladen. Diese stehen dann natürlich auch auf der Kommandozeile zur Verfügung. Mit <strong>docker image ls</strong> zeigst du alle verfügbaren Images an. Analog dazu listet <strong>docker container ls</strong> alle erstellten Container auf. Außerdem gibt es noch ein paar andere, für den Anfang ganz brauchbare Befehle:</p>
<p># alle lokal verfügbaren Images auflisten
docker image ls</p>
<h1 id="alle-gestarteten-bzw-erzeugten-container-auflisten">alle gestarteten bzw. erzeugten Container auflisten</h1>
<p>docker container ls</p>
<h1 id="die-kommandozeile-für-den-container-mit-dem-namen-mysql-die-kommandozeile-starten">die Kommandozeile für den Container mit dem Namen &ldquo;mysql&rdquo; die Kommandozeile starten</h1>
<p>docker exec -it mysql /bin/bash</p>
<h1 id="für-den-container-mit-dem-namen-mysql-das-setup-anzeigen">für den Container mit dem Namen &ldquo;mysql&rdquo; das Setup anzeigen</h1>
<p>docker inspect mysql</p>
<p>Für eine lokale Entwicklungsumgebung benötigt man zunächst einen <strong>HTTP- und einen MySQL-Server.</strong> Natürlich gehört zu jeder guten Entwicklungsumgebung auch ein Debugger - für PHP wäre das wohl <strong>xdebug</strong>. Ich nutze hier die beiden Images: <a href="https://hub.docker.com/r/richarvey/nginx-php-fpm/">nginx-php-fpm von Ric Harvey</a> und <a href="https://hub.docker.com/_/mysql/">das sehr aktuelle und offizielle MySQL-Image</a>, die ich erstmal ganz unkompliziert über Kitematic herunterlade. Das nginx-Image werde ich schließlich mit einem <strong>Dockerfile</strong> anpassen um auch <strong>xdebug</strong> nutzen zu können.</p>
<p>[caption id=&ldquo;attachment_2167&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/nginx-mit-php-fpm-und-mysql-mit-docker-auf-mac-os-einrichten/kitematic-auswahl-von-images.png"><img src="/2018/2018-09-16-nginx-mit-php-fpm-mysql-und-xdebug-mit-docker-auf-mac-os-einrichten/images/kitematic-auswahl-von-images-300x152.png" alt="Die Auswahl neuer Images über Kitematic ist sehr bequem"></a> Die Auswahl neuer Images über Kitematic ist sehr bequem[/caption]</p>
<p>Ab hier verlasse ich Kitematic allerdings wieder und werde Docker nur noch über die Kommandozeile und ein paar selbst geschriebene Scripte nutzen. Los gehts&hellip;</p>
<h2 id="den-mysql-container-starten">Den MySQL-Container starten</h2>
<p>&hellip; es mit dem MySQL-Container. Da der nginx-Container auf MySQL zugreift, muss der MySQL-Container auch zuerst dasein. Der Aufruf dafür sieht folgendermaßen aus:</p>
<p>docker run \
&ndash;name mysql \
&ndash;publish 3306:3306 \
&ndash;volume /Users/nicky/Development/MySQL:/var/lib/mysql \
&ndash;env MYSQL_ALLOW_EMPTY_PASSWORD=yes \
&ndash;env MYSQL_ROOT_HOST=% \
&ndash;detach \
&ndash;default-authentication-plugin=mysql_native_password \
mysql</p>
<p>Mit &ndash;name vergebe ich einen festen und vor allem lesbaren Namen. Ohne diesen Parameter würde Docker eine Id anlegen, die den Zugriff später aber unnötig kompliziert macht. Der Parameter <em>--publish</em> legt fest, welcher Port &ldquo;von draußen&rdquo; auf einen Port im Docker-Container gemappt wird. Da sich die Dateien für die Datenbank physikalisch natürlich nicht im Docker-Container, sondern im Dateisystem vom Host befinden, muss ich dem Container mitteilen, wie er darauf zugreifen kann. Das passiert mit dem Parameter <em>--volume</em>. Damit kann ich nich nur Ordner im Container verfügbar machen, sondern auch Dateien. Das ist ganz praktisch, um z.B. Configurations-Dateien von außerhalb beim Start des Containers mitzuliefern.</p>
<p>Der Parameter <em>--env</em> dient dazu, Umgebungsvariablen zu setzen. Diese sind natürlich abhängig vom verwendeten Container. Für den MySQL-Container möchte ich hier zwei Parameter übergeben: Ich will eine Root-Benutzer ohne Passwort anlegen (<em>MYSQL_ALLOW_EMPTY_PASSWORD</em>) (das mag unsicher erscheinen, da ich hier aber lokal nur mit Testdaten arbeite, ist das erstmal einfach nur pragmatisch). Außerdem soll sich jeder Client verbinden können, also setzte ich <em>MYSQL_ROOT_HOST</em> auf %.</p>
<p>Eine Besonderheit ist der Parameter <em>default-authentication-plugin</em>. Wenn du ein Root-Passwort vergibst, solltest du zusätzlich diesen Parameter setzen. Zur Erklärung: Es handelt sich hier um ein MySQL 8-Image. Dort wird als Authentifizierungs-Methode <em>caching_sha2_password</em> verwendet, was sich mit Docker leider nicht verträgt und mit dieser Fehlermeldung quittiert wird:</p>
<blockquote>
<p>Unable to load authentication plugin &lsquo;caching_sha2_password</p></blockquote>
<p>Und schließlich gibt es noch den Parameter &ndash;detach, der einfach dafür sorgt, dass der Container im Hintergrund gestartet wird.</p>
<p>Das war es fast. Was jetzt noch fehlt, ist der Name des Images, dass die Grundlage für deinen neuen Container bilden soll: <em>mysql</em>. Wenn das Image lokal nicht vorhanden ist, lädt Docker es hilfsbereiterweise einfach herunter.</p>
<p>Es empfiehlt sich, den Aufruf in ein Shell-Script zu packen und diese Zeilen voranzustellen. Beim Aufruf wird also ein vorhandener Container erst gestoppt und gelöscht und dann neu gestartet:</p>
<p>#!/bin/bash
docker stop mysql
docker rm mysql
docker run \
&ndash;name mysql \
-p 3306:3306 \
-v /Users/nicky/Development/MySQL:/var/lib/mysql \
-e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
-e MYSQL_ROOT_HOST=% \
-d \
&ndash;default-authentication-plugin=mysql_native_password \
mysql</p>
<p>Et voilà: Ein MySQL-Server im Docker-Container auf Knopfdruck!</p>
<h2 id="den-http-container-starten">Den HTTP-Container starten</h2>
<p>Am Vorgehen ändert sich nicht viel. Auch für den <strong>nginx-Server</strong> erstelle ich mir ein kleines Script. Dieses befindet sich aber in einem Unterordner meiner Wordpress-Installation. Mit dem Platzhalter <strong>${PWD}</strong> im Parameter <em>--volume</em> kann ich Docker das aktuelle Verzeichnis mitgeben. Dadurch kann  ich das Script auch innerhalb andere Wordpress-Installationen verwenden (und muss lediglich den Namen des Containers anpassen). Hier sorge ich also dafür, dass Docker das aktuelle Verzeichnis als Root-Verzeichnis für den HTTP-Server nutzt. Außerdem liefere ich eine eigene ini-Datei für PHP mit. Wichtig ist außerdem die Verknüpfung zu meinem zuvor erstellen MySQL-Container über den Parameter <em>--link</em>. Der Rest wird analog des ersten Containers vorgegeben: Port, Name, Image, usw.</p>
<p>#!/bin/bash
docker stop nickyreinert-de
docker rm nickyreinert-de
docker run \
&ndash;link mysql \
&ndash;name nickyreinert-de \
&ndash;volume ${PWD}/dev/wordpress.ini:/usr/local/etc/php/conf.d/uploads.ini \
&ndash;volume ${PWD}:/var/www/html \
&ndash;publish 80:80 \
&ndash;detach \
richarvey/nginx-php-fpm</p>
<h2 id="xdebug-installieren">xdebug installieren</h2>
<p>Leider liefert das nginx-Image kein <strong>xdebug</strong> mit. Bzw: Zurecht - der Sinn des ganzen Konzeptes ist es ja, schlanke Container nutzen zu können. Eine All-In-One-Lösung entspräche letztlich ja wieder einer kompletten virtuellen Maschine. Für mich jedenfalls heißt das, dass ich das nginx-Image nun irgendwie mit <strong>xdebug</strong> füttern muss. Das passiert mit <strong>docker build</strong>. Dazu benötige ich zunächst ein Dockerfile, dass auch genau so heißt und folgendermaßen aufgebaut ist - Erklärung folgt darunter:</p>
<p>FROM richarvey/nginx-php-fpm</p>
<p>RUN apk add &ndash;no-cache &ndash;virtual .phpize-deps $PHPIZE_DEPS
RUN apk add &ndash;no-cache nano</p>
<p>RUN pecl install xdebug
RUN echo &lsquo;zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so&rsquo; &raquo; /usr/local/etc/php/php.ini
RUN touch /usr/local/etc/php/conf.d/xdebug.ini; \
echo xdebug.remote_enable=1 &raquo; /usr/local/etc/php/conf.d/xdebug.ini; \
echo xdebug.remote_autostart=1 &raquo; /usr/local/etc/php/conf.d/xdebug.ini; \
echo xdebug.remote_connect_back=0 &raquo; /usr/local/etc/php/conf.d/xdebug.ini; \
echo xdebug.remote_host=192.168.0.11  &raquo; /usr/local/etc/php/conf.d/xdebug.ini; \
echo xdebug.remote_port=9000 &raquo; /usr/local/etc/php/conf.d/xdebug.ini; \
echo xdebug.remote_log=/tmp/php-xdebug.log &raquo; /usr/local/etc/php/conf.d/xdebug.ini;</p>
<p>Zunächst einmal lege ich mit <em>FROM</em> fest, welches Images als Grundlage genutzt werden soll - in meinem Fall also nginx-php-fpm von richarvey. Mit <em>RUN</em> übergebe ich dann, zum Image passende, Befehle. So könnte ich xdebug zum Beispiel einfach mit pecl install xdebug installieren lassen. Du wirst dann aber recht schnell feststellen, dass das nicht ohne weiteres funktioniert. PHP ist in diesem Docker-Image natürlich nur mit den wichtigsten Paketen eingerichtet, <em>phpize</em> gehört so z.B. nicht dazu und der Aufruf würde mit folgender Fehlermeldung quittiert werden:</p>
<p>Cannot find autoconf. Please check your autoconf installation and the # $PHP_AUTOCONF environment variable. Then, rerun this script.</p>
<p>Die Lösung ist, <em>phpize</em> im Voraus mit allen notwendigen Abhängigkeiten zu installieren. Dazu dient der Aufruf</p>
<p>RUN apk add &ndash;no-cache &ndash;virtual .phpize-deps $PHPIZE_DEPS</p>
<p>Das das nicht immer so umfangreich vonstatten gehen muss, soll die Installation des Texteditors <em>nano</em> zeigen: Man kann gewünschte Pakete auch einfach mit <em>apk add <paketname></em> zum Docker-Image hinzufügen. Der apk-Parameter <em>--virtual</em> besagt, dass die genannten Pakete zu einem &ldquo;virtuellen Paket&rdquo; hinzugefügt werden, dass sich dann mit <em>apk del <paketname></em> leicht wieder entfernen lässt. Danach schließlich kann <strong>xdebug</strong> mit <em>pecl install</em> installiert werden. Die letzten beiden RUN-Aufrufe sorgen dafür, dass eine Standard-Konfiguration für xdebug eingerichtet wird. Hier wird es tatsächlich noch etwas tricky, wenn es um den <em>remote_host</em> geht. Docker lässt den Container später in einem eigenen Netzwerk laufen. Der Docker-Host, also in meinem Fall OS X,erhält dafür eine eigene IP-Adresse, wie z.B. 172.17.0.1. Das Problem: Das ist nicht die IP-Adresse, unter der OS X bzw. der Debug-Client (z.B. Visual Studio Code) erreichbar ist. Jeder Debug-Versuch wurde (in meinem Fall) in <em>/tmp/php-xdebug.log</em> mit folgender Fehlermeldung quittiert:</p>
<p>W: Creating socket for &lsquo;127.0.0.1:9000&rsquo;, poll success, but error: Operation in progress (29).</p>
<p>Der Remote-Host ist also die tatsächliche IP-Adresse deines Hosts, unabhängig von Docker. Hier demnach die IP-Adresse <em>192.168.0.11</em>.</p>
<p>Zum Abschluss muss das Dockerfile nur noch verarbeitet werden. Das passiert mit folgendem Aufruf:</p>
<p>docker build &ndash;tag nginx-php-fpm-xdebug .</p>
<p>Mit dem Parameter <em>--tag</em> gibst du dem modifizierten Image einen eigenen Namen. Der letzte Parameter - ein Punkt - zeigt docker, in welcher Datei sich die Build-Anweisung befindet. Docker sucht standardmäßig nach einer Datei mit dem Namen Dockerfile. Deshalb verweise ich mit dem Punkt einfach nur auf den aktuellen Ordner, in dem sich diese Datei auch befindet.</p>
<p>Docker wird nun die Anweisungen aus dem Dockerfile verarbeiten und ein neues Image erzeugen. Der erste Aufruf wird etwas länger dauern. Wenn du an dem Dockerfile nur geringfügige Änderungen vornimmst und den build-Prozesse erneut startest, ist Docker so clever und nimmt nur die notwendigen Änderungen vor - alles andere befindet sich bereits in einer Art &ldquo;Zwischenspeicher&rdquo;.</p>
<p>Denke nun daran, den oben bereits zusammengebauten Container-Aufruf des HTTP-Servers den Image-Name anzupassen: <em>nginx-php-fpm-xdebug</em>!</p>
<h2 id="visual-studio-code">Visual Studio Code</h2>
<p>Der Vollständigkeit halber möchte ich nun noch die Schritte dokumentieren, die bei Microsofts Visual Studio Code (VSC) notwendig sind. Hier installiert man zunächst das Paket <strong>PHP Debug</strong>. Im Debug-Bereich fügt man dann eine neue Konfiguration hinzu, die VSC mitteilt, unter welcher IP-Adresse xdebug erreichbar ist - nämlich 127.0.0.1 und dem üblichen Port: 9000:</p>
<p>{
// Use IntelliSense to learn about possible attributes.
// Hover to view descriptions of existing attributes.
// For more information, visit: <a href="https://go.microsoft.com/fwlink/?linkid=830387">https://go.microsoft.com/fwlink/?linkid=830387</a>
&ldquo;version&rdquo;: &ldquo;0.2.0&rdquo;,
&ldquo;configurations&rdquo;: [
{
&ldquo;name&rdquo;: &ldquo;Listen for XDebug&rdquo;,
&ldquo;type&rdquo;: &ldquo;php&rdquo;,
&ldquo;request&rdquo;: &ldquo;launch&rdquo;,
&ldquo;port&rdquo;: 9000,
&ldquo;host&rdquo;: &ldquo;127.0.0.1&rdquo;
}
]
}</p>
<p>Fertig. Mit einem Klick auf den grünen Playbutton wird VSC sich nun mit xdebug verbinden.</p>
<p>[caption id=&ldquo;attachment_2199&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/nginx-mit-php-fpm-und-mysql-mit-docker-auf-mac-os-einrichten/visual-studio-code-den-debugger-starten.png"><img src="/2018/2018-09-16-nginx-mit-php-fpm-mysql-und-xdebug-mit-docker-auf-mac-os-einrichten/images/visual-studio-code-den-debugger-starten-300x162.png" alt="Visual Studio Code - den Debugger starten"></a> Visual Studio Code - den Debugger starten[/caption]</p>
<h2 id="fazit">Fazit</h2>
<p>Docker hat mich voll überzeugt. Ich bereue es, dass ich nicht schon früher umgestiegen bin. Es läuft sauber und wenn man das Konzept erstmal verstanden hat, ist es auch sehr intuitiv zu bedienen und lässt vor allem keine Wünsche auf. Im Nachhinein betrachtet hat mich die komplette Einrichtung der virtuellen Maschine mit Ubuntu unter Parallels auch weitaus mehr Zeit - und Nerven! - gekostet. Was jetzt noch fehlt, ist das etwas dynamischere Verwalten mehrerer lokaler Websiten mit Docker. Dazu komme ich später - <em>stay tuned</em>.</p>
<h2 id="referenzen">Referenzen</h2>
<p>Mein Dank gilt <a href="http://paislee.io/a-minimal-development-server-with-nginx-and-docker/">Caleb Sotelo</a>, von wo ich einen Großteil der Scripte habe. Ein Teil des Dockerfiles stammt von <a href="https://blog.philipphauer.de/debug-php-docker-container-idea-phpstorm/">philipphauer.de</a>. Danke!</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>hosting</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>NGinx mit PHP-FPM, MySQL und Xdebug mit Docker auf Mac OS einrichten - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Checkliste - Wordpress Umzug</title>
      <link>http://localhost:1313/2018/2018-08-25-checkliste-wordpress-umzug/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-08-25-checkliste-wordpress-umzug/</guid>
      <description>Du hast Wordpress auf eine neue Domain oder einen neuen Hoster umgezogen und der Blog ist noch nicht erreichbar oder die Adresse verweist noch auf eine alte …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 7 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Du hast Wordpress auf eine neue Domain oder einen neuen Hoster umgezogen und der Blog ist noch nicht erreichbar oder die Adresse verweist noch auf eine alte Installation, obwohl du an alles gedacht hast? Da fragst du dich zurecht: Wo hängt&rsquo;s? Oder du hast den Umzug erst vor dir und willst wissen, woran du denken musst?</p>
<p>Dafür habe ich dir hier eine Checkliste der gängigen Fehlerquellen aufgestellt, die dir beim nächsten Mal helfen soll.</p>
<h3 id="vom-browser-zum-server">Vom Browser zum Server</h3>
<p>Um die potentiellen Fehler zu erkennen und zu verstehen ist es sehr hilfreich, den <strong>groben Ablauf</strong> zu kennen: Was passiert, wenn du deine Domain in den Browser eingibst? Denn meistens steckt der Fehler im Detail und man hat nur vergessen, an einer Stelle die nötigen Anpassungen vorzunehmen. Was passiert also, wenn ein Benutzer deine Website im Browser aufruft? Ich habe das ganze einmal sehr laienhaft und stark reduziert in einer Grafik zusammengefasst. Wenn du weißt, worum es geht, überspringe diesen Absatz oder schlage danach einmal die Hände über dem Kopf zusammen.</p>
<p><a href="https://www.nickyreinert.de/files/aufruf-einer-website-vereinfacht.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/aufruf-einer-website-vereinfacht-300x132.png" alt=""></a></p>
<p>Was passiert beim Aufruf einer Webseite im Browser</p>
<p>Der Browser, oder vielmehr der Computer, muss die Adresse der Website zunächst in die sogenannte IP-Adresse übersetzen lassen - durch einen <strong>DNS-Server</strong>. Anhand der <strong>IP-Adresse</strong> findet der Browser dann den Weg zum eigentlich <strong>Webserver</strong>. Dieser muss dann  wissen, dass die Website bei ihm existiert und kann deshalb auch auf den entsprechenden <strong>Ordner</strong> im Dateisystem verweisen. Dort wird die <strong>Web-Anwendung</strong>, also z.B. <strong>Wordpress</strong>, ausgeführt. Hier erfolgen auch die Zugriffe auf die Datenbank. Die <em>index.php</em> ist der zentrale <strong>Einstiegspunkt</strong>, von dem aus noch viele andere, vornehmlich PHP-Dateien, eingebunden werden.</p>
<h2 id="potentielle-fehlerquellen">Potentielle Fehlerquellen</h2>
<h3 id="dein-computer-und-der-dns-cache">Dein Computer und der DNS-Cache</h3>
<p>Damit dein Computer und der Browser nicht jedes mal beim DNS-Server nachfragen müssen, welche IP-Adresse zu einer Website gehört, gibt es hier sog. <strong>Zwischenspeicher</strong>, auch <strong>Cache</strong> genannt. In <strong>Chrome</strong> kannst du diesen folgendermaßen deaktivieren.</p>
<ol>
<li>Rufe diese Adresse auf: chrome://net-internals/#dns</li>
<li>Klicke dort den Button &ldquo;Clear host cache&rdquo;</li>
</ol>
<p>In <strong>Firefox</strong> löschst du den DNS-Cache über die Datenschutz-Optionen in den Einstellung.</p>
<p>In beiden Browsern gibt es übrigens die Möglichkeit, den Cache permanent zu deaktivieren. Dazu musst du die <strong>Entwicklerkonsole</strong> öffnen (ALT+F12 oder Alt+Apfel+I) und die Checkbox &ldquo;<em>Cache deaktivieren</em>&rdquo; aktivieren. Diese Funktion ist aber nur so lange aktiv, bis die Entwicklerkonsole wieder geschlossen wird:</p>
<p><a href="https://www.nickyreinert.de/files/image-2.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/image-2-700x232.png" alt=""></a></p>
<p>Außerdem legt auch dein <strong>Betriebssystem</strong> einen Cache an. In Windows wird dieser folgendermaßen geleert:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">ipconfig /flushdns
</span></span></code></pre></div><p>Auch in Apples Betriebssystem OS X kann man den Cache per Hand leeren (ab 10.12 Sierra):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">sudo killall -HUP mDNSResponder
</span></span></code></pre></div><h3 id="dein-router-und-dein-internetanbieter">Dein Router und dein Internetanbieter</h3>
<p>Bestimmte <strong>Router-Modelle</strong> und mit Sicherheit auch dein <strong>Internet-Anbieter</strong> (ISP) speichern ebenfalls die Kombination aus Domain Name und IP-Adresse. Den DNS-Cache des Routers kannst du ggf. leeren, indem du ihn neu startest. Den deines ISP kannst du mit Sicherheit nicht beeinflussen. Du kannst aber in den Netzwerkeinstellungen einen anderen <strong>DNS-Server</strong> einrichten, wie z.B. den von Google (8.8.8.8). Wenn dir das zu aufwendig ist, rufe die Seite über dein Handy auf, wenn es <strong>nicht mit deinem WLAN verbunden</strong> ist. Dann nutzt du den Internetzugang deines Handy-Anbieters, der vielleicht schon einen anderen DNS-Eintrag kennt. Jeder DNS-Eintrag ist übrigens für gewöhnlich mit einem sog. TTL versehen - einem Eintrag für das <strong>Time-To-Live.</strong> Dieser beträgt z.B. 24 Stunden und besagt, wie lange ein entsprechender Eintrag gültig ist. Willst du wissen, wie groß dieser Wert ist, hilft dir die <a href="https://mxtoolbox.com/SuperTool.aspx?action=a%3awww.example.com&amp;run=toolpage">mxtoolbox</a> weiter.</p>
<h3 id="der-hoster">Der Hoster</h3>
<p>Das ist der schwierigste Punkt, da es hier erstmal zwei Möglichkeiten gibt:</p>
<p><strong>Grundsätzlich</strong> gilt: Damit ein Domain-Name auf (d)einen Web-Server zeigt, sind mindestens <strong>zwei Schritte</strong> nötig:</p>
<ol>
<li>die Domain muss registriert und einer IP-Adresse zugeordnet werden</li>
<li>die Domain muss dem Web-Server &ldquo;mitgeteilt&rdquo; werden</li>
</ol>
<p>Nun gibt es allerdings mindestens <strong>drei Szenarien</strong>, wie das umgesetzt wird:</p>
<ol>
<li>Dein Hoster stellt den Webspace unter einer Hosting-Domain zur Verfügung (<em>c123123.hoster.com</em>) und die &ldquo;echte&rdquo; Domain (<em>example.com</em>) wird bei einem anderen Anbieter verwaltet. Die Hosting-Domain zeigt hier bereits direkt auf deinen Webspace. Wenn deine Anwendung dort in einem anderen Ordner liegt, musst die &ldquo;echte&rdquo; Domain direkt darauf zeigen, also z.B: <em>example.com -&gt; c123123.hoster.com/wordpress</em>_/_.</li>
<li> Dein Hoster stellt den Webspace unter einer IP-Adresse zur Verfügung (bzw. du nutzt einen Managed- oder Root-Server) und die Domain wird bei einem anderen Anbieter verwaltet. In diesem Fall muss der Hoster wissen, welche Domain auf die IP-Adresse deines Webspaces zeigt. Er kann diese Domain dann einem Ordner auf dem Webspace zuordnen.</li>
<li>Das <strong>Gesamtpaket</strong>: Dein Hoster stellt den Webspace und verwaltet deine Domain.</li>
</ol>
<p><a href="https://www.nickyreinert.de/files/image-6.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/image-6-700x493.png" alt=""></a></p>
<p>Hosting-Varianten im Vergleich</p>
<p>Bei den Gesamt-Paketen wird das ganze Konstrukt wie gesagt sehr simpel zusammengefasst. Bei <strong>all-inkl.com</strong> erfolgt das z.B. über das KAS über den Menüpunkt <strong>Domains</strong>, wo der Ort im Dateisystem angegeben werden kann. Der Verweis zu einem anderen, fremden Webspace erfolgt über die Option &ldquo;Redirect&rdquo;. Dann wird diese Domain mit einem HTTP-Statuscode 301, 302 oder 307 an einen anderen Server weitergeleitet.</p>
<p><a href="https://www.nickyreinert.de/files/domain-ziel-bei-all-inkl.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/domain-ziel-bei-all-inkl-700x344.png" alt=""></a></p>
<p>Domain-Ziel bei all-inkl.com einrichten</p>
<p>Bei Strato ist das Formular etwas anders aufgebaut, hat aber natürlich die gleiche Funktion. Im Menü <strong>Domain / Domainverwaltung</strong> legst du fest, auf welchen Ordner deine Domain zeigen soll. Über die DNS-Einstellungen kannst du auch hier auf einen anderen Server zeigen lassen:</p>
<p><a href="https://www.nickyreinert.de/files/image.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/image-281x300.png" alt=""></a></p>
<p>Domain-Ziel bei Strato einrichten</p>
<p>Wenn du Zugriff auf die <strong>Konsole</strong> hast (z.B. mit SSH), kannst du mit folgendem Befehl prüfen, ob der Server deine Domain überhaupt &ldquo;kennt&rdquo;:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">apache2ctl -S
</span></span></code></pre></div><p>Die Ausgabe sollte in etwa folgenden Aufbau haben und mindestens deine Domain enthalten und auch auf den korrekten Ordner Grundsätzlich hilft auch hier erstmal die <a href="https://mxtoolbox.com/SuperTool.aspx?action=a%3awww.example.com&amp;run=toolpage">mxtoolbox</a> weiter, um zu erkennen, ob der Eintrag schon existiert:</p>
<p><a href="https://www.nickyreinert.de/files/apachectl-ausgabe.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/apachectl-ausgabe-700x298.png" alt="Ausgabe von apachectl , Liste der virtuellen Hosts in Apache"></a></p>
<h3 id="die-wordpress-konfiguration">Die Wordpress-Konfiguration</h3>
<p>Und schließlich muss natürlich auch die Wordpress-Installation vollständig und korrekt eingerichtet und angepasst sein. Hier gibt es zwei Stellen, an denen der Domain-Name eingerichtet werden kann. Der einfachste Weg ist über das Backend von Wordpress. Damit wird deine Adresse direkt in der Datenbank abgelegt:</p>
<p><a href="https://www.nickyreinert.de/files/image-3.png"><img src="/2018/2018-08-25-checkliste-wordpress-umzug/images/image-3-300x61.png" alt=""></a></p>
<p>Wenn du auf das Backend keinen Zugriff hast, wählst du den direkten Weg über die <em>wp-config.php</em>. Die Änderungen hier überschreiben die Einstellungen im Backend.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;WP_HOME&#39;,&#39;https://www.nickyreinert.de&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">define(&#39;WP_SITEURL&#39;,&#39;https://www.nickyreinert.de&#39;);
</span></span></code></pre></div><p>In der Datenbank befinden sich sehr oft noch andere Verweise auf deine Domain. Bei einem Umzug müssen auch diese angepasst werden. Da das aber ein sehr umfangreicher Prozess ist, empfehle ich dazu das Wordpress-Plugin &ldquo;<a href="https://de.wordpress.org/plugins/better-search-replace/">Better Search Replace</a>&rdquo;.</p>
<h3 id="fazit">Fazit</h3>
<p>Wenn du die hier genannten Punkte berücksichtigt hast, hast du eigentlich an alles gedacht. Oft ist es der lokale Cache, der die neue Adresse noch nicht kennt und dann die Sorgenfalten auf die Stirn treibt. Wenn ich einen Punkt vergessen haben sollte oder etwas unklar ist, hinterlasse mir gerne ein Kommentar.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> checkliste, domains, hosting, umzug, wordpress</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Checkliste - Wordpress Umzug - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Den eigenen Web-Server sichern</title>
      <link>http://localhost:1313/2018/2018-08-23-den-eigenen-web-server-sichern/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-08-23-den-eigenen-web-server-sichern/</guid>
      <description>Die Datensicherung des eigenen, öffentlichen Webservers ist nicht nur wichtig, sie kann auch auf vielen Wegen geschehen und wirft vermutlich gerade deshalb sehr …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Die Datensicherung des eigenen, öffentlichen Webservers ist nicht nur wichtig, sie kann auch auf vielen Wegen geschehen und wirft vermutlich gerade deshalb sehr viele Fragen auf.&#39; reading_time: 14 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Database, Server, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Die <strong>Datensicherung</strong> des eigenen, öffentlichen Webservers ist nicht nur wichtig, sie kann auch auf vielen Wegen geschehen und wirft vermutlich gerade deshalb sehr viele Fragen auf. Soll ich ein Image des ganzen Servers anlegen oder nur einzelne Ordner sichern? <strong>Wie oft</strong> muss ich ein Backup machen und wie gelange ich im Notfall an die Daten? Reicht es aus, z.B. als Wordpress-Nutzer, ein Plugin zu verwenden oder ist es sinnvoller externe Software zu nutzen?</p>
<p>Ich habe versucht ein paar solcher Fragen, auch für mich selber, zu beantworten und als Konsequenz daraus ein <strong>Backup-Strategie</strong> zu entwickeln und dann auch umzusetzen. Das Ziel ist ein gesunder <strong>Mittelweg zwischen Sicherheit und Bedienbarkeit</strong>. Da ich selber sehr oft mit Wordpress arbeite, soll dieser Beitrag vornehmlich die Wordpress-Nutzer ansprechen. Wenn du Wordpress allerdings nur als Service nutzt (z.B. auf wordpress.org), wird dir dieser Beitrag wenig weiterhelfen. Außerdem ist es sehr hilfreich, wenn du per <strong>SSH Zugriff</strong> auf deinen Server hast. Sicherlich gibt es auch Möglichkeiten, den hier aufgezeigten Weg ohne SSH zu beschreiten - wie das funktioniert, muss man aber im Einzelnen sehen.</p>
<h2 id="die-backup-strategie">Die Backup-Strategie</h2>
<h3 id="wo-soll-das-backup-gespeichert-werden">Wo soll das Backup gespeichert werden?</h3>
<p>Die erste Frage die ich mir gestellt habe war: <strong>Wo soll das Backup landen</strong>? Direkt auf dem Web-Server? Dann sind die Daten verloren, sobald der ganze Server weg ist. Auf einem Cloud-Speicher? Das ist bequem, birgt allerdings auch Probleme mit den <strong>Datenschutzgesetzen</strong>. Oder auf einem privaten NAS? Das ist aus Datenschutzsicht zwar in Ordnung, aber dann muss das NAS über das Internet erreichbar sein. Das wollte ich vermeiden.</p>
<p>Ich habe mich deshalb für einen Zwischenweg entschieden: Für den schnellen Zugriff lege ich das Backup <strong>auf dem Server</strong> ab. Gleichzeitig nutze ich das kostenlose Angebot von <a href="https://www.blaucloud.de/"><strong>blaucloud.de</strong></a>. Das ist ein Cloud-Speicher, dessen Server in Deutschland stehen. Außerdem unterstützt blaucloud, das auf nextcloud basiert, das WebDav-Protokoll. Zusätzlich, aber das ist nur ein Bonus. Außerdem habe ich auf meinem NAS eine Synchronisierung mit der blaucloud eingerichtet. Dadurch bleibt das NAS im Internet verborgen und ich habe trotzdem eine <strong>3. Kopie des Backups</strong> in meinen eigenen, sicheren vier Wänden.</p>
<h3 id="welche-software-soll-ich-nutzen">Welche Software soll ich nutzen?</h3>
<p>Die Auswahl von Plugins für automatische Backups mit Wordpress ist sehr umfangreich, einige davon sind kostenlos und die große Mehrheit ist sehr bequem zu bedienen. Die Backups laufen automatisch und auch die Wiederherstellung ist nur einen Mausklick entfernt. Das klingt paradiesisch, aber der Schein trügt. Zunächst halte ich es für absurd, ein System aus sich selber heraus zu sichern. Das ist wie ein <strong>Feuerlöscher</strong>, der bei <strong>Waldbrandgefahr</strong> zwischen den trockenen Bäumen steht.</p>
<p>Sicher kann ich mit den zahlreichen Wordpress-Plugins die Datenbank und das Dateisystem sichern. Aber der Prozess wird eben innerhalb eines System ausgeführt, das auch von außen erreichbar ist. Wenn nur ein anderes Plugin kompromittiert wird, gefährdet das die ganze Backup-Strategie. Außerdem muss ich, bei der Verwendung mehrerer Wordpress-Instanzen jedes Backup-Plugin einzeln pflegen.</p>
<p>Auch die regelmäßige Datensicherung, die viele Hoster von sich aus anbieten, reicht mir nicht aus, da diese nur minimal gesteuert werden kann und dort immer das ganze System gesichert wird, man also bei der Wiederherstellung nicht selektieren kann, welche Backup, welcher Ordner oder welche Datenbank zurück gespielt werden soll. Ich habe mich also für <strong>duplicity</strong> entschieden. <a href="http://duplicity.nongnu.org/"><strong>Duplicity</strong></a> wird über die Kommandozeile bedient (deshalb der notwendige SSH-Zugang), unterstützt viele Protokolle (FTP, <strong>WebDav</strong>, Amazon S3, rsync, &hellip;) und es gibt sogar eine grafische Benutzeroberfläche - wenn man doch nicht ohne kann. Außerdem bietet duplicity die Verschlüsselung mit <strong>GnuPG</strong> an und ist damit auch bestens geeignet, um die Datensicherung in der Cloud abzulegen.</p>
<h3 id="wie-oft-soll-ich-ein-backup-anlegen">Wie oft soll ich ein Backup anlegen?</h3>
<p>Die Frage sollte mich nicht länger beschäftigen, vor allem weil ich dazu <a href="https://blog.yadutaf.fr/2012/09/08/lazy-man-backup-strategy-with-duplicity-part-1/">einen sehr schönen Blog-Eintrag gefunden</a> habe. Dazu muss erklärt werden, dass <strong>duplicity</strong> mit <strong>inkrementellen Backups</strong> arbeitet. Dabei wird initial ein komplettes Backup angelegt. Danach werden nur noch die Änderungen an den zu sichernden Dateien erfasst. Für die Wiederherstellung muss also erst das letzte volle Backup zurückgespielt werden, um darauf dann die inkrementellen Backups &ldquo;anzuwenden. Der Backup-Plan lautet also wie folgt:</p>
<ul>
<li>es erfolgt initial eine volle Datensicherung</li>
<li>danach gibt es jeden Tag eine inkrementelle Datensicherung</li>
<li>jeden Monat erfolgt eine volle Datensicherung</li>
<li>inkrementelle, tägliche Backups, die älter sind als ein Monat, werden gelöscht</li>
<li>volle Backups, die älter als 12 Monate sind, werden gelöscht</li>
</ul>
<p>Im Notfall muss also zuerst das letzte volle Backup eingespielt werden, das nicht älter als ein Monat ist. Muss man Daten wiederherstellen, die älter sind als ein Monat, stehen diese immer nur für die monatlichen vollen Backups zur Verfügung. Für die Zeit vor 12 Monaten gibt es keine Datensicherung.</p>
<h3 id="welche-daten-sollen-gesichert-werden">Welche Daten sollen gesichert werden?</h3>
<p>Wie bereits erwähnt, stört mich bei den meisten Hostern, dass immer ein Backup des ganzen Servers angelegt wird. Da auf einem Server gerne aber mehr als eine Domain untergebracht ist, möchte ich die Datensicherung gerne je Domain und Datenbank durchführen. Mein Ziel ist es also, jeden Ordner im Dateisystem der einer (Sub-)Domain zugeordnet ist sowie jede Datenbank getrennt zu sichern. So kann ich eine Wiederherstellung auch punktuell anstoßen.</p>
<h2 id="vorbereitung">Vorbereitung</h2>
<p><em>Bevor es jetzt ans Eingemachte geht, der übliche Hinweis zur gebotenen <strong>Vorsicht</strong>: Wenn du nicht weißt, was hier passiert, lass dich von jemanden unterstützen, der weiß, was hier passiert. Wer auf der Konsole arbeitet, kann sehr schnell sehr viel falsch machen.</em></p>
<h3 id="duplicity-und-verschlüsselung-einrichten">Duplicity und Verschlüsselung einrichten</h3>
<p>Die erste Hürde, die du nehmen musst, ist die Installation von <strong>duplicity</strong>. Entweder du bekommst das über die Konsole selber hin - oder du fragst bei deinem Hoster nach. In vielen Fällen kann auch ein Shared Hostern das für dich installieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">sudo apt-get install duplicity
</span></span></code></pre></div><p>Als nächstes benötigst du <a href="https://www.gnupg.org/">GnuPG</a>. Das ist bei den meisten Hostern vorinstalliert. Sollte dem nicht so sein, fragst du entweder den Support oder erledigst das mit folgendem Befehl selber:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">sudo apt-get install gnupg2
</span></span></code></pre></div><p><a href="https://wiki.ubuntuusers.de/GnuPG/">GnuPG</a> ist ein Software zur <strong>Verschlüsselung</strong> von Informationen bzw. Dateien, das z.B. auch bei der Verschlüsselung von E-Mails zum Einsatz kommt. Für diesen Prozess werden zwei sogenannte <strong>Schlüssel</strong> benötigt - der private und der öffentliche Schlüssel. Der öffentliche Schlüssel dient dazu, die Daten zu verschlüsseln, mit dem privaten Schlüssel kannst du den Prozess &ldquo;umkehren&rdquo; - die Daten also entschlüsseln. Diese beiden Schlüssel müssen zunächst einmal erzeugt werden:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">gpg --gen-key
</span></span></code></pre></div><p>Du musst dazu ein paar Fragen beantworten. Die Frage nach der Schlüssel-Art beantwortest du mit 1, bzw. <em>RSA and RSA</em>. Als Schlüssellänge (<em>keysize</em>) empfiehlt sich 2.048 bits. Die Gültigkeitsdauer beträgt &ldquo;unendlich&rdquo;. Danach kannst, musst aber nicht, du deinen Namen und Kontaktdaten angeben. Abschließend wirst du nach einem Passwort für den privaten Schlüssel gefragt und aufgefordert durch ein paar zufällige Tasteneingaben eine Entropie zu erzeugen. Danach befindet sich im Ordner <strong><em>~/.gnupg</em></strong> dein Schlüsselpaar.</p>
<p><img src="/2018/2018-08-23-den-eigenen-web-server-sichern/images/gnupg.png" alt="Ein GnuPG Schlüsselpaar erzeugen"></p>
<p>Außerdem quittiert dir <strong>gnupg</strong> die Erstellung des Schlüsselpaars mit einer Statistik, aus der du dir die <strong>Id für den öffentlichen Schlüssel</strong> merken musst:</p>
<p><img src="/2018/2018-08-23-den-eigenen-web-server-sichern/images/gnupg-ausgabe.png" alt=""></p>
<h3 id="cloud-speicher-einrichten">Cloud-Speicher einrichten</h3>
<p>Der kostenlose <a href="https://www.blaucloud.de/">blaucloud</a>-Account für 5 GByte-Speicher ist ziemlich schnell eingerichtet. Dazu benötigst du nur einen beliebigen Benutzernamen, eine E-Mail-Adresse und ein Passwort. Über den Benutzerbnamen wird später auch deine Cloud erreichbar sein. Ich habe eine zufällige Zeichenkette verwendet, damit die Verbindung zur Funktion als Backup-Speicher nicht auf den ersten Blick ersichtlich ist (z.B. <em>qwertz123.blaucloud.de</em>). Danach musst du nur noch deine E-Mail-Adresse bestätigen und schon ist der Cloud-Speicher über folgende URL verfügbar:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">webdav://benutzername:passwor@benutzername.blaucloud.de/remote.php/webdav/
</span></span></code></pre></div><h3 id="mysql-benutzer-einrichten">MySQL-Benutzer einrichten</h3>
<p>Natürlich kannst du für das Backup einfach den Benutzer nutzen, den du auch für administrative Zwecke nutzt. Ich verrate dir aber kein Geheimnis wenn ich dir sage, dass es sehr sinnvoll ist, dafür einen eigenen Benutzer anzulegen, insofern deine Hosting-Umgebung das zulässt. Dazu führst du auf einer beliebigen Oberfläche (phpMyAdmin, MySQL Workbench oder direkt über das MySQL-CLI) folgende Query aus. Hier setzt du nur einen Benutzernamen und ein Passwort ein.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">GRANT LOCK TABLES, SELECT ON *.* TO &#39;USERNAME&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;PASSWORD&#39;;
</span></span><span class="line"><span class="ln">2</span><span class="cl">GRANT SHOW VIEW ON *.* TO &#39;USERNAME&#39;@&#39;localhost&#39;
</span></span></code></pre></div><p>Das ging schnell und hat auch gar nicht weh getan. ;)</p>
<h2 id="die-backup-strategie-umsetzen">Die Backup-Strategie umsetzen</h2>
<h3 id="die-zugangsdaten-ablegen">Die Zugangsdaten ablegen</h3>
<p>Die Informationen, die wir oben gesammelt haben, werden erstmal in der Datei <strong>backup.conf</strong> abgelegt. Bitte beachte, dass die Id für den öffentlichen Schlüssel nur ein Verweis ist. Die tatsächlichen Schlüssel liegen im Benutzerordner unter <em>~/.gnugpg/</em>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1"># mit diesem Wert steuerst du die Ausgabe von duplicity</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"># je höher, desto mehr Debug-Nachrichten werden ausgegeben</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="c1"># das hilft bei der Fehlersuche</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="k">export</span> <span class="n">DUPLICITY_VERBOSITY</span><span class="o">=</span><span class="mi">2</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="c1"># die Passphrase ist das Passwort für den privaten Schlüssel</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="c1"># die Id für den öffentlichen Schlüssel wird utner GPG_PUP_KEY abgelegt</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="k">export</span> <span class="n">PASSPHRASE</span><span class="o">=</span><span class="n">secret_gpgp_key_password</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="k">export</span> <span class="n">GPG_PUB_KEY</span><span class="o">=</span><span class="n">public_gpgp_key_id</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="c1"># dieser Ordner wird für die lokalen Backups verwendet</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="k">export</span> <span class="n">BASE_PATH_BACKUP</span><span class="o">=/</span><span class="n">private</span><span class="o">-</span><span class="n">backup</span><span class="o">/</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="c1"># dieser Ordner enthält die temporären MySQL-Dumps sowie den Cache von duplicity</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="k">export</span> <span class="n">BASE_PATH_TEMP</span><span class="o">=/</span><span class="n">private</span><span class="o">-</span><span class="n">backup</span><span class="o">/</span><span class="n">temp</span><span class="o">/</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="k">export</span> <span class="n">LOG_FILE</span><span class="o">=</span><span class="n">backup</span><span class="o">.</span><span class="n">log</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="c1"># das sind die Zugangsdaten zu deinem WebDav-Anbieter</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="k">export</span> <span class="n">WEBDAV_USER</span><span class="o">=</span><span class="n">webdav_user</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="k">export</span> <span class="n">WEBDAV_PASSWORD</span><span class="o">=</span><span class="n">webdav_password</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="k">export</span> <span class="n">WEBDAV_URL</span><span class="o">=</span><span class="n">somewhere</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">de</span><span class="o">/</span><span class="n">webdav</span><span class="o">.</span><span class="n">php</span><span class="o">/</span><span class="n">folder</span><span class="o">/</span><span class="n">backup</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="c1"># schließlich hinterlegst du noch eine E-Mail-Adresse </span>
</span></span><span class="line"><span class="ln">23</span><span class="cl"><span class="c1"># an die Fehlernachrichten geschickt werden </span>
</span></span><span class="line"><span class="ln">24</span><span class="cl"><span class="k">export</span> <span class="n">SUPERVISOR_EMAIL</span><span class="o">=</span><span class="n">error_messages</span><span class="err">@</span><span class="n">foobar</span><span class="o">.</span><span class="n">com</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="c1"># und die E-Mail-Adresse des Absenders</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl"><span class="k">export</span> <span class="n">LOCAL_EMAIL</span><span class="o">=</span><span class="n">sender</span><span class="err">@</span><span class="n">foobar</span><span class="o">.</span><span class="n">com</span>
</span></span></code></pre></div><p>Die Zugangsdaten für den MySQL-Server gehören in eine andere Datei, nämlich <strong>database.conf</strong>:</p>
<p>[client]
user=mysql_user
password=mysql_password
host=localhost</p>
<h3 id="die-ordner-der-virtuellen-hosts-sichern">Die Ordner der virtuellen Hosts sichern</h3>
<p>Im Folgenden werde ich die Shell-Scripte und den Prozess ganz kurz erklären.</p>
<p>Zunächst will ich zwei Server-System unterstützen: nginx und apache2. Dazu frage ich den ersten Parameter ab:</p>
<p>if [[ $1 == &lsquo;apache&rsquo;  ]]
then</p>
<pre><code>    SERVER\_SOFTWARE='apache'
</code></pre>
<p>elif [[ $1 == &rsquo;nginx&rsquo;  ]]
then
SERVER_SOFTWARE=&lsquo;nginx&rsquo;</p>
<p>else</p>
<pre><code>    echo 'Keine Server-Architektur angegeben, probiere mal nginx oder apache'
</code></pre>
<p>fi</p>
<p>Wie oben schon angedeutet, will ich nicht einmal das ganze Dateisystem sichern, sondern nur <strong>relevante Ordner</strong>. Dazu muss ich erwähnen, dass ich für jede Domain eine Konfigurations-Datei angelegt habe - so ist es im übrigen auch üblich (siehe z.B. <em>/etc/apache2/sites-enabled/</em>). Jede dieser Dateien enthält den Verweis auf den Ordner der jeweiligen Domain (oft z.B. <em>/var/www/&hellip;</em>) Diese Informationen gilt es nun automatisch herauszufinden. Ich nutze dafür zunächst den folgenden Aufruf, der mir erstmal eine <strong>ungefilterte  Liste der gesamten Webserver-Konfiguration</strong> ausgibt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">/usr/sbin/apache2ctl -S
</span></span></code></pre></div><p><img src="/2018/2018-08-23-den-eigenen-web-server-sichern/images/apachectl-ausgabe.png" alt=""></p>
<p>Die Ausgabe ist stark gekürzt und enthält natürlich mehr als nur eine Domain und diese auch immer doppelt - einmal für https und einmal für http. Ich benötige aus dieser Liste nun einmal den Pfad zur Konfigurations-Datei jeder Domain. Dazu reduziere ich die Ausgabe also auf die gewünschten Zeilen und extrahiere dann mit <em>awk</em> und <em>sed</em> den Verweis zu der jeweiligen Konfigurations-Datei. Das ist der komplette Aufruf:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">/usr/sbin/apache2ctl -S | grep &#34;port 80 namevhost&#34; | awk -F &#39; &#39; &#39;{ print $5 }&#39; | sed -E &#39;s/[:()]//g&#39; | sed -E &#39;s/[ 0-9]$//g&#39;
</span></span></code></pre></div><p>Das Ergebnis ist eine Liste von Konfigurationsdateien, die ich mit <em>grep</em> nach der Angabe des Ordners durchsuchen kann:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">grep -oE &#39;DocumentRoot \&#34;(.*)\&#34;&#39; $configFile | awk -F &#39; &#39; &#39;{ print $2 }&#39; | sed -E &#39;s/[&#34;]//g&#39;
</span></span></code></pre></div><p>Diesen Ordner kann ich dann an das Backup-Script übergeben, auf das ich später zurück kommen werden. Das ganze Script ist auf github verfügbar.</p>
<p>Ich muss hier allerdings erwähnen, dass das ganze eine <strong>kleinen Nachteil</strong> hat: Es werden nur aktivierte virtuelle Hosts erkannt. Wer zusätzliche andere Ordner sichern will, die z.B. nicht über die virtual host-Konfiguration genutzt werden, muss dies per Hand tun - doch dazu später mehr.</p>
<p>Für nginx nutze ich eine etwas einfachere Variante: Ich nehme einfach alle Dateien mit der Endung conf aus dem Konfigurations-Ordner von nginx. Das funktioniert eben nur, solange du die Konfiguration zentral an einem Ort verwaltest. Der ganze Abschnitt sieht dann so aus:</p>
<p>if [[ $SERVER_SOFTWARE == &lsquo;apache&rsquo; ]]
then
configFilesString=$(/usr/sbin/apache2ctl -S | grep &ldquo;port 80 namevhost&rdquo; | awk -F &rsquo; &rsquo; &lsquo;{ print $5 }&rsquo; | sed -E &rsquo;s/[:()]//g&rsquo; | sed -E &rsquo;s/[ 0-9]$//g&rsquo;)
configFiles=($(echo &ldquo;$configFilesString&rdquo; | tr &lsquo;,&rsquo; &rsquo; &lsquo;))</p>
<p>elif [[ $SERVER_SOFTWARE == &rsquo;nginx&rsquo; ]]
then</p>
<pre><code>    configFiles=(/etc/nginx/conf.d/\*.conf)
</code></pre>
<p>fi</p>
<p> </p>
<p><strong>Update November 2018:</strong></p>
<p><em>Da ich mittlerweile auf nginx und php-fpm umgestiegen bin, habe ich auch das Script entsprechend angepasst. Es kann nun für beide Server-Typen angewendet werden.</em></p>
<p>Nun kann ich jede Config-Datei einmal einlesen um herauszubekommen, an welcher Stelle im Dateisystem sich der Ordner mit dem Document Root befindet - den wollen wir ja schließlich sichern:</p>
<p>if [[ $SERVER_SOFTWARE == &lsquo;apache&rsquo; ]]
then</p>
<pre><code>srcFolder=$(grep -oE 'DocumentRoot \\&quot;(.\*)\\&quot;' $configFile | awk -F ' ' '{ print $2 }' | sed -E 's/\[&quot;\]//g')
dstFolder=$(basename $srcFolder)
</code></pre>
<p>elif [[ $SERVER_SOFTWARE == &rsquo;nginx&rsquo; ]]
then</p>
<pre><code>srcFolder=$(grep -oE 'root (.\*);' $configFile | awk -F ' ' '{ print $2 }' | sed -E 's/\[;\]//g')
dstFolder=$(basename ${srcFolder%htdocs})
</code></pre>
<p>fi</p>
<p> </p>
<h3 id="die-datenbanken-des-mysql-servers-sichern">Die Datenbanken des MySQL-Servers sichern</h3>
<p>Nun geht es an die Datenbanken. Dazu nutze ich den CLI-MySQL-Client und frage erstmal einfach alle Datenbanken ab:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">mysql --defaults-extra-file=database.conf -Bse &#39;show databases&#39;
</span></span></code></pre></div><p>Die Zugangsdaten zum Server übergebe ich in der Datei <strong>database.conf</strong>. Ich könnte das auch über die Kommandozeile tun, würde dann aber eine Warnung von MySQL erhalten, dass das nicht sicher sei:</p>
<blockquote>
<p><em>Warning: Using a password on the command line interface can be insecure.</em></p></blockquote>
<p>Da die Ausgabe von mysql nur einen String zurückgibt, muss ich den erst in ein Array umwandeln, dass ich dann durch-loopen kann. Dazu gibt es zwei Wege - den unteren finde ich etwas eleganter. Entscheide dich einfach für einen:</p>
<p>databasesArray=($(echo &ldquo;$databasesString&rdquo; | tr &lsquo;,&rsquo; &rsquo; &lsquo;))
IFS=&rsquo;_&rsquo; read -r -a databasesArray&laquo;&lt; &ldquo;$databasesString&rdquo;</p>
<p>Nun hast du also ein Array, dass deine Datenbanken enthält. Als nächstes brauchst du eine Schleife um für jede Datenbank ein Dump anzulegen:</p>
<p>ignoreDatabases=[&lsquo;information_schema,sys,performance_schema&rsquo;]
for database in &ldquo;${databasesArray[@]}&rdquo;
do</p>
<pre><code>    if \[\[ ! &quot; ${ignoreDatabases\[\*\]} &quot; == \*&quot;${database}&quot;\* \]\]
    then
        ...
    fi
</code></pre>
<p>done</p>
<p>Wie du siehst, habe ich noch eine Abfrage eingebaut, damit nicht benötigte System-Datenbanken ausgelassen werden. Jetzt kümmern wir uns um den eigentlichen Dump. Die folgenden Zeilen kommen an die Stelle mit den drei Punkten&hellip;</p>
<p>Jetzt werden die Daten aus der jeweiligen Datenbank gezogen. Wenn <strong>mysqldump</strong> einen Fehler zurück gibt, schicke ich mir diesen per E-Mail. Danach wird das Script aufgerufen, dass den Dump mit duplicity an einen &ldquo;sicheren&rdquo; Ort kopiert. Zum Abschluss wird der Dump wieder entfernt.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">result=&#34;$( ( mysqldump --defaults-extra-file=database.conf ${database} &gt; ${BASE\_PATH\_TEMP}${database}.sql ) 2&gt;&amp;1 )&#34;
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">len=${#result}
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">if \[ &#34;$len&#34; -gt &#34;0&#34; \]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">then
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">	echo $result | mail -s &#34;Error when dumping mysql database ${database}&#34; $SUPERVISOR\_EMAIL -r $LOCAL\_EMAIL
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">fi
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">./backupFilesystem.sh -f ${BASE\_PATH\_TEMP}${database}.sql -d &#34;${BASE\_PATH\_BACKUP}databases/${database}&#34;
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">rm ${BASE\_PATH\_TEMP}${database}.sql
</span></span></code></pre></div><p> </p>
<p>Eine Sache gibt es zu beachten, die ich hier nicht weiter beschreiben: Ich nutze &ldquo;<strong>mail</strong>&rdquo; um die Fehlernachrichten zu versenden. Ihr könnte hier einen eigenen E-Mail-Client oder eine andere Variante der Fehlerbenachrichtigung nutzen, das bleibt euch überlassen.</p>
<h3 id="die-daten-mit-duplicity-verschlüsselt-sichern">Die Daten mit duplicity verschlüsselt sichern</h3>
<p>Nun geht es ans Eingemachte bzw. die tatsächliche Datensicherung. Das Script <strong>backupFilesystem.sh</strong> erwartet zwei Parameter: Die Dateien bzw. der Ordner, der gesichert werden soll und der Name des Zielordners.</p>
<p>Danach wird duplicity mehr als ein mal aufgerufen. Zunächst wird, wenn das letzte Vollbackup älter ist als 1 Monat, ein komplettes Backup angelegt. Danach wird duplicity angewiesen, Backups, die älter sind als 12 Monate, zu entfernen. Dann werden außerdem die inkrementellen Backups entfernt, die älter sind als 1 Monat. Das ganze wird einmal aufgerufen um die Backups lokal abzulegen und dann ein 2. Mal für den WebDav-Speicher.</p>
<p>Wer Ordner und Dateien <strong>manuell sichern</strong> will, kann also dieses Script mit den entsprechenden Parametern aufrufen.</p>
<h3 id="automatisieren-mit-cron">Automatisieren mit cron</h3>
<p>Jetzt muss der ganze Spaß natürlich noch automatisch laufen. Dazu werden die folgende Zeilen in die Datei <em>/etc/cron.d/dailyBackup</em> gepackt:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl"># m h dom mon dow user  command
</span></span><span class="line"><span class="ln">2</span><span class="cl">0 1 * * * root /bin/bash /backup/backupVirtualhosts.sh
</span></span><span class="line"><span class="ln">3</span><span class="cl">0 2 * * * root /bin/bash /backup/backupDatabase.sh
</span></span></code></pre></div><p>Willst du zusätzliche Ordner sichern, kannst du das über das Script <em>backupFilesystem.sh</em> tun, z.B:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">0 1 * * * root /bin/bash /backup/backupFilesystem.sh -f /home/ -d /private-backup/home/
</span></span></code></pre></div><h3 id="github">Github</h3>
<p>Die gesammelten Scripte und Vorlagen für die Konfigurationsdateien findest du auf <a href="https://github.com/nickyreinert/completeWebServerBackup">github.com</a>. Du kopierst einfach den Inhalt des Ordners <em>scripts</em> an einen Ort auf deinen Server, wie z.B. <em>/backup.</em></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> backup, bash, hosting, shell, web-server</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Den eigenen Web-Server sichern - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Wie richte in ein Staging-System für Wordpress ein?</title>
      <link>http://localhost:1313/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/</guid>
      <description>Wordpress hat den Ruf sehr unkompliziert zu sein. Zurecht. Doch oft bleibt es nicht dabei, dass man ein paar Beiträge verfasst. Die Seite kann schnell von einem …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Wordpress hat den Ruf sehr unkompliziert zu sein. Zurecht. Doch oft bleibt es nicht dabei, dass man ein paar Beiträge verfasst.&#39; reading_time: 13 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Database, Server, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Wordpress hat den Ruf sehr unkompliziert zu sein. Zurecht. Doch oft bleibt es nicht dabei, dass man ein paar Beiträge verfasst. Die Seite kann schnell von einem einfachen Blog zu einem großen CMS heranwachsen und wird dann nicht nur mit Texten und Bildern, sondern dank eines riesigen Angebotes an Plugins und Template auch mit Funktionalitäten gefüllt. Und dann wird man mit einem Konflikt konfrontiert, dass die gesamte Seite bedroht: Updates und Inkompatibilität. Es ist nämlich gar nicht so selbstverständlich, dass die eigenen Anpassungen mit alle Wordpress-, Plugin- und Template-Versionen oder gar der Hosting-Umgebung harmonieren. Je angepasster die eigene Wordpress-Installation ist, desto komplexer sind im Hintergrund die Abhängigkeiten. Ein kleines Update kann im schlimmsten Fall die gesamte Seite gefährden. Ein Staging-System für Wordpress kann da helfen.</p>
<h2 id="zwei-wege-und-drei-plugins-führen-nach-rom">Zwei Wege und drei Plugins führen nach Rom</h2>
<p>Deswegen ist es ratsam, sich möglichst früh um eine Testumgebung Gedanken zu machen. Das Ziel soll eine sogenannte Staging-Umgebung sein, die synchron zum öffentlichen Live-System betrieben werden kann. Gleiche Inhalte, gleiche Templates, gleiche Plugins. Auf diesem Staging-System kann dann jedes Update und jede Änderung auf Kompatibilität getestet werden. Bei Erfolg installiert man das Update auch auf dem Live-System. Die gute Nachricht: Das Lesen des Beitrages wird dich vermutlich mehr Zeit kosten, als der ganze Prozess. Je nach Größe des Blogs kannst du ein Staging-System für Wordpress in 5 bis 10 Minuten aufsetzen.</p>
<p>Es gibt viele Möglichkeiten (sprich Plugins), die versprechen, Wordpress-Installationen zu kopieren oder in irgendeiner Form zu synchronisieren. Doch keines erfüllt das Ziel wirklich komfortabel, nämlich:</p>
<p><em>per Knopfdruck im Wordpress-Backend Dateien und Datenbank an einen anderen Ort kopieren</em></p>
<p>Ich will an dieser Stelle zwei Wege und drei Plugins vorstellen, die ich als sehr nützlich betrachte und die die Aufgabe zumindest in Teilen erfüllen.</p>
<h3 id="welche-plugins-kommen-für-das-staging-system-für-wordpress-in-frage">Welche Plugins kommen für das Staging-System für Wordpress in Frage</h3>
<ul>
<li>Der <strong>1. Weg</strong>: <a href="https://github.com/wp-sync-db/wp-sync-db">WP Sync DB</a> ist ein Plugin, dass zwar sehr bequem nur über das Backend läuft, aber eben auch nur den Inhalt der Datenbank kopiert. Praktisch ist allerdings, dass immerhin auch die Medien-Bibliothek komplett übertragen wird. Außerdem: Der <a href="http://snapcreek.com/duplicator/">Duplicator</a> ist ein sehr mächtiges, teilweise kostenpflichtiges Plugin; allerdings reicht für diese Zwecke auch die kostenlose Variante aus. Damit werden sämtliche Dateien und Tabellen aus der Datenbank in ein Archiv gepackt, aus dem dann an anderer Stelle eine eigenständige Installation erstellt wird. Leider muss dazu auch per FTP oder der Shell hantiert werden. Mit der  Kombination aus beiden Plugins lässt sich das o.g. Ziel jedenfalls schon recht gut erreichen. Zusammen mit WP Sync DB lassen sich die Installationen aber halbwegs komfortabel synchron halten.</li>
<li>Das dritte Plugin (für den <strong>2. Weg</strong>) heißt <a href="https://de.wordpress.org/plugins/wp-staging/">WP Staging</a>. Damit kann man sehr bequem eine komplette Kopie von Wordpress erstellen. Der Vorteil: Das Plugin übernimmt den ganzen Prozess und wird nur über das Backend bedient. Der Nachteil aus meiner Sicht: Das Staging-System wird unterhalb des Live-Systems in einem Unterverzeichnis erstellt und es wird die exakt gleiche Datenbank verwendet. Für meinen Geschmack ist die Trennung zwischen Live- und Test-System damit nicht strikt genug.</li>
</ul>
<p>Zuerst beschreibe ich die Vorbereitung auf dem Server. Danach gehe ich auf die Installation der jeweiligen Tools ein. Und abschließend fasse ich im <a href="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/#fazit">Fazit</a> noch einmal zusammen, wie unser Live-Staging-System nun genutzt werden kann. Wer also wissen will, was auf ihn zukommt, fängt ausnahmsweise mal von unten an zu lesen.. ;)</p>
<h2 id="vorbereitung">Vorbereitung</h2>
<p>Bevor ich mich an die Plugins mache, möchte ich eine Sub-Domain und einen getrennten Ort im Dateisystem einrichten (Für den zweiten Weg ist das <em>nicht</em> notwendig). Außerdem soll der Zugriff auf das Staging-System mit htaccess geschützt werden.</p>
<p>Ich gehe im folgenden davon aus, dass die Seite bei einem Shared-Hosting-Anbieter eingerichtet ist. Wer einen Dedicated, V- oder Managed-Server nutzt, dem räume ich einfach mal genügend Sachverstand ein, die Schritte auch auf so einem System nachvollziehen zu können. Ansonsten werde ich versuchen, diese Anleitung so detailliert und einfach wie möglich zu gestalten.</p>
<p>Los geht es mit einem zusätzlichen Ordner auf unserem Webspace, der natürlich nicht unterhalb unseres aktuellen Live-System liegen darf. Nun richte ich mir eine Sub-Domain ein, die auf diesen Ordner zeigen soll. Das passiert in zwei Schritten. 1. Anlegen der Subdomain und 2. Einstellen des Verweises auf den entsprechenden Ordner, in meinem Fall also <em>staging</em>.</p>
<p>[caption id=&ldquo;attachment_1684&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/strato-subdomain-umleitung-einrichten.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/strato-subdomain-umleitung-einrichten-300x157.png" alt="Ziel für die Sub-Domain einrichten am Beispiel von Strato"></a> Ziel für die Sub-Domain einrichten am Beispiel von Strato[/caption]</p>
<p>Die Installation von Wordpress können wir uns sparen, das übernimmt gleich der <em>Duplicator</em>. Den Verzeichnisschutz können wir übrigens erst nach einrichten, nachdem wir Wordpress einmal &ldquo;dupliziert&rdquo; haben. Dazu also später mehr.</p>
<h2 id="mit-duplicator-einen-ganzen-blog-umziehen">Mit Duplicator einen ganzen Blog umziehen</h2>
<p>Weiter geht es auf dem aktuellen Live-System, wo wir uns den Duplicator installieren und sofort aktivieren. Im Hauptmenü gelangst man über &ldquo;Duplicator&rdquo; und den Punkt &ldquo;Archive&rdquo; zu &ldquo;Neues erstellen&rdquo; Zuerst wird die System-Umgebung geprüft. Damit das Plugin funktioniert, sollten natürlich alle Anforderungen erfüllt sein. Hier kann es z.B. passieren, dass das &ldquo;ZIP-Archiv&rdquo; für PHP fehlt.</p>
<p>Wenn du Shell-Zugriff auf deinen Server hast, kannst du das Problem sehr einfach beheben, indem du das entsprechende PHP-Modul installierst und den Web-Server neu startest.</p>
<p>apt-get install php-zip
service apache2 restart</p>
<p>Ansonsten kannst du dieses Paket ggf. im Backend deines Hosting-Paketes aktivieren oder deinen Provider fragen, ob er dir das Modul einrichtet. Nun solltest du über den gleichen Dialog die weiteren Einstellungen vornehmen können. Den Speicher-Ort musst du nicht ändern. In der Pro-Version kannst du hier auch einen FTP-Server oder sogar eine Dropbox-Freigabe auswählen. Unter &ldquo;Archive&rdquo; musst du ebenfalls keine Einschränkungen vornehmen, es geht ja darum, die komplette Installation inklusive aller Dateien zu kopieren.</p>
<p>Natürlich kann es hilfreich sein, hier bereits die Verbindungsdaten zur MySQL-Datenbank zu hinterlegen. Das Passwort muss bei der späteren  Installation aber dennoch nachgereicht werden.</p>
<p>[caption id=&ldquo;attachment_1686&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/duplicator-grundeinstellungen.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/duplicator-grundeinstellungen-300x137.png" alt="Duplicator - Grundeinstellungen"></a> Duplicator - Grundeinstellungen[/caption]</p>
<p>Weiter geht es sodann mit dem &ldquo;Scan&rdquo;. Hier werden Datenbank und Dateisystem auf mögliche Fehlerquellen gescannt, wie z.B. Sonderzeichen in den Dateinamen. Wenn es zu Warnungen kommt, muss man diese per Häkchen aktiv &ldquo;ignorieren&rdquo;. Und kann dann den sogenannten &ldquo;Build-Prozess&rdquo; starten.</p>
<p>[caption id=&ldquo;attachment_1687&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/duplicator-archiv-erstellen.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/duplicator-archiv-erstellen-300x111.png" alt="Duplicator - Das Archiv wird erstelllt"></a> Duplicator - Das Archiv wird erstelllt[/caption]</p>
<p>Nach dem Build-Prozess lädt man nur noch den Installer und das Archiv herunter, die man direkt in den neu angelegten Staging-Ordner kopiert. Die installer.php ruft man nun im Browser auf und startet das &ldquo;Deployment&rdquo;.</p>
<h3 id="das-deployment---das-staging-system-wird-zum-leben-erweckt">Das Deployment - Das Staging-System wird zum Leben erweckt</h3>
<p>Dabei wird das Archiv entpackt und alle Dateien von Wordpress in das Dateisystem geschrieben. Wenn  keine Warnungen dazwischen kommen. Wie z.B. fehlende Schreibrechte, die man natürlich korrigieren muss.</p>
<p>Im 2. Schritt wird die Datenbankverbindung eingestellt. Natürlich wollen wir, aus bereits genannten Gründen, unbedingt eine <strong>getrennte</strong> Datenbank nutzen, um den Live-Betrieb nicht zu gefährden. Außerdem würden alle Tabellen in der Datenbank gelöscht werden. Hier muss also <strong>unbedingt eine leere Datenbank</strong> angegeben werden. Natürlich kann man auch eine Datenbank anlegen lassen, benötigt dazu aber einen Benutzer mit den entsprechenden Rechten.</p>
<p>[caption id=&ldquo;attachment_1688&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/duplicator-Einstellungen-der-Datenbank-.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/duplicator-Einstellungen-der-Datenbank--300x152.png" alt="Duplicator - Einstellungen der Datenbank"></a> Duplicator - Einstellungen der Datenbank[/caption]</p>
<p>Nachdem also auch die Datenbank mit den Inhalten unserer Seite gefüllt, geht es in Schritt 4 abschließend noch an die Pfade für Wordpress. In den Zusatzoptionen sollte man prüfen, ob alles korrekt eingestellt ist. Als Titel der Seite wähle ich natürlich &ldquo;Staging&rdquo; aus. Alle anderen Einstellungen bleiben unverändert - ich will eine exakte Kopie erhalten.</p>
<p>Grundsätzlich war es das. Unter der Staging-URL ist nun eine exakte Kopie des Live-Systems erreichbar. Zum Schluß richten wir aber noch einen Verzeichnisschutz ein, damit die Staging-Umgebung erstens nicht von außen erreichbar ist und zweitens auch nicht von Suchmaschinen besucht wird und unsere SEO-Stratgie stört. Dazu brauchen wir zweit Dateien im staging-Ordner: .htaccess und .htpasswd</p>
<p>Die Datei .htaccess sollte bereits vorhanden sein, da diese auch von Wordpress genutzt wird. Diese wird um die folgenden Zeilen ergänzt:</p>
<p>AuthName &ldquo;Staging&rdquo;
AuthType Basic
AuthUserFile ./.htpasswd
require valid-user</p>
<p>Die .htpasswd-Datei musst du selber erstellen. Dort hinterlegst du deine Zugangsdaten - einen Benutzernamen und ein sicheres Passwort, wie z.B:</p>
<p>benutzer1:afasdfgasdfg</p>
<p>Das ist natürlich nicht das Passwort im Klartext, sondern verschlüsselt. Das kannst du dir <a href="http://www.homepage-kosten.de/htaccess.php">auf dieser Seite</a> erstellen lassen.</p>
<p>Beim ersten Aufruf des Staging-Systems wird man noch dazu aufgefordert, die Installationsdateien zu entfernen. Fertig.</p>
<p>[caption id=&ldquo;attachment_1685&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/duplicator-dateien-bereinigen.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/duplicator-dateien-bereinigen-300x76.png" alt="Duplicator - Bereinigen der Installationsdateien"></a> Duplicator - Bereinigen der Installationsdateien[/caption]</p>
<h2 id="mit-wp-sync-db-die-datenbanken-kopieren">Mit WP Sync DB die Datenbanken kopieren</h2>
<p>Zwar haben wir jetzt schon eine vollständige Kopie, allerdings wird unser Live-System in der Zukunft ja durchaus wachsen. Deshalb benötigen wir nun <em>WP Sync DB</em>.</p>
<p>Leider ist das Plugin nicht über das Wordpress-Repository verfügbar. Die Installation ist deshalb aber nicht viel komplizierter: Man lädt sich das Archiv des Plugins von <a href="https://github.com/wp-sync-db/wp-sync-db-media-files">github.com</a> herunter, entpackt es, lädt die Dateien auf den FTP-Server in den Ordner /wp-content/plugins/wp-sync/ der Staging-Umgebung und kann es dann wie gewohnt im Backend von Wordpress aktivieren. Genauso sollte man auch mit dem Plugin verfahren, dass Medien-Datein synchronisieren kann. Das ist auch nur über <a href="https://github.com/wp-sync-db/wp-sync-db-media-files">github.com</a> erhältlich. Mit der Live-Installation verfährt man danach genauso: Einfach die Dateien in den jeweiligen Ordner im plugin-Verzeichnis kopieren und schließlich im Backend aktivieren.</p>
<p>Als nächstes starten wir die allererste Synchronisation der beiden Seiten. Dabei ist es egal, ob wir das vom Live-System oder aus der Test-Umgebung heraus machen.</p>
<p>Im ersten Schritt benötigt ihr die &ldquo;Connection Info&rdquo; eures Live-Systems.  Diese befindet sich bei den Werkzeugen unter Migrate DB und dort unter Settings. Außerdem muss der Haken bei &ldquo;Accept <strong>pull</strong> requests allow this database to be exported and downloaded&rdquo; gesetzt sein. Damit erlaubt ihr, dass die Daten von außerhalb heruntergeladen bzw. &ldquo;gezogen&rdquo; (pull) werden dürfen. Das ist eine zusätzliche Sicherheit, um das Kopieren der gesamten Daten von außen zu verhindern. Aus Sicherheitsgründen ist es ratsam, diese Funktion nach der Synchronisierung wieder zu deaktivieren und immer nur bei Bedarf zu aktivieren.</p>
<p>[caption id=&ldquo;attachment_1683&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/wp-sync-connection-info.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/wp-sync-connection-info-300x133.png" alt="WP Sync Connection Info des Live-Systems"></a> WP Sync Connection Info des Live-Systems[/caption]</p>
<h3 id="die-anbindung-zum-staging-system">Die Anbindung zum Staging-System</h3>
<p>Im Staging-System müsst ihr nun die Connection-Info hinterlegen. Das passiert auf der gleichen Einstellungsseite unter dem Reiter &ldquo;Migrate&rdquo;. Hier können außerdem einige andere Einstellungen vorgenommen werden. Wichtig, und für gewöhnlich automatisch ausgefüllt, ist natürlich die Anpassung der URL und der Pfade in der Datenbank. Hier lassen sich weitere Felder hinterlegen.</p>
<p>[caption id=&ldquo;attachment_1682&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/wp-sync-migrate-connection-info-hinterlegen.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/wp-sync-migrate-connection-info-hinterlegen-300x155.png" alt="WP Synch Connection Info hinterlegen"></a> WP Synch Connection Info hinterlegen[/caption]</p>
<p>Außerdem könnt ihr auswählen, ob bestimmte Tabellen oder Spam-Kommentare beim Kopieren ignoriert werden sollen. Es gibt eine Menge weitere Optionen. Ich empfehle zunächst den Haken bei &ldquo;Backup the local database before replacing it&rdquo; zu setzen. Sollte jetzt, aus welchen Gründen auch immer, irgendetwas schief gehen, gibt es immer noch ein Backup. Grundsätzlich sollte ihr aber sowieso ein regelmäßiges Backup mit einem anderen Werkzeug anlegen.</p>
<p>Außerdem sollen auch Medien-Dateien synchronisiert werden. Vorsicht: Wer hier einen großen Bestand an Dateien hat, muss natürlich dafür sorgen, dass genügend Speicher frei ist.</p>
<p>Abschließend speichern wir die getroffenen Einstellungen für die nächste Synchronisierung indem wir  <em>Save Migration Profile</em> aktivieren.</p>
<p>Wer übrigens einen anderen Tabellen-Präfix bei der Installation von Wordpress angegeben hat, wird unten eine Warnung erhalten.</p>
<p>Warning: Different Table Prefixes
Whoa! We&rsquo;ve detected that the database table prefix differs between installations. Clicking the Migrate DB button below will create new database tables in your local database with prefix &ldquo;foobar_&rdquo;.</p>
<p>Das ist allerdings kein Problem. Das Tabellen-Präfix der Live-Datenbank wird verwendet und man muss nach dem Prozess den Präfix manuell in der wp-config.php nachtragen:</p>
<p>$table_prefix  = &lsquo;foobar_&rsquo;;</p>
<p>Und dann gehts mit <em>Migrate DB and Save</em> auch schon los. Bei mir hat der Kopiervorgang nur einige Sekunden gedauert. Kurze Zeit danach erscheint das Login-Fenster von Wordpress.</p>
<p>[caption id=&ldquo;attachment_1680&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-richte-in-ein-staging-system-fuer-wordpress-ein/wp-sync-synchronisierungs-prozess.png"><img src="/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/images/wp-sync-synchronisierungs-prozess-300x93.png" alt="WP Synch Synchronisierungsprozess"></a> WP Synch Synchronisierungsprozess[/caption]</p>
<h2 id="mit-wp-staging-und-einem-klick-eine-kopie-erstellen">Mit WP Staging und einem Klick eine Kopie erstellen</h2>
<p>WP Staging erscheint auf den ersten Blick sehr benutzerfreundlich und unkompliziert. Nachdem man einen Namen für die Staging-Seite angegeben hat, legt das Plugin eine komplette Kopie in einem Unterverzeichnis der Haupt-Domain an, also <a href="https://www.nickyreinert.de/staging">https://www.nickyreinert.de/staging</a>. Das ist verblüffend komfortabel. Aber leider auch nicht ganz ohne Probleme. Erstens funktionieren Permalinks nicht ohne weiteres. So ist der Beitrag https://www.nickyreinert.de/staging/coii/ nur über den Direkt-Link erreichbar <a href="https://www.nickyreinert.de/staging/?p=1643">https://www.nickyreinert.de/staging/?p=1643</a></p>
<p>Außerdem befindet sich die Dateien des Staging-System innerhalb des Ordners vom Live-Systen, genauso wird die gleiche Datenbank benutzt. Das finde ich persönlich etwas unsauber und widerspricht außerdem meiner Vorstellung eines getrennten Test-Systems.</p>
<p>Freilich kann (bzw. sollte) man auch diesen Unterordner noch mit einem Passwortschutz versehen, wie ich es weiter oben schon beschrieben habe.</p>
<h2 id="wie-nutze-ich-das-live-staging-system">Wie nutze ich das Live-Staging-System?</h2>
<p>Wenn du dich für den zweiten Weg mit dem WP Staging-Plugin entschieden hast, ist der Prozess natürlich relativ einfach: Per Knopfdruck erzeugst du eine Kopie auf der du Updates auf Kompatibilität testen kannst. Außerdem kannst du hier natürlich auch Änderungen am Layout prüfen, bevor du sie ins Live-System übernimmst. Das ist bequem, aber wie gesagt für meinen Geschmack nicht &ldquo;abgetrennt&rdquo; genug.</p>
<p>Der erste Weg ist etwas anfangs etwas aufwendiger, aber meiner Meinung nach auch sicherer. Den umständlichen Schritt zur Vorbereitung mit dem Duplicator muss man nur einmal ausführen. Danach kann man mit WP Sync DB die Datenbank und sämtliche Mediendateien kopieren, um das Staging-System für Wordpress auf den aktuellen Stand zu bringen. Jetzt lassen sich dort ebenfalls Plugins und Updates auf Kompatibilität prüfen um sie erst danach im Live-System zu installieren.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie richte in ein Staging-System für Wordpress ein? - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>COII - Cookie OptIn Interface als Wordpress Plugin</title>
      <link>http://localhost:1313/2018/2018-03-03-coii/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-03-03-coii/</guid>
      <description>COII ist ein Plugin für Wordpress mit dem du dem Besucher deiner Seite die Möglichkeit gibst, dem Tracking durch z.B. Google Analytics bzw. Cookies zuzustimmen. …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>COII ist ein Plugin für Wordpress mit dem du dem Besucher deiner Seite die Möglichkeit gibst, dem Tracking durch z.B. Google Analytics bzw. Cookies zuzustimmen.&#39; reading_time: 3 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Git, Server, Automation, Security, Analytics</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>COII ist ein Plugin für Wordpress mit dem du dem Besucher deiner Seite die Möglichkeit gibst, dem Tracking durch z.B. Google Analytics bzw. Cookies zuzustimmen.</p>
<h2 id="cookies-und-tracking">Cookies und Tracking</h2>
<p>Grundsätzlich sind <strong>Cookies</strong> nicht verkehrt. Dabei handelt es sich um kleine Text-Dateien, die von einem Server auf dem Computer des Benutzers gespeichert werden, um Informationen zwischenzuspeichern. Für den Betrieb vieler Seiten sind sie oft unerlässlich. Dabei ist es wichtig zu wissen, dass nur der Server auf ein Cookie zugreifen darf, der es auch gesetzt hat. Grundsätzlich kann man zwei Arten unterscheiden: <strong>1st-Party- und 3rd-Party-Cookies</strong>. 1st-Party-Cookies werden von dem Server gespeichert, auf den der Besucher der Website gerade zugreift. Aktuell wäre das für dich z.B. ein Cookie von <a href="https://www.nickyreinert.de">www.nickyreinert.de</a>.</p>
<p><strong>3rd-Party-Cookies</strong> werden von Dritten auf deinem Computer gespeichert. Das ist möglich, weil ich auf meiner Seite z.B. JavaScript von fremden Websiten einbinde. Diese &ldquo;rufen&rdquo; den anderen Server an. Sehr weit verbreitet ist z.B. Google Analytics. Google kann dann als dritte Partei ein Cookie auf deinem Computer speichern. Wenn du eine andere Website besuchst, die auch das JavaScript von Google Analytics einsetzt, darf Google auf genau diesen Cookie zugreifen und kann dann die Verknüpfung herstellen: Der Besuch meiner Seite, der Besuch der anderen Seite und vermutlich der Besuch vieler weiterer Seiten. Diese Art von Cookies kann man deswegen als Tracking-Cookie bezeichnen.</p>
<p>Das Problem an der Sache sind die &ldquo;<strong>personenbezogene Daten</strong>&rdquo;. Eigentlich hat niemand ein Problem mit Cookies - so lange sie keine personenbezogenen Daten enthalten. Erst dann betritt man den rechtlich relevanten Raum des Datenschutzes.  Und mit der vor der Tür stehenden <strong>DSGVO</strong> bzw. der <strong>ePrivacy-Verordnung</strong> wird der Betreiber der Website (vermutlich) noch mehr in der Pflicht genommen, die personenbezogenen Daten seiner Besucher zu schützen. Oder: Im explizit das Wahlrecht zu geben: Lässt er das Tracking zu?</p>
<p>Und dabei soll dir <strong>COII</strong> helfen.</p>
<h2 id="funktionsweise-voncookies">Funktionsweise von Cookies</h2>
<p>Beim ersten Besuch deiner Seite sieht der Benutzer einen einfachem Dialog, in dem er dem Tracking zustimmen kann. Oder eben widersprechen.</p>
<p><strong>COII</strong> speichert die Information wiederum in einem Cookie und lädt die Seite automatisch neu. Wurde dem Tracking zugestimmt, wird das entsprechende Tracking-Pixel (JavaScript) geladen. Sonst nicht. COII  unterscheidet dabei allerdings vorerst nicht zwischen 1st- und 3rd-Party-Cookies.</p>
<p>In den Einstellungen kannst du (bzw. musst du initial) den Text für den Dialog und die Buttons anpassen. Außerdem solltest du natürlich dein Tracking-Pixel hinterlegen. Sonst brauchst du dieses Plugin  nicht.</p>
<p>Außerdem kannst du den Shortcode [ coii_dialogue ] auf jeder Seite oder jedem Beitrag - wie z.B. deiner Datenschutzbestimmung - nutzen, um dort die gleiche Abfrage darzustellen.</p>
<p><strong>COII</strong> kannst du dir <a href="https://github.com/nickyreinert/coii/edit/master/README.txt">bei Github</a> oder direkt über das <a href="https://wordpress.org/plugins/cookie-optin-interface/">Wordpress-Repository</a> herunterladen.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>wordpress</category>
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>COII - Cookie OptIn Interface als Wordpress Plugin - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Wie entwickelt man einen Amazon-Bot für Telegramm?</title>
      <link>http://localhost:1313/2018/2018-03-02-wie-entwickelt-man-einen-amazon-bot-fuer-telegramm/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2018/2018-03-02-wie-entwickelt-man-einen-amazon-bot-fuer-telegramm/</guid>
      <description>Was ist ein Telegramm-Bot? Schon mal was von Telegramm gehört oder gar einem Telegramm-Bot gehört? Nein? Macht nichts. Telegramm ist ein Messenger, wie Whatsapp …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Schon mal was von Telegramm gehört oder gar einem Telegramm-Bot gehört. Nein. Macht nichts. Telegramm ist ein Messenger, wie Whatsapp oder Threema.&#39; reading_time: 13 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Docker, Mac, Git, Server, Mobile, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <h2 id="was-ist-ein-telegramm-bot">Was ist ein Telegramm-Bot?</h2>
<p>Schon mal was von Telegramm gehört oder gar einem Telegramm-Bot gehört? Nein? Macht nichts. Telegramm ist ein Messenger, wie Whatsapp oder Threema. Der große Vorteil von Telegramm gegenüber Whatsapp ist die Plattforum-Unabhängigkeit. Es gibt nicht nur Apps für Android und iOs, auch unter OS X (Mac) und Windows lässt sich Telegramm unkompliziert nutzen. Bei Whatsapp war das bisher nur über den Browser möglich, Threema bietet diese Möglichkeit gar nicht an.</p>
<p>Außerdem bietet Telegramm ein sehr umfangreiche API an, die noch dazu sehr gut dokumentiert ist. Damit lassen sich sogenannte Telegramm-Bots entwickeln. Diese Bots können dann von den Nutzern mit @einBot angesprochen werden, um alle Möglichen Aufgaben auszuführen. Einer der bekanntesten ist vermutlich der @gif-Bot, der die Plattform giphy.com durchsuchen kann und die Ergebnisse in den Chat-Verlauf schicken kann. Und diese Art von Bots lassen sich auch selber entwickeln und anbieten. Unter anderem auch mit PHP.</p>
<p>Wer die Kommunikation mit Telegramm nicht komplett von vorne aufbauen will, kann auf eine Bibliothek <a href="https://github.com/php-telegram-bot/core">von Longman auf github.com</a> zugreifen. Für meinen Geschmack ist diese leider etwas zu schlecht dokumentiert und mitunter etwas durcheinander organisiert. Noch dazu wird sie offenbar nur sporadisch betreut. Dennoch gibt es ein relativ großes Repository mit Beispielen, was definitiv sehr hilfreich  ist. Etwas verwirrend sind die beiden Repositories, die da <em>Core</em> und <em>Manager</em> heißen. Der <em>Manager</em> ist nur eine Art Wrapper für das Core-Repository. Dessen Nutzung erleichtert die Einrichtung und Entwicklung des Bots um ein vielfaches und bietet z.B. eine zentrale Datei (manager.php) an, um alle Funktionen zu steuern. Beim Core werden die jeweiligen Bot-Funktionen über verschiedene Dateien gesteuert.</p>
<h3 id="was-ist-das-ziel">Was ist das Ziel?</h3>
<p>Was ist also der Plan? Wir bauen uns einen Telegramm-Bot, mit dem sich Amazon nach Produkten durchsuchen lässt. Das Ergebnis wird in einem Grid dargestellt. Wählt man ein Element aus, erscheint es mit Link zum Produkt im Chat-Verlauf. Und mit einer Analytics-Plattform soll das ganze</p>
<p>Um deinen eigenen Bot betreiben zu können brauchst du natürlich erstmal Telegramm und außerdem einen Web-Server und eine Domain für die du ein SSL-Zertifikat einrichten musst. Außerdem solltest du <a href="https://getcomposer.org/download/">composer</a> installiert haben und so ungefähr wissen, wie man damit umgeht.</p>
<h2 id="anmelden-eines-bots">Anmelden eines Bots</h2>
<p>Zunächst musst du deinen neuen Telegramm-Bot anmelden. Dazu nutzt du den BotFather (<a href="https://telegram.me/botfather">BotFather)</a>. dem du mit dem Befehl /<em>newbot</em> dazu bringen kannst, einen neuen Bot zu registrieren. Zuerst wird ein Name für den Bot verlangt - das ist allerdings noch <em>nicht</em> der Name, mit dem der Bot später auch angesprochen wird. Das ist erst der sogenannte <em>username</em>, der im 2. Schritt verlangt wird. Ich nenne meinen Bot <em>@buecherBot</em>.</p>
<p>Leider gibt es hier eine Restriktion: Der Name muss mit <em>bot</em> enden. Wer einen kurzen Namen wie @gif oder @youtube nutzen möchte, muss dazu vermutlich etwas mehr Aufwand betreiben. Als nächstes rufst du die Einstellungen des Bots auf, indem du das Inline-Menü mit /mybots öffnest.</p>
<p>Für unseren Bot solltest du zunächst den Inline-Mode aktivieren. Damit kannst du den Bot im Textfeld direkt ansprechen. Das gehst du über den Punkt Bot-Settings zum Inline-Mode und aktivierst diesen.</p>
<p>[caption id=&ldquo;attachment_1655&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-entwickelt-man-einen-bot-fuer-telegramm/telegramm-bot-father.png"><img src="/2018/2018-03-02-wie-entwickelt-man-einen-amazon-bot-fuer-telegramm/images/telegramm-bot-father-300x200.png" alt="Inline-Mode für den Telegramm-Bot aktivieren"></a> Inline-Mode für den Telegramm-Bot aktivieren[/caption]</p>
<p> </p>
<p>Schließlich kannst du <em>Allow Groups</em> auf Nein setzen und die <em>Group Privacy</em> aktivieren. Da der Bot noch nicht in Gruppen aktiv sein soll, muss er weder Mitglied von Gruppen sein noch deren Nachrichten mitlesen.</p>
<p>Als nächstes lässt du dir den API-Schlüssel anzeigen, damit du auch von außen mit dem Bot kommunizieren kannst. Der API-Schlüssel befindet sich im obersten Menü und ist folgendermaßen aufgebaut:</p>
<p>123123123:128390123jKF19082_1293123123</p>
<p>Das war es, was die Vorbereitung angeht. Weiter geht es mit PHP und einer kleinen Bot-Logik.</p>
<h2 id="dem-bot-mit-php-leben-einhauchen">Dem Bot mit PHP Leben einhauchen</h2>
<p>Als Library bzw. Framework nutzen wir das <a href="https://github.com/php-telegram-bot/core">Telegram-Bot-Repository</a> von Longman bzw. den dazugehörigen <a href="https://github.com/php-telegram-bot/telegram-bot-manager">Manager</a>, eine Art Wrapper, der die Steuerung etwas erleichtert.Damit du für den ersten Start bereits eine gute Grundlage hast, solltest du dir <a href="https://github.com/php-telegram-bot/example-bot">die Beispiel-Dateien von github</a> herunterladen. Auf der github-Seite wird zwar die Einstellung für die composer.json vorgegeben, allerdings hat der checkout damit bei mir nicht funktioniert. Mit folgenden Parametern klappte es dann:</p>
<p>{
&ldquo;require&rdquo;: {
&ldquo;php-telegram-bot/telegram-bot-manager&rdquo;: &ldquo;^1.2&rdquo;,
&ldquo;longman/telegram-bot&rdquo;: &ldquo;0.52 as 0.48&rdquo;
}
}</p>
<p>Nachdem composer alle Abhängigkeiten heruntergeladen hat (<em>composer install</em>), muss man sich in der manager.php an die Grundeinstellungen machen. (Es kann passieren, dass du auf deinem System einige PHP-Module installieren musst. Composer wird dir die Namen der Module allerdings nennen. Du kannst sie dann relativ unkompliziert mit z.B. apt-get install php7.0-b_cmath php7.0-curl herunterladen und aktivieren.) Außerdem werde ich ein paar Änderungen an der Datei InlinequeryCommand.php_ aus dem Ordner Commands aus dem Beispiel-Repository vornehmen.</p>
<p>Aber zuerst zur manager.php. Hier solltest du die folgenden Einstellungen vornehmen:</p>
<ul>
<li>
<p><strong>bot_username</strong> - der Benutzername deines Bots, ohne das führende @</p>
</li>
<li>
<p><strong>api_key</strong> - der API-Schlüssel, den dir der Bot-Father gegeben hat</p>
</li>
<li>
<p><strong>secret</strong> - ein selbst erzeugtes Passwort um die Datei vor Zugriffen von außen zu schützen - die PHP-Datei liegt ja auf deinem öffentlichen Server und kann theoretisch von überall aufgerufen werden.</p>
</li>
<li>
<p><strong>webhook-&gt;url</strong> - hier trägst du die URL zur manager.php-Datei ein, also <a href="https://telegramm.example.com/manager.php">https://telegramm.example.com/manager.php</a></p>
</li>
<li>
<p><strong>commands-&gt;paths</strong> - diese Zeile muss auskommentiert sein und zu einem Pfad verweisen, der deine Bot-Commandos enthält. Wenn du dich an dem Bot-Example orientierst, sieht diese Einstellung so aus:</p>
<pre><code>      'commands' =&gt; \[
         // Define all paths for your custom commands
         'paths'   =&gt; \[
             \_\_DIR\_\_ . '/Commands'
         \]
</code></pre>
</li>
</ul>
<p>Als nächstes kannst du noch ein paar zusätzliche Änderungen vornehmen, die aber für die Funktion des Bots nicht wichtig sind:</p>
<ul>
<li><strong>max_connections</strong> - offensichtlich die Anzahl der maximal zulässigen Verbindungen</li>
<li><strong>logging</strong> - diese Zeilen kannst du aus-kommentieren, um das Logging zu aktivieren, gerade in der Anfangsphase ist das ganz nützlich</li>
<li><strong>limiter</strong> - die Telegram-API lässt natürlich nur eine begrenzte Anzahl von Anfragen zu, um das eigene System zu schützen, offenbar bringt das Framework eine Funktion mit, um das Erreichen des Limits bestmöglich zu vermeiden - wie das funktioniert, kann ich nicht sagen, da dazu auch nicht mehr in der Doku steht, ich hab es erstmal aktiviert</li>
</ul>
<p>Grundsätzlich war es das erstmal, was die Voreinstellungen betrifft. Jetzt kannst du den sog. webhook aktivieren. Dazu rufst du die manager.php im Browser auf, wie z.B.</p>
<p><a href="https://telegramm.example.com/manager.php">https://telegramm.example.com/manager.php</a></p>
<h3 id="den-zugriff-von-außen-beschränken">Den Zugriff von außen beschränken</h3>
<p>Wenn du alles richtig gemacht hast, erscheint jetzt erstmal ein Fehler. Und das ist auch gut so - denn schließlich soll der Zugriff von außen ja nicht jedem gewährt werden.</p>
<p>Fatal error: Uncaught TelegramBot\TelegramBotManager\Exception\InvalidAccessException:
Invalid access in &hellip;</p>
<p>Also packst du noch das secret-Token an die URL, dass du weiter oben in der manager.php angegeben hast (nicht den API-Schlüssel von Telegramm!). Und damit du auch eine Aktion auslöst, setzt du erstmal den webhook mit dem Parameter a=set:</p>
<p><a href="https://telegramm.example.com/manager.php?s=123123123&amp;a=set">https://telegramm.example.com/manager.php?s=123123123&a=set</a></p>
<p>Dein Webhook für den Bot ist nun aktiv. Da du in der <em>manager.php</em> außerdem schon den Ordner commands freigegeben hast, kann der Bot nun schon auf Inline-Anfragen antworten. Im Telegramm-Client kannst du nun deinen Privat-Chat öffnen (&ldquo;Gespeichertes&rdquo;) und den Telegramm-Bot mit @buecherBot ansprechen. Der Bot sollte nun, wenn alles korrekt eingerichtet, so antworten, wie es in der Datei <em>InlinequeryCommand.php</em> vorgegeben ist. Nämlich mit einer sehr einfache 3-zeiligen Liste.</p>
<p>Um nun ein Ergebnis von der Amazon API als Bilder-Liste darzustellen, habe ich <em>InlinequeryCommand.php</em> ein wenig angepasst. Zuerst benötigen wir die entsprechende Klasse, um nicht nur mit Text sondern auch mit Bildern zu antworten:</p>
<p>use Longman\TelegramBot\Entities\InlineQuery\InlineQueryResultPhoto;</p>
<p>Außerdem habe ich den Aufbau des Antwort-Objektes etwas vereinfacht (ich werde hier nicht weiter ins Detail gehen, auf $this-&gt;apiResult gehe ich später ein).</p>
<p>foreach ($this-&gt;apiResult-&gt;items as $item) {</p>
<p>$this-&gt;inlineQueryResult[] = new InlineQueryResultPhoto(array(
&lsquo;id&rsquo;                    =&gt;  sizeof($this-&gt;inlineQueryResult),
&rsquo;title&rsquo;          	=&gt; &lsquo;Search: &rsquo; . $query,
&lsquo;description&rsquo;           =&gt; &lsquo;Info: &rsquo; . $information,
&rsquo;thumb_url&rsquo;             =&gt; $thumbUrl,
&lsquo;photo_url&rsquo;             =&gt; $imageUrl,
&lsquo;caption&rsquo;             	=&gt; $linkUrl
)
);</p>
<p>}</p>
<p>$data[&lsquo;results&rsquo;] = &lsquo;[&rsquo; . implode(&rsquo;,&rsquo;, $this-&gt;inlineQueryResult) . &lsquo;]&rsquo;;</p>
<p>return Request::answerInlineQuery($data);</p>
<p>Grundsätzlich war es das schon. Du kannst nun noch alle möglichen anderen Funktionen des Bots nutzen. Schau dir dazu einfach den Commands-Ordner des Example-Repository an. Die Auswahl ist sehr groß, für meine Zwecke soll es aber erstmal bei der Inline-Query bleiben.</p>
<h2 id="eine-suchanfrage-zu-amazon-schicken">Eine Suchanfrage zu Amazon schicken</h2>
<p>Natürlich soll derTelegramm-Bot nun auch in der Lage sein, Anfragen der Benutzer zu Amazon zu schicken und mit einem vernünftigen Suchergebnis zu antworten. Zunächst benötigt man dafür einen Partner-Account bei <a href="https://partnernet.amazon.de">Amazon</a>. <a href="https://partnernet.amazon.de/assoc_credentials/home">In den Einstellungen</a> kann man sich dann ein Schlüsselpaar erstellen um die Suchanfragen zu authentifizieren. Und auch für die Suchanfrage selber gibt es eine PHP-API, nämlich <a href="https://github.com/Exeu/apai-io/">apai-io von exeu</a>. Die Einrichtung und der Aufbau sind relativ einfach. Nachdem composer die notwendigen Dateien heruntergeladen hat, packt man - wie üblich - ein paar Zeilen in eine PHP-Datei und hat die erste Anfrage an die Amazon-API fertig:</p>
<pre><code>&lt;?php ini\_set('display\_errors', 1);

require\_once \_\_DIR\_\_ . '/vendor/autoload.php';

define('AWS\_API\_KEY', 'AKAKAKAKAKAKAKA');
define('AWS\_API\_SECRET\_KEY', 'KALSKDLASKDLASDKLASDKLASKLDKASLDASDL
define('AWS\_ASSOCIATE\_TAG', 't0000-21');

use ApaiIO\\Configuration\\GenericConfiguration;
use ApaiIO\\Operations\\Search;
use ApaiIO\\ApaiIO;

$conf = new GenericConfiguration();
$client = new \\GuzzleHttp\\Client();
$request = new \\ApaiIO\\Request\\GuzzleRequest($client);

$conf
	-&gt;setCountry('de')
	-&gt;setAccessKey(AWS\_API\_KEY)
	-&gt;setSecretKey(AWS\_API\_SECRET\_KEY)
	-&gt;setAssociateTag(AWS\_ASSOCIATE\_TAG)
	-&gt;setRequest($request);
	
$apaiIO = new ApaiIO($conf);

$search = new Search();
$search-&gt;setCategory('DVD');
$search-&gt;setActor('Bruce Willis');
$search-&gt;setKeywords('Stirb Langsam');

$response = $apaiIO-&gt;runOperation($search);

$results = simplexml\_load\_string( $response ); 
</code></pre>
<p>Leider gestalten sich die ersten Versuche mit der API etwas schwieriger. Nutzt man den Beispiel-Code, liefert das ganze Script nur einen sehr langen String zurück. In der weiterführenden <a href="http://apai-io.readthedocs.io/en/latest/chapters/responsetransformer.html">Dokumentation</a> wird zwar ein <em>setResponseTransformer</em> beschrieben (siehe auskommentierte Zeile oben). Doch auch dann ist die Antwort nicht nutzbar. Das Suchergebnis bleibt weiterhin ein langer String. Erst <a href="https://github.com/Exeu/apai-io/issues/48">Issue 48</a> gibt einen Hinweis auf die Lösung: <em>new SimpleXMLElement</em>.  Jetzt erhalte ich ein XML-Object, in dem ich mich mit einer Schleife durch das Ergebnis arbeiten kann. Oder man greift auf <a href="https://gist.github.com/ottanxyz/4a44a5094bf27606c12803590a92d131">die hier verwendete Funktion</a>  <em>simplexml_load_string</em> zurück - mein Favorit.</p>
<p>Nun geht es darum, die Antwort in eine Schleife zu packen, um die notwendigen Informationen zu extrahieren. Das Suchergebnis muss also vorbereitet und zurück an denTelegramm-Bot geschickt werden.</p>
<h2 id="die-hochzeit---amazons-antwort-an-dentelegramm-bot-weiterleiten">Die Hochzeit - Amazons-Antwort an denTelegramm-Bot weiterleiten</h2>
<p>Bisher war die Amazon-Funktionalität in eine andere Datei ausgelagert. Also müssen erstmal Zugangsdaten und die Abhängigkeiten in die InlineQueryCommand.php übernommen werden. Ich mach mir das Leben nicht unnötig schwer, und packe das alles in die InlinequeryCommand.php. Sauberer wäre es vielleicht, die initiale bot-Klasse etwas zu erweitern. Außerdem  muss die Anfrage an den Bot an die Amazon-API durchgeschliffen werden. Wenn der Benutzer nur einen Suchbegriff angibt (Bruce Willis), wird danach in allen Kategorien gesucht. Wer die Suche einschränken möchte, muss dem Suchbegriff die entsprechende Kategorie voranstellen. Also z.B.: Books:Bibel Das ganze sieht dann in etwa so aus:</p>
<p>$request = explode(&rsquo;:&rsquo;, trim($requestString));</p>
<p>if (sizeof($request) == 1) {</p>
<pre><code>$category = 'All';
$keywords = trim($request\[0\]);
</code></pre>
<p>} else {</p>
<pre><code>$category = trim($request\[0\]);
$keywords = trim($request\[1\]);
</code></pre>
<p>}</p>
<p>Kategorie und Keyword werden nun schlicht an die Amazon-API übergeben. Damit ich auch Vorschaubilder erhalte, muss ich das in der Suche explizit angeben. Die Anfrage an die API sieht nun also so aus:</p>
<p>$search = new Search();
$search-&gt;setCategory($category);
$search-&gt;setKeywords($keywords);
$search-&gt;setResponseGroup( array( &lsquo;Images&rsquo;, &lsquo;ItemAttributes&rsquo; ) );	
$search-&gt;setPage(1);</p>
<p>Das ganze wird nun in ein Objekt gepackt und in einer Schleife durchlaufen um die Antwort für den Bot zu erzeugen. Das hat sich bei den ersten Versuchen als schwierig erwiesen. Es hat eine Weile gedauert, bis ich herausgefunden habe, dass ich die Eigenschaften des Antwort-Objekts als String casten muss: (string)!</p>
<p>foreach ($this-&gt;apiResult-&gt;Items-&gt;Item as $item) {</p>
<p>$title  = (string) $item-&gt;ItemAttributes-&gt;Title;
$url  = (string) $item-&gt;DetailPageURL;
$thumbFileUrl  = (string) $item-&gt;LargeImage-&gt;URL;
$thumbFileName = basename($thumbFileUrl);
$thumbFileType = pathinfo($thumbFileName, PATHINFO_EXTENSION);</p>
<p>if ($thumbFileType == &lsquo;jpg&rsquo; || $thumbFileType == &lsquo;jepg&rsquo;) {</p>
<pre><code>$this-&gt;inlineQueryResult\[\] = new InlineQueryResultPhoto(
array(
		'id'                    =&gt; sizeof($this-&gt;inlineQueryResult),
		'title'                 =&gt; $title,
		'description'           =&gt; $title,
		'caption'          		=&gt; $title@,
		'thumb\_url'             =&gt; $thumbFileUrl,
		'photo\_url'             =&gt; $thumbFileUrl,
		'input\_message\_content' =&gt; new InputTextMessageContent(\[
			'parse\_mode' =&gt; 'HTML',
			'message\_text' =&gt; ' ' . 'Shop it @ &lt;a href=&quot;'.$url.'&quot;&gt;Amazon&lt;/a&gt;!'\])
	)
);
</code></pre>
<p>}</p>
<p>if (sizeof($this-&gt;inlineQueryResult) &gt;= $this-&gt;limitResult) {</p>
<pre><code>break;
</code></pre>
<p>}</p>
<p>}</p>
<p>Grundsätzlich war es das. Das ganze Script gibt es zum Nachlesen wie gesagt auf github.</p>
<h2 id="zugriffsstatistiken-mit-botan-aufzeichnen-und-darstellen">Zugriffsstatistiken mit Botan aufzeichnen und darstellen</h2>
<p>Um Botan nutzen zu können, brauchst du einen Account bei <a href="https://appmetrica.yandex.com/">AppMetrica</a> von Yandex. Dort kannst du direkt nach der Registrierung einen API-Schlüssel für deinen Bot anlegen:</p>
<p>[caption id=&ldquo;attachment_1649&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-entwickelt-man-einen-bot-fuer-telegramm/appmetrics-yandex-bot-api-key-anlegen.png"><img src="/2018/2018-03-02-wie-entwickelt-man-einen-amazon-bot-fuer-telegramm/images/appmetrics-yandex-bot-api-key-anlegen-300x130.png" alt="AppMetrics API Key für Bot anlegen"></a> AppMetrics API Key für Bot anlegen[/caption]</p>
<p>Wenn das erledigt ist, gelangst du zu der Übersichtsseite deines Bots und siehst dort den API-Key, den du als token in der <em>manager.php</em> einträgst. Die entsprechenden Zeilen müssen natürlich auch auskommentiert werden:</p>
<pre><code>    // Botan.io integration
    'botan' =&gt; \[
       'token' =&gt; '123123123-123123123-123123',
    \],
</code></pre>
<p>Das ist es schon fast gewesen. Wenn da nicht der Datenschutz wäre. Wenn du Telegramm-Bot im Chat nun &ldquo;anrufst&rdquo;, erscheint der Aufruf einige Augenblicke später auch im Interface von AppMetrics. Allerdings sind dann auch eine UserId und der Vorname im Klartext enthalten. Um das zu vermeiden, musst du Methode <em>track</em> in der Botan-Klasse (Botan.php in vendor\longman\telegram-bot\src\) anpassen:</p>
<p>Direkt an den Anfang der Methode habe ich die folgende Anonymisierung eingefügt:</p>
<p>// ANONYMIZING STATS
if (isset($update-&gt;inline_query)) {</p>
<pre><code>if (isset($update-&gt;inline\_query\['from'\])) {

	if (isset($update-&gt;inline\_query\['from'\]\['id'\])) {
	
		$update-&gt;inline\_query\['from'\]\['id'\] = '0';
		$update-&gt;inline\_query\['from'\]\['first\_name'\] = 'anon';
		$update-&gt;raw\_data\['inline\_query'\]\['from'\]\['id'\] = '0';
		$update-&gt;raw\_data\['inline\_query'\]\['from'\]\['first\_name'\] = 'anon';
			
	}
}
</code></pre>
<p>}</p>
<p>Weiter unten wird eine UserId ($uid) ermittelt. Auch hier habe ich anonymisiert:</p>
<p>// In case there is no from field assign id = 0
// $uid = isset($data[&lsquo;from&rsquo;][&lsquo;id&rsquo;]) ? $data[&lsquo;from&rsquo;][&lsquo;id&rsquo;] : 0;
// ANONYMIZING STATS
$uid = 0;</p>
<p>Jetzt dürften keine Klarnamen mehr übermittelt werden und der Bot ist startklar.</p>
<p> </p>
<p>Viel Spass mit deinem Telegramm-Bot.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie entwickelt man einen Amazon-Bot für Telegramm? - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Wie wirken sich viele 301 Weiterleitungen auf die  Performance aus?</title>
      <link>http://localhost:1313/2017/2017-10-26-wie-wirken-sich-viele-301-weiterleitungen-auf-die-performance-aus/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-10-26-wie-wirken-sich-viele-301-weiterleitungen-auf-die-performance-aus/</guid>
      <description>Um Weiterleitungen kommt man fast nicht herum. Vor allem im Bereich der Suchmaschinenoptimierung (SEO) sollte man vermeiden, dass es auf der Website zu …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Um Weiterleitungen kommt man fast nicht herum.&#39; reading_time: 5 content_type: &#39;tutorial</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Git, Server, Mobile, Ai</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Um Weiterleitungen kommt man fast nicht herum. Vor allem im Bereich der Suchmaschinenoptimierung (SEO) sollte man vermeiden, dass es auf der Website zu 404-Fehlern kommt - also Ressourcen, die nicht (mehr) vorhanden sind.</p>
<p>Ein Weg, um das zu beheben, ist die Einrichtung einer Weiterleitung von der alten, nicht mehr vorhandenen Ressource auf die neue Ressource.  Der HTTP-Statuscode dafür ist entweder 301 (temporär) oder 302 (für eine dauerhafte Weiterleitung). Weiterleitungen können z.B. mit einer .htaccess Datei eingerichtet werden. Dazu aktiviert man zunächst die sogenannte RewriteEngine, um eine URL zu einer anderen URL &ldquo;weiterzuleiten&rdquo;. Dann kann man beliebig viele, Regeln nach folgendem Prinzip festlegen (freilich gibt es noch weitaus mehr Möglichkeiten, wie z.B. reguläre Ausdrücke):</p>
<p>RewriteEngine On
Redirect 302 /redirect0r/foobar/1/ /redirect0r/foobar/index.php
Redirect 302 /redirect0r/foobar/2/ /redirect0r/foobar/index.php</p>
<p>Wenn man nun von einem System (z.B. Joomla) auf ein anderes System (z.B. Wordpress) umzieht und dabei nicht nur auf eine veraltete URL sondern auf 100 URLs stößt, die im neuen System nicht mehr existieren, stellt sich oft die Frage: Was mache ich mit all den alten URLs, die ich im neuen System nicht exakt abbilden kann? Macht es Sinn, die htaccess-Datei mit zahllosen Weiterleitungen zu überfluten? Es kommen zu ersten Zweifeln: Die htaccess-Datei wird bei jedem Aufruf der Website geladen. Kann eine große htaccess-Datei sich also negativ auf die Performance der Seite auswirken?</p>
<p>Die Frage hat auch mich beschäftigt und deshalb habe ich ein kleines PHP-Script geschrieben, dass helfen soll, die Antwort zu finden.</p>
<h2 id="funktion">Funktion</h2>
<p>Der Quellcode für das PHP-Script ist über <a href="https://github.com/nickyreinert/redirect0r">github</a> verfügbar. Das Script kann im Browser oder über die Kommandozeile aufgerufen werden. Sämtliche Einstellungen werden in einer JSON-Datei vorgenommen.</p>
<p>Der Ablauf des Scripts ist relativ einfach. In einer Schleife schreibt es eine beliebige Anzahl von Weiterleitungs-Regeln in eine htaccess-Datei. Diese Regeln haben folgenden Aufbau:</p>
<p>Redirect 302 /foobar/<strong><em>i</em></strong>/ /foobar/index.php</p>
<p>/foobar ist der Ordner, der für die Messung verwendet wird. In diesem Ordner befindet sich auch die htaccess-Datei. i ist eine fortlaufende Ziffer, die mit jedem Schleifendurchlauf inkrementiert wird. Schließlich wird das Ziel der Weiterleitung mit /foobar/index.php angegeben. Der Ordner und die Zieldatei sowie der Inhalt der Zieldatei können angepasst werden.</p>
<p>Nicht jeder Schleifendurchlauf schreibt in die htaccess-Datei und ruft Test-URL sofort auf. Das geschieht in definierbaren Abschnitten. Diese Schrittweite ist definierbar. Die Zeit für den Aufruf wird schließlich gemessen .</p>
<p>Weiterhin ist es möglich, die Aufrufe innerhalb einer Schrittweite zu wiederholen, also mehrere Abfragen nacheinander, um z.B. in der späteren Auswertung aus den Ergebnissen einen Mittelwert zu errechnen. Nach jeder Abfrage kann außerdem eine cool-down-Phase stattfinden, bevor der nächste Abruf stattfindet..</p>
<h2 id="messergebnisse">Messergebnisse</h2>
<p>Die Messergebnisse offenbaren keine Überraschung. Je größer die Datei, desto größer die Antwortzeiten.  Im Detail heißt das:</p>
<p>Gemessen wurden mit drei verschiedenen Methoden:</p>
<ul>
<li>auf einem lokalen Webserver (MacBook Pro mit 16 GByte RAM und 2,7 GHz i5) per Aufruf im Browser (local server)</li>
<li>auf einem gehosteten Webserver (unbekannte Hardware) per Aufruf im Browser (remote server)</li>
<li>auf einem gehosteten Webserver per Aufruf auf der Kommandozeile (remote server CLI)</li>
</ul>
<p>Als Zeilenlimitin der htaccess-Datei wurden 100.000 Zeilen gewählt. Die Schrittweite beträgt 5.000. Nach jedem Aufruf gab es eine Pause von 3 Sekunden. Insgesamt gab es drei Aufrufe je Zeilenanzahl. Über diese 3 Aufrufe zu einer bestimmten Zeilenanzahl wurde schließlich der Mittelwert errechnet.</p>
<p>Bei 10.000 Zeilen wurde bei allen Methoden ca. 90 ms gemessen. Bei 20.000 Zeilen in der htaccess-Datei beträgt die Reaktionszeiten knapp das doppelte, aber immer noch recht unauffällige 185 ms. Ab da gehen die gemessenen Zeit leicht auseinander, der lokale Server scheint die schlechtere Performance zu haben.</p>
<p>Bei 60.000 Zeilen wird bei allen Methoden die &ldquo;magische&rdquo; Grenze von 1 Sekunde überschritten. Die Antwortzeiten steigen jetzt nicht mehr proportional. Bei 100.000 Zeilen benötigt der lokale Server schon über 4 Sekunden für die Antwort. Der gehostete Webserver braucht dafür über knapp 3 Sekunden.</p>
<p>[caption id=&ldquo;attachment_1580&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/wie-wirken-sich-viele-301-weiterleitungen-auf-die-performance-aus/htaccess-geschwindigkeit.png"><img src="/2017/2017-10-26-wie-wirken-sich-viele-301-weiterleitungen-auf-die-performance-aus/images/htaccess-geschwindigkeit-300x186.png" alt="Geschwindigkeit bei wachsender htaccess-Datei"></a> Geschwindigkeit bei wachsender htaccess-Datei[/caption]</p>
<h2 id="fazit">Fazit</h2>
<p>Natürlich wirkt sich eine große htaccess-Datei auf die Performance des Servers auf. Denn wie bereits bemerkt, muss der Webserver diese Datei bei jeder Anfrage öffnen und verarbeiten. Allerdings ist der negative Einfluss ziemlich gering und macht sich erst bei einer sehr großen Anzahl von Zeilen bemerkbar.</p>
<p>Eine htaccess-Datei mit 10.000 Zeilen verringert die Antwortzeit kaum. Allerdings steigt die Antwortzeit überproportional an. Bei 100.000 Zeilen ist sie bereits 50 mal langsamer.</p>
<p>Im Bereich ab 40.000 Zeilen dürfte der Einfluss auch nach außen hin spürbar sein. Natürlich hängt auch diese Erkenntnis stark von der verwendeten Hardware ab: Der lokale Webserver ist bei meinen Messungen etwas langsamer als der Server des Hosters.</p>
<p>Wer eine htaccess-Datei mit 10.000 Weiterleitungen pflegt sollte grundsätzlich sein Konzept überdenken. Oft lässt sich das entweder durch einen sauberen Umzug bzw. eine Anpassung des neuen Systems oder durch Weiterleitungen mit regulären Ausdrücken besser lösen. Am besten ist es natürlich, wenn man gar nicht erst in die Verlegenheit kommt, Weiterleitungen nutzen zu müssen.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> apache, htacces, messung, php, redir, weiterleitung</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie wirken sich viele 301 Weiterleitungen auf die  Performance aus? - Tutorial</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>XAMPP startet nicht mehr, nachdem eine php-Extension hinzugefügt wurde</title>
      <link>http://localhost:1313/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/</guid>
      <description>Ich hatte hier neulich das Problem, dass ich die mongodb Extension für PHP aktivieren wollte und sich danach der Apache-Dienst nicht mehr starten ließ. Aber der …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Ich hatte hier neulich das Problem, dass ich die mongodb Extension für PHP aktivieren wollte und sich danach der Apache-Dienst nicht mehr starten ließ. Aber der Reihe nach:&#39; reading_time: 4 content_type: &#39;guide</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Database, Server, Mobile, Ai, Automation</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Ich hatte hier neulich das Problem, dass ich die mongodb Extension für PHP aktivieren wollte und sich danach der Apache-Dienst nicht mehr starten ließ. Aber der Reihe nach:</p>
<p>Das System ist OS 10.12.6 und ich nutze das XAMPP-Paket 7.1.9 mit entsprechend PHP 7.1. Außerdem habe ich mir homebrew installiert, da die Installation von pecl zu Umständlich (ich hätte alle möglichen  Abhängigkeiten installieren müssen). Mit homebrew habe ich mir also den aktuellen mongodb-Treiber installiert, das geht recht einfach mit:</p>
<p>brew update
brew install php71-mongodb</p>
<p>Danach lässt sich die Extension in der /Applications/XAMPP/xamppfiles/etc/php.ini Datei aktivieren:</p>
<p>extension=&quot;/usr/local/opt/php71-mongodb/mongodb.so&quot;</p>
<p>Soweit. So einfach. Das Problem: Nachdem ich diese Zeile in der php.ini Datei hinzugefügt hatte, ließ sich der Apache-Dienst nicht mehr über die XAMPP-Oberfläche starten, obwohl diese mit root-Rechten ausgeführt wird. Leider gab auch die Log-Datei /Applications/XAMPP/xamppfiles/logs/error_log nicht viel her. Und auch nachdem ich die Zeile aus der php.ini-Datei entfernt habe, trat das Problem weiter auf. Ich bekam den Web-Server also nicht zum laufen und an keiner Stelle in den Log-Dateien war ersichtlich, was nicht stimmte.</p>
<p>[caption id=&ldquo;attachment_1567&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/XAMPP-UI-in-OS-X.png"><img src="/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/images/XAMPP-UI-in-OS-X-300x209.png" alt="XAMPP UI in OS X um den Web-Server zu starten"></a> XAMPP UI in OS X um den Web-Server zu starten[/caption]</p>
<h2 id="recherche-der-aufgerufenen-kommandos">Recherche der aufgerufenen Kommandos</h2>
<p>Also musste ich mich auf die Fehlersuche machen. Und das ist recht umständlich, denn der Klick auf den Button im XAMPP-UI stößt eine etwas längere Befehlskette an an deren Ende der Start des http-Daemons steht:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">/Applications/XAMPP/xamppfiles/ctlscript.sh start apache
</span></span><span class="line"><span class="ln">2</span><span class="cl">-&gt; 
</span></span><span class="line"><span class="ln">3</span><span class="cl">/Applications/XAMPP/xamppfiles/apache2/scripts/ctl.sh start
</span></span><span class="line"><span class="ln">4</span><span class="cl">-&gt;
</span></span><span class="line"><span class="ln">5</span><span class="cl">/Applications/XAMPP/xamppfiles/xampp startapache 
</span></span><span class="line"><span class="ln">6</span><span class="cl">-&gt; 
</span></span><span class="line"><span class="ln">7</span><span class="cl">/Applications/XAMPP/xamppfiles/bin/apachectl -k start -E /Applications/XAMPP/xamppfiles/logs/error_log -DSSL -DPHP
</span></span><span class="line"><span class="ln">8</span><span class="cl">-&gt;
</span></span><span class="line"><span class="ln">9</span><span class="cl">/Applications/XAMPP/xamppfiles/bin/httpd -k start -E /Applications/XAMPP/xamppfiles/logs/error_log -DSSL -DPHP
</span></span></code></pre></div><p>Ich hab mir also den letzten Aufruf geschnappt und auf der Konsole ausgeführt. Dort erhielt ich den ersten entscheidenen Hinweis - die log-Dateien waren nicht schreibbar:</p>
<p>(13)Permission denied: AH00086: httpd: could not open error log file /Applications/XAMPP/xamppfiles/logs/error_log.
AH00548: NameVirtualHost has no effect and will be removed in the next release /Applications/XAMPP/xamppfiles/etc/extra/httpd-vhosts.conf:40
(13)Permission denied: AH00072: make_sock: could not bind to address [::]:80
(13)Permission denied: AH00072: make_sock: could not bind to address 0.0.0.0:80
no listening sockets available, shutting down</p>
<p>Das lässt sich schnell mit folgendem Aufruf beheben:</p>
<p>sudo chmod a+w /Applications/XAMPP/xamppfiles/logs/error_log</p>
<p>Damit war es natürlich noch nicht getan. Erst jetzt konnte ich dem error.log entnehmen, was das eigentliche Problem war:</p>
<p>AH00548: NameVirtualHost has no effect and will be removed in the next release /Applications/XAMPP/xamppfiles/etc/extra/httpd-vhosts.conf:40
(13)Permission denied: AH00072: make_sock: could not bind to address [::]:80
(13)Permission denied: AH00072: make_sock: could not bind to address 0.0.0.0:80
no listening sockets available, shutting down
AH00015: Unable to open logs</p>
<h2 id="lösung---fehlende-rechte">Lösung - fehlende Rechte</h2>
<p>Im Grunde war ja schon klar, was getan werden musste: Der Aufruf mit sudo. Damit lässt sich der Apache-Dienst also zumindest erstmal starten:</p>
<p>sudo /Applications/XAMPP/xamppfiles/bin/httpd -k start -E /Applications/XAMPP/xamppfiles/logs/error_log -DSSL -DPHP</p>
<p>Das eigentliche Problem bleibt freilich bestehen: Was hat das mit der php-Extension zu tun? Liegt es an dem mongodb-Treiber selber oder ist es ein generelles Problem? Bisher bin ich noch nicht dahinter gestiegen. Aber zumindest lässt sich der Web-Server erstmal wieder starten.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> mongodb, osx, php, xampp</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>XAMPP startet nicht mehr, nachdem eine php-Extension hinzugefügt wurde - Guide</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>SSL-Verifizierung mit PHP schlägt fehlt (Fehler 14090086)</title>
      <link>http://localhost:1313/2017/2017-10-14-ssl-verifizierung-mit-php-schlaegt-fehlt-fehler-14090086/</link>
      <pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-10-14-ssl-verifizierung-mit-php-schlaegt-fehlt-fehler-14090086/</guid>
      <description>Wenn dich PHP mit dieser Fehlermeldung (oder einer ähnlichen Fehlernummer) begrüßt, dann liegt es wohl daran, dass beim Abruf einer SSL-Ressource die Identität …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Wenn dich PHP mit dieser Fehlermeldung (oder einer ähnlichen Fehlernummer) begrüßt, dann liegt es wohl daran, dass beim Abruf einer SSL-Ressource die Identität nicht verifiziert werden konnte.&#39; reading_time: 5 content_type: &#39;review</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Server, Mobile, Ai, Automation, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Wenn dich PHP mit dieser Fehlermeldung (oder einer ähnlichen Fehlernummer) begrüßt, dann liegt es wohl daran, dass beim Abruf einer SSL-Ressource die Identität nicht verifiziert werden konnte. Und das ist auch gut so, denn der Sinn von SSL ist ja das Herstellen einer gesicherten Verbindung.<br>
So sieht die Fehlermeldung bei Verwendung von <em>file_get_contents();</em> aus. Aber auch andere Funktionen, mit denen man auf externe Ressourcen verweisen kann, werfen diesen Fehler, wie z.B. <em>imagecreatefrompng();</em>.</p>
<p>Warning: file_get_contents(): SSL operation failed with code 1.
OpenSSL Error messages:
error:14090086:SSL routines:ssl3_get_server_certificate:certificate
verify failed in /website/script.php
on line 50</p>
<p>Warning: file_get_contents():
Failed to enable crypto in /website/script.php<br>
on line 50</p>
<p>Warning: file_get_contents(<a href="https://www.nickyreinert.de/foobar.json%29">https://www.nickyreinert.de/foobar.json)</a>:
failed to open stream: operation failed in /website/script.php<br>
on line 50</p>
<p>Die Erklärung ist simpel: PHP kennt den Aussteller des Zertifikates für <a href="https://www.nickyreinert.de">https://www.nickyreinert.de</a> nicht und verweigert aus Sicherheitsgründen den Aufbau einer Verbindung. Die Ursachen hingegen können vielfältig sein, oft ist der Aussteller des Zertifikats z.B. nicht bekannt. Wir müssen also entweder dafür sorgen, dass PHP dem Aussteller vertraut oder festlegen, dass PHP die Zertifikate gar nicht erst prüft.</p>
<h2 id="verifizierung-des-ssl-hosts-unterdrücken">Verifizierung des SSL Hosts unterdrücken</h2>
<p>Das ist die quick&rsquo;n&rsquo;dirty Lösung. Zumindest <em>file_get_contents()</em>; kann mit Parametern gefüttert werden, die die Verifizierung der Ressource unterdrücken:</p>
<p>$stream = stream_context_create(array(    
$stream = stream_context_create(array(
&ldquo;ssl&rdquo;=&gt;array(     
&ldquo;verify_peer&rdquo;=&gt; false,    
&ldquo;verify_peer_name&rdquo;=&gt; false, ),
&lsquo;http&rsquo; =&gt; array(    
&rsquo;timeout&rsquo; =&gt; 30     ) )     );</p>
<p>$result = file_get_contents($url, 0, $stream);</p>
<p>Wer auf eine eigene Ressource zurückgreift, z.B. im lokalen Netz oder zu Testzwecken, kann damit leben. Aus Sicherheitsgründen ist die Lösung allerdings nicht zu empfehlen. Außerdem erlaubt nicht jede Funktion die Angabe eines Stream-Contextes, wie z.B. <em>imagecreatefromjpeg();</em></p>
<h2 id="die-zertifikatskette-manuell-einrichten">Die Zertifikatskette manuell einrichten</h2>
<p>Man kommt also nicht darum, die saubere Lösung zu nutzen. Dazu muss man wissen, dass es in den allermeisten Fällen nicht nur um das eine Zertifikat geht, sondern um die gesamte Zertifikatskette. Diese beinhaltet auch die Zertifikate der Stellen, die dem infragekommenden Server, also <a href="https://www.nickyreinert.de">https://www.nickyreinert.de</a>, das Zertifikat ausgestellt haben. Wenn PHP diese Stellen nicht kennt, geht es auch davon aus, dass die von dort ausgestellten Zertifikate nicht gültig sind.</p>
<p><a href="https://www.nickyreinert.de/files/1561/ssl-zertifikats-kette.png"><img src="/2017/2017-10-14-ssl-verifizierung-mit-php-schlaegt-fehlt-fehler-14090086/images/ssl-zertifikats-kette-300x219.png" alt=" SSL Zertifikats-Kette mit den Intermediate Zertifikaten"></a></p>
<p>SSL Zertifikats-Kette mit den Intermediate Zertifikaten</p>
<p>Um die Zertifikatskette zu erhalten, kannst du einen Service wie <a href="https://whatsmychaincert.com/">https://whatsmychaincert.com/</a> nutzen. Dieser liefert dir eine Datei mit der  kompletten Zertifikatskette. Oder du machst dich selber auf die Suche. Jedes Zertfikat enthält den Namen des Ausstellers bzw. den Typ des Zertifikats. Damit lassen sich die notwendigen Zwischenzertifkate auch manuell zusammenstellen.</p>
<h2 id="php-die-zertifikatskette-mitteilen">PHP die Zertifikatskette mitteilen</h2>
<p>Die Datei mit der Zertifikatskette gehört nun, oh Wunder, an einen Ort, den PHP erreichen kann. Dann musst du PHP noch mitteilen, dass es auch diese Zertifikatskette berücksichtigen soll. Auch das passiert über den Stream-Context, den ich oben schon angesprochen habe. Doch diesmal erlauben wir PHP, den SSL-Host zu verfizieren und verweisen auf die Zertifikatskette, die wir oben erstellt haben:</p>
<p>$stream = stream_context_create(array(
&ldquo;ssl&rdquo;=&gt;array(    
&ldquo;cafile&rdquo; =&gt; &ldquo;<a href="https://www.nickyreinert.de.pem">www.nickyreinert.de.pem</a>&rdquo;,    
&ldquo;verify_peer&rdquo;=&gt; true,    
&ldquo;verify_peer_name&rdquo;=&gt; true, ),&lsquo;http&rsquo; =&gt; array(    
&rsquo;timeout&rsquo; =&gt; $this-&gt;configUrlTimeOut     ) )
;
$config = file_get_contents($url, 0, $stream);</p>
<p>Geschafft. PHP sollte nun, zur Laufzeit, den SSL-Host überprüfen und dabei auf die Zertifikate zurückgreifen, die die Authentizität einwandfrei bestätigen.</p>
<p>Man kann den Verweis auch an anderer Stelle global definieren. Die PHP-Funktion openssl_get_cert_locations(); teilt uns direkt mit, wo PHP nach gültigen Zertifikaten sucht:</p>
<p>Array
(
[default_cert_file] =&gt; /Applications/XAMPP/xamppfiles/share/openssl/cert.pem
[default_cert_file_env] =&gt; SSL_CERT_FILE
[default_cert_dir] =&gt; /Applications/XAMPP/xamppfiles/share/openssl/certs
[default_cert_dir_env] =&gt; SSL_CERT_DIR
[default_private_dir] =&gt; /Applications/XAMPP/xamppfiles/share/openssl/private
[default_default_cert_area] =&gt; /Applications/XAMPP/xamppfiles/share/openssl
[ini_cafile] =&gt; /Applications/XAMPP/xamppfiles/share/curl/curl-ca-bundle.crt
[ini_capath] =&gt;
)</p>
<p>Der entscheidende Parameter lautet <strong>ini_cafile</strong>. Diese wird in der php.ini mit dem Parameter</p>
<p>openssl.cafile=/Applications/XAMPP/xamppfiles/share/curl/curl-ca-bundle.crt</p>
<p>gesetzt. Die gleiche Info erhältst du auch über die bekannte Funktion phpinfo(), dort lautet der Parameter <strong>openssl.cafile</strong>.</p>
<p>In der entsprechenden Datei liegen eine Menge von Root-Zertifikaten, bzw. Certificate-Authorities. Sprich die Aussteller, denen PHP grundsätzlich vertraut. Mitunter macht es mehr Sinn, diese Einstellung in der php.ini zu nutzen, damit auch curl() darauf zurückgreifen kann.</p>
<p>Wenn du PHP-FPM benutzt, musst du den Parameter übrigens folgendermaßen ansprechen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php_admin_value[openssl.cafile] = /Applications/XAMPP/xamppfiles/share/curl/curl-ca-bundle.crt
</span></span></code></pre></div><h2 id="zusammenfassung">Zusammenfassung</h2>
<p>Die SSL-Fehlermeldung hat ihren Sinn. PHP ist nicht in der Lage, die Authentizität des Servers zu überprüfen. Der korrekte Weg das Problem zu beheben, ist das Zertifikat der entsprechenden Seite herunterzuladen, die Intermediate-Zertifikate und das Root-Zertifikat zu besorgen und alle Zertifikate im PEM-Format in eine Text-Datei zu packen.<br>
Danach kannst du entweder auf die URL zugreifen und über den Stream-Kontext auf diese Datei mit der Zertifikats-Kette verweisen, oder du legst in den globalen PHP-Einstellungen fest, dass PHP diese Datei beim nächsten Mal berücksichtigen soll.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> certificate-chain, curl, intermediate, php, ssl, zertifikate, zertifikatskette</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>SSL-Verifizierung mit PHP schlägt fehlt (Fehler 14090086) - Review</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Welche Arten von SSL-Zertifikaten gibt es?</title>
      <link>http://localhost:1313/2017/2017-09-30-welche-arten-von-ssl-zertifikaten-gibt-es/</link>
      <pubDate>Sat, 30 Sep 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-09-30-welche-arten-von-ssl-zertifikaten-gibt-es/</guid>
      <description>SSL-Zertifikate spielen seit einiger Zeit eine sehr wichtige Rolle. Zwar gibt es die verschlüsselte Datenübertragung von Websiten über https schon länger …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>SSL-Zertifikate spielen seit einiger Zeit eine sehr wichtige Rolle.&#39; reading_time: 6 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>SSL-Zertifikate spielen seit einiger Zeit eine sehr wichtige Rolle. Zwar gibt es die verschlüsselte Datenübertragung von Websiten über https schon  länger (bereits 1994 wurde die erste Version offiziell vorgestellt) aber erst in 2014 nahm die Bedeutung für SEO zu. <a href="https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html">Im August 2014</a> hat Google bekannt gegeben, dass SSL nun zu den Ranking-Faktoren zählt.  Fast zeitgleich (Anfang 2017) haben die beiden bekanntesten Browser Chrome und Firefox eine neue Version vorgestellt. Von nun an werden Webseiten, die SSL nicht nutzen explizit als unsicher ausgezeichnet. Langfristig wird also kein Weg an einem SSL-Zertifikat vorbeiführen.</p>
<p>Es gibt sehr viele Anbieter, bei denen man SSL-Zertifikate bestellen kann und die Preise sind sehr unterschiedlich. So bietet Lets Encrypt kostenlose Zertifikate an und andere Anbieter verlangen dafür mehrere hundert Euro im Jahr. Der Grund dafür ist, dass es natürlich verschiedene Unterscheidungen bei den Zertifikaten gibt. Die eine betrifft die Art, wie das Zertifikat überprüft wird und die andere beschreibt den Gültigkeitsbereich eines Zertifikats.</p>
<h2 id="wie-funktioniert-die-ssl-zertifizierung">Wie funktioniert die SSL Zertifizierung?</h2>
<p>Ich werde ich nicht zu tief ins Detail gehen und eigentlich reicht es auch aus, das Grundprinzip zu verstehen: Wenn du für deine Internetseite ein Zertifikat einrichten willst, musst du dafür einen sogenannten Private Key und einen Antrag, das CSR (Certificat Signing Request) erstellen. Der Private Key ist der Augapfel, den du beschützen musst. Der CSR enthält die Informationen zu der Person bzw. Organisation, die hinter der Website steckt, die das SSL-Zertifikat erhalten soll. Dazu gehören z.B. der Name, die Anschrift und vor allem natürlich die Domain, über die die Webseite erreichbar ist. Außerdem ist auch die CA in dem Zertifikat vertreten. Warum das wichtig ist, erkläre ich weiter unten.</p>
<p>Das CSR wird dann an eine Zertifizierungsstelle geschickt (die sogenannte CA, Certification Authority), die dir als Antwort ein Zertifikat ausstellt.</p>
<p>Dieses Zertifikat wird dann auf deinem Webserver installiert und jedem Browser, der die Seite aufruft, übermittelt. Der Browser erkennt dann die CA, die das Zertifikat ausgestellt hat und kann der Website dann &ldquo;vertrauen&rdquo; bzw. die verschlüsselte Verbindung aufbauen.</p>
<p>[caption id=&ldquo;attachment_1612&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/welche-arten-von-ssl-zertifikaten-gibt-es/Zertifikat-U%CC%88bersicht.png"><img src="images/Zertifikat-U%CC%88bersicht-300x233.png" alt="Übersicht über den Zertifizierungsprozess"></a> Übersicht über den Zertifizierungsprozess[/caption]</p>
<p>Das Zertifikat bzw. das SSL-Protokoll kann nun zwei Aufgaben erfüllen: Es verschlüsselt die Kommunikation und schafft idealerweise Vertrauen.</p>
<h2 id="unterscheidung-nach-der-art-der-validierung">Unterscheidung nach der Art der Validierung</h2>
<p>Ein Zertifikat soll also Vertrauen schaffen. Das heißt, <a href="https://www.ssl.com/article/dv-ov-and-ev-certificates/">der Inhaber des Zertifikates muss sich validieren</a>. Dies macht er gegenüber der Zertifizierungsstelle (<strong>Certification Authority</strong>, CA). Dafür gibt es drei Möglichkeiten. Die schnellste und daher oft günstigste Variante ist die <strong>Domain Validation</strong> (DV).Die CA prüft dabei lediglich, ob der Antragsteller Besitzer der Domain ist.</p>
<p>Die nächst Stufe ist die <strong>Organization Validation</strong> (OV). Dabei enthält das Zertifikat auch Informationen zum Unternehmen bzw. dem Besitzer der Domain, wie den Namen und die Anschrift. Diese Informationen  werden von der CA zusätzlich geprüft und validiert.</p>
<p>Die höchste Stufe schließlich ist die <strong>Extended Validation</strong> (EV). Auch hier wird natürlich die Authentizität des Antragstellers geprüft. Der Aufwand ist hier allerdings ungleich höher. So verlangt ssl.com z.B. die Übermittlung unterschriebener Dokumente, unter anderem von einem Notar. Außerdem werden verschiedene Eigenschaften des Unternehmens geprüft, nicht zuletzt die ladungsfähige Anschrift oder die Telefonnummer. Im Browser wird die EV  dann durch kenntlich gemacht, dass der Name des Unternehmens bzw. Besitzer neben der URL dargestellt wird:</p>
<p>[caption id=&ldquo;attachment_1531&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;729&rdquo;]<a href="https://www.nickyreinert.de/files/welche-arten-von-ssl-zertifikaten-gibt-es/ssl-ev-darstellung-im-browser.png"><img src="/2017/2017-09-30-welche-arten-von-ssl-zertifikaten-gibt-es/images/ssl-ev-darstellung-im-browser.png" alt="Darstellung des Extended Validation Zertifikats im Browser"></a> Darstellung des Extended Validation Zertifikats im Browser[/caption]</p>
<p>Natürlich können die Preisunterschiede auch andere Gründe haben, wie z.B. ganz banal die Kostenkalkulation des Anbieters oder die Aufwände, die z.B. der eigene Hoster mit der Pflege und Beantragung hat.</p>
<h2 id="unterscheidung-nach-umfang-des-zertifikats">Unterscheidung nach Umfang des Zertifikats</h2>
<p>Natürlich wird ein Zertifikat immer nur für einen bestimmten Adressaten, eine Domain ausgeschrieben, wie z.B. <a href="https://www.example.com">www.example.com</a>. Doch auch hier gibt es Ausnahmen. Wie zum Beispiel das Wildcard-Zertifikat. Damit ist es möglich, beliebig viele Sub-Domains ebenfalls in das Zertifikat mit aufzunehmen. So könnte ein Wildcard-Zertifikat für *.example.com jede Sub-Domain unterhalb von example.com verwendet werden: <a href="https://www.example.com">www.example.com</a>, mail.example.com, ftp.example.com und so weiter. Für untergeordnete Sub-Domains (sub.www.example.com) funktioniert das allerdings nicht.</p>
<p>Daneben gibt es Multi-Domain-Zertifikate, auch SAN (Subject Alternative Name) genannt. Diese Zertifikate können für beliebige Domains ausgestellt werden. Die Domains müssen aber explizit angegeben werden. So kann ein SAN-Zertifikat für <a href="https://www.example.com">www.example.com</a>, ftp.foobar.org und mail.google.com genutzt werden.</p>
<h2 id="was-ist-eine-zertifikats-kette">Was ist eine Zertifikats-Kette?</h2>
<p>[caption id=&ldquo;attachment_1614&rdquo; align=&ldquo;alignright&rdquo; width=&ldquo;238&rdquo;]<a href="https://www.nickyreinert.de/files/welche-arten-von-ssl-zertifikaten-gibt-es/zertifikatskette.png"><img src="/2017/2017-09-30-welche-arten-von-ssl-zertifikaten-gibt-es/images/zertifikatskette-238x300.png" alt="Zertifikatskette mit Zwischenzertifikaten und Root-Zertifikaten"></a> Zertifikatskette mit Zwischenzertifikaten und Root-Zertifikaten[/caption]</p>
<p>Nun ist es so, dass der Browser nicht nur blind irgendwelchen Zertifikaten vertraut. Die könnte man sich ja auch selber ausstellen. Aus diesem Grund gibt es so genannte Wurzel-Zertifikate bzw. Zertifikate von Root CAs. Es gibt also Organisationen, denen der Browser vertraut. Deren Zertifikate sind oft im lokalen Speicher installiert und der Browser kann prüfen, ob das  Zertifikat für <a href="https://www.example.com">www.example.com</a> von einer vertrauenswürdigen Organisation ausgestellt wurde. Denn das Zertifikat erhält ja auch den Verweis auf die Stelle, von der das Zertifikat einmal ausgestellt wurde. Oft ist es allerdings so, dass man Zertifikate nicht nur bei den Root CAs bestellt, sondern auch bei deren &ldquo;Delegierten&rdquo; - den Intermediate CAs. Um dem Browser nun klar zu machen, dass er auch der Intermediate CA vertrauen kann, muss eben diese Zertifikats-Kette übermittelt werden. Das ist im Grunde nichts weiter als ein Liste von Zertifikaten, mit denen die Vertrauenswürdigkeit der beteiligten Zertifikats-Stellen bescheinigt wird.</p>
<p>Der Server hinter <a href="https://www.example.com">www.example.com</a> liefert also nicht nur das Zertifikat für die Seite selber aus, sondern auch alle Zwischenzertifikate - in der sogenannten Zertifikatskette.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Welche Arten von SSL-Zertifikaten gibt es? - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Total Commander als SFTP-Client einrichten</title>
      <link>http://localhost:1313/2017/2017-09-29-total-commander-als-sftp-client-einrichten/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-09-29-total-commander-als-sftp-client-einrichten/</guid>
      <description>Der Total Commander ist der bessere Explorer für Windows und auch wenn das Programm schon etwas in die Jahre gekommen ist: Vor allem im professionellen Bereich …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 5 content_type: &#39;review</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Server, Ai, Security, Design</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Der Total Commander ist der bessere Explorer für Windows und auch wenn das Programm schon etwas in die Jahre gekommen ist: Vor allem im professionellen Bereich gibt es aus meiner Sicht keine Alternative. Einige praktische Funktionalitäten fehlen dem Total Commander allerdings, wenn man ihn frisch installiert. So lässt sich der noch nicht als Total Commander als SFTP-Client verwenden. Dazu ist die Installation eines Plugins nötig. Das werde ich im folgenden erklären. Außerdem zeige ich, wie man zwei zusätzliche Plugins installiert, die die Arbeit sehr erleichtern: VisualDirSize und QuickSearch eXtended.</p>
<p>(Manche Plugins kannst du relativ einfach installieren, indem du deren Archiv mit dem Total Commander selber öffnest.)</p>
<p>[caption id=&ldquo;attachment_1539&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/total-commander-als-sftp-client-verwenden/total-commander-plugin-auto-installer.png"><img src="/2017/2017-09-29-total-commander-als-sftp-client-einrichten/images/total-commander-plugin-auto-installer-300x154.png" alt="Total Commander - automatischer Installation von Plugins beim Öffnen des Archivs"></a> Total Commander - automatischer Installation von Plugins beim Öffnen des Archivs[/caption]</p>
<h2 id="das-sftp-plugin-installieren">Das SFTP-Plugin installieren</h2>
<p>Das SFTP-Plugin stammt ebenfalls vom Total Commander Entwickler, muss aber manuell <a href="https://www.ghisler.com/dplugins.htm">von dessen Seite</a> heruntergeladen werden. Nachdem du die Datei heruntergeladen, entpackt und in einen Ordner* nach c:/totalcmd/plugins/wfx/ kopiert hast, musst das du das gleiche für die SSL-Bibliotheken machen. Auch diese sind auf der Plugin-Seite verlinkt. Danach kannst du den Total Commander wieder starten</p>
<p><em>*ich setze mal voraus, dass das dein aktueller Programm Ordner für den TC ist, andernfalls gehört es natürlich in den bei dir genutzten Programm-Ordner</em></p>
<p> </p>
<p>[caption id=&ldquo;attachment_1541&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/total-commander-als-sftp-client-verwenden/total-commander-netzwerkumgebung.png"><img src="/2017/2017-09-29-total-commander-als-sftp-client-einrichten/images/total-commander-netzwerkumgebung-300x115.png" alt="TotalCommander Netzwerkumgebung"></a> TotalCommander Netzwerkumgebung[/caption]</p>
<p>Über das Menü (Konfigurieren - Einstellungen) gelangst du zum Plugin-Manager und dem Dialog für die Dateisystem-Plugins. Mit &ldquo;Hinzufügen&rdquo; suchst du nun nach dem Ordner, in den du eben die Plugin-Dateien kopiert hast. Fertig. Wenn du nun in die Netzwerkumgebung wechselst, findest du dort den Eintrag &ldquo;SecureFTP&rdquo;. Darin lassen sich mit F7 neue Zugänge anlegen. Mit ALT+Enter kannst du diese bearbeiten und mit SHIFT-F6 umbenennen. Wenn du die Datei sftpplug.ini im Total-Commander-Verzeichnis bearbeitest, kannst du die SFTP-Zugängen auch bequem mit einem Text-Editor verwalten.</p>
<p>[caption id=&ldquo;attachment_1542&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;244&rdquo;]<a href="https://www.nickyreinert.de/files/total-commander-als-sftp-client-verwenden/sftp-server-einstellungen.png"><img src="/2017/2017-09-29-total-commander-als-sftp-client-einrichten/images/sftp-server-einstellungen-244x300.png" alt="SFTP-Server-Einstellungen um den Total Commander als SFTP-Client zu verwenden"></a> SFTP-Server-Einstellungen um den Total Commander als SFTP-Client zu verwenden[/caption]</p>
<p>Das war es. Nun kannst du den Total Commander als SFTP-Client verwenden.</p>
<h2 id="das-visualdirsize-plugin-installieren">Das VisualDirSize-Plugin installieren</h2>
<p>Als nächstes installierst du dir das Plugin, um dir die Größe von Verzeichnissen und Dateien grafisch darstellen zu lassen. Das Plugin ist zwar auch schon über 10 Jahre alt, aber dennoch äußerst praktisch. Du kannst es dir auf einer der bekanntesten aber inoffiziellen Plugin-Seite für den Total Commander herunterladen: <a href="https://totalcmd.net/plugring/visdirsize.html">totalcmd.net</a> </p>
<p>[caption id=&ldquo;attachment_1543&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/total-commander-als-sftp-client-verwenden/VisualDirSize-plugin.png"><img src="/2017/2017-09-29-total-commander-als-sftp-client-einrichten/images/VisualDirSize-plugin-300x71.png" alt="VisualDirSize - Darstellung des belegten Speicherplatzes"></a> VisualDirSize - Darstellung des belegten Speicherplatzes[/caption]</p>
<p>Auch diese Datei muss entpackt und in einen Unterordner des Plugin-Ordners kopiert werden. Nach einem Neustart kannst du das Plugin mit STR+Q bzw. CTRL+Q aktivieren. Die Einstellungen verstecken sich hinter dem kleinen Hammer-Symbol, rechts oben in der Menüleiste des Plugins.</p>
<h2 id="das-quicksearch-extended-plugin-installieren">Das QuickSearch eXtended-Plugin installieren</h2>
<p>Dieses Plugin rundet deinen Total Commander schließlich perfekt ab. Es ermöglicht dir, die Verzeichnis- bzw. Datei-Listen zu filtern. Du drückst also eine beliebige Steuer-Taste (ALT, CTRL, &hellip;) und gibst danach die Zeichenfolge ein, nach der du suchen möchtest. Die Ansicht wird daraufhin für diese Zeichenfolge gefiltert. Das Plugin kann sehr stark angepasst werden und unterstützt z.B. die Suche mit regulären Ausdrücken oder nach ähnlichen Begriffen.</p>
<p>Auch das Plugin muss auf <a href="https://totalcmd.net/plugring/Google_like_QS.html">totalcmd.net</a> heruntergeladen und entpackt werden. Auch hier wird der automatische Plugin-Installer unterstützt. Nach einem Neustart steht es dann zur Verfügung. Die Einstellungen befinden sich entweder rechts neben dem Suchfeld (der Doppel-Pfeil nach oben) oder können über tcmatch.exe aufgerufen werden. Die Funktionstaste, mit der das Suchfeld aktiviert wird, muss übrigens im Total Commander eingestellt werden. Zu finden ist diese Einstellungen über die Konfiguration im Bereich &ldquo;Schnellsuche&rdquo;.</p>
<p>[caption id=&ldquo;attachment_1544&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/total-commander-als-sftp-client-verwenden/total-commander-einstellungen-schnellsuche.png"><img src="/2017/2017-09-29-total-commander-als-sftp-client-einrichten/images/total-commander-einstellungen-schnellsuche-300x240.png" alt="Total Commander - Einstellungen für die Schnellsuche"></a> Total Commander - Einstellungen für die Schnellsuche[/caption]</p>
<p>Willst du den Filter aktivieren, also die Dateiliste für den Suchbegriff filtern, drückst du entweder CTRL+S bzw. STRG+S oder den kleine Button rechts neben der Suchleiste.</p>
<p>[caption id=&ldquo;attachment_1540&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo;]<a href="https://www.nickyreinert.de/files/total-commander-als-sftp-client-verwenden/quick-search-extended-suchfeld.png"><img src="/2017/2017-09-29-total-commander-als-sftp-client-einrichten/images/quick-search-extended-suchfeld-300x169.png" alt="QuickSearch eXtended Such-Leiste"></a> QuickSearch eXtended Such-Leiste[/caption]</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> datei-explorer, file-explorer, quicksearch-extended, sftp, suche, total-commander, visualdirsize</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>tools</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Total Commander als SFTP-Client einrichten - Review</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>JTL-Wawi Fernsteuerung auf Windows-Server einrichten</title>
      <link>http://localhost:1313/2017/2017-09-28-jtl-wawi-fernsteuerung-auf-windows-server-einrichten/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-09-28-jtl-wawi-fernsteuerung-auf-windows-server-einrichten/</guid>
      <description>Wenn mal als alleiniger Nutzer die kostenlose Warenwirtschaft JTL-Wawi einsetzen möchte, kommt man zunächst auf die Idee, sich einfach per Remote-Desktop (RDP) …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 5 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Database, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Wenn mal als alleiniger Nutzer die kostenlose Warenwirtschaft JTL-Wawi einsetzen möchte, kommt man zunächst auf die Idee, sich einfach per Remote-Desktop (RDP) auf dem Windows-Rechner anzumelden, um so JTL zu nutzen. Doch diese JTL-Wawi Fernsteuerung hat zwei entscheidende Haken:</p>
<h2 id="warum-jtl-wawi-auf-einem-gehosteten-windows-server-problematisch-sein-könnten">Warum JTL-Wawi auf einem gehosteten Windows-Server problematisch sein könnten?</h2>
<p>Erstens ist die Verbindung per RDP  auf einen Windows-Server per Microsoft-Lizenzbedingung für gewöhnlich nur für administrative Zwecke erlaubt. Es sei denn, man installiert einen Terminal-Server und die notwendigen Zugriffslizenzen. Das Problem ist aber, dass die Verwendung eines Terminal Servers auf Virtuellen Servern von Microsoft ebenfalls untersagt ist. Entweder man hat den Windows-Server also zuhause unter dem Tisch stehen oder man nutzt beim Hoster seiner Wahl die weitaus teureren Dedicated Root Server.</p>
<p>Zweitens ist die Verbindung per Remote-Desktop auf zwei gleichzeitige Zugriffe bzw. Administratoren beschränkt. Selbst wenn man also die Lizenzbedingungen ignoriert: Wer die Warenwirtschaft mit mehreren Anwendern nutzen will, wird ziemlich schnell ein Problem bekommen.</p>
<p>Die Lösung ist es, JTL Wawi lokal zu installieren und für den Zugriff auf den Windows-Server vorzubereiten. Im Folgenden werde ich die dazu notwendigen Einstellungen beschreiben.</p>
<h2 id="wie-kann-der-windows-server-eingerichtet-werden-um-jtl-wawi-den-zugriff-von-außen-zu-ermöglichen">Wie kann der Windows-Server eingerichtet werden, um JTL-Wawi den Zugriff von außen zu ermöglichen?</h2>
<p>Auf einem gehosteten Windows-Server läuft ein Microsoft SQL Server. Die Anwender sollen auf ihren lokalen Windows-Rechnern die JTL Wawi nutzen, die sich mit dem entfernten Microsoft SQL-Server verbindet.</p>
<h3 id="porteinstellungen">Porteinstellungen</h3>
<p>Zunächst einmal bringen wir dem SQL Server bei, dass er auch auf der öffentlichen IP-Adresse erreichbar ist und welchen Port er dafür benutzen soll. Im SQL-Server-Configuration-Manager (SQLServerManager13.msc) muss dazu unterhalb der Netzwerk-Konfiguration &ldquo;Protokolle für JTL-WAWI&rdquo; ausgewählt werden. Dort befinden sich die Einstellungen für das Protokoll TCP/IP, die wir nun anpassen. Erstmal muss natürlich das Protokoll unter aktiviert werden: &ldquo;Enabled: Ja&rdquo;. Danach wird mit &ldquo;Listen all: Ja&rdquo; festgelegt, dass der SQL-Server über alle verfügbaren Netzwerkschnittstellen ansprechbar ist (<a href="https://docs.microsoft.com/de-de/sql/tools/configuration-manager/tcp-ip-properties-protocols-tab">siehe Microsoft-Doks</a>). Wer den Server nur lokal verwendet, sollte diesen Schalter auf &ldquo;Nein&rdquo; setzen und die Einstellungen nur für die private, lokale IP-Adresse vornehmen.</p>
<p>Die entscheidende Einstellung befindet sich im Reiter &ldquo;IP-Adressen&rdquo;. Wenn zuvor &ldquo;Listen all: Ja&rdquo; eingestellt wurde, muss hier am Ende der Liste die Einstellung für &ldquo;IPALL&rdquo; angepasst werden. Hier genügt es, für TCP-Port einen beliebigen Port anzugeben. Der Standard-Port für Microsoft SQL ist 1433. Es empfiehlt sich, einen anderen Port zu wählen, damit der einfache Port-Scan nicht sofort auf die Idee kommt, dass hier ein MS-SQL-Dienst erreichbar ist.</p>
<p>[gallery ids=&ldquo;1514,1512,1513&rdquo;]</p>
<p> </p>
<h3 id="benutzereinrichtung">Benutzereinrichtung</h3>
<p>Als nächstes geht es an die Einrichtung der Benutzer, für die JTL-Wawi Fernsteuerung erlaubt werden soll. Dazu wird im Microsoft SQL Management Studio (ssms.exe)  entsprechende JTL-Datenbank geöffnet und unter Sicherheit per Rechtsklick auf Anmeldungen eine neue Anmeldung erstellt. Der Name ist natürlich frei wählbar. Das Passwort für die Anmeldung kann man eingeben, wenn man &ldquo;SQL Server-Authentifizierung&rdquo; auswählt. Natürlich empfiehlt es sich, entsprechend strenge Kennwort-Richtlinien zu verwenden. Unter &ldquo;Benutzerrollen&rdquo; muss der neue Benutzer nun noch der entsprechenden Datenbank zugewiesen und darauf Schreib- und Leserechte zugewiesen werden. Im Beispiel heißen diese Rollen  db_reader und db_writer.</p>
<p>[gallery ids=&ldquo;1516,1515&rdquo;]</p>
<h3 id="firewall-einstellung">Firewall-Einstellung</h3>
<p>Nun, da die Datenbank korrekt eingerichtet ist, muss die Firewall entsprechend geöffnet werden, um den Zugriff von außen zu ermöglichen. Die Windows-Firewall-Einstellungen erreichen wir über wf.msc. Dort wird eine neue eingehende Regel angelegt. Hier gibt es zwei Möglichkeiten: Entweder dem Microsoft SQL-Server wird generell der Kontakt zur Außenwelt genehmigt, oder wir öffnen nur den entsprechenden Port. Aus Sicherheitsgründen sollte die Einstellung allerdings so eng wie möglich gewählt werden. Wir wählen als Regeltyp also &ldquo;Port&rdquo; und geben dann den Port ein, den wir zu Beginn festgelegt haben. Unter &ldquo;Aktion&rdquo; muss natürlich &ldquo;Verbindung zulassen&rdquo; ausgewählt werden. Im nächsten Fenster &ldquo;Profil&rdquo; können alle Felder aktiviert bleiben. Die Regel soll ja vor allem für öffentliche Kommunikation erlauben. Abschließend kann noch ein Name für die Regel vergeben werden. Fertig.</p>
<p>[gallery ids=&ldquo;1518,1517&rdquo;]</p>
<p> </p>
<p>Auf der Serverseite ist nun alles fertig eingerichtet. Als nächstes folgt die Einrichtung der JTL-Wawi auf dem lokalen Rechner.</p>
<h3 id="jtl-wawi-einrichten">JTL-Wawi einrichten</h3>
<p>Nach dem <a href="https://www.jtl-software.de/JTL-Wawi-Download">Download</a> und der Installation der Software wird uns diese beim ersten Start zur Datenbankverwaltung führen. Hier legen wir ein neues Profil mit einem wohlklingenden Namen an tragen die Adresse zu unserem Windows-Server ein, auf dem der Microsoft SQL-Server läuft.  Wichtig ist, dass wir den oben konfigurierten Port hier mit einem Komma getrennt hinter die Server-Adresse eintragen. Als nächstes will das Programm von uns die vorher angelegten Zugangsdaten wissen. Wenn diese korrekt sind, erhalten wir nun eine Liste der Mandanten zur Auswahl und die Einrichtung der Software ist abgeschlossen.</p>
<p>[gallery ids=&ldquo;1520,1519,1521&rdquo;]</p>
<p>Fertig. Nun  kann man die JTL-Wawi Fernsteuerung so nutzen, als würde man direkt auf dem Server arbeiten.</p>
<p>[caption id=&ldquo;attachment_1527&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;150&rdquo;]<a href="https://www.nickyreinert.de/files/jtl-wawi-fernsteuerung-mit-windows-server-ermoeglichen/jtl-wawi-fernsteuerung.png"><img src="/2017/2017-09-28-jtl-wawi-fernsteuerung-auf-windows-server-einrichten/images/jtl-wawi-fernsteuerung-150x150.png" alt="Die JTL-Wawi Fernsteuerung ist komplett eingerichtet"></a> Die JTL-Wawi Fernsteuerung ist komplett eingerichtet[/caption]</p>
<h2 id="nachteile-der-jtl-wawi-fernsteuerung">Nachteile der JTL-Wawi Fernsteuerung</h2>
<p>Die hier vorgestellte Konfiguration für die JTL-Wawi Fernsteuerung hat einen großen, entscheidenden Nachteil: Sie ist relativ unsicher. Zwar ist der Zugriff auf die Datenbank mit Benutzernamen und Passwort geschützt, dennoch gehört es nicht gerade zum guten Ton, die Datenbank öffentlich über das Internet erreichbar zu machen. Hier gibt es einige Möglichkeiten, sich besser zu schützen.</p>
<p>Entweder man richtet einen  VPN-Tunnel ein, über den auf die Datenbank zugegriffen wird. Oder man hat die Möglichkeit, feste IP-Adressen zu vergeben, für den der Zugriff in der Windows-Firewall eingeschränkt werden kann. Ist auch das nicht möglich, sollte man wenigstens den IP-Adressbereich in der Windows-Firewall einrichten, dass er nur Zugriffe des jeweiligen Internet-Service-Providers (ISP) zulässt.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> jtl, jtl-wawi, microsoft-sql-server, rdp, remote-desktop, sql, warenwirtschaft, windows-server</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>JTL-Wawi Fernsteuerung auf Windows-Server einrichten - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Eduroam mit Windows Mobile</title>
      <link>http://localhost:1313/2017/2017-09-24-eduroam-mit-windows-mobile/</link>
      <pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2017/2017-09-24-eduroam-mit-windows-mobile/</guid>
      <description>Eine Schritt-Für-Schritt-Anleitung, um Windows Mobile 6.x - Geräte mit dem Eduroam-Netzwerk zu verbinden.
[toc=&ldquo;2,3&rdquo; title=&ldquo;Inhalt&rdquo;] …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Schritt-Für-Schritt-Anleitung, um Windows Mobile 6.x - Geräte mit dem Eduroam-Netzwerk zu verbinden.&#39; reading_time: 8 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Eine Schritt-Für-Schritt-Anleitung, um Windows Mobile 6.x - Geräte mit dem Eduroam-Netzwerk zu verbinden.</p>
<p>[toc=&ldquo;2,3&rdquo; title=&ldquo;Inhalt&rdquo;]</p>
<h3 id="vorbereitung">Vorbereitung</h3>
<p>Als mobiles Gerät kommt ein HTC Blackstone / Touch HD mit dem Betriebssystem Windows Mobile 6.1 zum Einsatz. Das Betriebssystem ist komplett in Englisch, erst wird dennoch weitestgehend versucht, neben den englischen Bezeichnungen die entsprechenden deutschen zu verwenden. Diese Anleitung erhebt selbstverständlich keinen Anspruch auf Vollständigkeit noch garantiert sie den Erfolg. Kommentare oder Änderungswünsche sind herzlich willkommen. Unbedingt benötigt werden, neben einem mobilen Gerät mit Windows Mobile 6.x:</p>
<ul>
<li>der SecureW2 Client für Windows Mobile 5/6 von <a href="http://www.securew2.com/products/eapsuite/" title="http://www.securew2.com/products/eapsuite/">secureW2.com</a>,
<ul>
<li>(oder die CAB-Datei, für die direkte Installation <a href="http://www.freecoffee.de/files/SecureW2.cab" title="http://www.freecoffee.de/files/SecureW2.cab">hier herunterladen</a>)</li>
</ul>
</li>
<li>das Zertifikat der Deutschen Telekom (Download vom <a href="http://www.rz.uni-augsburg.de/service/uauxca/zertifikate/telekom-root-2-cer.cer" title="http://www.rz.uni-augsburg.de/service/uauxca/zertifikate/telekom-root-2-cer.cer">Rechenzentrum der Uni Augsburg</a>),</li>
<li>eine funktionierende Verbindung vom Desktop PC zum mobilen Gerät über ActiveSync (bis Windows XP) oder dem Windows Mobile Device Center (ab Windows Vista)</li>
</ul>
<p>und <em>eventuell</em></p>
<ul>
<li>eine Software zur Fernsteuerung zur Arbeitserleichterung wie z.B. MyMobiler (die Software nutzt die ActiveSync-Verbindung und erlaubt es, das Gerät komplett vom Computer zu bedienen, Download von <a href="http://www.mymobiler.com/" title="http://www.mymobiler.com/">mymobiler.com</a>) sowie</li>
<li>einen Registryeditor (Total Commander für Pocket PC (ARM/XSCALE/PXA) auf <a href="http://www.ghisler.com/pocketpc.htm" title="http://www.ghisler.com/pocketpc.htm">ghisler.com</a> oder den Mobile Registry Editor auf <a href="http://www.chip.de/downloads/Mobile-Registry-Editor_31232153.html" title="http://www.chip.de/downloads/Mobile-Registry-Editor_31232153.html">chip.de</a>, beide Freeware).</li>
</ul>
<p><em>In dieser Anleitung verwende ich den Total Commander, da dieser zur Standarsoftware auf meinem Gerät gehört und die Bedienung des eingebauten Registryeditors weitaus komfortabler ist.</em></p>
<h3 id="installation-von-securew2">Installation von SecureW2</h3>
<p>Nach dem Starten der Installationsdatei <em>SecureW2_EAP_Suite_113_CE.exe</em> fordert das Programm zur Auswahl einer Sprache auf. Wir bestätigen daraufhin die Willkommensmeldung und akzeptieren die Lizenzbedingungen. Im nächsten Fenster wählen wir, sofern noch nicht geschehen, den <em>TTLS Client</em> aus und starten die Installation mit <em>Installieren</em>.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/1-securew2.png"><img src="images/1-securew2-300x233.png" alt="" title="1-securew2"></a></p>
<p>Daraufhin übertrag ActiveSync die Programmdateien zum Gerät und informiert darüber, dass auf dem Gerät weitere Eingaben notwendig sind. ActiveSync wird vorerst mit einem Mausklick auf <em>OK</em> geschlossen. (Ist das Gerät nicht angeschlossen, holt ActiveSync die Übertragung bei der nächsten Verbindung nach.)</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/2-active-sync.png"><img src="images/2-active-sync-300x199.png" alt="" title="2-active-sync"></a></p>
<p>Auf dem mobilen Gerät wird nun der Speicherort für <em>SecureW2</em> ausgewählt und mit <em>Install / Installieren</em> die Software installiert. War die Installation erfolgreich, wird der Vorgang mit <em>OK</em> auf dem Gerät abgeschlossen. Gleichzeitig wurde auch die Installationsroutine auf dem Computer beendet und kann geschlossen werden.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/3-install-securew2.png"><img src="images/3-install-securew2-180x300.png" alt="" title="3-install-securew2"></a></p>
<h3 id="installation-des-zertifikates">Installation des Zertifikates</h3>
<p>Wer die Installationsdatei des Zertifikates, <em>g_rootcert.cer</em>, nicht direkt auf dem Gerät gespeichert hat, überträgt diese per Drag&rsquo;n&rsquo;Drop oder einem Dateimanager seiner Wahl auf das Gerät. Auf dem Desktopcomputer erreicht man dieses über das Symbol <em>Mobiles Gerät</em> im <em>Arbeitsplatz</em>-Ordner.Den Unterordner <em>Mobiles Gerät\Meine Documente</em> erreicht man auch mit ActiveSync über das Menü <em>Extras / PocketPC durchsuchen</em>.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/4-activesync.png"><img src="images/4-activesync-300x289.png" alt="" title="4-activesync"></a></p>
<p>Auf dem mobilen Gerät wird das Zertifikat installiert, indem man es dort im <em>Datei Explorer</em> einfach startet, d.h. einmal anklickt. Windows Mobile bestätigt dann die hoffentlich erfolgreiche Installation.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/5-confirm-cert.png"><img src="images/5-confirm-cert-180x300.png" alt="" title="5-confirm-cert"></a></p>
<p>In den Einstellungen des mobilene Gerätes, unter dem zweiten Reiter <em>System</em>, startet man nun den <em>Zertifikatemanager</em> und überprüft unter dem Reiter <em>Root / Wurzel</em> ob das Zertifikat der Deutschen Telekom korrekt angezeigt wird.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/6-cert-manager.png"><img src="images/6-cert-manager-180x300.png" alt="" title="6-cert-manager"></a><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/7-cert-manager-root.png"><img src="images/7-cert-manager-root-180x300.png" alt="" title="7-cert-manager-root"></a></p>
<p>Ist dem nicht so, muss das Zertifikat in der Registry per Hand eingetragen werden, damit der SecureW2 Client es bei der ersten Verbindung mit dem Netzwerk als &ldquo;vertrauenswürdiges Wurzelzertifikat&rdquo; erkennt. Dazu benötigen wir auf dem Gerät den bereits oben erwähnten Registryeditor. Das Vorgehen wird im Folgenden anhand des Total Commanders erläutert.</p>
<h4 id="manuelles-registrieren-des-zertifikats">Manuelles Registrieren des Zertifikats</h4>
<p>Die heruntergeladene Datei <em>tcmdpocketarm.cab</em> wird, wie oben schon einmal erwähnt, auf das Gerät kopiert und dort ausgeführt. Nach dem Öffnen der CAB-Datei wird das Programm installiert und wir starten die Software.<strong>Hinweis</strong>: Das Öffnen von Ordnern und Dateien erfolgt hier nicht wie gewohnt mit einem Klick, sondern durch Doppelklick. Mit Klick auf den <em>Schrägstrich</em> in der rechten oberen Ecke gelangen wir in das Hauptverzeichnis und wählen dort den Ordner <em>\\Plugins</em> und dann den Ordner <em>Registry</em> aus.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/8-total-commander.png"><img src="images/8-total-commander-162x300.png" alt="" title="8-total-commander"></a></p>
<p>Dort klicken wir nun nacheinander auf <em>HKCU</em>, <em>Comm</em>, <em>Security</em> sowie <em>SystemCertificates</em> und finden dort Namen wie <em>root</em>, <em>trust</em>, <em>ca</em> usw.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/9-sys-certs.png"><img src="images/9-sys-certs-162x300.png" alt="" title="9-sys-certs"></a></p>
<p>Als nächstes prüfen wir, ob sich im Ordner (bzw. Schlüssel) <em>trust</em> und dort unter <em>certificates</em> ein Ordner mit einem kryptischen Namen befindet. Wird dieser dort angezeigt, kann mit der Installation von SecureW2 fortgefahren werden.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/10-hash-name.png"><img src="images/10-hash-name-162x300.png" alt="" title="10-hash-name"></a></p>
<p>Ist dem nicht so, wechseln wir durch einfaches Klicken auf den doppelten Punkt in der rechten oberen Ecke wieder 2 Ebenen nach oben und betrachten den Ordner <em>root</em> und dort <em>certificates</em>. Hier muss sich nun ein Ordner mit kryptischen Namen befinden. Durch Drücken auf diesen Ordnernamen und langes Halten öffnet sich das Kontextmenü. Wir wählen <em>In die Zwischenablage kopieren</em> aus und wechseln wieder in den Schlüssel bzw. Ordner <em>trust\certificates</em> (vorher zweimal auf den doppelten Punkt oben rechts) um dort erneut das Kontextmenü zu öffnen und per Klick auf <em>Hier einfügen (Kopieren)</em> den Schlüssel dort zu hinterlegen. Genauso müssen wir nun mit dem Wert <em>UpdateTime</em> verfahren, der sich direkt unter <em>root</em> befindet und in den Ordner trust gehört. (Nicht in den dortigen Unterordner <em>certificates</em>) Die Ordnerstruktur sollte nun wie folgt aussehen:</p>
<p>\systemcertificats
\root
\certificates
\85a408c09c193e5d51587dcd61330f
.updatetime
\trust
\certificates
\85a408c09c193e5d51587dcd61330f
.updatetime</p>
<p>Der Name &ldquo;85a408c09c193e5d51587dcd61330f&rdquo; weicht dabei von Gerät zu Gerät ab!</p>
<p>Das Zertifikat <strong>sollte</strong> jetzt auch als vertrauenswürdig registriert sein und von <em>SecureW2</em> erkannt werden.</p>
<h3 id="einrichtung-des-wlan-zugangs">Einrichtung des WLAN-Zugangs</h3>
<p>Für gewöhnlich erkennt Windows Mobile die Art der Verschlüsselung selber, an der Stelle soll trotzdem nochmal auf die einzelnen Punkte eingegangen werden. Der Authentifizierungstyp lautet WPA2mit AES-Verschlüsselung.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/11-wlan1.png"><img src="images/11-wlan1-180x300.png" alt="" title="11-wlan1"></a></p>
<p>Als EAP-Type wird der installierte SecureW2 TTLS-Client ausgewählt und über die <em>Eigenschaften / Properties</em> eingerichtet.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/12-wlan2.png"><img src="images/12-wlan2-180x300.png" alt="" title="12-wlan2"></a></p>
<p>Ob ein neues Profil angelegt oder das Defaultprofil bearbeitet wird, ist vermutlich Geschmackssache. Um jede Fehlerquelle auszuschließen, habe ich ein neues Profil mit dem Namen <em>HTW</em> verwendet.Die Verbindung benutzt eine äußere, anonyme Identität. Per Klick auf <em>Erweitert</em> gelangt man zu den erweiterten Einstellungen. Hier muss ein Haken bei der Option <em>Benutzern erlauben, neue Verbindungen einzurichten</em> gesetzt werden.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/13-wlan3.png"><img src="images/13-wlan3-180x300.png" alt="" title="13-wlan3"></a><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/13b-wlan4.png"><img src="images/13b-wlan4-180x300.png" alt="" title="13b-wlan4"></a></p>
<p>Unter dem Reiter <em>Zertifikate</em> wird <em>Serverzertifikate überprüfen</em> angehakt. Das untere Fenster <em>vertrauenswürdige CAs</em> ist zu dem Zeitpunkt noch leer. Nach der ersten (erfolgreichen) Verbindung findet ihr hier bzw. in der Liste unter Hinzufügen das Zertifikat der <em>Deutschen Telekom</em>.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/14-wlan5.png"><img src="images/14-wlan5-180x300.png" alt="" title="14-wlan5"></a></p>
<p>Unter Authentifizerung wählen wir <em>PAP</em> aus.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/15-wlan6.png"><img src="images/15-wlan6-180x300.png" alt="" title="15-wlan6"></a></p>
<p>Als letztes tragen wir die WLAN-Zugangsdaten in der bekannten Form (<em>sMatrikel@htw-berlin.de</em>) unter <em>Benutzerkennung</em> ein.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/16-wlan7.png"><img src="images/16-wlan7-180x300.png" alt="" title="16-wlan7"></a></p>
<p>Nach Bestätigung mit <em>OK</em> fragt die Software, ob wir die Vertrauensliste von Windows verwenden möchten, was wir natürlich bestätigen.</p>
<p><a href="http://www.freecoffee.de/wp-content/uploads/2011/05/17-wlan8.png"><img src="images/17-wlan8-180x300.png" alt="" title="17-wlan8"></a></p>
<p>Damit können wir die Einstellungen des Profiles mit <em>OK</em> endgültig übernehmen und die Konfiguration des WLAN-Zugangs abschließen. Bei der nächsten Verbindung mit dem Netzwerk erkennt <em>SecureW2</em> nun das <em>Telekom Zertifikat</em> an und bittet darum das (Wurzel)-Zertifikat mitsamt der zugehörigen &ldquo;Unterzertifikate&rdquo; zu installieren. Dabei ist lediglich eine Bestätigung erforderlich und der Zugang zu <em>eduroam</em> kann genutzt werden.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>tools</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Eduroam mit Windows Mobile - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>SFTP auf Microsoft IIS korrekt einrichten</title>
      <link>http://localhost:1313/2015/2015-10-14-sftp-auf-microsoft-iis-korrekt-einrichten/</link>
      <pubDate>Wed, 14 Oct 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2015/2015-10-14-sftp-auf-microsoft-iis-korrekt-einrichten/</guid>
      <description>Das Einrichten eines SFTP-Servers klingt einfach, ist es aber nicht. Es gibt mindestens drei Problem, denen du begegnen wirst.
Du kannst die Verbindung zum …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Das Einrichten eines SFTP-Servers klingt einfach, ist es aber nicht. Es gibt mindestens drei Problem, denen du begegnen wirst.&#39; reading_time: 3 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Python, Web, Mac, Server, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Das Einrichten eines SFTP-Servers klingt einfach, ist es aber nicht. Es gibt mindestens drei Problem, denen du begegnen wirst.</p>
<blockquote>
<ol>
<li>
<ol>
<li>
<p>Du kannst die Verbindung zum Server nicht herstellen, weil das Server-Zertifikat ungültig ist. Die Fehlermeldung in FileZilla lautet dann z.B.<br>
GnuTLS error -48: Key usage violation in certificate has been detected. Could not connect to server</p>
</li>
<li>
<p>Obwohl du in der Firewall die passiven Ports für den Server freigeschaltet hast, kann die Verbindung nicht vollendet werden. FileZilla bleibt dann z.B. bei der folgenden Zeile stehen:</p>
<p>150 Opening BINARY mode data connection</p>
</li>
</ol>
</li>
</ol></blockquote>
<p>3. Und schließlich kann es sein, dass der Benutzer nicht die nötigen Zugriffsrechte für den Ordner hat, den du in den Einstellungen des FTP-Servers angegeben hast.</p>
<p>Keine Sorge. Mit diesen drei Probleme durfte auch ich schon kämpfen und ich habe die Lösungen hier zusammengetragen. Also.. eins nach dem anderen.</p>
<p>Die Ursache des ersten Problems ist der Assistent, mit dem man im IIS das Server-Zertifikat erstellt. Auf den Punkt gebracht, nutzt dieser ein paar falsche Parameter. Aus diesem Grund muss das Zertifikat per Hand in der PowerShell erstellt werden. Wichtig: In der normalen Konsole funktioniert das nicht.</p>
<p><a href="https://superuser.com/questions/1167351/filezilla-reporting-gnutls-error-48-key-usage-violation-in-certificate-has-be">https://superuser.com/questions/1167351/filezilla-reporting-gnutls-error-48-key-usage-violation-in-certificate-has-be</a></p>
<p>According to a post in the <a href="https://forums.iis.net/t/1234970.aspx">IIS forums</a>, you can generate the certificate with PowerShell instead until the issue is fixed by Microsoft:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">New-SelfSignedCertificate -CertStoreLocation cert:\LocalMachine\My -dnsname ftp.example.com
</span></span></code></pre></div><p>Replace <code>ftp.example.com</code> by your server&rsquo;s hostname.</p>
<p>You will get a fingerprint, copy that. Set a password for the private key:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$password = ConvertTo-SecureString -String &#34;password goes here&#34; -Force -AsPlainText
</span></span></code></pre></div><p>Now export it (you can change <code>C:\cert.pfx</code> to the path you want to save it to, just make sure it ends in <code>.pfx</code>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">Export-PfxCertificate -cert cert:\LocalMachine\My\FINGERPRINT -FilePath C:\cert.pfx -Password $password
</span></span></code></pre></div><p>Benutzer anlegen</p>
<p><a href="https://www.nickyreinert.de/files/ssl-zertifikat-auf-windows-korrekt-installieren/windows-server-ssl-zertifikat-zuweisen.png"><img src="/2015/2015-10-14-sftp-auf-microsoft-iis-korrekt-einrichten/images/windows-server-ssl-zertifikat-zuweisen-300x121.png" alt=""></a></p>
<p><strong>siehe auch:</strong></p>
<p><a href="https://www.visualsvn.com/support/topic/00056/">https://www.visualsvn.com/support/topic/00056/</a></p>
<p>[http://grantcurell.com/2013/12/31/failed-to-retrieve-directory-listing-filezilla-connecting-to-iis-behind-nat/ http://ekiwi-blog.de/?p=3465](<a href="http://grantcurell.com/2013/12/31/failed-to-retrieve-directory-listing-filezilla-connecting-to-iis-behind-nat/">http://grantcurell.com/2013/12/31/failed-to-retrieve-directory-listing-filezilla-connecting-to-iis-behind-nat/</a> <a href="http://ekiwi-blog.de/?p=3465">http://ekiwi-blog.de/?p=3465</a>)</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>SFTP auf Microsoft IIS korrekt einrichten - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>MacOS Finder und die SMB / Windows - Netzwerkfreigaben</title>
      <link>http://localhost:1313/2013/2013-02-24-macos-finder-und-die-smb-windows-netzwerkfreigaben/</link>
      <pubDate>Sun, 24 Feb 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2013/2013-02-24-macos-finder-und-die-smb-windows-netzwerkfreigaben/</guid>
      <description>Immer wenn ich die Verbindung zu meinem Heimnetz hergestellt habe, sei es über WLAN oder Kabel, dauerte es eine gefühlte Ewigkeit, bis der Finder (sic!) mein …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Immer wenn ich die Verbindung zu meinem Heimnetz hergestellt habe, sei es über WLAN oder Kabel, dauerte es eine gefühlte Ewigkeit, bis der Finder (sic.&#39; reading_time: 2 content_type: &#39;guide</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Immer wenn ich die Verbindung zu meinem Heimnetz hergestellt habe, sei es über WLAN oder Kabel, dauerte es eine gefühlte Ewigkeit, bis der Finder (sic!) mein NAS gefunden hat, obwohl beide am gleichen Switch hängen. Es half dabei auch nichts, wenn ich direkt zum NAS verbinden wollte, weil ich die IP-Adresse kenne (Apfel + K). Das hab ich eine Weile ignoriert, dann akzeptiert, aber irgendwann konnte ich die Geduld nicht mehr aufbringen und habe mich auf die Suche nach einer Lösung gemacht.</p>
<p>Diese fand ich in den <a href="https://discussions.apple.com/thread/2172049?start=15&amp;tstart=0">Apple Support Foren.</a> Ein langer Beitrag kurz zusammengefasst:</p>
<p>1. Erstelle ein Textdatei mit dem Inhalt</p>
<blockquote>
<p>[default]
minauth=none
streams=no
soft=yes
notify_off=yes
domain=DOMAIN_NAME_DEINER_NETZWERKFREIGABE
port445=no_netbios
[NAME_DEINER_NETZWERKFREIGABE]
addr=IP-ADRESSE_DEINER_FREIGABE</p></blockquote>
<p>2. Speichere die Datei mit dem Namen &ldquo;nsmb.conf&rdquo; unter /etc ab. (Ggf.mit der Konsole / dem Terminal arbeiten). 3. Starte dein Mac(Book) neu.</p>
<p>Danach dauerte es nur noch Bruchteile von Sekunden, bis die Netzwerkfreigabe im Finder sichtbar war.</p>
<p> </p>
<p>Update: Mit dem kostenfrei erhältlichen <a href="http://www.apple.com/de/osx/">Update auf MacOS 10.9 Mavericks</a> scheint dieses Problem behoben zu sein!</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>os-x</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>MacOS Finder und die SMB / Windows - Netzwerkfreigaben - Guide</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Tutorial: Web-Scraping mit VBA - Teil 1</title>
      <link>http://localhost:1313/2010/2010-09-16-tutorial-web-scraping-mit-vba-teil-1/</link>
      <pubDate>Thu, 16 Sep 2010 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2010/2010-09-16-tutorial-web-scraping-mit-vba-teil-1/</guid>
      <description>In dieser kleinen Tutorial-Serie will ich anhand einer Online-Handy-Datenbank zeigen, wie man mit VBA Seiten aus dem Internet abruft und nach Informationen …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 7 content_type: &#39;project</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Docker, Mac, Server, Mobile, Ai, Security</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> expert</p>
          
        </div>
        
        
        <p>In dieser kleinen Tutorial-Serie will ich anhand einer Online-Handy-Datenbank zeigen, wie man mit VBA Seiten aus dem Internet abruft und nach Informationen sucht, die sich dann in einer Tabelle abspeichern lassen. Warum VBA? Es gibt vermutlich elegantere Lösungen, doch Excel ist eine Software, die die meisten zuhause nutzen. Man benötigt also keine zusätzliche Entwicklungsumgebung. Außerdem hat diese Methode den  Vorteil, dass die Daten sofort zur weiteren Verarbeitung verfügbar sind. VBA ist vielleicht nicht die performanteste Programmiersprache, dafür aber relativ leicht zu beherrschen.</p>
<p><a href="http://www.rechtzweinull.de/archives/100-screen-scraping-wann-ist-das-auslesen-und-die-veroeffentlichung-fremder-daten-zulaessig.html">(FYI: Rechtliches zum Thema Web- oder Screen-Scraping)</a></p>
<p> 
Diese Artikelserie richtet sich an den fortgeschrittenen Nutzer. Für den Einsteiger gehe ich nicht auf grundlegendes Programmierwissen ein (was sind Klassen, welche Variablen-Typen bietet Excel, etc.pp.) und für den professionellen Softwareentwickler sind meine Codebeispiele vermutlich zu infantil. Ich habe aber die Erfahrung gemacht, dass VBA und Excel für kurzfristige und kleine Projekte dieser Art recht nützliche Hilfsmittel sind. Außerdem bin ich kein &ldquo;ausgebildeter Softwareentwickler&rdquo;, weshalb ich an der Stelle auch gleich darauf Hinweise, dass Verbesserungsvorschläge sehr gerne gesehen sind!</p>
<p>Welches wissen solltest du also mitbringen?  Da es um das Parsen von HTML-Code geht, solltest du zumindest Bescheid wissen, wenn ich von div- und a-Elementen und css-Klassen rede. Du solltest auch wissen, wie man in VBA Variablen deklariert oder was eine if-Abfrage ist.</p>
<p>Das Endergebnis ist eine Tabelle mit technischen Spezifikationen zu den Mobiltelefonen, die inside-handy.de listet. Insgesamt werden drei Routinen genutzt, die - in umgekehrter Reihenfolge des Vorgehens - folgende Aufgabe haben:</p>
<p>Die letzte Routine greift auf eine Liste von URL zu, die auf die Datenblätter der Geräte verweisen. Von dort wird der HTML-Quellcode nach den  technischen Informationen durchsucht.</p>
<p>Auf inside-handy.de sind die Geräte nach Herstellern sortiert. Jede Herstellerseite verweist auf die entsprechenden Geräte. Wir werden also jede Herstellerseite (bzw. den entsprechenden HTML-Code) zunächst nach den URL zu den Geräten durchsuchen. Diese Aufgabe übernimmt die zweite Routine bzw. Prozedur.</p>
<p>Die erste Routine schließlich liefert die Liste aller URL zu den Herstellern, die wir uns aus dem HTML-Code der Herstellerübersicht auf inside-handy.de laden. Und damit geht es nun los:</p>
<p>1. Die URL zu den Hersteller-Unterseiten auslesen - sub getManufacturer</p>
<p>1.1 Datei per HTTP von einem Server laden</p>
<p>Im ersten Schritt laden wir die komplette HTML-Datei in den Zwischenspeicher. Dazu gibt es mindesten zwei Methoden, die gängigste ist vermutlich die über <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa384106%28v=vs.85%29.aspx">WinHttpRequest</a>. Bevor du das nutzen kannst, musst du bei VBA unter Extras - Verweise jedoch erst die Microsoft HTML Object Library einbinden.</p>
<p>&lsquo;&lsquo;&lsquo;vba
Dim url As String
Dim result As String
Dim winHttpReq As Object
url = &ldquo;<a href="http://www.inside-handy.de/hersteller/handys%22">http://www.inside-handy.de/hersteller/handys"</a></p>
<p>Set winHttpReq = CreateObject(&ldquo;WinHttp.WinHttpRequest.5.1&rdquo;)
winHttpReq.Open &ldquo;GET&rdquo;, url, False
winHttpReq.send
result = winHttpReq.responseText
&rsquo;&rsquo;&rsquo;</p>
<p>Die Deklaration der Variablen erklärt sich von selbst. Nachdem ich eine Instanz vom WinHTTP-Objekt erzeugt habe, kann ich die Parameter übergeben. Dazu gehört neben der URL auch die Bestimmung des HTTP-Requests - nämlich GET. Der letzte, booleansche, Paramter gibt an, ob die Verbindung im asynchronen Modus geöffnet werden soll. Mit .send wird der Request tatsächlich ausgelöst und das Ergebni dann an die String-Variable result zurückgegeben. Dort befindet sich nun unser HTML-Code</p>
<p>Wir können unseren Request natürlich auch per POST absetzen und noch andere Header-Informationen anhängen:</p>
<p>&lsquo;&lsquo;&lsquo;vba
Set winHttpReq = CreateObject(&ldquo;WinHttp.WinHttpRequest.5.1&rdquo;)</p>
<p>winHttpReq.Open = &ldquo;Post&rdquo;, url, False
winHttpReq.setRequestHeader &ldquo;User-Agent&rdquo;, &ldquo;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&rdquo;
winHttpReq.setRequestHeader &ldquo;Content-type&rdquo;, &ldquo;application/x-www-form-urlencoded&rdquo;
winHttpReq.send (URLEncode(&ldquo;username=user1&amp;password=secret&rdquo;) )</p>
<p>result = winHttpReq.responseText
&rsquo;&rsquo;&rsquo;</p>
<p>So ist es z.B. möglich, Formulardaten zu übermitteln, um an eine passwortgeschützte Seite oder die Ergebnisseite einer Suche zu gelangen. Dabei werden die POST-Daten als weiterer Parameter beim Senden mitgegeben. Eine weitere Möglichkeit ist die Durchführung einer HTTP-Authentifizierung:</p>
<p>&lsquo;&lsquo;&lsquo;vba
Dim HTTPREQUEST_SETCREDENTIALS_FOR_SERVER As Boolean</p>
<p>winHttpReq.Open &ldquo;GET&rdquo;, url, False
winHttpReq.SetCredentials &ldquo;user&rdquo;, &ldquo;password&rdquo;, HTTPREQUEST_SETCREDENTIALS_FOR_SERVER
winHttpReq.send
&rsquo;&rsquo;&rsquo;</p>
<p>Neben dem winHttpRequest-Objekt gibt es noch eine weniger elegante Methoden, in dem direkt eine Instanz des Internet Explorers erzeugt wird:</p>
<p>&lsquo;&lsquo;&lsquo;vba
Dim sPostData As String
Dim bPostData() As Byte
Dim WebBrowser: Set WebBrowser = CreateObject(&ldquo;InternetExplorer.Application&rdquo;)</p>
<p>WebBrowser.Visible = True</p>
<p>sPostData = URLEncode(&ldquo;username=user1&amp;password=secret&rdquo;)
ReDim bPostData(Len(sPostData) - 1)
bPostData = StrConv(sPostDataData, vbFromUnicode)</p>
<p>WebBrowser.navigate url, 2 + 4 + 8, , bPostData, &ldquo;Content-type: application/x-www-form-urlencoded&rdquo;
Do While WebBrowser.Busy
DoEvents
Loop
result = WebBrowser.document.body.innerHTML
WebBrowser.Quit
&rsquo;&rsquo;&rsquo;</p>
<p>Da diese Methode - wie gesagt - nicht sonderlich elegant ist, werde ich aber nicht weiter darauf eingehen.</p>
<p>Nun zurück zu unserem Skript. Den HTML-Code der Seite haben wir nun erstmal in einen String gelegt. Damit wir das HTML-Dokument bequem lesen können, erzeugen wir ein HTML-Document, an das wir den HTML-Code übergeben:</p>
<p>&lsquo;&lsquo;&lsquo;vba
Set HTMLDoc = New HTMLDocument
Set HTMLDoc = CreateObject(&ldquo;htmlfile&rdquo;)
HTMLDoc.Open
HTMLDoc.write (CStr(result))
HTMLDoc.Close
&rsquo;&rsquo;&rsquo;</p>
<p>Auch hier erklärt sich der Code fast von selber: Eine Instanz des Objektes erzeugen, diese Instanz zum &ldquo;Befüllen&rdquo; vorbereiten, den String übergebne und die Instanz wieder &ldquo;schließen&rdquo;. Soweit, so unkompliziert. Im nächsten Schritt geht es nun direkt an das Parsen des Quellcodes um die Links zu den Herstellerseiten zu erhalten. Die Schleife dazu ist nicht sehr aufwendig:</p>
<p>&lsquo;&lsquo;&lsquo;vba
Dim oneElement1, allElements1 As IHTMLElementCollection
Dim oneElement2, allElements2 As IHTMLElementCollection
Dim oneElement3, allElements3 As IHTMLElementCollection</p>
<pre><code>Worksheets(&quot;srcURL&quot;).Range(&quot;a2&quot;).Select
i = 0
Set allElements1 = HTMLDoc.getElementsByTagName(&quot;a&quot;)
      
i = 0
For Each oneElement1 In allElements1
    If oneElement1.parentElement.className = &quot;h\_img&quot; Then
        If oneElement1.parentElement.parentElement.ID = &quot;h\_alle&quot; Then
            If InStr(1, oneElement1.getAttribute(&quot;href&quot;), &quot;/tablets&quot;) &lt;= 0 Then
                Selection.Offset(i, 0).Value = Replace(oneElement1.getAttribute(&quot;href&quot;), &quot;about:&quot;, &quot;http://www.inside-handy.de&quot;)
                i = i + 1
            End If
        End If
        
    End If    
Next oneElement1
</code></pre>
<p>End Sub
&rsquo;&rsquo;&rsquo;</p>
<p>Wie bin ich vorgegangen? Ich habe mir zunächst den Quellcode der Seite angeschaut. Die Liste der Hersteller ist dort eine Tabelle mit den Logos der Unternehmen. Die gewünschte Information befindet sich in a-Elementen, die wiederum innerhalb eines div-Elements liegen. Das gemeinsame &ldquo;Oberelement&rdquo; ist ein div-Container mit der CSS-Klasse &ldquo;h_img&rdquo; bzw. einem weiterne div-Container (&ldquo;h_alle&rdquo;). Außerdem gibt es einen ausgeblendeten div-Container mit einer Liste von Tablet-Herstellern, diese haben den Begriff &ldquo;/tablet&rdquo; in der href-Angabe und müssen ignoriert werden.</p>
<p>&lsquo;&lsquo;&lsquo;html</p>
<div id="h\_alle">
	<div class="h\_img">
		<a href="/hersteller/xyz" title="Handys Hersteller: XYZ">
			<img />
		</a>
	</div>
</div>
'''
<p>Mit &ldquo;Set allElements1 = HTMLDoc.getElementsByTagName(&ldquo;a&rdquo;)&rdquo; lasse ich mir also erst alle a-Elemente aus dem Quellcode in meinen &ldquo;Container&rdquo; legen.</p>
<p>Mit der ersten for-each-Schleife durchlaufe ich nun diesen Container und prüfe mit den ersten zwei if-Abfragen, ob sich das a-Element unterhalb der erwähnten div-Container befindet. Da auf der Seite noch ein weitere identische div-Container mit diesen css-Klassen für die Liste der Tablet-Hersteller existiert, muss ich mit einer dritten if-Abfrage die URL des a-Elements überprüfen. Erst dann kann ich das Attribut des a-Elements auslesen und in mein Excel-Worksheet schreiben.</p>
<p>Fertig ist der erste Schritt - eine Liste der URL zu den jeweiligen Herstellern. Im nächsten Teil werde ich diese Liste durchgehen und von den jeweiligen Seiten die URL zu den Geräten auslesen.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>office</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Tutorial: Web-Scraping mit VBA - Teil 1 - Project</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>FAQ</title>
      <link>http://localhost:1313/2005/2005-04-16-faq/</link>
      <pubDate>Sat, 16 Apr 2005 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2005/2005-04-16-faq/</guid>
      <description> Häufig gestellte Fragen rund um Windows und Windows-Programme.Häufig gestellte Fragen rund um Windows und Windows-Programme.
Skype &amp; HTTP-Server ? Mein …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Häufig gestellte Fragen rund um Windows und Windows-Programme.Häufig gestellte Fragen rund um Windows und Windows-Programme.&#39; reading_time: 9 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Mac, Database, Server, Mobile, Ai, Automation</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p> </p>
<p> </p>
<p>Häufig gestellte Fragen rund um Windows und Windows-Programme.Häufig gestellte Fragen rund um Windows und Windows-Programme.</p>
<h3 id="skype--http-server">Skype &amp; HTTP-Server</h3>
<p>? Mein Webserver (z.B. Apache) läuft nicht, wenn Skype gestartet ist. ! Skype benutzt zum Kommunizieren den HTTP-Port 80, der auch vom Apache-Webserver benötigt wird. Entweder man ändert den Port des Apache Servers <a href="http://faq.kwm-web.info/doku.php?id=apache#listen_port_aendern" title="http://faq.kwm-web.info/doku.php?id=apache#listen_port_aendern">[1]</a> oder du änderst den Port in Skype <a href="http://www.skype-forum.com/about84.html" title="http://www.skype-forum.com/about84.html">[2]</a></p>
<h3 id="desktop-link-in-quicklaunch">Desktop Link in Quicklaunch</h3>
<p>? Aus meiner Schnellstartleiste ist das Symbol zum Anzeigen des Desktops verschwunden ! Unter %username%\Anwendungsdaten\Microsoft\Internet Explorer\Quick Launch eine Datei mit dem Namen &ldquo;Desktop anzeigen.scf&rdquo; mit folgendem Inhalt ablegen:</p>
<p>[Shell]Command=2IconFile=explorer.exe,3
[Taskbar]Command=ToggleDesktop</p>
<h3 id="skype-vom-usb-stick-starten">Skype vom USB Stick starten</h3>
<p>? Wie starte ich Skype vom USB Stick, ohne dafür externe Anwendungen zu nutzen</p>
<ol>
<li>Die Skype-Programm-Dateien in einen Unterordner auf den USB Stick kopieren, z.B: X:\Skype</li>
<li>In diesem Ordner ein Unterverzeichnis erstellen: X:\Skype\userfiles</li>
<li>den Inhalt von Dokumente und Einstellungen\%username%\Anwendungsdaten\Skype nach X:\Skype\userfiles kopieren</li>
<li>eine Batchdatei erstellen: skype.cmd mit dem Inhalt</li>
</ol>
<p>@start skype.exe \removable \datapath:&quot;\userfiles\&quot; .@ - unterdrückt die Anzeige des Befehls im Dosfensterstart - sorgt dafür, dass das Dosfenster wieder geschlossen wird, nach dem Skypestart</p>
<h3 id="word-stürzt-beim-start-ab">Word stürzt beim Start ab</h3>
<p>? Im Laufe der Zeit kommt es immer wieder zu Abstürzen von Word. Weder eine Neu-Installation noch andere Reparaturmaßnahmen helfen.</p>
<ol>
<li>Schuld ist die Vorlagendatei &ldquo;normal.dot&rdquo;, die im Laufe der Zeit bestimmte Vorlagen und Einstellungen für Word beinhaltet</li>
<li>Abhilfe schafft ein Umbenennen dieser Vorlagendatei</li>
<li>findet Word keine normal.dot wird eine neue, frische angelegt</li>
</ol>
<p><a href="http://support.microsoft.com/kb/289506/DE/#Cause2" title="http://support.microsoft.com/kb/289506/DE/#Cause2">MS Knowledge Artikel</a></p>
<h3 id="activesync-stellt-keine-verbindung-zum-pocketpc-her">ActiveSync stellt keine Verbindung zum PocketPC her</h3>
<p>? Mein XDA / VPA / MDA / PocketPC / PDA kann sich nicht mit ActiveSync verbinden. ! Auch wenn die IP-Adresse auf dem Computer und dem mobilen Gerät per Hand vergeben wurde, kann ActiveSync ohne den Windows-Dienst &ldquo;DHCP-Client&rdquo; keine Verbindung herstellen. Wenn dieser Dienst in der Diensteverwaltung aktiviert wird, funktioniert auch die Verbindung über ActiveSync.</p>
<h3 id="haldll">hal.dll</h3>
<p>? hal.dll fehlt oder ist beschädigt, Windows bootet nicht, Systemwiederherstellung und der abgesicherte Modus funktionieren nicht? ! hal.dll wurde gelöscht, boot.ini ist leer oder fehlt ganz</p>
<ol>
<li>von Original Windows XP CD booten und &ldquo;Wiederherstellungskonsole&rdquo; starten</li>
<li>hal.dll fehlt
<ol>
<li>per Kommandozeile die hal.dll direkt von der Windows-CD in den system32-Ordner kopieren</li>
</ol>
</li>
<li>boot.ini fehlt
<ol>
<li>bootcfg /rebuild erstellt eine neue boot.ini</li>
</ol>
</li>
<li>boot.ini ist leer
<ol>
<li>bootcfg /add das Betriebssystem wird wieder zur boot.ini hinzufgefügt</li>
</ol>
</li>
</ol>
<p><a href="http://support.microsoft.com/kb/291980/de" title="http://support.microsoft.com/kb/291980/de">kb291980</a></p>
<h3 id="der-ordner-windowsinstaller">Der Ordner &ldquo;Windows\Installer\&rdquo;</h3>
<p>? Der Ordner Windows\Installer ist sehr voll, kann ich die Dateien einfach löschen? ! Dieser Ordner enthält die Installationsroutinen der Programme, die mit dem Windows Installer installiert wurden, nicht jedoch die Programmdateien selber. Die Dateien werden benötigt, um die Programme wieder korrekt entfernen zu können. Microsoft bietet auf seiner Seite ein Tool an, das verspricht, diesen Ordner aufräumen zu können. <a href="http://support.microsoft.com/?kbid=290301" title="http://support.microsoft.com/?kbid=290301">Windows Install CleanUp</a></p>
<h3 id="windows-installer-sucht-nach-installationspaketen-msi-beim-öffnen">Windows Installer sucht nach Installationspaketen (*.msi) beim Öffnen&hellip;</h3>
<p>? &hellip; verschiedener Programme. Beim Öffnen von Word, den Druckeinstellungen oder anderen Programmen versucht der Windows Installer auf ein Installationspaket zuzugreifen, dass nicht mehr existiert. ! In diesem Fall gibt es einen Konflikt mit einem möglicherweise nicht mehr vorhandenem Programm auf dem Computer. Nennt der Windows Installer die Installations Routine des Programms, kann man direkt per Windows Install CleanUp das entsprechende Programm aus der Datenbank entfernen. <a href="http://support.microsoft.com/?kbid=290301" title="http://support.microsoft.com/?kbid=290301">Windows Install CleanUp</a></p>
<h3 id="dialog-für-speichern-und-öffnen-anpassen">Dialog für Speichern und Öffnen anpassen</h3>
<p>? Beim Herunterladen von Dateien mit dem Internetbrowser oder beim Öffnen und Speichern von Dateien mit verschiedenen Programmen erscheint ein Dialogfenster, in dem man den Speicherort und Dateiname angibt. Auf der linken Seite sind einige Speicherort des Computers vorgegebn. Kann man diese Liste ergänzen? ! Bei den Microsoft Office Produkten geschieht das ganz einfach über das Menü &ldquo;Extras&rdquo; im Dialogfenster selber und dort die Option &ldquo;zu Favoriten hinzufügen&rdquo;. Diese Einstellung gilt jedoch nicht systemweit. Um das zu erreichen erstellt man in der Registry unter <em>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies</em> einen Schlüssel mit dem Namen <em>comdlg32</em>. Unterhalb dieses Schlüssels erstellt man nun einen weiteren Schlüssel mit dem Namen <em>Placesbar</em>. Unter diesem Schlüssel kann man jetzt maximal 5 Einträge anlegen. Jeder Schlüssel muss hier den Namen <em>Place0</em> bis <em>Place4</em> tragen und es gibt zwei verschiedene Typen. Lautet der Typ <em>DWORD</em> erwartet der Schlüssel einen der folgenden Werte für die Standardsystemordner:</p>
<p>0 - Desktop5 - Eigene Dateien6 - Favoriten8 - Zuletzt verwendete Dokumente11 - Arbeitsplatz12 - Netzwerkumgebung</p>
<p>Eigene Orte und Verzeichnisse kann man direkt eingeben, wählt man als Typ <em>Zeichenfolge</em>. Das folgende Beispiel zeigt, dass weder die Gross-/Kleinschreibung noch der abschließende Backslash <em>\</em> beachtet werden müssen. Achtung, da es sich hierbei um einen exportierten Registryeintrag handelt, der in dieser Form wieder importiert werden kann, sind die Backslashes doppelt vorhanden. Bei der direkten Eingabe in den Registryeditor darf natürlich nur ein Backslash verwendet werden. Windows Registry Editor Version 5.00</p>
<p>[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\comdlg32\Placesbar]&ldquo;Place0&rdquo;=dword:00000000&quot;Place1&quot;=&ldquo;j:\\dokumente\\studium\\&ldquo;&ldquo;Place2&rdquo;=&ldquo;c:\\teMP&quot;&ldquo;Place3&rdquo;=&ldquo;j:\\incomming&quot;&ldquo;Place4&rdquo;=dword:00000005</p>
<p>Möchte man die Standardeinstellung wiederherstellen, löscht man den zuerst erstellten Schlüssel <em>comdlg32</em>.</p>
<h3 id="dns-server-bei-einer-fritzbox-nachtragen">DNS Server bei einer Fritzbox nachtragen</h3>
<p>? Es gibt bei meiner Fritzbox im Webinterface nicht die Möglichkeit, einen anderen DNS-Server einzutragen. ! Der umständliche Weg, der in vielen Foren empfohlen wird, lautet &ldquo;Telnet&rdquo;. Die einfachste Lösung ist jedoch, den bzw. die DNS Server mit dem FBEditor (Download von <a href="http://www.ip-phone-forum.de/showthread.php?t=79513" title="http://www.ip-phone-forum.de/showthread.php?t=79513">IP Phone Forum.de</a>) nachzutragen. Das Programm benötigt eine Java Runtime Enviroment (Download von <a href="http://www.java.com/de/download/manual.jsp" title="http://www.java.com/de/download/manual.jsp">java.com</a>).</p>
<h3 id="automatisch-die-urlfilterini-von-opera-aktualisieren">Automatisch die urlfilter.ini von Opera aktualisieren</h3>
<p>Opera bietet zwar eine eigene Filterliste die als AdBlock fungiert, jedoch wird diese nicht automatisch aktualisiert. Folgende Anleitung ermöglicht jedoch, die tägliche Aktualisierung dieser Liste. Benötigt wird:</p>
<ol>
<li>die Software WGet von <a href="http://gnuwin32.sourceforge.net/packages/wget.htm" title="http://gnuwin32.sourceforge.net/packages/wget.htm">gnuwin32.sourceforge.net</a></li>
</ol>
<p>von dort die Binaries im ZIP-Archiv</p>
<p>sowie die Dependencies im ZIP-Archiv</p>
<ol>
<li>eine regelmäßig aktualisierte urlfilter.ini, wie z.B. von:</li>
</ol>
<p><a href="http://fanboy.co.nz/adblock/" title="http://fanboy.co.nz/adblock/">http://fanboy.co.nz/adblock/</a></p>
<p><a href="http://pgl.yoyo.org/as/" title="http://pgl.yoyo.org/as/">http://pgl.yoyo.org/as/</a></p>
<p><a href="http://www.urlfilter.de/tag/urlfilterini/" title="http://www.urlfilter.de/tag/urlfilterini/">http://www.urlfilter.de/tag/urlfilterini/</a></p>
<p>Vorgehensweise:</p>
<ol>
<li>Erstelle eine Batchdatei (mit der Endung <em>.cmd</em>) mit folgendem Inhalt, die du mit den WGet-Dateien in ein Verzeichniss kopierst.</li>
</ol>
<p>@wget -b -q -N -o update.log -O%AppData%\Opera\Opera\urlfilter.ini <a href="http://fanboy.co.nz/adblock/opera/complete/urlfilter.ini" title="http://fanboy.co.nz/adblock/opera/complete/urlfilter.ini">http://fanboy.co.nz/adblock/opera/complete/urlfilter.ini</a>@                               ^Hinweis 1 beachten                 ^Hinweis 2 beachten@rem Optionen:@rem -b Im Hintergrund ausführen@rem -q &ldquo;Leise&rdquo; ausführen, keine Ausgaben@rem -N nur Dateien herunterladen, die aktueller sind</p>
<ol>
<li>
<ol>
<li>Hinweis 1: Die Urlfilter.ini befindet sich bei einer gewöhnlichen Installation im o.g. Verzeichnis. Wer sich über den Ort nicht sicher ist, findet den korrekten Speicherort über die Adresse opera:config (einfach in die Adresszeile eingeben) - dort im Suchfenster urlfilter eingeben und den korrekten Speicherort für die Batchdatei erhalten</li>
<li>Hinweis 2: Ich verwende die filterini von fanboy.co.nz; die Größe der Datei kann sich natürlich negativ auf die Geschwindigkeit von Opera auswirken, wer will, kann hier auch den Pfad zu einer anderen urlfilter.ini hinterlegen</li>
<li>Hinweis 3: Die Zeilen nach der 1. Zeile können natürlich weggelassen werden, sie dienen nur der Erklärung</li>
</ol>
</li>
<li>Führe nun die erstellte Batchdatei aus. Nach kurzer Zeit wirst du feststellen, dass die urlfilter.ini aktualisiert wurde. Manchmal lohnt es sich einen Augenblick zu warten, da die Datei, solange sie von dem Skript noch in Bearbeitung ist, für einen kurzen Augenblick leer erscheint</li>
<li>Wer möchte, kann nun über den Taskplaner von Windows eine Aufgabe erstellen, die diese Batchdatei bei Bedarf einmal täglich oder wöchentlich ausführt</li>
</ol>
<h3 id="fonts--schriftart-lässt-sich-nicht-installieren">Fonts / Schriftart lässt sich nicht installieren</h3>
<p>? Bei der Installation von Schriftarten unter Windows kommt es öfter zu Fehlermeldungen, dass z.B. die Datei beschädigt sei. ! Wenn der Treiber der Grafikkarte mehr Speicher anfordert, als Windows es &ldquo;gewohnt&rdquo; ist, kann es zu dieser Fehlermeldung kommen. Um das zu beheben ist muss in der Registry unter</p>
<p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Contro l\SessionManager\MemoryManagement</p>
<p>der Wert</p>
<p>REG_DWORD</p>
<p>mit einem Inhalt von mindestens</p>
<p>20</p>
<p>gesetzt werden. Nach einem Neustart sollte das Problem behoben sein.</p>
<h3 id="nach-update-der-mediawiki-software-fehlen-thumbnails-der-bilder">Nach Update der Mediawiki-Software fehlen Thumbnails der Bilder</h3>
<p>Wenn die Mediawikisoftware aktualisiert wurde, werden Thumbnails entweder garnicht oder nur schwarz angezeigt. Um das Problem zu beheben, einfach den Thumbnail-Ordner im Verzeichnis &ldquo;Images&rdquo; im Mediawiki-Verzeichnis loeschen oder umbenennen. Die Softwar erstellt dann neue Thumbnails.</p>
<h3 id="externer-datenträger--festplatte-schreibgeschützt">Externer Datenträger / Festplatte schreibgeschützt</h3>
<p>? Ich kann plötzlich keine Daten mehr auf meine Festplatte schreiben oder darauf löschen. ! Windows hat unbemerkt einen Fehler im Dateisystem festgestellt bzw. wurde die Platte einfach nur vom Computer getrennt, oder sie sauber bei Windows zu &ldquo;entmounten&rdquo;. Um das Problem zu genügen, reicht es, den Befehl</p>
<p>chkdsk k: /x</p>
<p>auszuführen. Entweder im Ausführen-Dialog (Windowstaste + R) oder direkt in der Konsole (cmd). <em>k:</em> entspricht dabei dem Laufwerks-Buchstaben des externen Datenträgers und /x ist die Option, die Windows nun dazu veranlasst, den Fehler zu beheben und den Schreibschutz wieder aufzuheben.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>office</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>FAQ - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item><item>
      <title>Wordpress-Security Checkliste</title>
      <link>http://localhost:1313/2000/2000-01-01-wordpress-security-checkliste/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2000/2000-01-01-wordpress-security-checkliste/</guid>
      <description> Wordpress hat unter den Content Management System im Internet mittlerweile einen Marktanteil von 60% erreicht und lockt mit dieser Verbreitung natürlich auch …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>&#39; reading_time: 7 content_type: &#39;analysis</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, Wordpress, Mac, Server, Security, Performance</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <!-- |                      | WPaaS | Shared Hosting | Server |
|----------------------|-------|----------------|--------|
| Updates              | X     | X              |        |
| Staging-System       |       |                |        |
| Backups              |       |                |        |
| Plugins              |       |                |        |
| Dateirechte          |       |                |        |
| PHP-Ausführung       |       |                |        |
 -->
<p>Wordpress hat unter den Content Management System im Internet mittlerweile einen Marktanteil von 60% erreicht und lockt mit dieser Verbreitung natürlich auch kriminelle Geister an und so schwirren immer wieder Nachrichten über Sicherheitslücken und gehackte WP-Seiten durch die einschlägigen Medien. Aus diesem Grund will ich mal meine Erfahrungen in Bezug auf Wordpress-Sicherheit an dieser Stelle zusammenfassen und zwar so kompakt wie möglich, damit diese Information als Checkliste genutzt werden kann.</p>
<p>Wenn du Betreiber einer Wordpress-Seite bist, gibt es dafür drei Wege und unterschiedliche Freiheiten, sich selber um die Sicherheit der WP-Installation zu nutzen - im folgenden die &ldquo;Freiheitsgrade&rdquo; genannt: Bei &ldquo;wordpress as a service&rdquo; greifst du auf einen Angebot zurück, das bekannteste ist wordpress.com, bei dem du nur Zugriff auf das Backend hast und dementsprechend wenig Konfigurationsmöglichkeiten. Als Nutzer eines Shared Hosting hast du zusätzlich die Möglichkeit, per FTP oder SSH auf den Webspace zu gelangen und dort Einstellungen vorzunehmen. Und schließlich gibt es noch die Möglichkeit, einen eigenen Server zu nutzen, bei dem du dich auch um die Konfiguration auf Systemebene, also des Webserver kümmern musst. In dieser Reihenfolge möchte ich nun im folgenden Zusammenfassen, welche Möglichkeiten du hast, deine WP-Installation etwas sicherer zu gestalten.</p>
<h2 id="aktuelle-updates">Aktuelle Updates</h2>
<p>Zunächst zum Offensichtlichen: Sicherheitsupdates. Die automatischen Updates des WP-Cores (also dem, was WP ausmacht) sind mit jedem Freiheitsgrad konfigurierbar, bergen aber auch Risikos. So hatte z.B. das Update auf Version 4.9.3 Anfang 2018 den Auto-Update-Mechanismus deaktiviert. Spätere Sicherheitsupdates würden also ignoriert werden. Grundsätzlich ist das Auto-Update nur für sog. Minor-Versionen zu empfehlen, wodurch Sicherheitlücken und Bugs behoben werden. Wer diese Funktion auf einem Test-System auch für Major-Versionen aktivieren möchte, muss in der wp-config.php folgenden Parameter setzen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="ln">1</span><span class="cl"><span class="nx">define</span><span class="p">(</span> <span class="s1">&#39;WP_AUTO_UPDATE_CORE&#39;</span><span class="p">,</span> <span class="s1">&#39;true&#39;</span> <span class="p">);</span>
</span></span></code></pre></div><p>(der Parameter ist per default auf <em>minor</em> gesetzt.) Grundsätzlich ist das aber nicht zu empfehlen: Denn: Bevor ein großes Update eingespielt wird, sollte das auf Herz &amp; Nieren und natürlich Kompatibilität mit den vorhandenen Themes und Plugins getestet werden. Dazu sollte man ein Staging-System einrichten, worauf ich im nächsten Absatz eingehe.</p>
<h2 id="ein-staging-system-nutzen">Ein Staging-System nutzen</h2>
<p>Die Sicherheit der WP-Installation kann nicht nur durch Malware oder Angriffe von außen versehrt werden, sondern auch durch Bedienfehler. Ein wichtiger Baustein ist also ein Staging-System. Das ist im weitesten Sinne eine exakte Kopie der aktuelle WP-Installation. Das Staging-System erfüllt eine Reihe von Funktionen:</p>
<ul>
<li>Testen von Plugins &amp; Updates auf Kompatibilität</li>
<li>Referenz-System zum Erkennen von verdächtigen Änderungen</li>
<li>Testen von Änderungen am Theme</li>
</ul>
<p>Wie ein Staging-System eingerichtet wird, habe ich hier genauer erklärt. Was es mit dem 2. Punkt auf sich hat, erkläre ich weiter unten.</p>
<h2 id="regelmäßige-backups">Regelmäßige Backups</h2>
<p>Auch Backups sind ein wichtiger Teil eines Sicherheitskonzeptes. Hier gibt es je nach Freiheitsgrad verschiedene Möglichkeiten. Als Plugin empfehle ich zunächst das sehr weit verbreitete Updraft. Das Backup sollte unbedingt auf einen anderen Ort kopiert werden. Updraft unterstützt in der kostenlosen Version z.B. FTP. Wer kein Problem mit Dropbox oder Google Drive hat, kann natürlich auch die Cloud nutzen. Updraft unterstützt die Verschlüsselung der Datenbank-Sicherung nur in der bezahlten Version. Wer mit personenbezogenen Daten hantiert, sollte sich diese Funktion unbedingt zulegen!</p>
<p>Eine bessere Alternative, die aber nur ab dem 2. Freiheitsgrad möglich ist, ist das Backup über die Kommandozeile. Das ist vor allem dann unumgänglich, wenn die WP-Installation sehr groß ist und nicht mehr mit den gängigen Plugins durchführbar ist. Außerdem funktioniert das unabhängig von Wordpress und kann demnach auch nicht durch andere Plugins beeinträchtigt werden. Wie genau man das einrichtet und vor allem auch die Wiederherstellung habe ich in diesem Beitrag genauer beschrieben.</p>
<h2 id="plugin-sparsamkeit">Plugin-Sparsamkeit</h2>
<p>Hierunter ist eher ein Konzept als eine konkrete Handlungsempfehlung zu verstehen. Vor allem technisch unbedarfte Nutzer tendieren dazu, sofort ein Plugin zu installieren, wenn eine bestimmte Funktion benötigt wird. Doch gerade unsaubere, nicht gepflegte Plugins bieten eine Angriffsfläche und noch dazu wirkt sich ein zunehmendes Plugin-Portfolio negativ auf die Performance aus. Wer ein Plugin installieren möchte, sollte dazu nur auf vertrauenswürdige und bekannte Quellen zurückgreifen. Im Klartext: <a href="https://de.wordpress.org/plugins/">https://de.wordpress.org/plugins/</a></p>
<h2 id="die-offensichtlichen">Die offensichtlichen</h2>
<ol start="2">
<li>Admin-Benutzer umbenennen</li>
</ol>
<h2 id="die-technischen">Die technischen</h2>
<ol>
<li>Admin-Bereich mit .htaccess schützen</li>
<li>Dateirechte korrekt setzen</li>
<li>PHP-Ausführung in bestimmten Unterordner deaktivieren</li>
</ol>
<h2 id="plugins-und-themes">Plugins und Themes</h2>
<p>Ein zentrales Element und der größte Vorteil von Wordpress ist seine fast unerreichbar funktionale Erweiterbarkeit und sehr große Community. Das zieht allerdings auch schwarze Schafe an.</p>
<ol>
<li>Installiere nicht wahllos Plugins, weil du eine bestimmte Funktion benötigst</li>
<li>Installiere Plugins nur von vertrauenswürdigen Quellen</li>
<li>Räume deinen Plugin-Ordner regelmäßig auf</li>
</ol>
<h2 id="die-mutigen">Die mutigen</h2>
<h3 id="php-ini-parameter">PHP ini-Parameter</h3>
<p>Es dürfte kein Geheimnis sein, dass PHP über die php.ini gesteuert wird. Es gibt allerdings einige sicherheitsrelevante Parameter, um die man sich allerdings selber kümmern muss. Die wichtigsten möchte ich hier vorstellen.</p>
<p>Um die Übersicht über manuelle Änderungen nicht zu verlieren, solltest du die Einstellungen in einer separaten Datei (z.B. <em>security.ini</em>) speichern. Auf der Kommandozeile zeigt dir der folgende Befehl, aus welchem zusätzlichen Ordner PHP zusätzliche ini-Dateien liest:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">php --ini
</span></span></code></pre></div><p>In den meisten Fällen dürfte das /etc/php/7.1/apache2/conf.d/ sein.</p>
<p>Eine einfache aber sehr wirksame Maßnahme ist das deaktivieren potentiell gefährlicher PHP-Funktionen. Wie z.B. <a href="http://php.net/manual/en/function.shell-exec.php">shell_exec()</a> - im Wordpress-Umfeld gibt es kaum ein Szenario, in dem diese Funktion nützlich sein könnte. Um PHP-Funktionen zu deaktivieren, kannst du den ini-Parameter <a href="http://php.net/manual/de/ini.core.php#ini.disable-functions">disable_functions</a> nutzen.</p>
<p>Dort legst du die <em>security.ini</em> ab und füllst sie entsprechend:</p>
<p><a href="https://www.damianschwyrz.de/php-backdoors-und-shells-finden-eine-kurze-anleitung">https://www.damianschwyrz.de/php-backdoors-und-shells-finden-eine-kurze-anleitung</a></p>
<p>siehe auch</p>
<p><a href="https://binary-butterfly.de/artikel/wordpress-login-security-eine-stahltuer-in-der-wellblechhuette/">https://binary-butterfly.de/artikel/wordpress-login-security-eine-stahltuer-in-der-wellblechhuette/</a></p>
<p>IP-Filter</p>
<h3 id="den-admin-bereich-verstecken">Den Admin-Bereich verstecken</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nt">&lt;IfModule</span> <span class="s">mod_rewrite.c</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    <span class="nb">RewriteEngine</span> <span class="k">on</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="nb">RewriteBase</span> /
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="c"># Move Wordpress login to /cms.</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="nb">RewriteRule</span> ^cms wp-login.php?cms=unlocked [L]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_URI} ^(.*)?wp-login\.php(.*)$
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} !^cms=unlocked
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} !^action=logout
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} !^loggedout=true
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_METHOD} !POST
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="nb">RewriteRule</span> ^(.*)$ - [R=403,L]
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_URI} ^(.*)?wp-login\.php(.*)$
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="nb">RewriteCond</span> %{QUERY_STRING} ^loggedout=true
</span></span><span class="line"><span class="ln">15</span><span class="cl">    <span class="nb">RewriteRule</span> ^(.*) ./cms? [R=302,NC,L]
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_URI} ^(.*)?wp-login\.php(.*)$
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="nb">RewriteCond</span> %{HTTP_REFERER} !cms$
</span></span><span class="line"><span class="ln">19</span><span class="cl">    <span class="nb">RewriteCond</span> %{REQUEST_METHOD} POST
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="nb">RewriteRule</span> ^(.*)$ - [R=403,L]
</span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="nt">&lt;/IfModule&gt;</span>
</span></span></code></pre></div><!-- https://wordpress.stackexchange.com/a/292691/132138

## Die unnötigen

### Sicherheits-Plugins

siehe auch

https://www.kuketz-blog.de/basisschutz-wordpress-absichern-teil1

https://fastwp.de/487

```bash
chown user:user -R *
find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;

chown www-data:www-data wp-content

## Disable Editing in Dashboard
define('DISALLOW_FILE_EDIT', true);

<Directory /var/www/nickyreinert.de/www>
# prevent   var_dump(scandir('/etc'));
# see http://php.net/manual/de/ini.core.php#ini.open-basedir
# alternativ: php für jeden virtuellen host mit separatem user ausführen und die dateirechte anpassen
php_admin_value open_basedir "/var/www/nickyreinert.de/www"

</Directory>
```

```ini
# disable_functions in php.ini
# list of function to disable globally #
disable_functions =exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source
```

## PHP-FPM?

Normalerweise ruft der Apache-Webserver den PHP-Interpreter jedes mal erneut auf. Der Nachteil: Viel Speicherverbrauch, lange Ladezeiten und ein globaler Benutzer. Etwas schneller ist FastCGI. Dabei läuft der Interpreter permanent im Hintergrund. FPM startet nicht nur einen sondern mehrere PHP-Prozesse im Hintergrund. -->
        
        
      ]]></content:encoded>
      
      
      
      <category>wordpress</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wordpress-Security Checkliste - Analysis</media:title>
      </media:content>
      
      
      
      
      
      
      
    </item>
  </channel>
</rss>