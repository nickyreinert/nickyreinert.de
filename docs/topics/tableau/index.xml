<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Tableau auf Nicky Reinert</title>
    <link>https://nickyreinert.de/topics/tableau/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Tue, 05 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://nickyreinert.de/topics/tableau/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Fefes Blog - Eine Analyse</title>
      <link>https://nickyreinert.de/2019/2019-11-05-fefes-blog-eine-analyse/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2019/2019-11-05-fefes-blog-eine-analyse/</guid>
      <description>Nach der gar nicht mal so großen öffentlichen Wahrnehmung meiner laienhaften statistischen Analyse des Flirtportals der BVG &ldquo;Augenblicke&rdquo;, habe ich …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel bietet eine statistische Analyse von Fefes Blog, einem bekannten deutschen IT-Sicherheits- und Politik-Blog. Er untersucht die Entwicklung der Beitragsfrequenz, die Häufigkeit von Wörtern und externen Quellen, sowie die Blog-Zeiten. Zudem werden technische Aspekte des Web Scrapings und die Interpretation des Blog-eigenen Zeitstempelformats beleuchtet.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web Analyse, Datenanalyse, Blog Analyse, Web Scraping, Python, Tableau, IT Sicherheit, Fefes Blog, Statistik</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>Nach der gar nicht mal so großen öffentlichen Wahrnehmung meiner laienhaften <a href="https://www.nickyreinert.de/augenblicke-eine-statistische-analyse-des-flirt-portals-der-bvg/">statistischen Analyse des Flirtportals der BVG &ldquo;Augenblicke&rdquo;</a>, habe ich mich mal einem anderem Projekt gewidmet. Es geht um <a href="http://blog.fefe.de">Fefes Blog</a>, einer meiner ersten Anlaufstellen, wenn ich mir die tägliche Nachrichtendosis gebe. Inspiriert wurde ich dazu durch eine <a href="https://www.netaction.de/datenvisualisierung-von-fefes-blogzeiten/">Analyse der Blogzeiten von Fefe</a>, die allerdings schon acht Jahre zurück liegt.<br>
Für meine Analyse des BVG-Portal hatte ich damals noch PHP gewählt, um die Seiten auszulesen und in eine Datenbank zu hauen. Das war ziemlich aufwendig. Diesmal wollte ich es mit Python probieren und damit auch gleich mein erstes Projekt in dieser Sprache realisieren (der Quellcode steht <a href="https://github.com/nickyreinert/fefeScrape">auf Github</a> zur Verfügung).</p>
<p>Die ersten Schritte mit Python waren etwas holprig. Mit der Zeit zeigt sich aber, dass das Scraping hier weitaus bequemer ist als mit PHP. Außerdem ist Fefes Blog eine ziemlich angenehme Datenquelle, da Fefe seit Anbeginn auf eine wirklich saubere und konsistente Seitenstruktur setzt. Pures HTML. Es ist ein Traum. Danke, Fefe. Ein paar Hintergründe zur Datenerfassung gibt es am Ende.</p>
<h2 id="auswertung">Auswertung</h2>
<p>Insgesamt habe ich 43.908 Einträge im Zeitraum von Ende März 2005 bis Anfang November 2019 ausgewertet. Nach meiner Zählung hat Fefe einen sehr reichen Wortschatz: ich konnte 141.048 verschiedene &ldquo;Wörter&rdquo; ausfindig machen. Außerdem verweißt Fefe auf 8.862 externe Quellen. Auf sich selber hat Fefe innerhalb des Zeitraums 2.661 mal verlinkt. Auch wenn Fefe den Spiegel oft als &ldquo;ehemaliges Nachrichtenmagazin&rdquo; bezeichnet: Der Spiegel ist mit 4.447 Verlinkungen die meist genutzt Quelle, gefolgt von heise.de (3.252). Man muss aber auch eingestehen, dass die Verlinkung zum Spiegel seit 2010 stark abnimmt.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/fefe_words-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/fefe_words-1-700x339.png" alt="Fefes Quellen - Spiegel Online, Heise und… er selbst ;)"></a></p>
<p>Fefes Quellen - Spiegel Online, Heise und&hellip; er selbst ;)</p>
<p>Insgesamt kann man einen Abwärtstrend der Nachrichtenfrequenz bei Fefe feststellen. Seinen Höhepunkt hatte Fefe gleich zu Beginn: Im Juli 2005 gab es 528 Einträge. Den zweiten Höhepunkt erreichte Fefes Blog knapp 10 Jahre später. Im April 2015 gab es 440 Einträge. Ansonsten zeigt der Trend leider nach unten. Im Schnitt gibt es jeden Monat 244 Beiträge (Median 238). Für November 2019 sagt das Prognosemodul von Tableau übrigens 182 Einträge voraus.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/monthly.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/monthly-700x361.png" alt="Anzahl der Einträge pro Monat im Jahresverlauf"></a></p>
<p>Anzahl der Einträge pro Monat im Jahresverlauf</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/blogging-times.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/blogging-times-62x300.png" alt="Anzahl der Nachrichten je Tageszeit im Jahresverlauf"></a></p>
<p>Anzahl der Nachrichten je Tageszeit im Jahresverlauf</p>
<p>In Anlehnung an mein Vorbild, habe ich mir natürlich auch angeschaut, zu welcher Tagszeit Fefe aktiv ist. Zunächst erkennt man, dass Fefe bevorzugt nachmittags aktiv ist. Aber scheinbar gibt es auch hier saisonale Unterschiede. So ist er im Januar bis Juli 2006, den März ausgeschlossen, eher ab 17 Uhr aktiv, danach aber wieder über den ganzen Tag verteilt (Nachtstunden ausgeschlossen). Im April und Mai 2007 konzentrieren sich die Nachrichten wieder auf den späten Nachmittag. In den folgenden Jahren, bis 2015, sind es immer wieder die Frühsommer / Frühlingsmonate, in denen sich die Beiträge zu dieser Tageszeit konzentrieren. Entweder ist Fefe ist ein ausgesprochener Frühlingsmensch. Eine andere Erklärung sind Projekte, die in diesen Monaten stattfinden und ein Bloggen erst zum Nachmittag zulassen. Denkbar ist auch, dass Fefe aufgrund seiner (zyklischen?) Reisetätigkeit und dem damit verbundenen Zeitzonenwechsel zu unterschiedlichen Zeiten bloggt.</p>
<p>Kreuzt man den Wochentag mit der Tageszeit, zeigt sich, wann Fefe die meisten Beiträge absetzt. Mittwochs um 17 Uhr. Das Wochenende ist Fefe heilig, die Beitragsfrequenz ist hier sehr niedrig. Auch zu den typischen Nachtzeiten gibt es nur sehr wenige Einträge. Hier gibt es öfter auffällige Konzentrationen, wie z.B. im Frühling 2015, die ich auch auf Zeitzonenwechsel - sprich Reisen - schiebe.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-nachrichten-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-nachrichten-1.png" alt="Anzahl der Nachrichten je Wochentag und Tageszeit"></a></p>
<p>Anzahl der Nachrichten je Wochentag und Tageszeit</p>
<p>Die längsten Nachrichten entstehen übrigens zur Nachtzeit (oder je nach Sichtweise, während den Reisen in andere Zeitzonen). Montags, um 5 Uhr, ist die durchschnittliche Wortzahl am höchsten. Der Median weist dazu übrigens den Sonntag um 2 Uhr nachts aus.</p>
<ul>
<li>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-avg-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-avg-1.png" alt=""></a></p>
<p>Wortanzahl (Mittelwert) je Wochentag und Tageszeit</p>
</li>
<li>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-median-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/wochentag-x-uhrzeit-wortzahl-median-1.png" alt=""></a></p>
<p>Wortanzahl (Median) je Wochentag und Tageszeit</p>
</li>
</ul>
<p>Eine Wortwolke, analog der Wolke der externen Quellen, ist aufgrund der schieren Menge etwas zu aufwendig und hätte auch nur wenig Informationsgehalt, weshalb ich darauf mal verzichte. Hier nur eine Darstellung der häufigsten Wörter, weil es so schön aussieht:</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/woerter.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/woerter-700x387.png" alt="Spektakuläre Topliste der verwendeten Wörter"></a></p>
<p>Spektakuläre Topliste der verwendeten Wörter</p>
<p>Was ich allerdings liefern kann, ist eine Liste der Fefe-Kunstwörter, wie z.B. &ldquo;<a href="https://blog.fefe.de/?ts=a27615a6">Notfall-Soforthilfe-Klopapier&rdquo;</a>. Das längste dieser Art ist &ldquo;<a href="https://blog.fefe.de/?ts=b293636b">Webforen-Besserwisser-Klugscheißer-Korinthenkacker-Sockenpuppen-Grabenkriegen&rdquo;</a>. Das folgende Diagramm zeigt die Top 33 der Fef&rsquo;schen Wortschöpfungen:</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik-700x368.png" alt="Fefes Wortschöpfungen Top 33"></a></p>
<p>Fefes Wortschöpfungen Top 33</p>
<p>Kommen wir zu den Verweisen auf externe Quellen. Der Spiegel (Online) gehört wie gesagt zu den favorisierten Quellen von Fefe. Ansonsten ist Fefe nicht wählerisch, was Quellen angeht. Die Auswahl ist immens. Interessant ist, wie z.B. <em>Twitter</em> seit 2009 immer öfter zu den verlinkten Quellen gehört. Auf <em>The Guardian</em> hingegen wurde von Fefe 2013 zum letzten Mal verwiesen. Auf sich selber verweist Fefe natürlich auch hin und wieder. Am häufigsten in 2008, mit abnemender Tendenz.</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/jahr-quellen-ab-50.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/jahr-quellen-ab-50-700x391.png" alt="Verwendete Quellen / Domains"></a></p>
<p>Verwendete Quellen / Domains</p>
<h2 id="fazit">Fazit</h2>
<p>Und was ist jetzt Fefes WLAN-Passwort? Wir wissen es nicht. Und wir werden es auch nicht erfahren, wenn wir seinen Blog noch drölf mal parsen. Vielleicht sind die zahlreichen zusammengesetzen Substantive als Indiz hilfreich? Egal.</p>
<p>Also gibt es kein Fazit, mit Ausnahme der Feststellung, dass es zeitliche Muster gibt, Fefe ein außerordentliche fleißiger Autor ist aber sonst, leider, die Tendenz der Nachrichtenanzahl in den letzten Jahren zurück gegangen ist.</p>
<h2 id="fehlerquellen-und-technische-hintergründe">Fehlerquellen und technische Hintergründe</h2>
<p>Auch wenn der HTML-Code sehr aufgeräumt ist, vor Fehlern ist auch Fefe nicht gefeit. So gibt es zum Beispiel 110 nicht bzw. falsch geschlossene <A>-Tags. Hier musste ich per Script stumpf ein schließendes </a> setzen, was die Auswertung der Quellen / Domains ein wenig, aber kaum merklich, verfälscht.</p>
<p>Auch bei den Wörtern musste ich etwas aufräumen, um so z.B. alle möglichen Nicht-Buchstaben entfernen. Danach musste ich die Liste noch ein wenig von Hand sortieren, un so z.B. ein paar verirrte URL zu entfernen.</p>
<p>Die verlinkten Quellen war recht einfach zu handhaben. Hier habe ich lediglich die Präfixe entfernt, wenn diese mit www und ggf. einer Ziffer beginnen. Trotzdem muss bei dieser Liste berücksichtigt werden, dass manche Quellen über mehrere Domains erreichbar sind. So verweist Fefe z.B. auf das Angebot der BBC mit zehn verschiedenen Varianten:</p>
<p><a href="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik-1.png"><img src="/2019/2019-11-05-fefes-blog-eine-analyse/images/grafik-1-700x341.png" alt="Varianten für den Verweis zur BBC"></a></p>
<p>Varianten für den Verweis zur BBC</p>
<p>Der Fefe-Timestamp ist eine Geschichte für sich. Alleine wäre ich vermutlich kaum auf die Idee gekommen, dass hinter der eindeutigen Id, mit der jeder Beitrag erreichbar ist, tatsächlich eine Zeitangabe steckt. <a href="https://www.netaction.de/datenvisualisierung-von-fefes-blogzeiten/">Meine Inspirationsvorlage</a> hat hier zum Glück sehr gute Vorarbeit geleistet und erklärt, wie sich der alphanumerische Wert in ein lesbares Datum umwandeln lässt. Es handelt sich bei dem Wert nämlich um einen Hexadezimalangabe, die zunächst in eine Dezimalziffer umgewandelt werden muss. Danach erfolgt eine bitweise XOR-Operation um einen bestimmten Schlüssel: <strong>0xFEFEC0DE</strong>. Das ergibt schließlich einen Unix-Zeitstempel, der sich in ein lesbares Datum umwandeln lässt.</p>
<p>Zuletzt noch ein Hinweis zu den Daten aus den Anfangszeiten, also März bis Juni 2005. Vermutlich hat Fefe diese nachträglich eingefügt, da dort der Zeitstempel jeweils auf 12 bis 13 Uhr zeigt. Diese Monate habe ich aus den Analysen mit den Tageszeiten ausgeschlossen.</p>
<p>Zuletzt noch ein Hinweis zu den verwendeten Tools:</p>
<p>Einerseits nutze ich für die Auswertung und Darstellung <a href="https://public.tableau.com/en-us/s/">Tableau Public</a>, dass es auch als kostenlose Variante gibt. Für die Wordcloud nutze ich <a href="http://www.wordle.net/">Wordle</a>. Wordle gab es eine zeitlang nur als WebApp, mittlerweile läuft Wordle aber auch als native OSX- oder Windows-Anwendung. Das Python-Script habe ich mit <a href="https://code.visualstudio.com/">Visual Studio Code</a> geschrieben, das im Begriff ist, Notepad++ als Allround-IDE abzulösen. Und mit Excel habe ich die Daten etwas bereinigt, das klappt damit immer noch fixer als mit Tableau.</p>
<h2 id="update">UPDATE</h2>
<p>Durch Zufall bin ich eben noch auf <a href="https://weltliteratur.net/Fefe-Research-Institute/">eine etwas tiefere Textanalyse</a> gestoßen, die auch sehr interessant ist.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Fefes Blog, Datenanalyse, Web Scraping, Python, Statistik</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Fefes Blog - Eine Analyse - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>data_analysis</dc:type>
      
      
    </item><item>
      <title>Fokussierter Drill-Down mit Tableau</title>
      <link>https://nickyreinert.de/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</guid>
      <description>In Tableau gibt es die eigentlich sehr nützliche Möglichkeit, Dimensionen beliebig zu kombinieren und in einer Hierarchie zusammenzufassen. Diese Funktion ist …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel beschreibt eine Methode zur Implementierung eines fokussierten Drill-Downs in Tableau, optimiert für große Datensätze mit hochkardinalen Dimensionen. Er erläutert, wie durch den Einsatz von berechneten Feldern, Parametern und Aktionen eine performantere und übersichtlichere Navigation durch Datenhierarchien realisiert werden kann, um die Einschränkungen der Standard-Hierarchiefunktion von Tableau zu umgehen.</p>
          
          
          <p><strong>Hauptthemen:</strong> Tableau, Datenvisualisierung, Business Intelligence, Datenanalyse, Drill-Down, Hierarchien, Performance Optimierung, Dashboard Design</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>In Tableau gibt es die eigentlich sehr nützliche Möglichkeit, Dimensionen beliebig zu kombinieren und in einer Hierarchie zusammenzufassen. Diese Funktion ist sehr intuitiv hat aber einen Haken: Wenn man bei großen Datenmengen und Dimensionen mit hoher Kardinalität einen Drill Down macht, werden die Abfragen nicht nur irrsinnig langsam, je tiefer man kommt. Die Übersicht geht auch komplett verloren.</p>
<p>Um das zu demonstrieren habe ich eine Datenquelle mit 1 Mio. Zeilen und 10 Dimensionen erzeugt. Der Drill-Down auf Ebene 8 dauert hier auf normaler Hardware über 20 Sekunden und das Ergebnis ist&hellip; nun ja: Für eine schnellen Überblick kaum zu gebrauchen:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-700x380.png" alt=" Drill-Down auf die 8. Ebene einer Hierarchie mit hoher Kardinalität: Übersicht ade "></a></p>
<p>Drill-Down auf die 8. Ebene einer Hierarchie mit hoher Kardinalität: Übersicht ade</p>
<p>Im Folgenden beschreibe ich einen Weg, wie man einen fokussierten Drill-Down ermöglicht, der weitaus performanter und vor allem übersichtlicher ist. Man könnte zwar die eingebaute Quick-Filter-Funktion nutzen, das ist dann aber relativ umständlich, da man je Ebene mindestens zwei Klicks benötigt und vor allem immer noch nicht übersichtlich:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-2.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-2.png" alt="Die Quick-Filter-Funktion bei mehreren Dimensionen in einer Hierarchie"></a></p>
<p>Drill-Down bei mehreren Dimensionen einer Hierarchie unter Verwendung des Quick-Filters: Unpraktisch</p>
<p>Bevor ich die Schritte im einzelnen erkläre, möchte ich zeigen, was das Ziel der ganzen Übung sein soll:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-1.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-1-700x526.png" alt="Schematische Darstellung der Logik"></a></p>
<p>Schematische Darstellung der Logik</p>
<p>Die Namen der einzelnen Dimensonen werden für jedes Level zusammengefasst. Jede Dimension in der Hierarchie wird außerdem durch einen <strong>Index</strong> repräsentiert, der die Tiefe wiederspiegelt. Dadurch entsteht ein Pfad nach dem Schema <strong>nameA.nameB.NameC.nameD.nameX</strong> usw. Diese Pfad soll als Filter dienen. So kann ich mit einem einzigen Filter mehrere Dimensionen abdecken.</p>
<p>Ein Klick auf eine Zeile im Arbeitsblatt &ldquo;<strong>main</strong>&rdquo; soll dafür sorgen, dass der Index für die aktuelle Ebene um 1 hochgezählt wird - man also tiefer in den Baum hineingeht. Außerdem wird der Pfad für die entsprechende Ebene als Filter genutzt. Dadurch erhalte ich eine Ansicht, die einem kombinierten Filter gleicht, immer nur die Zeilen anzeigt, die ich beim Drill-Down ausgewählt habe. Klicke ich auf das zweite Arbeitsblatt, wird der Index heruntergezählt, also immer die nächsthöhere Ebene angezeigt. Außerdem wird bei dem zusammengesetzten Pfad das letzte Element entfernt, wodurch sich gleichzeitig die Filterbedingung ändert.<br>
Um diese Mechanik umzusetzen, benötigen wir also zwei Felder, eines enthält immer den aktuellen <strong>Index + 1</strong> für die nächste Ebene und <strong>Index - 1</strong> für die nächst höhere Ebene. Außerdem gibt es ein Feld, dass den aktuellen Pfad enthält, also z.B. <strong>nameA.nameB.nameC</strong>. Ein weiteres Feld enthält den nächsten Pfad, je nachdem wo der Nutzer klickt, also z.B. <strong>nameA.nameB.nameC.nameD</strong> und ein Feld enthält den Pfad für die zuvor ausgewählte Ebene, also z.B. <strong>nameA.nameB</strong>. Das ganze wird mit ein paar Aktionen und Filtern so miteinander kombiniert, dass der Benutzer interaktiv durch die Hierarchie reisen kann.<br>
Klar soweit? Los geht&rsquo;s:</p>
<p>Du benötigst zwei Arbeitsblätter und ein Dashboard, das die beiden Arbeitsbelätter beherbergt. Als Namen wähle ich &ldquo;<strong>main</strong>&rdquo; für die eigentliche Darstellung der KPIs und &ldquo;<strong>go back</strong>&rdquo; für die Navigation. Wir beginnen mit der Erstellung der beiden Parameter.<br>
Der Parameter &ldquo;<strong>current level index</strong>&rdquo; enthält, entsprechend der Anzahl der Dimensionen, die Ziffern 1 bis 10. Der Parameter &ldquo;<strong>level name concatenated</strong>&rdquo; dient später als Filter-Element und enthält den oben erwähnten Pfad:</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-breadcrumb-navigation-in-tableau/parameter_level_name_concatenated.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/parameter_level_name_concatenated.png" alt="Parameter level name concatenated"></a></p>
<p>Parameter level name concatenated</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-breadcrumb-navigation-in-tableau/parameter_current_level_index.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/parameter_current_level_index.png" alt="Parameter current level index"></a></p>
<p>Parameter current level index</p>
</li>
</ul>
<p>Nun erstellst du einen Filter, der sich auf den Parameter &ldquo;<strong>level name concatenated</strong>&rdquo; bezieht. Das vereinfacht den weiteren Prozess ungemein, da du kein Filter-Aktion anlegen musst, sondern Tableau den Filter immer dynamisch anpasst. Dazu legst du einen Filter für das Arbeitsblatt &ldquo;<strong>main</strong>&rdquo; an und wählst im Reiter &ldquo;Bedingung&rdquo; die Option &ldquo;nach Formel&rdquo; aus. Als Formel verwendest du diese:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[level name concatenated] = [current level filter]
</span></span></code></pre></div><p>So sollte der Filter dann in Tableau aussehen:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-4.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-4.png" alt="Filter mit einer Formel als Bedingung"></a></p>
<p>Filter mit einer Formel als Bedingung</p>
<p>Weiter geht es mit ein paar berechneten Feldern:</p>
<p>Das erste Feld nennt sich &ldquo;<strong>current level</strong>&rdquo;, dass den Parameter &ldquo;<strong>current level index</strong>&rdquo; nutzt um die entsprechende Dimension darzustellen. Die Formel dazu ist simpel:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1 THEN [Dimension1] 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 THEN [Dimension2]
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 THEN [Dimension3]
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 THEN [Dimension4] 
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 THEN [Dimension5] 
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 THEN [Dimension6] 
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 THEN [Dimension7] 
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 THEN [Dimension8] 
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 THEN [Dimension9] 
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 THEN [Dimension10] 
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Als nächstes gibt es zwei Felder, die auch mit einer einfachen Formel auskommen: &ldquo;<strong>previous level index</strong>&rdquo; und &ldquo;<strong>next level index</strong>&rdquo;. Previous level index dient dazu, den Index herunter zu zählen. Hier könnte man sicherlich eine eleganter Lösung nutzen, um das Prinzip zu verdeutlichen, habe ich das mit einer einfachen Wenn-Dann-Bedingung realisiert:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF [current level index] = 1 then 1
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 then 1
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 then 2
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 then 3
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 then 4
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 then 5
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 then 6
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 then 7
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 then 8
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 then 9
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Bei &ldquo;<strong>next level index</strong>&ldquo;läuft es genau anders rum:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1 THEN 2
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 THEN 3
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 THEN 4
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 THEN 5
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 THEN 6
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 THEN 7
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 THEN 8
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 THEN 9
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 THEN 10
</span></span><span class="line"><span class="ln">10</span><span class="cl">END
</span></span></code></pre></div><p>Weiter geht es mit den Pfaden, die wir für den Filter benötigen. Jetzt wird es etwas komplizierter: Das Feld &ldquo;<strong>current level concat</strong>&rdquo; fasst zunächst, entsprechen der aktuell ausgewählten Ebene, die Namen der vorherigen Ebenen zusammen. So entsteht der Pfad:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1  THEN [Dimension1] 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2  THEN [Dimension1] + &#34;.&#34; + [Dimension2]
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3]
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4]
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6]
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7]
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8]
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8] + &#34;.&#34; + [Dimension9]
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8] + &#34;.&#34; + [Dimension9] + &#34;.&#34; + [Dimension10]
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Das Feld &ldquo;<strong>current level filter</strong>&rdquo; ist ähnlich aufgebaut. Da der Filter sich aber strenggenommen auf die vorherige Eben bezieht, sieht der Pfad etwas anders aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1 THEN &#34;.&#34; 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 THEN [Dimension1] 
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 THEN [Dimension1] + &#34;.&#34; + [Dimension2]
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3]
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5]
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6]
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7]
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8]
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8] + &#34;.&#34; + [Dimension9]
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Beim Feld &ldquo;<strong>previous level concat</strong>&rdquo; wird es schon etwas schwieriger, da ich hier immer das letzte Element des Pfades entfernen muss. Das erinnert ein wenig an eine aus dem Ruder gelaufene Excel-Funktion, ist leider aber - nach meinem aktuellen Kenntnisstand - nicht einfacher zu realisieren, da die Behandlung von Strings in Tableau eben eingeschränkt sit. Sachdienliche Hinweise werden dankbar entgegen genommen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF [current level index] = 1 THEN 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    &#34;.&#34;
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 2 THEN
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    &#34;.&#34;
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 3 THEN
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, 1) - 1)
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 4 THEN
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) - 1)
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 5 THEN
</span></span><span class="line"><span class="ln">10</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">11</span><span class="cl">ELSEIF [current level index] = 6 THEN
</span></span><span class="line"><span class="ln">12</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1)) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">13</span><span class="cl">ELSEIF [current level index] = 7 THEN
</span></span><span class="line"><span class="ln">14</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">15</span><span class="cl">ELSEIF [current level index] = 8 THEN
</span></span><span class="line"><span class="ln">16</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">17</span><span class="cl">ELSEIF [current level index] = 9 THEN
</span></span><span class="line"><span class="ln">18</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">19</span><span class="cl">ELSEIF [current level index] = 10 THEN
</span></span><span class="line"><span class="ln">20</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">21</span><span class="cl">END
</span></span></code></pre></div><p>Das gröbste ist somit erledigt, du solltest nun die folgenden Felder und Parameter haben. Achte darauf, dass du die Felder als Dimension nutzt:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-3.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-3.png" alt="Alle berechneten Felder und Parameter auf einen Blick"></a></p>
<p>Alle berechneten Felder und Parameter auf einen Blick</p>
<p>Nun ziehst du die Felder &ldquo;<strong>next level index</strong>&rdquo;, &ldquo;<strong>current level</strong>&rdquo; und &ldquo;<strong>current level concat</strong>&rdquo; auf das Arbeitsblatt &ldquo;<strong>main</strong>&rdquo;, die Felder &ldquo;<strong>previous level index</strong>&rdquo; und &ldquo;<strong>previous level concat</strong>&rdquo; gehören auf das Arbeitsblatt &ldquo;<strong>go back</strong>&rdquo;.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-5-700x172.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-5-700x172.png" alt="Arbeitsblatt main mit allen nötigen Feldern"></a></p>
<p>Arbeitsblatt main mit allen nötigen Feldern</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-6.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-6.png" alt="Arbeitsblatt “go back” mit allen nötigen Feldern"></a></p>
<p>Arbeitsblatt &ldquo;go back&rdquo; mit allen nötigen Feldern</p>
</li>
</ul>
<h3 id="das-dashboard-mit-leben-füllen">Das Dashboard mit Leben füllen</h3>
<p>Abschließend geht es an die Aktionen um das Dashboard mit Leben zu füllen. Insgesamt benötigen wir vier Aktionen zur Änderung eines Parameters. Die ersten beiden Aktionen sorgen dafür, dass der aktuelle Index entsprechen hoch- und runtergezählt wird. Die Aktion &ldquo;<strong>increase level index</strong>&rdquo; nutzt als Quellblatt &ldquo;<strong>main</strong>&rdquo; sowie das Feld &ldquo;<strong>next level index</strong>&rdquo; und verweist auf den Parameter &ldquo;<strong>current level index</strong>&rdquo;. Und vice versa die Aktion &ldquo;<strong>decrease level index</strong>&rdquo; mit dem Quellblatt &ldquo;<strong>go back</strong>&rdquo;, dem Feld &ldquo;<strong>previous level index&rdquo;</strong> und ebenfalls dem Ziel-Parameter &ldquo;<strong>current level index</strong>&rdquo;:</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-7.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-7.png" alt="Aktion zur Parameter-Steuerng: Den Level-Index um 1 erhöhen…"></a></p>
<p>Aktion zur Parameter-Steuerng: Den Level-Index um 1 erhöhen&hellip;</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-8.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-8.png" alt="…und um eins verringern"></a></p>
<p>&hellip;und um eins verringern</p>
</li>
</ul>
<p>Danach benötigen wir eine Aktion, um den Filter-Parameter &ldquo;<strong>level name concatenated</strong>&rdquo; zu setzen: Dieser erhält den Wert aus dem berechneten Feld &ldquo;<strong>current level concat</strong>&rdquo;, wenn man auf das Arbeitsblatt &ldquo;<strong>main</strong>&rdquo; klickt. Und beim Arbeitsblatt &ldquo;<strong>go back</strong>&rdquo; ist es wieder genau andersrum: Hier kommt der Wert aus dem Feld &ldquo;<strong>previous level concat</strong>&rdquo;:</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-9.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-9.png" alt="Die Aktion um den Filter für die nächsttiefere Eben zu setzen.."></a></p>
<p>Die Aktion um den Filter für die nächsttiefere Eben zu setzen..</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-10.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-10.png" alt="… und für die darüberliegende Ebene"></a></p>
<p>&hellip; und für die darüberliegende Ebene</p>
</li>
</ul>
<h3 id="et-voila">Et voila</h3>
<p>Das war es. Du kannst nun das Dashboard nutzen, um beliebig durch deine Dimensionen zu klicken. Hier und da lässt sich das ganze sicherlich noch etwas optimieren. Zuerst kannst du z.B. die &ldquo;Steuerfelder&rdquo; ausblenden, um nur die relevanten Informationen zu präsentieren (in der Regel über rechte Maustaste &ldquo;<strong>Kopfzeile ausblenden</strong>&rdquo;). Außerdem kann man die Formeln optimieren und z.B. verhindern, dass der Nutzer tiefer klickt, als die verwendete Anzahl von Dimensionen. Das sind aber nur kleinere Baustellen. Das wichtigste Ziel sollte erreicht sein: Die Darstellung ist weitaus übersichtlicher und vor allem kann man nun in Sekundenbruchteilen bis zur letzten Eben navigieren.<br>
Natürlich kann man das ganze auch mit einem Chart kombinieren, was der Sache noch etwas mehr Glanz verleiht. Auf Tableau Public habe ich eine Dashboard veröffentlicht, dass das ganze in Aktion zeigt. Aus Gründen ist die Datenquelle dort allerdings nur 100.000 Zeilen groß:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-10.png">https://public.tableau.com/profile/nr1871#!/vizhome/focussedDrillDown/dashboard</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Tableau, Datenvisualisierung, Business Intelligence, Datenanalyse, Tutorial</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>anleitungen</category>
      
      <category>development</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Fokussierter Drill-Down mit Tableau - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tutorial</dc:type>
      
      
    </item>
  </channel>
</rss>