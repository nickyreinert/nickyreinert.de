<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Performance-Optimierung auf Nicky Reinert</title>
    <link>https://nickyreinert.de/topics/performance-optimierung/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://nickyreinert.de/topics/performance-optimierung/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Leitfaden für ein sicheres und schnelles WordPress-Setup</title>
      <link>https://nickyreinert.de/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/</guid>
      <description>Das Thema Geschwindigkeit liegt bei uns allen ganz weit oben auf der Agenda. Oft allerdings nur passiv, wenn man ungeduldig auf der Tastatur trommelt und auf …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Ein umfassender Leitfaden mit zahlreichen Code-Snippets zur Optimierung einer WordPress-Installation in Bezug auf Geschwindigkeit und Sicherheit. Der Artikel behandelt Themen wie das Deaktivieren von Emojis und Gravatar, serverseitige Komprimierung, das Verschieben von Skripten, das Absichern der XML-RPC- und REST-APIs sowie das Aufräumen des HTML-Headers durch Änderungen in &#39;functions.php&#39;, &#39;.htaccess&#39; und &#39;wp-config.php&#39;.</p>
          
          
          <p><strong>Hauptthemen:</strong> WordPress, Performance-Optimierung, Web-Sicherheit, PHP, Server-Konfiguration, Frontend-Optimierung</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>Das Thema Geschwindigkeit liegt bei uns allen ganz weit oben auf der Agenda. Oft allerdings nur passiv, wenn man ungeduldig auf der Tastatur trommelt und auf das Laden einer Internetseite wartet. Aktiv fehlt oft der richtige Impuls. Was kann man noch tun, außer die Bilder kleinzuhalten, um WordPress zu beschleunigen?</p>
<p>Hier möchte ich dir ein paar einfache Tricks vorstellen, um die Geschwindigkeit deiner WordPress-Seite zu optimieren. Und da neben der Geschwindigkeit die Sicherheit ein weiteres beliebtes Thema ist, werde ich auch dazu ein paar kleine Kniffe mit großer Wirkung zeigen. Doch zunächst ein paar&hellip;</p>
<h2 id="grundsätze">Grundsätze</h2>
<p>Es gibt ein paar Prämissen, die du beim Thema <strong>Geschwindigkeit und Sicherheit</strong> berücksichtigen solltest:</p>
<ul>
<li><strong>Backups</strong> - Nuff said. Du wirst dein System niemals 100% absichern können. Umso wichtiger sind Backup.</li>
<li><strong>Plugin-Sparksamkeit</strong> - jedes zusätzliche Plugin ist nicht nur ein potentielles Sicherheitsrisiko, sondern lässt deine Seite auch unnötig anwachsen. Versuche so viele Funktionen wie möglich selber umzusetzen. Ein Child-Theme erlaubt dir in der <strong>functions.php</strong> nicht nur Anpassungen des Layouts sondern auch des Funktionsumfanges vorzunehmen.</li>
<li><strong>Updates</strong> - Halte WordPress, Plugins und Themes immer auf dem neuesten Stand. Verzichte möglichst auf Plugins und Themes, die lange nicht aktualisiert wurden.</li>
<li><strong>Page Builder</strong> - <a href="https://www.nickyreinert.de/wordpress-page-builder-pro-und-contra/">ich bin wahrlich kein Fan von Page-Buildern</a>, auch wenn es da draußen relativ performante Vertreter dieser Art gibt. Allerdings wohnt jedem Page-Builder in der Regel ein Problem inne: Sie kommen mit einer Menge von Funktionen, die du oft nicht benötigst, die aber trotzdem Ressourcen verbrauchen.</li>
</ul>
<p>Nun, da das geklärt ist und ich meinen Unmut über Page-Builder mal wieder unterbringen konnte: Was kannst du aktiv tun, um die <strong>Geschwindigkeit und Sicherheit</strong> zu optimieren? Im Folgenden werden wir Änderungen an drei Dateien vornehmen:</p>
<ul>
<li>functions.php (deines Child-Themes)</li>
<li>.htaccess-Datei</li>
<li>wp-config.php</li>
</ul>
<p>Du findest alle drei Dateien auf <a href="https://github.com/nickyreinert/wordPressSettings/tree/master">github.com</a>.</p>
<h2 id="warnung">Warnung</h2>
<p>Da es sich mitunter um sehr tiefe Eingriffe in die WordPress-Mechanik handelt, folgender wichtiger Hinweis:</p>
<p>Nehme die hier beschriebenen Änderungen niemals an einer Live-Installation vor; teste sie in einer geschützten Umgebung und übertrage sie dann sorgfältig und ggf. nacheinander in das Live-System!</p>
<p>Lege außerdem immer ein <strong>Backup</strong> von den Dateien an, die du im Laufe dieses Artikels ändern wirst.</p>
<p>Diese Anleitung ist ein <strong>Leitfaden</strong>, den du nicht ungelesen übernehmen solltest. Passe die Änderungen an die Anforderungen deines Projektes an. Klar soweit? Dann los:</p>
<h2 id="nutze-keine-standard-einstellungen">Nutze keine Standard-Einstellungen</h2>
<p>Eigentlich gehört diese Weisheit zu den Prämissen, ich will sie hier trotzem etwas ausführlicher erklären. Dieser Punkt gehört für mich zum Konzept &ldquo;<strong>Secruity through obscurity</strong>&rdquo;. Viele vermeintliche Angriffe auf deine Seite sind nur das Grundrauschen: Automatisierte Scripte, die zahlreiche Webseiten nach bekannten Sicherheitslücken abklopfen. Lass uns das &ldquo;<strong>passive Angriffe</strong>&rdquo; nennen. Du kannst das geduldig über dich ergehen lassen oder schon jetzt dafür sorgen, dass deine Seite gar nicht erst im Rampenlicht steht. Wenn bei den passiven Angriffen keine Lücken erkannt werden, zieht der Bot weiter und widmet sich <strong>schwächeren Seiten</strong>. Das Credo lautet &ldquo;Kosten-Nutzen-Analyse&rdquo;. Warum mit einem unbekannten Ziel beschäftigen, wenn da draußen genug unsichere WordPress-Installationen darauf warten, <em>gehackt</em> zu werden? Also:</p>
<ul>
<li>Nutze als <strong>Benutzername</strong> für den Administrator-Account nicht den Standardwert &ldquo;admin&rdquo;. Erzeuge einen neuen Admin-Nutzer (z.B. MyLittlePony) mit allen Admin-Rechten und entferne den originalen Admin-Nutzer</li>
<li>Nutze ein &ldquo;kryptisches&rdquo; <strong>Tabellen-Prefix</strong> (z.B. x02349d_), um das Auffinden der WordPress-Tabellen in der Datenbank zu erschweren. Bei Angriffen über <strong>SQL-Injection</strong> wird oft vom Standard-Prefix (wp_) ausgegangen.</li>
<li>Ach ja, und nein: Verschiebe nicht die <strong>wp-admin</strong>-URL - das erzeugt mehr Unruhe im System, als dass es nutzt. Hier reicht der zusätzliche Schutz mit <strong>HTTP Basic Auth</strong>.</li>
<li>Setze korrekte Dateirechte ein, um zu vermeiden, dass jemand deine PHP-Dateien ändern und Schadcode einfügen kann (das ist ein etwas größeres Thema auf Serverseite, <a href="https://binary-butterfly.de/artikel/dateirechte-wie-stelle-ich-das-bei-meinem-hoster-ein/">was hier ganz gut beschrieben ist</a>).</li>
<li>Kein Standard-Passwort. Ok. Muss ich das wirklich erwähnen? ;)</li>
</ul>
<h2 id="emoticons-und-emojis">Emoticons und Emojis</h2>
<p>Emojis sind zwar unstrittig ein fester Bestandteil der modernen Kommunikation, was nicht heißt, dass man sie überall nutzen muss. In WordPress gehören sie leider zum Standard, was die Ladezeit verringert. Um sich der kleinen Kecker zu entledigen, ist eine ganze Menge PHP-Code (<a href="https://kinsta.com/de/wissensdatenbank/deaktivierst-emojis-wordpress/">lose basierend auf diesem Beitrag</a>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">function disable_emojis() {
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;print_emoji_detection_script&#39;, 7 );
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    remove_action( &#39;admin_print_scripts&#39;, &#39;print_emoji_detection_script&#39; );
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    remove_action( &#39;wp_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    remove_action( &#39;admin_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    remove_filter( &#39;the_content_feed&#39;, &#39;wp_staticize_emoji&#39; );
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    remove_filter( &#39;comment_text_rss&#39;, &#39;wp_staticize_emoji&#39; );
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    remove_filter( &#39;wp_mail&#39;, &#39;wp_staticize_emoji_for_email&#39; );
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    add_filter( &#39;tiny_mce_plugins&#39;, &#39;disable_emojis_tinymce&#39; );
</span></span><span class="line"><span class="ln">10</span><span class="cl">    add_filter( &#39;wp_resource_hints&#39;, &#39;disable_emojis_remove_dns_prefetch&#39;, 10, 2 );
</span></span><span class="line"><span class="ln">11</span><span class="cl">}
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">function disable_emojis_tinymce( $plugins ) {
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">    if ( is_array( $plugins ) ) {
</span></span><span class="line"><span class="ln">16</span><span class="cl">        
</span></span><span class="line"><span class="ln">17</span><span class="cl">        return array_diff( $plugins, array( &#39;wpemoji&#39; ) );
</span></span><span class="line"><span class="ln">18</span><span class="cl">
</span></span><span class="line"><span class="ln">19</span><span class="cl">    } else {
</span></span><span class="line"><span class="ln">20</span><span class="cl">        
</span></span><span class="line"><span class="ln">21</span><span class="cl">        return array();
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">    }
</span></span><span class="line"><span class="ln">24</span><span class="cl">}
</span></span><span class="line"><span class="ln">25</span><span class="cl"> 
</span></span><span class="line"><span class="ln">26</span><span class="cl">function disable_emojis_remove_dns_prefetch( $urls, $relation_type ) {
</span></span><span class="line"><span class="ln">27</span><span class="cl">    if ( &#39;dns-prefetch&#39; == $relation_type ) {
</span></span><span class="line"><span class="ln">28</span><span class="cl">    
</span></span><span class="line"><span class="ln">29</span><span class="cl">        /** This filter is documented in wp-includes/formatting.php */
</span></span><span class="line"><span class="ln">30</span><span class="cl">        $emoji_svg_url = apply_filters( &#39;emoji_svg_url&#39;, &#39;https://s.w.org/images/core/emoji/2/svg/&#39; );
</span></span><span class="line"><span class="ln">31</span><span class="cl">
</span></span><span class="line"><span class="ln">32</span><span class="cl">        $urls = array_diff( $urls, array( $emoji_svg_url ) );
</span></span><span class="line"><span class="ln">33</span><span class="cl">    }
</span></span><span class="line"><span class="ln">34</span><span class="cl">
</span></span><span class="line"><span class="ln">35</span><span class="cl">    return $urls;
</span></span><span class="line"><span class="ln">36</span><span class="cl">}    
</span></span><span class="line"><span class="ln">37</span><span class="cl">
</span></span><span class="line"><span class="ln">38</span><span class="cl">function disable_emojicons_tinymce( $plugins ) {
</span></span><span class="line"><span class="ln">39</span><span class="cl">
</span></span><span class="line"><span class="ln">40</span><span class="cl">    if ( is_array( $plugins ) ) {
</span></span><span class="line"><span class="ln">41</span><span class="cl">    
</span></span><span class="line"><span class="ln">42</span><span class="cl">        return array_diff( $plugins, array( &#39;wpemoji&#39; ) );
</span></span><span class="line"><span class="ln">43</span><span class="cl">
</span></span><span class="line"><span class="ln">44</span><span class="cl">    } else {
</span></span><span class="line"><span class="ln">45</span><span class="cl">
</span></span><span class="line"><span class="ln">46</span><span class="cl">      return array();
</span></span><span class="line"><span class="ln">47</span><span class="cl">
</span></span><span class="line"><span class="ln">48</span><span class="cl">    }
</span></span><span class="line"><span class="ln">49</span><span class="cl">}
</span></span><span class="line"><span class="ln">50</span><span class="cl">
</span></span><span class="line"><span class="ln">51</span><span class="cl">function disable_wp_emojicons() {
</span></span><span class="line"><span class="ln">52</span><span class="cl">
</span></span><span class="line"><span class="ln">53</span><span class="cl">    remove_action( &#39;admin_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln">54</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;print_emoji_detection_script&#39;, 7 );
</span></span><span class="line"><span class="ln">55</span><span class="cl">    remove_action( &#39;admin_print_scripts&#39;, &#39;print_emoji_detection_script&#39; );
</span></span><span class="line"><span class="ln">56</span><span class="cl">    remove_action( &#39;wp_print_styles&#39;, &#39;print_emoji_styles&#39; );
</span></span><span class="line"><span class="ln">57</span><span class="cl">    remove_filter( &#39;wp_mail&#39;, &#39;wp_staticize_emoji_for_email&#39; );
</span></span><span class="line"><span class="ln">58</span><span class="cl">    remove_filter( &#39;the_content_feed&#39;, &#39;wp_staticize_emoji&#39; );
</span></span><span class="line"><span class="ln">59</span><span class="cl">    remove_filter( &#39;comment_text_rss&#39;, &#39;wp_staticize_emoji&#39; );
</span></span></code></pre></div><p>Hier passiert eine ganze Menge, weil die Emojis relativ breit implementiert wurden. Die einfachste Erklärung ist: Wir entfernen alle möglichen Verweise auf Emojis. Du musst die Trigger allerdings noch aktivieren indem du sie folgendermaßen aufrufst:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_filter( &#39;tiny_mce_plugins&#39;, &#39;disable_emojicons_tinymce&#39;);}
</span></span><span class="line"><span class="ln">2</span><span class="cl">add_action( &#39;init&#39;, &#39;disable_emojis&#39; );
</span></span><span class="line"><span class="ln">3</span><span class="cl">add_filter( &#39;emoji_svg_url&#39;, &#39;__return_false&#39; );
</span></span><span class="line"><span class="ln">4</span><span class="cl">add_action( &#39;init&#39;, &#39;disable_wp_emojicons&#39; );
</span></span></code></pre></div><h2 id="gravatar-deaktivieren">Gravatar deaktivieren</h2>
<p>Du kannnst die Nutzung der Gravatare auch in den Einstellungen deaktivieren. Ich bevorzuge aber die Variante in der functions.php, da man sich so ein kleines Boilerplate erstellen kann. So deaktivierst du die Gravatar-Funktion:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_filter( &#39;option_show_avatars&#39;, &#39;__return_false&#39; );
</span></span></code></pre></div><p>Wie du siehst, spart uns das mindestens zwei Anfragen und ein paar Millisekunden ein:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-700x57.png" alt=""></p>
<h2 id="gzip-und-deflate">GZIP und Deflate</h2>
<p>Sehr naheliegend ist natürlich die Komprimierung von Dateien. Du nimmst diese Änderung in der .htaccess-Datei vor:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;IfModule mod_deflate.c&gt;
</span></span><span class="line"><span class="ln">2</span><span class="cl">    &lt;FilesMatch &#34;.*\.(html|php|css|js|xml)$&#34;&gt;
</span></span><span class="line"><span class="ln">3</span><span class="cl">        SetOutputFilter DEFLATE
</span></span><span class="line"><span class="ln">4</span><span class="cl">    &lt;/FilesMatch&gt;
</span></span><span class="line"><span class="ln">5</span><span class="cl">    AddOutputFilterByType DEFLATE application/rss+xml
</span></span><span class="line"><span class="ln">6</span><span class="cl">    AddOutputFilterByType DEFLATE application/xml application/xhtml+xml
</span></span><span class="line"><span class="ln">7</span><span class="cl">    AddOutputFilterByType DEFLATE application/javascript application/x-javascript
</span></span><span class="line"><span class="ln">8</span><span class="cl">&lt;/IfModule&gt;
</span></span></code></pre></div><p>Achtung: Du solltest deine Seite genau beobachten. Die Aktivierung von GZIP führt bei sehr kleinen Dateien nicht zu einem Größenvorteil, kann sich aber negativ auf die Antwortzeit des Servers auswirken, da die kleinen Dateien ja trotzdem einmal &ldquo;angefasst&rdquo; werden.</p>
<h2 id="cron-job-deaktivieren">Cron-Job deaktivieren</h2>
<p>Bei jedem Aufruf der Seite wird ein internes Cron-Job-Script ausgeführt. Das ist vor allem für das Suchen nach Updates wichtig. Wenn dein Hoster Cron-Jobs anbietet, ist das natürlich unnötig und verlangsamt jeden Aufruf deiner Seite. Du kannst die Cron-Job-Aufrufe in der wp-config.php folgendermaßen deaktivieren:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;DISABLE_WP_CRON&#39;, true);
</span></span></code></pre></div><p>Danach musst diese Anfrage aber trotzdem irgendwie ausführen. Das machst du im Backend deines Hosters, bei <strong>all-inkl z</strong>.B. im KAS unter Tools:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-700x125.png" alt=""></p>
<p>Als Intervall genügt hier eigentlich stündlich.</p>
<h2 id="scripte-im-footer-laden">Scripte im Footer laden</h2>
<p>In der Regel müssen JavaScript-Dateien nicht sofort zur Verfügung stehen, da sie z.B: Benutzerinteraktion ermöglichen bzw. darauf reagieren. Trotzdem können Sie den Aufbau der Seite verzögern, wenn sie ganz am Anfang oder in der Mitte eingebunden werden.</p>
<p>Aus dem Grund sollte man die Scripte ganz am Ende einer Seite auflisten, die nicht für den Seitenaufbau direkt benötigt werden. Die grobe Methode funktioniert folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_action(&#39;after_setup_theme&#39;, &#39;footer_enqueue_scripts&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">function footer_enqueue_scripts() {
</span></span><span class="line"><span class="ln">3</span><span class="cl">    remove_action(&#39;wp_head&#39;, &#39;wp_print_scripts&#39;);
</span></span><span class="line"><span class="ln">4</span><span class="cl">    remove_action(&#39;wp_head&#39;, &#39;wp_print_head_scripts&#39;, 9);
</span></span><span class="line"><span class="ln">5</span><span class="cl">    remove_action(&#39;wp_head&#39;, &#39;wp_enqueue_scripts&#39;, 1);
</span></span><span class="line"><span class="ln">6</span><span class="cl">    add_action(&#39;wp_footer&#39;, &#39;wp_print_scripts&#39;, 5);
</span></span><span class="line"><span class="ln">7</span><span class="cl">    add_action(&#39;wp_footer&#39;, &#39;wp_print_head_scripts&#39;, 5);
</span></span><span class="line"><span class="ln">8</span><span class="cl">    add_action(&#39;wp_footer&#39;, &#39;wp_enqueue_scripts&#39;, 5);
</span></span><span class="line"><span class="ln">9</span><span class="cl">}
</span></span></code></pre></div><p>Nachdem du diese Zeilen übernommen hast, solltest du deine Seite einmal z.B. im Inkognito-Modus, ohne Cache, neu laden. Flackert die Seite in der ersten Millisekunden auffällig, also wird für einen kurzen Augenblick der fast roh anmutende Inhalt der Seite und dann das Layout angezeigt, kommentiere in der Callback-Funktion die beiden Zeilen aus, die <strong>wp_enqueue_scripts</strong> in den Footer verlagern.</p>
<h2 id="javascript-ausführung-verzögern">JavaScript Ausführung verzögern</h2>
<p>Die etwas elegantere Methoden nennen sich &ldquo;<strong>defer</strong>&rdquo; und &ldquo;<strong>async</strong>&rdquo;. Mit defer teilst du dem Browser mit, dass die JavaScript-Datien im Hintergrund geladen und erst ausgeführt werden, wenn die eigentlichen Inhalte fertig sind.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">add_filter</span><span class="p">(</span> <span class="s1">&#39;script_loader_tag&#39;</span><span class="p">,</span> <span class="s1">&#39;defer_parsing_of_js&#39;</span><span class="p">,</span> <span class="mi">10</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">function</span> <span class="n">defer_parsing_of_js</span><span class="p">(</span> <span class="o">$</span><span class="n">url</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="k">if</span> <span class="p">(</span> <span class="n">is_user_logged_in</span><span class="p">()</span> <span class="p">)</span> <span class="k">return</span> <span class="o">$</span><span class="n">url</span><span class="p">;</span> <span class="o">//</span><span class="n">don</span><span class="s1">&#39;t break WP Admin</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="k">if</span> <span class="p">(</span> <span class="n">strpos</span><span class="p">(</span> <span class="o">$</span><span class="n">url</span><span class="p">,</span> <span class="s1">&#39;.js&#39;</span> <span class="p">)</span> <span class="o">===</span> <span class="n">FALSE</span><span class="p">)</span> <span class="k">return</span> <span class="o">$</span><span class="n">url</span><span class="p">;</span> <span class="o">//</span> <span class="n">only</span> <span class="n">process</span> <span class="n">JavaScript</span> <span class="n">files</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="k">if</span> <span class="p">(</span> <span class="n">strpos</span><span class="p">(</span> <span class="o">$</span><span class="n">url</span><span class="p">,</span> <span class="s1">&#39;jquery.js&#39;</span> <span class="p">)</span> <span class="p">)</span> <span class="k">return</span> <span class="o">$</span><span class="n">url</span><span class="p">;</span>  <span class="o">//</span> <span class="n">skip</span> <span class="n">JQuery</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="k">return</span> <span class="n">str_replace</span><span class="p">(</span> <span class="s1">&#39; src&#39;</span><span class="p">,</span> <span class="s1">&#39; defer src&#39;</span><span class="p">,</span> <span class="o">$</span><span class="n">url</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Der defer-Flag macht nur bei Scripten Sinn, die mit <strong>src</strong> eingebunden werden. Inline-Scripte werden immer sofort gelesen und geparsed. Daneben gibt es noch async. Mit async wird die Datei ebenfalls parallel geladen und sofort ausgeführt, wenn die Datei vollständig ist. Das macht vor allem bei Tracking-Scripten Sinn, die keinen Bezug zum inhaltlichen Aufbau haben.</p>
<h2 id="versionsinfos-entfernen">Versionsinfos entfernen</h2>
<p>Style- und Script-Dateien werden oft mit einem Anhang übermittelt, z.B. <strong>style.css?ver=123</strong>. Das macht Sinn um Änderungen nachzuverfolgen, hat aber auch einen entscheidenen Nachteil: Damit werden Cache-Mechanismen umgangen, weil der Cache denkt, es handelt sich um eine dynamische Ressource. Aus dem Grund solltest du die Versions-Infos komplett deaktivieren. Achte beim Arbeiten an der Webseite einfach daran, sämtliche Caches zu deaktivieren.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">add_filter</span><span class="p">(</span> <span class="s1">&#39;script_loader_src&#39;</span><span class="p">,</span> <span class="s1">&#39;remove_version_parameter&#39;</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">add_filter</span><span class="p">(</span> <span class="s1">&#39;style_loader_src&#39;</span><span class="p">,</span> <span class="s1">&#39;remove_version_parameter&#39;</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="n">function</span> <span class="n">remove_version_parameter</span><span class="p">(</span><span class="o">$</span><span class="n">src</span><span class="p">){</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="o">//</span> <span class="n">Check</span> <span class="k">if</span> <span class="n">version</span> <span class="n">parameter</span> <span class="n">exist</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="o">$</span><span class="n">parts</span> <span class="o">=</span> <span class="n">explode</span><span class="p">(</span> <span class="s1">&#39;?ver&#39;</span><span class="p">,</span> <span class="o">$</span><span class="n">src</span> <span class="p">);</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="o">//</span> <span class="k">return</span> <span class="n">without</span> <span class="n">version</span> <span class="n">parameter</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="k">return</span> <span class="o">$</span><span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="google-fonts-deaktivieren">Google Fonts deaktivieren</h2>
<p>Die Einbindung der Fonts über Google ist bequem, birgt neben dem Performance-Nachteil aber unter Umständen auch ein Datenschutz problem. (Grundsätzlich solltest du versuchen, alle Ressourcen von deinem Server zu laden und auch auf CDN zu verzichten - <a href="https://binary-butterfly.de/artikel/warum-dir-ein-cdn-vermutlich-keinen-geschwindigkeitsvorteil-bringen-wird/">das bringt selten einen Vorteil</a>.)</p>
<p>Leider ist das Entfernen nicht ohne weiteres möglich. Du musst erst herausfinden, unter welchem Handler das Theme die Google Fonts einbindet (Eine Liste bekannter Themes und der verwendeten Font-Handler findest du hier.) Dazu durchsuchst du die functions.php nach z.B. Google. Für das Theme Rowling sieht das dann folgendermaßen aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">wp_register_style( &#39;rowling_google_fonts&#39;, &#39;//fonts.googleapis.com/css?family=Lato:400,700,900,400italic,700italic|Merriweather:700,900,400italic&#39; );
</span></span></code></pre></div><p>Der Handler lautet also &ldquo;<strong>rowling_google_fonts</strong>&rdquo;. Auf gehts:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">add_action( &#39;wp_print_styles&#39;, &#39;dequeue_google_fonts_style&#39; );
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">function dequeue_google_fonts_style() {
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">      wp_dequeue_style( &#39;rowling_style&#39; );
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl">}
</span></span></code></pre></div><p>Achte darauf, dass jetzt natürlich die Fallback-Schriftart aus dem CSS verwendet wird.</p>
<h2 id="die-beitrags-historie-verschlanken">Die Beitrags-Historie verschlanken</h2>
<p>Seit einiger Zeit gibt es in WordPress das ansich ganz nützliche Feature der Revisionen: Bei jeder Änderung und jeder Speicherung legt WordPress in der Datenbank eine Kopie der vorherigen Version des Beitrages an. Das ist praktisch. Aber auch grenzenlos.<br>
Zunächst solltest du die Anzahl der Revisionen pro Beitrag eingrenzen. Dazu setzt du in der wp-config.php folgenden Parameter:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">define(&#39;WP_POST_REVISIONS&#39;, 5);
</span></span></code></pre></div><p>Die Fünf beschreibt die Anzahl der erlaubten Revisionen. Du kannst die Zahl natürlich beliebig anpassen. Damit ist es aber noch nicht getan, du solltest die alten Revisionen natürlich noch aufräumen. Dazu kannst du dir das Plugin <a href="https://de.wordpress.org/plugins/wp-sweep/">WP Sweep installieren</a>. Du kannst nun ganz bequem alle Revisionen löschen:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-2-700x102.png" alt=""></p>
<p>Alle Revisionen mit WP Sweep löschen</p>
<h2 id="oembeds-deaktivieren">oEmbeds deaktivieren</h2>
<p>Hierbei handelt es sich um ein Feature, das WordPress seit Version 4.4 mitbringt, die sogenannten Embeds. Dir ist es vielleicht schon mal aufgefallen: Beim Einfügen von URL in den Beitrag, wird nicht die URL angezeigt, sondern eine Art Snippet mit zusätzlichne Informationen und sogar einer Vorschau. Das sieht schick aus, braucht aber vielleicht nicht jeder. Wenn du Embed also nicht benötigst, erspart dir das wieder ein paar Zeilen im HTML-Header und sogar eine zusätzliche JavaScript-Bibliothek:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-4-700x52.png" alt=""></p>
<p>Die Embed-Bibliothek von WordPress</p>
<p>Füge dazu folgendes in die <strong>functions.php</strong> ein (<a href="https://kinsta.com/de/wissensdatenbank/deaktivierst-embeds-wordpress/#disable-embeds-code">Quelle</a>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">add_action( &#39;init&#39;, &#39;disable_embeds_code_init&#39;, 9999 );
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">function disable_embeds_code_init() {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    remove_action( &#39;rest_api_init&#39;, &#39;wp_oembed_register_route&#39; );
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    add_filter( &#39;embed_oembed_discover&#39;, &#39;__return_false&#39; );
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    remove_filter( &#39;oembed_dataparse&#39;, &#39;wp_filter_oembed_result&#39;, 10 );
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;wp_oembed_add_discovery_links&#39; );
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    remove_action( &#39;wp_head&#39;, &#39;wp_oembed_add_host_js&#39; );
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    add_filter( &#39;tiny_mce_plugins&#39;, &#39;disable_embeds_tiny_mce_plugin&#39; );
</span></span><span class="line"><span class="ln">10</span><span class="cl">    add_filter( &#39;rewrite_rules_array&#39;, &#39;disable_embeds_rewrites&#39; );
</span></span><span class="line"><span class="ln">11</span><span class="cl">    remove_filter( &#39;pre_oembed_result&#39;, &#39;wp_filter_pre_oembed_result&#39;, 10 );
</span></span><span class="line"><span class="ln">12</span><span class="cl">}
</span></span><span class="line"><span class="ln">13</span><span class="cl">
</span></span><span class="line"><span class="ln">14</span><span class="cl">function disable_embeds_tiny_mce_plugin($plugins) {
</span></span><span class="line"><span class="ln">15</span><span class="cl">    return array_diff($plugins, array(&#39;wpembed&#39;));
</span></span><span class="line"><span class="ln">16</span><span class="cl">}
</span></span><span class="line"><span class="ln">17</span><span class="cl">
</span></span><span class="line"><span class="ln">18</span><span class="cl">function disable_embeds_rewrites($rules) {
</span></span><span class="line"><span class="ln">19</span><span class="cl">    foreach($rules as $rule =&gt; $rewrite) {
</span></span><span class="line"><span class="ln">20</span><span class="cl">        if(false !== strpos($rewrite, &#39;embed=true&#39;)) {
</span></span><span class="line"><span class="ln">21</span><span class="cl">            unset($rules[$rule]);
</span></span><span class="line"><span class="ln">22</span><span class="cl">        }
</span></span><span class="line"><span class="ln">23</span><span class="cl">    }
</span></span><span class="line"><span class="ln">24</span><span class="cl">    return $rules;
</span></span><span class="line"><span class="ln">25</span><span class="cl">}
</span></span></code></pre></div><h2 id="den-header-aufräumen">Den Header aufräumen</h2>
<p>Kommen wir zu ein paar Maßnahmen, die das HTML ein wenig verschlanken, aber aus Performance-Sicht nur Peanuts sind: Wir räumen den Header-Bereich auf. Diese Maßnahmen sind nicht wirklich notwendig, außer du willst es wirklich auf die Spitze treiben.</p>
<p>Los geht es mit dem Manifest für den <strong>Windows Live Writer</strong>, einer App um Blog-Beiträge zu schreiben (was mit deaktivierter XML-RPC, siehe unten, sowieso nicht mehr möglich ist):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;link rel=&#34;wlwmanifest&#34; type=&#34;application/wlwmanifest+xml&#34; href=&#34;https://example.com/wp-includes/wlwmanifest.xml&#34;&gt;
</span></span></code></pre></div><p>Und so deaktivierst du den Spaß:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action( &#39;wp_head&#39;, &#39;wlwmanifest_link&#39;);
</span></span></code></pre></div><p>Weiter geht es mit dem Verweis zum <strong>Shortlink</strong> des jeweiligen Beitrages. Shortlinks sind praktisch, um mit kurzem URL auf Inhalte deiner Webseite zu verweisen. Anstatt dem langen Permalink <a href="https://www.example.com/das-ist-mein-allererster-beitrag-hier-und-ich-liebe-es">www.example.com/das-ist-mein-allererster-beitrag-hier-und-ich-liebe-es</a> nutzt du z.B. einfach <strong><a href="https://www.example.com/?p=1">www.example.com/?p=1</a></strong>. Wenn du das nicht brauchst, entferne den Shortlink-Verweis aus dem HTML-Header und dem HTTP-Antwort-Header:</p>
<p><img src="/2020/2020-07-01-leitfaden-fur-ein-sicheres-und-schnelles-wordpress-setup/images/grafik-3-700x336.png" alt=""></p>
<p>Der Shortlink-Verweis im HTTP-Header</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action( &#39;wp_head&#39;, &#39;wp_shortlink_wp_head&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl">add_filter(&#39;after_setup_theme&#39;, &#39;remove_shortlink_from_http_header&#39;);
</span></span><span class="line"><span class="ln">4</span><span class="cl">
</span></span><span class="line"><span class="ln">5</span><span class="cl">function remove_shortlink_from_http_header() {
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl">    remove_action( &#39;template_redirect&#39;, &#39;wp_shortlink_header&#39;, 11);
</span></span><span class="line"><span class="ln">8</span><span class="cl">
</span></span><span class="line"><span class="ln">9</span><span class="cl">}
</span></span></code></pre></div><p>Im Header findest Verweise auf den vorherigen, den nächsten Beitrag oder die Startseite. Diese Funktionalität sollte theoretisch durch dein Template abgedeckt sein. Diese Verweise entfernst du folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;start_post_rel_link&#39;);
</span></span><span class="line"><span class="ln">2</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;index_rel_link&#39;);
</span></span><span class="line"><span class="ln">3</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;adjacent_posts_rel_link&#39;);
</span></span></code></pre></div><p>Zu guter Letzt die Versions-Information. Das Verbergen der WordPress-Version kann auch als Sicherheitsfeature verstanden werden (<strong>Security through obscurity</strong>, Sicherheit durch Unklarheit, siehe oben). Wenn der potentielle Angreifer nicht weiß, welche Version du verwendest, erschwerst du ihm zumindest das Identifizieren potentieller Sicherheitslücken. In der Realtität wird das nur die Bots aufhalten, die dein System automatisiert scannen. Bei einem aktiven Angriff ist das ziemlich sicher nutzlos. Nutze dazu folgende Zeile in der functions.php:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;wp_generator&#39;);
</span></span></code></pre></div><h2 id="cache-plugin">Cache-Plugin</h2>
<p>Wenn du immer noch nicht zufrieden bist, kannst du auch auf ein Cache-Plugin zurück greifen. Das sorgt dafür, dass die Seiten nicht bei jedem Aufruf komplett neu über PHP erstellt, sondern statische Inhalte ausgeliefert werden. Das bringt noch mal einen enormen Geschwindigkeitsgewinn.</p>
<h2 id="die-xml-rpc-schnittstelle-deaktivieren">Die XML-RPC-Schnittstelle deaktivieren</h2>
<p>XML-RPC steht für Extensible Markup Language Remote Procedure Call. Klingt kompliziert, ist es auch. Dabei handelt es sich um eine Schnittstelle. mit der du, ganz einfach gesagt, WordPress steuern kannst, ohne auf das Backend zuzugreifen (<a href="https://www.kuketz-blog.de/wordpress-angriffe-auf-die-xmlrpc-schnittstelle-xmlrpc-php-unterbinden/">mehr Hintergründe dazu hier</a>). Wenn du diese Schnittstelle deaktivierst, verlierst du also Funktionalität, wie z.B. <strong>Pingbacks</strong> oder das <strong>Verwalten von WordPress mit einer externen App</strong>. Auch Jetpack greift auf die XML-RPC zu! Du gewinnst aber auch etwas an Sicherheit dazu. Entscheide selber.</p>
<p>In den aktuellen Apache-Versionen (ab 2.4) sperrst du den Zugriff auf xmlrpc.php in der .htaccess-Datei folgendermaßen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">&lt;FilesMatch &#34;(^\.|wp-config\.php|xmlrpc\.php|(?&lt;!robots)\.txt|(liesmich|readme)\.*)&#34;&gt;
</span></span><span class="line"><span class="ln">2</span><span class="cl">   Require all denied
</span></span><span class="line"><span class="ln">3</span><span class="cl">&lt;/FilesMatch&gt;
</span></span></code></pre></div><p>Eigentlich sollte das schon genügen. Willst du auf Nummer sicher gehen, kannst du durchaus mehrt tun. Der weniger disruptive Weg wäre, <a href="https://developer.wordpress.org/reference/hooks/xmlrpc_enabled/">alle</a> <a href="https://developer.wordpress.org/reference/hooks/xmlrpc_enabled/"></a><a href="https://developer.wordpress.org/reference/hooks/xmlrpc_enabled/">Methoden zu deaktivieren, die eine Authentifizierung erfordern</a>. Das funktioniert folgendermaßen (in der functions.php deines Child-Themes):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl"># XML RPC deaktivieren
</span></span><span class="line"><span class="ln">2</span><span class="cl">add_filter( &#39;xmlrpc_enabled&#39;, &#39;__return_false&#39; );
</span></span><span class="line"><span class="ln">3</span><span class="cl"># XML RPC Verweis aus Header entfernen
</span></span><span class="line"><span class="ln">4</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;rsd_link&#39;);
</span></span></code></pre></div><p>Allerdings ist das ganze Sub-System weiterhin aktiv. <a href="https://www.scottbrownconsulting.com/2020/03/two-ways-to-fully-disable-wordpress-xml-rpc/">Willst du das also komplett deaktivieren</a>, füge der functions.php folgendes hinzu:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">// disable xmlrpc
</span></span><span class="line"><span class="ln">2</span><span class="cl">function remove_xmlrpc_methods( $methods ) {
</span></span><span class="line"><span class="ln">3</span><span class="cl">  return array();
</span></span><span class="line"><span class="ln">4</span><span class="cl">}
</span></span><span class="line"><span class="ln">5</span><span class="cl">add_filter( &#39;xmlrpc_methods&#39;, &#39;remove_xmlrpc_methods&#39; );
</span></span></code></pre></div><p>Aber wie gesagt, das sind zusätzliche Maßnahmen. In der Regel kannst du vielleicht schon gut schlafen, wenn der Webserver den Zugriff auf xmlrpc.php einfach nicht zulässt.</p>
<h2 id="die-rest-api-verweise-entfernen">Die REST-API-Verweise entfernen</h2>
<p>Seit Version 4.4 hat WordPress eine REST-API an Bord, die wie XML-RPC eine Schnittstelle bietete, um bestimmte Informationen über deine Seite automatisiert auszulesen. Obgleich das Sicherheitsrisiko der REST-API ungleich niedriger ist als bei XML-RPC, kannst du auch hier ein wenig aufräumen, indem du den Verweis auf die REST-API folgendermaßen aus den HTML- sowie HTTP-Header entfernst:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">remove_action(&#39;wp_head&#39;, &#39;rest_output_link_wp_head&#39;, 10);
</span></span><span class="line"><span class="ln">2</span><span class="cl">remove_action(&#39;template_redirect&#39;, &#39;rest_output_link_header&#39;, 11, 0);
</span></span></code></pre></div><p>Ganz deaktivieren solltest du die API allerdings nicht, da sie vor allem auch für die reibungslose Backend-Funktionalität wichtig ist. Was du aber machen kannst, ist die REST-API <a href="https://developer.wordpress.org/rest-api/frequently-asked-questions/">nur nach Anmeldung zulassen:</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">add_filter(&#39;rest_authentication_errors&#39;, &#39;rest_api_auth&#39;);
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">function rest_api_auth($result) {
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    // bereits erfolgreich authentifiziert?
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    if ( true === $result || is_wp_error( $result ) ) {
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">        return $result;
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    }
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"> 
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    // noch nicht authentifiziert?
</span></span><span class="line"><span class="ln">10</span><span class="cl">    if ( ! is_user_logged_in() ) {
</span></span><span class="line"><span class="ln">11</span><span class="cl">        return new WP_Error(
</span></span><span class="line"><span class="ln">12</span><span class="cl">            &#39;rest_not_logged_in&#39;,
</span></span><span class="line"><span class="ln">13</span><span class="cl">            __( &#39;You are not currently logged in.&#39; ),
</span></span><span class="line"><span class="ln">14</span><span class="cl">            array( &#39;status&#39; =&gt; 401 )
</span></span><span class="line"><span class="ln">15</span><span class="cl">        );
</span></span><span class="line"><span class="ln">16</span><span class="cl">    }
</span></span><span class="line"><span class="ln">17</span><span class="cl"> 
</span></span><span class="line"><span class="ln">18</span><span class="cl">    // sonst zurück
</span></span><span class="line"><span class="ln">19</span><span class="cl">    return $result;
</span></span><span class="line"><span class="ln">20</span><span class="cl">}
</span></span></code></pre></div><h2 id="fazit">Fazit</h2>
<p>Das war es erstmal. Wenn du jetzt noch das Gefühl hast, dass dein WordPress zu langsam ist, wirf mal einen Blick in die Entwickler-Konsole und schau nach, welche Ressourcen lange dauern oder ob du Anfragen doppelt absetzt. Es gibt vor allem auf Server-Seite, also unterhalb von WordPress, noch eine Menge Möglichkeiten. Einige davon habe ich in der <a href="https://www.nickyreinert.de/mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/">Artikel-Serie zum perfekten Web-Server-Setup aufgeführt</a>. Außerdem gibt es hier eine wirklich brilliante Artikel-Serie zum Thema Sicherheit, die du dir unbedingt lesen solltest. Hier werden unzählige wichtige Hinweise gegeben,</p>
<p>Zum Abschluss noch mal der Hinweis: Es handelt sich hierbei um mitunter tiefe Eingriffe in die <strong>WordPress-Mechanik</strong>. Solltest du in der Zukunft Probleme mit deiner Seite haben, nimm diese Änderungen Schritt für Schritt zurück. Arbeite mit einem Staging-System und nutze Backups. Bei Probleme und Inkompatiblitäten freue ich mich über sachdienliche Hinweise, die ich in den Artikel einbauen kann!</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> einstellungen, setup, wordpress</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Leitfaden für ein sicheres und schnelles WordPress-Setup - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>optimization_guide</dc:type>
      
      
    </item><item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 3 / 3)</title>
      <link>https://nickyreinert.de/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</guid>
      <description>Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups. Wenn alles …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser dritte Teil der Serie zur Einrichtung einer sicheren und performanten Webserver-Umgebung für WordPress konzentriert sich auf die Konfiguration von PHP-FPM-Pools. Er behandelt detailliert Sicherheitsaspekte wie Benutzerisolation und Chroot-Umgebungen, Performance-Optimierungen für PHP-Prozesse sowie die Verwaltung von Sessions und das Deaktivieren gefährlicher PHP-Funktionen, um ein robustes Multi-Site-Setup zu gewährleisten.</p>
          
          
          <p><strong>Hauptthemen:</strong> Nginx, PHP-FPM, WordPress, Server Konfiguration, Webserver Sicherheit, Chroot, Performance Optimierung, PHP, Linux</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups. Wenn alles korrekt eingerichtet ist, solltet ihr nun einen gut funktionierenden Webserver auf Basis von nginx haben, der PHP-FPM nutzt und gut mit Wordpress laufen sollte. Der Server arbeitet für mehrere unterschiedliche Domains, die so gut wie möglich im System getrennt sind.</p>
<h2 id="die-einrichtung-der-php-pools">Die Einrichtung der PHP-Pools</h2>
<p>Um den ganzen Bums zum Laufen zu bringen fehlt jetzt nur noch PHP. Den Großteil haben wir schon geschafft, weshalb ich die Einrichtung von PHP nicht in einen neuen Beitrag gepackt habe.</p>
<p>Wie im ersten Teil schon angedeutet, nutze ich PHP-FPM. Die Einstellungen jedes einzelen virtuellen Servers befinden sich demnach in <strong>/etc/php/7.3/fpm/pool.d/</strong> und hat die Endung .conf.</p>
<p>Mit dem Parameter <strong>listen</strong> stellst du die Verbindung zu nginx her. Es wird ein Socket erstellt, über den nginx und PHP-FPM Informationen austauschen. Die Variable <strong>$pool</strong> enthält den Namen des Pools. Mit <strong>prefix</strong> legst du Standard-Ordner dieses Pools fest.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># der Namen des Pools (kann mit $pool referenziert werden</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="p">[</span><span class="n">example_com</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">listen</span> <span class="o">=</span> <span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">php</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">-$</span><span class="n">pool</span><span class="o">.</span><span class="n">sock</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="n">prefix</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/$</span><span class="n">pool</span>
</span></span></code></pre></div><p>Jetzt gibt ein paar wichtige Sicherheitsfeatures: Jeder <strong>Pool</strong> hat seinen eigenen Benutzer. Hierzu muss man nicht viel erklären: Der Vorteil hier ist, dass sich die PHP-Prozesse verschiedener Server, da sie ja unterschiedlichen Nutzer &ldquo;gehören&rdquo; grundsätzlich erstmal nicht in die Quere kommen können:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">user = $pool-php
</span></span><span class="line"><span class="ln">2</span><span class="cl">group = www-data
</span></span><span class="line"><span class="ln">3</span><span class="cl">listen.owner = $pool-php
</span></span><span class="line"><span class="ln">4</span><span class="cl">listen.group = www-data
</span></span></code></pre></div><p>Mit chdir und chroot schließt du diesen Pool in einen bestimmten Ordner ein. Ich hatte oben ja bereits <strong>$prefix</strong> definiert. Diese Parameter arbeiten eng mit den FastCGI-Einstellungen von <strong>nginx</strong> zusammen und sind eine beliebte Fehlerquelle. Mit chroot denkt PHP, dass dieser Ordner der Root-Ordner ist. Warum ist das wichtig? Unsere Root-Ordner liegen (siehe Teil 1) alle in einem eigenen Unterordner. So kann PHP nicht ausbrechen und z.B. auf <strong>sensible Systembereiche</strong> oder die Unterordner anderer Pools / Server zugreifen. Der Parameter <strong>chdir</strong> legt lediglich fest, dass root auch wirklich root ist. Hier könnte man htdocs als Root festlegen. Da wir in der nginx-Einstellung aber <strong>htdocs</strong> als Pfad voranstellen, kann das hier so bleiben. Bedenke, dass sich alle folgenden Pfadangaben immer relativ zu den hier festgelegten Einstellungen stattfinden.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">chdir</span> <span class="o">=</span> <span class="o">/</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">chroot</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">example1</span>
</span></span></code></pre></div><p>Weiter geht es mit der Konfiguration der PHP-Prozesse. Mit <strong>pm=dynamic</strong> legen wir fest, dass der Prozess-Manager prozesse dynamisch starten kann. Mit <strong>pm=static</strong> startest du immer eine feste Anzahl von Prozessen. (Bei Servern mit hoher Last kann das durchaus Sinn machen, <a href="https://haydenjames.io/php-fpm-tuning-using-pm-static-max-performance/">wie hier beschrieben wird</a>). Bei einer kleineren Seite reicht <strong>pm=ondemand</strong> völlig aus. Wir erinnern uns: Die Prozesse dienen als Interpretor für unsere PHP-Scripte. Ein Prozess bearbeitet eine Anfrage. Wenn du mehr Traffic erwartest, solltest du diese Werte also erhöhen.</p>
<p><strong>max_children</strong> gibt die Obergrenze dafür fest. <strong>start_servers=1</strong> besagt, dass mindestens 1 Prozess sofort gestartet wird. Mit <strong>min_spare_servers</strong> legst du fest, wieviele Prozesse mindestens &ldquo;vorrätig&rdquo; sind, <strong>max_spare_servers</strong> legt dafür die Obergrenze fest. Wie viele Prozesse du maximale starten solltest, errechnest du ganz einfach folgender maßen:</p>
<p>Rufe den folgenden Code auf um den Speicherverbrauch deines PHP-Services zu erhalten:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">ps --no-headers -o &#34;rss,cmd&#34; -C php-fpm7.3 | awk &#39;{ sum+=$1 } END { printf (&#34;%d%s\n&#34;, sum/NR/1024,&#34;Mb&#34;) }&#39;
</span></span></code></pre></div><p>Den freien Speicher lässt du folgendermaßen anzeigen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">free -h
</span></span></code></pre></div><p>Angenommen, du hast 4.096 MByte freien Speicher zur Verfügung und ein PHP-Prozess verbraucht 4 MByte, dann kannst du insgesamt 1.024 Prozesse starten. Wenn du mehrere virtuelle Server betreibst, teilen diese sich natürlich dieses Kontingent. Im folgenden ein Beispiel: Es werden maximal 1.024 Prozesse gestartet. 100 Prozesse sind immer aktiv, auch wenn sie ungenutzt sind. Sind alle 100 Prozesse beschäftigt, werden mindestens 50 Prozesse gestartet, aber niemals mehr als 200 - das Spiel funktioniert so lange, bis das Kontingent von 1.024 ausgeschöpft ist.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">pm = dynamic
</span></span><span class="line"><span class="ln">2</span><span class="cl">pm.max_children = 1024
</span></span><span class="line"><span class="ln">3</span><span class="cl">pm.start_servers = 100
</span></span><span class="line"><span class="ln">4</span><span class="cl">pm.min_spare_servers = 50
</span></span><span class="line"><span class="ln">5</span><span class="cl">pm.max_spare_servers = 200
</span></span></code></pre></div><p>Wenn dein Server relativ klein ist, solltest du den <strong>On-Demand-Modus</strong> nutzen. Hier wird ein Prozess nur dann gestartet, wenn der Bedarf da ist. Das spart Speicher und ist in der Regel auch nicht merkbar langsamer.</p>
<p>Der Parameter <strong>catch_workers_output</strong> steuert die Ausgabe des PHP-Prozesses. Wie alle Log-Einstellungen, kann <a href="https://twitter.com/leofeyer/status/486862436948250624">dieser erhebliche Auswirkungen auf die Performance haben</a>. Falls du also noch ein paar Millisekunden mehr herausholen willst, setze diesen Wert auf <strong>no</strong>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">catch_workers_output = yes
</span></span></code></pre></div><p>Die folgenden Einstellungen werden eigentlich in der php.ini vorgenommen. Ich will sie hier aber auf Server-Ebene definieren, da die virtuellen Server ja durchaus unterschiedliche Ansprüche haben.</p>
<h3 id="sessions-cookies-und-referrer">Sessions, Cookies und Referrer</h3>
<p>Wenn du eine zusätzliche Sicherheitshürde einbauen willst, kannst du den Pfad der <strong>PHP-Sessions</strong> hier ändern. Wenn du in deiner Web-Anwendung nicht mit <strong>JavaScript</strong> auf <strong>Cookies</strong> zugreifen willst, kannst du den Cookie-Zugriff außerdem nur auf HTTP einschränken. Und schließlich macht es Sinn, dass eine Session nur vom eigenen Server genutzt werden kann, wenn also dein Server im Referrer übermittelt wird.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">php_value[session.save_path] = /sessions
</span></span><span class="line"><span class="ln">2</span><span class="cl">php_value[session.cookie_httponly] = 1
</span></span><span class="line"><span class="ln">3</span><span class="cl">php_value[session.referer_check] = example.com
</span></span></code></pre></div><p>Sehr nützlich und ein wichtiges Sicherheitsfeature ist <strong>disable_functions</strong>. Es gibt eine nicht geringe Anzahl von PHP-Funktionen, mit denen sich Systemfunktionen steuern lassen. Diese solltest du grundsätzlich nicht zulassen. Ein weiteres Sicherheitsfeature sind <strong>allow_url_fopen</strong> und <strong>allow_url_include</strong>. Damit unterbindest du das Einbinden von schadhaften Code.<br>
Die Einstellungen zum Log werde ich nicht weiter erläuter, da sie wie so oft selbsterklärend sind. Beachte, dass das Logging immer auch gewisse Auswirkungen auf die Performance haben. Andererseits kann die regelmäßige Log-Analyse aber auch rechzeitig wichtige Hinweise auf (Sicherheits-)Probleme deines Systems liefern!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">php_admin_value</span><span class="p">[</span><span class="n">disable_functions</span><span class="p">]</span> <span class="o">=</span> <span class="n">php_uname</span><span class="p">,</span> <span class="n">getmyuid</span><span class="p">,</span> <span class="n">getmypid</span><span class="p">,</span> <span class="n">passthru</span><span class="p">,</span> <span class="n">leak</span><span class="p">,</span> <span class="n">listen</span><span class="p">,</span> <span class="n">diskfreespace</span><span class="p">,</span> <span class="n">tmpfile</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">ignore_user_abord</span><span class="p">,</span> <span class="n">shell_exec</span><span class="p">,</span> <span class="n">dl</span><span class="p">,</span> <span class="n">set_time_limit</span><span class="p">,</span> <span class="n">exec</span><span class="p">,</span> <span class="n">system</span><span class="p">,</span> <span class="n">high</span><span class="o">$</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="n">php_admin_flag</span><span class="p">[</span><span class="n">allow_url_fopen</span><span class="p">]</span> <span class="o">=</span> <span class="n">on</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="n">php_admin_flag</span><span class="p">[</span><span class="n">allow_url_include</span><span class="p">]</span> <span class="o">=</span> <span class="n">off</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="c1"># das Speicherlimit pro Script-Aufrufeinstellen</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="n">php_admin_value</span><span class="p">[</span><span class="n">memory_limit</span><span class="p">]</span> <span class="o">=</span> <span class="mi">256</span><span class="n">M</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="c1"># Logging-Einstellung</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="n">php_flag</span><span class="p">[</span><span class="n">display_errors</span><span class="p">]</span> <span class="o">=</span> <span class="n">off</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="n">php_admin_value</span><span class="p">[</span><span class="n">error_log</span><span class="p">]</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="nb">log</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">/$</span><span class="n">pool</span><span class="o">.</span><span class="n">log</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="n">php_admin_flag</span><span class="p">[</span><span class="n">log_errors</span><span class="p">]</span> <span class="o">=</span> <span class="n">on</span>
</span></span></code></pre></div><p>Die Einstellung von PHP ist damit abgeschlossen. Zum Abschluss gönne <strong>PHP</strong> und <strong>nginx</strong> noch einen Neustart. Danach sollte dein System rund laufen.</p>
<h2 id="zusammenfassung">Zusammenfassung</h2>
<p>Wenn du es bis hierhin geschafft hast, unterstützt dein Setup nun einen relativ performanten Server für mehrere Domains (aka virtuelle Server, virtual Hosts), der PHP-FPM nutzt und eine ziemlich solide Sicherheits-Grundeinstellung mitbringt.</p>
<p>Jeder einzelne virtuelle Server hat seine eigene Umgebung im Dateisystem, aus der er kaum ausbrechen kann. Die PHP-Prozesse sind voneinander getrennt, genauso wie die Speicherbereiche für den Cache. Außerdem ist das ganze darauf ausgerichtet, möglichst gut mit Wordpress zu laufen. Um das ganze System für Wordpress perfekt abzurunden, gibt es noch eine Handvoll Möglichkeiten, die ich gesondert vorstellen werden.</p>
<p><img src="/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/images/zusammenfassung-700x394.png" alt=""></p>
<p>Grobe schematische Übersicht des Setups für mehrere virtuelle Server mit nginx und PHP-FPM</p>
<h2 id="nachtrag">Nachtrag</h2>
<p>Wenn du noch ein paar zusätzliche Informatioen benötigst, sei dir der der ähnlich ausgerichtete Artikel auf <a href="https://binary-butterfly.de/artikel/das-perfekte-php-wordpress-setup/">binary-butterfly.de</a> empfohlen. Die Einstellungen für nginx und PHP unterscheiden sich kaum, dafür erfährst du dort auch, wie du zusätzlich mehrere SSH-Nutzer mit ins Boot holen kannst.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Nginx, PHP-FPM, WordPress, Server Konfiguration, Tutorial</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>hosting</category>
      
      <category>wordpress</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 3 / 3) - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tutorial</dc:type>
      
      
    </item><item>
      <title>Fokussierter Drill-Down mit Tableau</title>
      <link>https://nickyreinert.de/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</guid>
      <description>In Tableau gibt es die eigentlich sehr nützliche Möglichkeit, Dimensionen beliebig zu kombinieren und in einer Hierarchie zusammenzufassen. Diese Funktion ist …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel beschreibt eine Methode zur Implementierung eines fokussierten Drill-Downs in Tableau, optimiert für große Datensätze mit hochkardinalen Dimensionen. Er erläutert, wie durch den Einsatz von berechneten Feldern, Parametern und Aktionen eine performantere und übersichtlichere Navigation durch Datenhierarchien realisiert werden kann, um die Einschränkungen der Standard-Hierarchiefunktion von Tableau zu umgehen.</p>
          
          
          <p><strong>Hauptthemen:</strong> Tableau, Datenvisualisierung, Business Intelligence, Datenanalyse, Drill-Down, Hierarchien, Performance Optimierung, Dashboard Design</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> advanced</p>
          
        </div>
        
        
        <p>In Tableau gibt es die eigentlich sehr nützliche Möglichkeit, Dimensionen beliebig zu kombinieren und in einer Hierarchie zusammenzufassen. Diese Funktion ist sehr intuitiv hat aber einen Haken: Wenn man bei großen Datenmengen und Dimensionen mit hoher Kardinalität einen Drill Down macht, werden die Abfragen nicht nur irrsinnig langsam, je tiefer man kommt. Die Übersicht geht auch komplett verloren.</p>
<p>Um das zu demonstrieren habe ich eine Datenquelle mit 1 Mio. Zeilen und 10 Dimensionen erzeugt. Der Drill-Down auf Ebene 8 dauert hier auf normaler Hardware über 20 Sekunden und das Ergebnis ist&hellip; nun ja: Für eine schnellen Überblick kaum zu gebrauchen:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-700x380.png" alt=" Drill-Down auf die 8. Ebene einer Hierarchie mit hoher Kardinalität: Übersicht ade "></a></p>
<p>Drill-Down auf die 8. Ebene einer Hierarchie mit hoher Kardinalität: Übersicht ade</p>
<p>Im Folgenden beschreibe ich einen Weg, wie man einen fokussierten Drill-Down ermöglicht, der weitaus performanter und vor allem übersichtlicher ist. Man könnte zwar die eingebaute Quick-Filter-Funktion nutzen, das ist dann aber relativ umständlich, da man je Ebene mindestens zwei Klicks benötigt und vor allem immer noch nicht übersichtlich:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-2.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-2.png" alt="Die Quick-Filter-Funktion bei mehreren Dimensionen in einer Hierarchie"></a></p>
<p>Drill-Down bei mehreren Dimensionen einer Hierarchie unter Verwendung des Quick-Filters: Unpraktisch</p>
<p>Bevor ich die Schritte im einzelnen erkläre, möchte ich zeigen, was das Ziel der ganzen Übung sein soll:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-1.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-1-700x526.png" alt="Schematische Darstellung der Logik"></a></p>
<p>Schematische Darstellung der Logik</p>
<p>Die Namen der einzelnen Dimensonen werden für jedes Level zusammengefasst. Jede Dimension in der Hierarchie wird außerdem durch einen <strong>Index</strong> repräsentiert, der die Tiefe wiederspiegelt. Dadurch entsteht ein Pfad nach dem Schema <strong>nameA.nameB.NameC.nameD.nameX</strong> usw. Diese Pfad soll als Filter dienen. So kann ich mit einem einzigen Filter mehrere Dimensionen abdecken.</p>
<p>Ein Klick auf eine Zeile im Arbeitsblatt &ldquo;<strong>main</strong>&rdquo; soll dafür sorgen, dass der Index für die aktuelle Ebene um 1 hochgezählt wird - man also tiefer in den Baum hineingeht. Außerdem wird der Pfad für die entsprechende Ebene als Filter genutzt. Dadurch erhalte ich eine Ansicht, die einem kombinierten Filter gleicht, immer nur die Zeilen anzeigt, die ich beim Drill-Down ausgewählt habe. Klicke ich auf das zweite Arbeitsblatt, wird der Index heruntergezählt, also immer die nächsthöhere Ebene angezeigt. Außerdem wird bei dem zusammengesetzten Pfad das letzte Element entfernt, wodurch sich gleichzeitig die Filterbedingung ändert.<br>
Um diese Mechanik umzusetzen, benötigen wir also zwei Felder, eines enthält immer den aktuellen <strong>Index + 1</strong> für die nächste Ebene und <strong>Index - 1</strong> für die nächst höhere Ebene. Außerdem gibt es ein Feld, dass den aktuellen Pfad enthält, also z.B. <strong>nameA.nameB.nameC</strong>. Ein weiteres Feld enthält den nächsten Pfad, je nachdem wo der Nutzer klickt, also z.B. <strong>nameA.nameB.nameC.nameD</strong> und ein Feld enthält den Pfad für die zuvor ausgewählte Ebene, also z.B. <strong>nameA.nameB</strong>. Das ganze wird mit ein paar Aktionen und Filtern so miteinander kombiniert, dass der Benutzer interaktiv durch die Hierarchie reisen kann.<br>
Klar soweit? Los geht&rsquo;s:</p>
<p>Du benötigst zwei Arbeitsblätter und ein Dashboard, das die beiden Arbeitsbelätter beherbergt. Als Namen wähle ich &ldquo;<strong>main</strong>&rdquo; für die eigentliche Darstellung der KPIs und &ldquo;<strong>go back</strong>&rdquo; für die Navigation. Wir beginnen mit der Erstellung der beiden Parameter.<br>
Der Parameter &ldquo;<strong>current level index</strong>&rdquo; enthält, entsprechend der Anzahl der Dimensionen, die Ziffern 1 bis 10. Der Parameter &ldquo;<strong>level name concatenated</strong>&rdquo; dient später als Filter-Element und enthält den oben erwähnten Pfad:</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-breadcrumb-navigation-in-tableau/parameter_level_name_concatenated.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/parameter_level_name_concatenated.png" alt="Parameter level name concatenated"></a></p>
<p>Parameter level name concatenated</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-breadcrumb-navigation-in-tableau/parameter_current_level_index.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/parameter_current_level_index.png" alt="Parameter current level index"></a></p>
<p>Parameter current level index</p>
</li>
</ul>
<p>Nun erstellst du einen Filter, der sich auf den Parameter &ldquo;<strong>level name concatenated</strong>&rdquo; bezieht. Das vereinfacht den weiteren Prozess ungemein, da du kein Filter-Aktion anlegen musst, sondern Tableau den Filter immer dynamisch anpasst. Dazu legst du einen Filter für das Arbeitsblatt &ldquo;<strong>main</strong>&rdquo; an und wählst im Reiter &ldquo;Bedingung&rdquo; die Option &ldquo;nach Formel&rdquo; aus. Als Formel verwendest du diese:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">[level name concatenated] = [current level filter]
</span></span></code></pre></div><p>So sollte der Filter dann in Tableau aussehen:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-4.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-4.png" alt="Filter mit einer Formel als Bedingung"></a></p>
<p>Filter mit einer Formel als Bedingung</p>
<p>Weiter geht es mit ein paar berechneten Feldern:</p>
<p>Das erste Feld nennt sich &ldquo;<strong>current level</strong>&rdquo;, dass den Parameter &ldquo;<strong>current level index</strong>&rdquo; nutzt um die entsprechende Dimension darzustellen. Die Formel dazu ist simpel:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1 THEN [Dimension1] 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 THEN [Dimension2]
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 THEN [Dimension3]
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 THEN [Dimension4] 
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 THEN [Dimension5] 
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 THEN [Dimension6] 
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 THEN [Dimension7] 
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 THEN [Dimension8] 
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 THEN [Dimension9] 
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 THEN [Dimension10] 
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Als nächstes gibt es zwei Felder, die auch mit einer einfachen Formel auskommen: &ldquo;<strong>previous level index</strong>&rdquo; und &ldquo;<strong>next level index</strong>&rdquo;. Previous level index dient dazu, den Index herunter zu zählen. Hier könnte man sicherlich eine eleganter Lösung nutzen, um das Prinzip zu verdeutlichen, habe ich das mit einer einfachen Wenn-Dann-Bedingung realisiert:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF [current level index] = 1 then 1
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 then 1
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 then 2
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 then 3
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 then 4
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 then 5
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 then 6
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 then 7
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 then 8
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 then 9
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Bei &ldquo;<strong>next level index</strong>&ldquo;läuft es genau anders rum:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1 THEN 2
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 THEN 3
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 THEN 4
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 THEN 5
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 THEN 6
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 THEN 7
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 THEN 8
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 THEN 9
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 THEN 10
</span></span><span class="line"><span class="ln">10</span><span class="cl">END
</span></span></code></pre></div><p>Weiter geht es mit den Pfaden, die wir für den Filter benötigen. Jetzt wird es etwas komplizierter: Das Feld &ldquo;<strong>current level concat</strong>&rdquo; fasst zunächst, entsprechen der aktuell ausgewählten Ebene, die Namen der vorherigen Ebenen zusammen. So entsteht der Pfad:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1  THEN [Dimension1] 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2  THEN [Dimension1] + &#34;.&#34; + [Dimension2]
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3]
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4]
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6]
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7]
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8]
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9  THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8] + &#34;.&#34; + [Dimension9]
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8] + &#34;.&#34; + [Dimension9] + &#34;.&#34; + [Dimension10]
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Das Feld &ldquo;<strong>current level filter</strong>&rdquo; ist ähnlich aufgebaut. Da der Filter sich aber strenggenommen auf die vorherige Eben bezieht, sieht der Pfad etwas anders aus:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF     [current level index] = 1 THEN &#34;.&#34; 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">ELSEIF [current level index] = 2 THEN [Dimension1] 
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 3 THEN [Dimension1] + &#34;.&#34; + [Dimension2]
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">ELSEIF [current level index] = 4 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3]
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 5 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4]
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">ELSEIF [current level index] = 6 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5]
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 7 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6]
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">ELSEIF [current level index] = 8 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7]
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 9 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8]
</span></span><span class="line"><span class="ln">10</span><span class="cl">ELSEIF [current level index] = 10 THEN [Dimension1] + &#34;.&#34; + [Dimension2] + &#34;.&#34; + [Dimension3] + &#34;.&#34; + [Dimension4] + &#34;.&#34; + [Dimension5] + &#34;.&#34; + [Dimension6] + &#34;.&#34; + [Dimension7] + &#34;.&#34; + [Dimension8] + &#34;.&#34; + [Dimension9]
</span></span><span class="line"><span class="ln">11</span><span class="cl">END
</span></span></code></pre></div><p>Beim Feld &ldquo;<strong>previous level concat</strong>&rdquo; wird es schon etwas schwieriger, da ich hier immer das letzte Element des Pfades entfernen muss. Das erinnert ein wenig an eine aus dem Ruder gelaufene Excel-Funktion, ist leider aber - nach meinem aktuellen Kenntnisstand - nicht einfacher zu realisieren, da die Behandlung von Strings in Tableau eben eingeschränkt sit. Sachdienliche Hinweise werden dankbar entgegen genommen.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln"> 1</span><span class="cl">IF [current level index] = 1 THEN 
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    &#34;.&#34;
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">ELSEIF [current level index] = 2 THEN
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    &#34;.&#34;
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">ELSEIF [current level index] = 3 THEN
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, 1) - 1)
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">ELSEIF [current level index] = 4 THEN
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) - 1)
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">ELSEIF [current level index] = 5 THEN
</span></span><span class="line"><span class="ln">10</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">11</span><span class="cl">ELSEIF [current level index] = 6 THEN
</span></span><span class="line"><span class="ln">12</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1)) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">13</span><span class="cl">ELSEIF [current level index] = 7 THEN
</span></span><span class="line"><span class="ln">14</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">15</span><span class="cl">ELSEIF [current level index] = 8 THEN
</span></span><span class="line"><span class="ln">16</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">17</span><span class="cl">ELSEIF [current level index] = 9 THEN
</span></span><span class="line"><span class="ln">18</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">19</span><span class="cl">ELSEIF [current level index] = 10 THEN
</span></span><span class="line"><span class="ln">20</span><span class="cl">    LEFT([level name concatenated], FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, FIND([level name concatenated], &#39;.&#39;, 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) - 1)
</span></span><span class="line"><span class="ln">21</span><span class="cl">END
</span></span></code></pre></div><p>Das gröbste ist somit erledigt, du solltest nun die folgenden Felder und Parameter haben. Achte darauf, dass du die Felder als Dimension nutzt:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-3.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-3.png" alt="Alle berechneten Felder und Parameter auf einen Blick"></a></p>
<p>Alle berechneten Felder und Parameter auf einen Blick</p>
<p>Nun ziehst du die Felder &ldquo;<strong>next level index</strong>&rdquo;, &ldquo;<strong>current level</strong>&rdquo; und &ldquo;<strong>current level concat</strong>&rdquo; auf das Arbeitsblatt &ldquo;<strong>main</strong>&rdquo;, die Felder &ldquo;<strong>previous level index</strong>&rdquo; und &ldquo;<strong>previous level concat</strong>&rdquo; gehören auf das Arbeitsblatt &ldquo;<strong>go back</strong>&rdquo;.</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-5-700x172.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-5-700x172.png" alt="Arbeitsblatt main mit allen nötigen Feldern"></a></p>
<p>Arbeitsblatt main mit allen nötigen Feldern</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-6.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-6.png" alt="Arbeitsblatt “go back” mit allen nötigen Feldern"></a></p>
<p>Arbeitsblatt &ldquo;go back&rdquo; mit allen nötigen Feldern</p>
</li>
</ul>
<h3 id="das-dashboard-mit-leben-füllen">Das Dashboard mit Leben füllen</h3>
<p>Abschließend geht es an die Aktionen um das Dashboard mit Leben zu füllen. Insgesamt benötigen wir vier Aktionen zur Änderung eines Parameters. Die ersten beiden Aktionen sorgen dafür, dass der aktuelle Index entsprechen hoch- und runtergezählt wird. Die Aktion &ldquo;<strong>increase level index</strong>&rdquo; nutzt als Quellblatt &ldquo;<strong>main</strong>&rdquo; sowie das Feld &ldquo;<strong>next level index</strong>&rdquo; und verweist auf den Parameter &ldquo;<strong>current level index</strong>&rdquo;. Und vice versa die Aktion &ldquo;<strong>decrease level index</strong>&rdquo; mit dem Quellblatt &ldquo;<strong>go back</strong>&rdquo;, dem Feld &ldquo;<strong>previous level index&rdquo;</strong> und ebenfalls dem Ziel-Parameter &ldquo;<strong>current level index</strong>&rdquo;:</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-7.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-7.png" alt="Aktion zur Parameter-Steuerng: Den Level-Index um 1 erhöhen…"></a></p>
<p>Aktion zur Parameter-Steuerng: Den Level-Index um 1 erhöhen&hellip;</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-8.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-8.png" alt="…und um eins verringern"></a></p>
<p>&hellip;und um eins verringern</p>
</li>
</ul>
<p>Danach benötigen wir eine Aktion, um den Filter-Parameter &ldquo;<strong>level name concatenated</strong>&rdquo; zu setzen: Dieser erhält den Wert aus dem berechneten Feld &ldquo;<strong>current level concat</strong>&rdquo;, wenn man auf das Arbeitsblatt &ldquo;<strong>main</strong>&rdquo; klickt. Und beim Arbeitsblatt &ldquo;<strong>go back</strong>&rdquo; ist es wieder genau andersrum: Hier kommt der Wert aus dem Feld &ldquo;<strong>previous level concat</strong>&rdquo;:</p>
<ul>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-9.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-9.png" alt="Die Aktion um den Filter für die nächsttiefere Eben zu setzen.."></a></p>
<p>Die Aktion um den Filter für die nächsttiefere Eben zu setzen..</p>
</li>
<li>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-10.png"><img src="/2019/2019-07-15-fokussierter-drill-down-mit-tableau/images/grafik-10.png" alt="… und für die darüberliegende Ebene"></a></p>
<p>&hellip; und für die darüberliegende Ebene</p>
</li>
</ul>
<h3 id="et-voila">Et voila</h3>
<p>Das war es. Du kannst nun das Dashboard nutzen, um beliebig durch deine Dimensionen zu klicken. Hier und da lässt sich das ganze sicherlich noch etwas optimieren. Zuerst kannst du z.B. die &ldquo;Steuerfelder&rdquo; ausblenden, um nur die relevanten Informationen zu präsentieren (in der Regel über rechte Maustaste &ldquo;<strong>Kopfzeile ausblenden</strong>&rdquo;). Außerdem kann man die Formeln optimieren und z.B. verhindern, dass der Nutzer tiefer klickt, als die verwendete Anzahl von Dimensionen. Das sind aber nur kleinere Baustellen. Das wichtigste Ziel sollte erreicht sein: Die Darstellung ist weitaus übersichtlicher und vor allem kann man nun in Sekundenbruchteilen bis zur letzten Eben navigieren.<br>
Natürlich kann man das ganze auch mit einem Chart kombinieren, was der Sache noch etwas mehr Glanz verleiht. Auf Tableau Public habe ich eine Dashboard veröffentlicht, dass das ganze in Aktion zeigt. Aus Gründen ist die Datenquelle dort allerdings nur 100.000 Zeilen groß:</p>
<p><a href="https://www.nickyreinert.de/files/fokussierter-drill-down-mit-tableau/grafik-10.png">https://public.tableau.com/profile/nr1871#!/vizhome/focussedDrillDown/dashboard</a></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Tableau, Datenvisualisierung, Business Intelligence, Datenanalyse, Tutorial</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>anleitungen</category>
      
      <category>development</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Fokussierter Drill-Down mit Tableau - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tutorial</dc:type>
      
      
    </item>
  </channel>
</rss>