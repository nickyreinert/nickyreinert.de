<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Softwarefehler auf Nicky Reinert</title>
    <link>http://localhost:1313/topics/softwarefehler/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Wed, 02 Apr 2025 12:19:31 +0100</lastBuildDate><atom:link href="http://localhost:1313/topics/softwarefehler/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Die Nerd Enzyklopädie 47 - Die 500-Meilen-E-Mail</title>
      <link>http://localhost:1313/2025/2025-03-10-nerd-enzyklop%C3%A4die-47---die-500-meilen-e-mail/</link>
      <pubDate>Wed, 02 Apr 2025 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2025/2025-03-10-nerd-enzyklop%C3%A4die-47---die-500-meilen-e-mail/</guid>
      <description>Dieser Moment, in denen man an seiner Wahrnehmung zweifelt, weil ein Computer, der doch eigentlich nach den strengen Regeln der Logik arbeiten sollte, plötzlich …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Nacherzählung aus der &#39;Nerd Enzyklopädie&#39; über die berühmte &#39;500-Meilen-E-Mail&#39;-Anekdote. Der Artikel beschreibt einen bizarren Softwarefehler, bei dem E-Mails nur innerhalb eines bestimmten Radius zugestellt wurden. Die Ursache war ein unentdecktes Downgrade des &#39;sendmail&#39;-Servers, das zu einem 0-Sekunden-Timeout führte, wodurch entfernte Server nicht rechtzeitig antworten konnten.</p>
          
          
          <p><strong>Hauptthemen:</strong> E-Mail, Netzwerktechnik, Softwarefehler, Debugging, Systemadministration, Nerd-Kultur</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Dieser Moment, in denen man an seiner Wahrnehmung zweifelt, weil ein Computer, der doch eigentlich nach den strengen Regeln der Logik arbeiten sollte, plötzlich Dinge tut, die gar nicht mehr so logisch erscheinen. Dieser Moment muss <strong>2002</strong> wohl auch <strong>Trey Harris</strong> ereilt haben (<a href="https://web.mit.edu/jemorris/humor/500-miles">MIT1</a>).</p>
<p>Harris, Mitglied der <strong>System Administrators Guild</strong> (SAGE), arbeitete als Admin für eine Universität in <strong>North Carolina</strong> und war dort für das E-Mail-System verantwortlich. Eines Tages rief ihn der Vorsitzende der Statistik-Abteilung an und behauptet, dass seine E-Mails nicht ankommen, sobald der Empfänger mehr als <strong>500 Meilen</strong> entfernt sei. Das Problem bestand offenbar schon ein paar Tage. Um es zu dokumentieren, hatte man auf einer Karte markiert, bei welchen Empfänger der E-Mail-Versand funktionierte. Und das funktioniere wohl nur bei Empfängern innerhalb eines 500-Meilen-Radius.</p>
<p>Harris war skeptisch und testete das System selbst. Er sendete einige Test-E-Mails unter anderem nach <strong>Richmond</strong>, <strong>Atlanta</strong> und <strong>Washington</strong> - alle Ziele befinden sich innerhalb des 500 Meilen Radius. Ohne Probleme. Und dann nach <strong>Memphis</strong> - <strong>600 Meilen</strong> Distanz. Die E-Mail ging nicht durch. <strong>Providence</strong>, 580 Meilen? Kein Erfolg. <strong>New York</strong>, 420 Meilen? Funktioniert.</p>
<p>Harris verglich die Konfigurationen des E-Mail-Servers mit anderen Systemen und fand keinerlei Auffälligkeiten. Zur weiteren Diagnose wählte er sich per Telnet auf den SMTP-Port des Servers ein. Der Server reagierte, wie erwartet mit dem <strong>SunOS Sendmail Logo</strong>. Und das führte Harris auf die richtige Fährte.</p>
<p>Der Vorsitzende der Statistik-Abteilung erwähnte zwar, dass vor ein paar Tagen ein Wartungs-Updates für des Betriebssystems installiert wurde. Angeblich betraf das aber nicht <strong>sendmail</strong>, welches Harris vor längerer Zeit in der <strong>Version 8</strong> installiert hatte. Das besagte Update von SunOS enthielt jedoch noch die alte <strong>Version 5</strong> von sendmail! Der E-Mail-Server wurde durch das Update des Betriebssystem auf eine alte Version zurückgesetzt. Die Konfigurations-Dateien, die Harris für die Version 8 angelegt hatte, waren allerdings noch vorhanden. Nur waren sie nicht mit Version 5 kompatibel. So wurde für einige wichtige Parametern von sendmail der <strong>Standard-Wert 0</strong> angenommen.</p>
<p>Einer dieser Parameter bezog sich auf das <strong>Timeout</strong> für die Verbindung zum externen SMTP-Server. Der Wert dafür betrug nun <strong>0 Sekunden</strong>.</p>
<p>Aber was hatte das zu bedeuten? Wenn sendmail versucht, eine Verbindung mit einem externen SMTP-Server aufzubauen, schickt es eine Anfrage in das Internet und  wartete dann auf die Antwort. Aufgrund der Auslastung des Systems brauchte sendmail einen Augenblick, um die Routine für die Verarbeitung der Antwort aufzurufen.</p>
<p>Harris fand heraus, das sendmail dafür etwa 3 Millisekunden benötigt. Eine Antwort, die nach 3 Millisekunden bei sendmail eintraf, wurde aufgrund des Timeouts als nicht erfolgreich gewertet.</p>
<p>Da die Universität über ein Glasfasernetz an das Internet angeschlossen war, gelang eine derartige Anfrage mit nahezu Lichtgeschwindigkeit nach draußen. Also fragte sich Harris, wie weit das Signal innerhalb von 3 Millisekunden kommen konnte. Er bemühte <strong>units</strong>, ein Kommandozeilen-Programm, um die Distanz auszurechnen:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">$ units
</span></span><span class="line"><span class="ln">2</span><span class="cl">1311 units, 63 prefixes
</span></span><span class="line"><span class="ln">3</span><span class="cl">You have: 3 millilightseconds
</span></span><span class="line"><span class="ln">4</span><span class="cl">You want: miles
</span></span><span class="line"><span class="ln">5</span><span class="cl">* 558.84719
</span></span><span class="line"><span class="ln">6</span><span class="cl">/ 0.0017893979
</span></span></code></pre></div><p>*(Das <em>-Zeichen ist kein Operator, sondern zeigt das Ergebnis an.)</em></p>
<p>558 Meilen!  Harris hatte die Ursache für das seltsame Verhalten gefunden.</p>
<p>Harris räumte später ein, einige technische Details, auch aus dramaturgischen Gründen, nicht ganz exakt wiedergeben zu haben. So musste  auch die Antwort vom SMTP-Server innerhalb von 3 Sekunden wieder bei sendmail landen, womit sich die verfügbare Zeit eigentlich auf 1,5 Millisekunden halbiert. Das ändert aber nichts daran, dass das Zusammenspiel aus Timeout, Übertragungsgeschwindigkeit und Verzögerung bei der Verarbeitung dafür gesorgt haben, dass E-Mails nur in einem bestimmten Radius versendet werden konnten, nämlich circa 500 Meilen…</p>
<p>…but I would walk 500 miles, and I would walk 500 more…</p>
<p><img src="/2025/2025-03-10-nerd-enzyklop%C3%A4die-47---die-500-meilen-e-mail/image.png" alt="alt text"></p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> E-Mail, Netzwerk, Nerd-Enzyklopädie, Anekdote</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 47 - Die 500-Meilen-E-Mail - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 31 - Der allererste Bug</title>
      <link>http://localhost:1313/2023/2023-05-25-nerd-enzyklop%C3%A4die-31---der-allererste-bug/</link>
      <pubDate>Thu, 25 May 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-05-25-nerd-enzyklop%C3%A4die-31---der-allererste-bug/</guid>
      <description>
Als ein Bug wird ein Fehler in einem Programm verstanden. Am 9. September des Jahres 1945 soll es sich zugetragen habe, dass der Mark II, ein Computer der …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine historische Untersuchung aus der &#39;Nerd Enzyklopädie&#39; über den Ursprung des Begriffs &#39;Bug&#39; in der Informatik. Der Artikel entlarvt den Mythos der Motte im Harvard Mark II Computer als Ursprung und verfolgt die wahre Etymologie des Wortes zurück zu Thomas Edison im späten 19. Jahrhundert, während er Grace Hoppers Rolle bei der Popularisierung des Begriffs in der Computerwelt würdigt.</p>
          
          
          <p><strong>Hauptthemen:</strong> Computergeschichte, Softwarefehler, Etymologie, Nerd-Kultur, Informatik</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-05-25-nerd-enzyklop%C3%A4die-31---der-allererste-bug/image1.png" alt=""></p>
<p>Als ein Bug wird ein <strong>Fehler in einem Programm</strong> verstanden. Am <strong>9. September des Jahres 1945</strong> soll es sich zugetragen habe, dass der <strong>Mark II</strong>, ein Computer der <strong>Harvard University</strong>, eine Fehlermeldung≤ ausgab. Selbst Universitäts-Computer sind davor nicht gefeit.</p>
<p>Man öffnete im Rahmen der Fehlersuche also den Computer — die waren zu der Zeit ja etwas größer als die Smartwatch an unserem Handgelenk — und fand die offensichtliche Ursache des Problems: Eine <strong>Motte</strong>! Sie wollte es sich im <strong>Panel F im Relay 70</strong> gemütlich machen und hat dieses wagemutige Vorhaben mit dem Leben bezahlt - die Todesursache ist leider nicht überliefert.</p>
<p>Die leiblichen Überreste der Motte wurden in ein Logbuch geklebt (warum eigentlich?) und von <strong>Dr. Grace Hopper</strong> mit der berühmten Bemerkung kommentiert: “First actual case of bug being found.”</p>
<p><img src="/2023/2023-05-25-nerd-enzyklop%C3%A4die-31---der-allererste-bug/image2.png" alt=""></p>
<p style="text-align: center;font-style:italic">Quelle [[AMER1](https://americanhistory.si.edu/collections/search/object/nmah_334663)]</p>
<p>Zwar war das der erste dokumentierte Fall einer Motte in einem Computer. Doch das war mitnichten, wie oft angenommen, die Geburt des Begriffs Bug als Synonym für einen Fehler in einem System. Dazu kam es weitaus früher, nämlich <strong>Ende des 19. Jahrhunderts</strong> durch unseren alten Bekannten <strong>Thomas Edison</strong>:</p>
<blockquote>
<p>‘Bugs’ — as such little faults and difficulties are called — show themselves and months of intense watching, study and labor are requisite before commercial success or failure is certainly reached.<br>
Thomas Edison an Theodore Puskas, 1878 [<a href="https://www.computerworld.com/article/2515435/moth-in-the-machine--debugging-the-origins-of--bug-.html">COMP1</a>]</p></blockquote>
<p>Der Begriff fand dann sogar Einzug in das <strong>Oxford English Dictionary</strong>:</p>
<blockquote>
<p>a defect or fault in a machine, plan, or the like.</p></blockquote>
<p>Dort wird als Quelle die <strong>Pall Mall Gazette</strong> angegeben [<a href="https://daily.jstor.org/the-bug-in-the-computer-bug-story/">JSTO1</a>]:</p>
<blockquote>
<p>“Mr [Thomas] Edison… had been up the two previous nights discovering a ‘bug’ in his phonograph — an expression for solving a difficulty, and implying that some imaginary insect had secreted itself inside and is causing all the trouble.<br>
Thomas Edison, March 11, 1889</p></blockquote>
<p>Es sollte auch erwähnt werden, dass <strong>Dr. Hopper</strong> die Motte weder gefunden noch in das Logbuch geklebt, sondern nur den ikonischen Kommentar darunter verfasste [<a href="https://www.pcwelt.de/article/1484644/die-beruhmtesten-bugs-der-it-geschichte.html">PCWE1</a>].</p>
<p>Nichtsdestotrotz sollten wir erfurchtsvoll anerkennen, dass die Motte in Panel F ihr Leben dafür gelassen hat, dem Begriff Bug zum Durchbruch zu verhelfen, ihn zu prägen. Danke, Motte.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Softwarefehler, Nerd-Enzyklopädie, Anekdote</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 31 - Der allererste Bug - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 30 - Die falsche Fehlermeldung</title>
      <link>http://localhost:1313/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/</link>
      <pubDate>Mon, 22 May 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/</guid>
      <description>
Mitte der 1990er Jahre startete in den USA ein besonderer Internet-Provider seinen Dienst: WebTV Networks Incorporated. In der Regel benötigte man zu dieser …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine humorvolle Anekdote aus der &#39;Nerd Enzyklopädie&#39; über einen peinlichen Fehler im Registrierungsprozess des frühen Internetdienstes WebTV. Ein falsch konfigurierter Filter für Benutzernamen führte dazu, dass jede Eingabe als &#39;schlechtes Wort&#39; (&#39;That&#39;s a bad word.&#39;) abgewiesen wurde, was die Bedeutung gründlicher Tests unterstreicht.</p>
          
          
          <p><strong>Hauptthemen:</strong> WebTV, Internetgeschichte, Softwarefehler, Debugging, Benutzerverwaltung, Nerd-Kultur</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p><img src="/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/image1.png" alt=""></p>
<p>Mitte der 1990er Jahre startete in den USA ein besonderer Internet-Provider seinen Dienst: <strong>WebTV</strong> <strong>Networks Incorporated</strong>. In der Regel benötigte man zu dieser Zeit für den Zugang zum Internet ein Modem, das zwischen Telefon-Dose und Computer angeschlossen wurde. WebTV funktionierte mit einer <strong>Set-Top-Box</strong> und einem <strong>Fernseher</strong> und ermöglichte so den Zugang zum Internet auch ohne Computer. Der Werbe-Slogan lautete:</p>
<blockquote>
<p>You’re surfing the Web with a remote control in one hand and a handful of cheese puffs in the other. Now that’s progress.</p></blockquote>
<p>Am <strong>18. September 1996</strong> wollte das Unternehmen seinen Dienst der Öffentlichkeit zugänglich machen. Ab diesem Datum war es möglich, ein Benutzerkonto für WebTV anzulegen. Einen Tag vorher saßen Techniker, Programmier und Gründer zusammen, um den Prozess der Benutzeranmeldung zu prüfen und das System auf Fehler zu untersuchen.</p>
<p>Bei einer Benutzeranmeldung ist es üblich, bestimmte anzügliche oder geschützte Begriffe für den Namen des Kontos zu verhindern. Seien es Beleidigungen oder reservierte Begriff wie „<strong>admin</strong>“, „<strong>root“</strong> und so weiter. Bei WebTV setzte man dazu auf eine Datei, die diese gesperrten Begriff enthielt. Die Datei war folgendermaßen aufgebaut:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">    admin.*   
</span></span><span class="line"><span class="ln">2</span><span class="cl">    User names may not start with “admin”.   
</span></span><span class="line"><span class="ln">3</span><span class="cl">    postmaster   
</span></span><span class="line"><span class="ln">4</span><span class="cl">    You’re not the postmaster.   
</span></span><span class="line"><span class="ln">5</span><span class="cl">    poop   
</span></span><span class="line"><span class="ln">6</span><span class="cl">    That’s a bad word.   
</span></span><span class="line"><span class="ln">7</span><span class="cl">    weenie That’s a bad word.
</span></span></code></pre></div><p>Jeder Eintrag bestand demnach aus zwei Zeilen. Die <strong>erste Zeile</strong> enthielt einen regulären Ausdruck, der den nicht zugelassenen Begriff beschreibt. Die <strong>zweite Zeile</strong> beinhaltet die Fehlermeldung, sollte jemand versuchen den Begriff für sein Benutzerkonto zu verwenden. Wenn also jemand ein Konto mit dem Benutzernamen <strong>admin</strong> einrichten wollte, wurde ihm das mit der Fehlermeldung “<strong>User names may not start with ‘admin’”</strong> verweigert.</p>
<p>Einer der Techniker hatte beim Anlegen der Datei einen Fehler gemacht. Er wollte die Datei in zwei Listen unterteilen: Eine Liste mit geschützten Namen (<strong>admin</strong>, <strong>postmaster</strong>, root, …) sowie eine Liste mit anzüglichen, obszönen Namen (<strong>fuck</strong>, <strong>poop</strong>, …). Zur besseren Lesbarkeit trente er die beiden Listen durch eine leere Zeile:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="ln">1</span><span class="cl">    admin.* User names may not start with “admin”.   
</span></span><span class="line"><span class="ln">2</span><span class="cl">    postmaster You&#39;re not the postmaster.  
</span></span><span class="line"><span class="ln">3</span><span class="cl">      
</span></span><span class="line"><span class="ln">4</span><span class="cl">    fuck  
</span></span><span class="line"><span class="ln">5</span><span class="cl">    That&#39;s a bad word.
</span></span></code></pre></div><p>Aber auch die leere Zeile wurde vom System als regulärer Ausdruck interpretiert. Und dieser passte zu jeder Eingabe! Die Folge war, dass der Schutzmechanismus beim Anlegen eines Benutzerkontos auf jeden Namen reagierte und die darauffolgende Zeile, wie programmiert, als Fehlermeldung an die Benutzer:in zurückgab. Und in diesem Fall war das:</p>
<p><img src="/2023/2023-05-22-nerd-enzyklop%C3%A4die-30---die-falsche-fehlermeldung/image2.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Die falsche Fehlermeldung bei der Anmeldung zu WebTV [[FADD1](https://fadden.com/tech/images/fkdialog.jpg)]
</p>
<p>Der Fehler wurde natürlich umgehend behoben. Als WebTV am nächsten Tag der Öffentlichkeit zugänglich gemacht wurde, kam es dem Vernehmen nach zu keinen beleidigenden Zwischenfällen.</p>
<p>Der Vorfall verdeutlich jedenfalls wie wichtig es ist, ein System in einer geschützten Umgebung ausgiebig zu testen.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Softwarefehler, Nerd-Enzyklopädie, Humor</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 30 - Die falsche Fehlermeldung - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>historical_anecdote</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 18 - Willkommen auf Null Island</title>
      <link>http://localhost:1313/2023/2023-04-16-nerd-enzyklop%C3%A4die-18---willkommen-auf-null-island/</link>
      <pubDate>Sun, 16 Apr 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-04-16-nerd-enzyklop%C3%A4die-18---willkommen-auf-null-island/</guid>
      <description>Die geografischen Koordinaten 0° Nord und 0° Ost zeigen auf einem Punkt im Atlantik vor der West-Küste Afrikas. Eigentlich gibt es dort nicht viel zu sehen, …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine Einführung in &#39;Null Island&#39; aus der &#39;Nerd Enzyklopädie&#39;, eine fiktive Insel am Nullmeridian und Äquator (0°N, 0°O). Der Artikel erklärt, wie dieser geografische Punkt als &#39;Auffangbecken&#39; für Fehler in geografischen Systemen dient, wenn Ortsdaten nicht korrekt verarbeitet werden können, und beleuchtet die humorvolle Community, die sich um dieses Konzept gebildet hat.</p>
          
          
          <p><strong>Hauptthemen:</strong> Geografie, Kartographie, GPS, Softwarefehler, Datenqualität, Nerd-Kultur</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> beginner</p>
          
        </div>
        
        
        <p>Die geografischen Koordinaten <strong>0° Nord und 0° Ost</strong> zeigen auf einem Punkt im <strong>Atlantik</strong> vor der West-Küste <strong>Afrikas</strong>. Eigentlich gibt es dort nicht viel zu sehen, außer Wasser, noch mehr Wasser, ganz viel Wasser, ab und zu mal ein Fisch und natürlich die <strong>PIRATA</strong>-Boje.</p>
<p><img src="/2023/2023-04-16-nerd-enzyklop%C3%A4die-18---willkommen-auf-null-island/image1.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Null Island oder nur eine Boje? [[WIKI6](https://de.wikipedia.org/wiki/Null_Island)]
</p>
<p>Bei dieser Ortsangabe handelt es sich nämlich um eine Art Hilfsmittel, um Fehler in geografischen Systemen, Datenbanken oder Programmen abzufangen. Da <em>Null</em> für das Fehlen von Daten oder auch die fehlerhafte Rückmeldung eines Programmes stehen kann, führt ein Problem bei der Verarbeitung geografischer Daten eben zu <em>Null —</em> also 0 und damit zu der Koordinate <strong>0 Grad Nord und 0 Grad Ost</strong>.</p>
<p>Seit 2011 hat sich eine kleine Fan-Gemeinde der Aufgabe unterworfen, an diesem Ort der fiktiven Insel <strong>Null Island</strong> ein Gesicht zu geben. So erschuf man unter anderem eine Flagge, geografische Informationen und sogar eine eigene Sprache für Null Island.</p>
<p>Tatsächlich passiert auf dieser nicht existierenden Insel sehr viel: Jedes Mal wenn es in irgendeiner Software zu Problemen mit Ortsangaben kommt, werden die restlichen Daten Null Island zugeordnet. Deine Fitness-App hatte keine Verbindung zu den GPS-Satelliten? Dann verläuft die Fahrrad-Route jetzt wohl über Null Island. Beim Fotografieren stand kein GPS- Signal zur Verfügung? Dann wurde das Foto wohl auf Null Island gemacht! Und damit dürfte Null Island wohl einer der belebtesten Orte auf diesem Planeten sein.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> Geografie, IT-Geschichte, Nerd-Enzyklopädie, Kuriosität</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 18 - Willkommen auf Null Island - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie - Computer sind nicht pünktlich</title>
      <link>http://localhost:1313/2022/2022-01-30-die-nerd-enzyklop%C3%A4die/</link>
      <pubDate>Mon, 30 Jan 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2022/2022-01-30-die-nerd-enzyklop%C3%A4die/</guid>
      <description>Es war einmal im Jahr 2000 und 23… Computer sind nicht nur notorisch unpünktlich, sie haben grundsätzliche ein Problem mit “Zeit”. Aber warum? Es ist die Art, …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Eine umfassende Erkundung aus der &#39;Nerd Enzyklopädie&#39; über die Herausforderungen von Computern bei der Zeitmessung und -verarbeitung. Der Artikel beleuchtet historische Zeitfehler wie das Jahr-2038-Problem und den Y2K-Bug, zukünftige Limitierungen von 64-Bit-Systemen, die Komplexität von Schaltsekunden und die Ursachen für die &#39;Unpünktlichkeit&#39; von Computern.</p>
          
          
          <p><strong>Hauptthemen:</strong> Computergeschichte, Zeitmessung, Softwarefehler, Y2K, Unixzeit, Schaltsekunden, Nerd-Kultur</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <h2 id="es-war-einmal-im-jahr-2000-und-23">Es war einmal im Jahr 2000 und 23…</h2>
<p>Computer sind nicht nur notorisch unpünktlich, sie haben grundsätzliche ein Problem mit “Zeit”. Aber warum? Es ist die Art, wie Computer Zeit messen bzw. Zeitangaben verarbeiten. Stell dir vor, du könntest bis 2.000 zählen. Welches Jahr haben wir jetzt? 2000… und 23? Gesprochen klingt das noch ganz gut, aber spätestens beim Aufschreiben wird es unübersichtlich. Bei Computern ist es noch etwas komplizierter.</p>
<h2 id="the-epoch">The Epoch</h2>
<p>Schauen wir uns mal „The Epoch“ oder auch die „Unixzeit“ an. Damit wird das Startdatum der Zeitrechnung der meisten Computer bezeichnet: Der 1. Januar 1970.</p>
<p>Ursprünglich wählte man als Beginn der Zeitrechnung den 1. Januar 1971. Die Zeit sollte durch einen Zähler repräsentiert werden, der an diesem Tag bei 0 beginnt und dann in regelmäßigen Abständen (Takten) um 1 erhöht wird. Die eingebaute Uhr der damaligen Computer bot sich als Taktgeber an. Sie arbeitete mit einer Frequenz von 60 Hz, also 60 Takten pro Sekunde. Das entspricht nicht nur zufällig der Frequenz der Stromnetze in Nordamerika. Der Zeitzähler wurde also 60 mal pro Sekunde erhöht bzw. jede Sekunde um den Wert 60.</p>
<p>Die Obergrenze von 4.294.967.295 ergibt sich aus der Größe einer einzelnen Speicherstelle: 32 Bit . Wenn man am 1. Januar 1971 bei 0 anfängt zu zählen indem man 60 mal pro Sekunde 1 dazu addiert, erreicht man die 32 Bit-Grenze nach 71.582.788 Sekunden. Das entspricht 1.193.046 Minuten, 19.884 Stunden oder in etwa 2,5 Jahre. Man hätte die Zeit also damals schon nur bis 1973 messen können — ein Bug, der bereits bei der Beschreibung des entsprechenden Datentyps bekannt war:</p>
<p><img src="/2022/2022-01-30-die-nerd-enzyklop%C3%A4die/image.png" alt=""></p>
<p>Quelle: Unix Programmer’s Manual, System calls, Teil 2 (Bell Labs, 3.11.1971, Seite 13) [<a href="https://www.bell-labs.com/usr/dmr/www/pdfs/man22.pdf">BELL</a>]</p>
<p>Also änderte man kurze Zeit später die Zählfrequenz auf 1 Sekunde und setzte das Startdatum auf den 01.01.1970. Gleichzeit entschied man sich aber auch für einen “vorzeichenbehafteten“ Zähler, ein sogenannter „signed integer”: Das erste der 32 Bit wird als Vorzeichen verwendet. Ist es auf 1 gesetzt, interpretiert der Computer die gesamte Zahl als negativ. So ist man in der Lage, die Zeit auch rückwärts zu erfassen.</p>
<p>Da nun nur noch 31 Bit zur Verfügung stehen, reduzierte sich die Obergrenze für die Zeitzählung auf 2.147.483.647. Mit der außerdem angepassten Zählfrequenz von 1 Sekunde war der Computer in der Lage 68 Jahre lang die die Zeit sekundengenau zu messen. Das neue Enddatum für die Zeitrechnung ist damit der 19. Januar 2038. An diesem Dienstag um 3 Uhr nachts, 14 Minuten und 7 Sekunden mitteleuropäischer Zeit wird der Zähler den Wert 2³¹ erreichen. In binärer Schreibweise sehen die 3 Sekunden um diesen Zeitpunkt herum so aus:</p>
<pre><code>Dienstag, 19. Januar 2038 04:14:07:   
01111111111111111111111111111111 (dezimal: 2147483647)  
Dienstag, 19. Januar 2038 04:14:08:   
10000000000000000000000000000000 (dezimal: 2147483648)  
Dienstag, 19. Januar 2038 04:14:09:   
10000000000000000000000000000001 (dezimal: 2147483649)
</code></pre>
<h2 id="es-war-einmal-in-1901">Es war einmal in 1901…</h2>
<p>Das erste Bit, das Vorzeichen-Bit, ist ab dann auf 1 gesetzt. Der Wert der restlichen 31 Bit wird als negativ interpretiert. Um 04:14:09 liest der Computer also -1. Und zieht damit eine Sekunde vom Startdatum “The Epoch” ab: Das Datum errechnet sich dann aus 1. Januar 1970, 00:00 Uhr minus 1 Sekunde, 2 Sekunden und so weiter. 68 Jahre lang, bis zum Freitag, den 13. Dezember 1901, 20:45:52 (in der Realität irgendwann in 2106). Die iterierte Quersumme dieser Uhrzeit ist übrigens die 9, die göttliche Zahl. Mythischer kann ein Bug wohl kaum sein.</p>
<h2 id="apokalypse">Apokalypse!</h2>
<p>Doch damit ist es noch nicht getan. Du erinnerst dich vielleicht an die Panik kurz vor der Jahrtausendwende? Man nahm an, dass Computer, die ja gerade erst anfingen unsere Alltagsroutinen zu optimieren, den Wechsel in das Jahr 2000 nicht vertragen würden. Aus zwei Gründen:</p>
<p>Erstens war es üblich die Jahreszahl verkürzt darzustellen, um Speicherplatz zu sparen und vielleicht auch aus analoger Bequemlichkeit. Anstatt 1986 erfasste man also nur die 86. Mit dem Wechsel in das Jahr 2000 war dann aber nicht mehr so ganz klar, worauf sich z.B. die Angabe 00 beziehen würde — auf das Jahr 1900 oder 2000?</p>
<p>Die zweite Ursache ergibt sich aus der Berechnung der Schaltjahre. Dass ein Schaltjahr durch vier teilbar ist, dürfte landläufig bekannt sein. Es gibt aber außerdem die Regel, dass ein Jahr, welches durch 100 teilbar ist, kein Schaltjahr ist. Und das ist noch nicht alles: Ist das Jahr außerdem durch 400 teilbar, ist es eben doch ein Schaltjahr. Zwei Regeln, die nicht sonderlich weit verbreitet waren und vermutlich immer noch nicht sind. Excel denkt selbst in 2022 noch, dass das Jahr 1900 ein Schaltjahr sei. Bug-Alarm! [<a href="https://learn.microsoft.com/en-us/office/troubleshoot/excel/wrongly-assumes-1900-is-leap-year">MICR1</a>]</p>
<p>Die Abhängigkeit von den Computern war seinerzeit vielleicht noch nicht so weit gediehen wie heute. Trotzdem vertrauten Versicherungen, Fluggesellschaften und Krankenkassen auf die „elektronische Datenverarbeitung“ (bei den öffentlichen Behörden lässt das papierlose Büro zum Glück noch eine Weile auf sich warten). Man erwartet also nichts geringeres als: Die Apokalypse!</p>
<p>Die US-Regierung rechnete mit Kosten zwischen 400 Millionen und 600 Millarden USD [<a href="https://www.congress.gov/105/crpt/hrpt827/CRPT-105hrpt827.pdf">CON1</a>]. Bei einem verfügbaren Haushaltsbudget von 3,4 Billionen USD (1999) nicht gerade ein Pappenstiel. Letztlich beliefen sich die Kosten für die Vorbereitungen auf immer noch erstaunliche 300 Mrd. USD [<a href="http://news.bbc.co.uk/2/hi/talking_point/586938">BBC1</a>] und noch mal 308 Mrd. USD für die Beseitigung der Schäden [<a href="https://www.computerworld.com/article/2522197/y2k--the-good--the-bad-and-the-crazy.html">COMP1</a>] — weltweit.</p>
<p>Trotz aller Sorgen sind wir recht glimpflich davon gekommen, nicht zuletzt aufgrund der immensen Anstrengungen, die Systeme und die Software mit Updates auf den Jahreswechsel vorzubereiten.</p>
<p>Ganz ohne Problem ging der Jahreswechseln jedoch nicht an uns vorüber. In Singapur versagten Taxameter ihren Dienst [<a href="https://money.cnn.com/1999/01/12/technology/y2k_moneyline/">MONEY1</a>], in Australien fielen Fahrscheinautomaten aus. In den USA funktionierten einige Lotterie-Maschinen nicht mehr und in Frankreich wurde die Wettervorhersage für den 01.01.1900 angezeigt [<a href="http://news.bbc.co.uk/2/hi/science/nature/586620.stm">BBC2</a>].</p>
<h2 id="es-war-einmal-in-1975">Es war einmal… in 1975…</h2>
<p>Das (vermutlich) erste Problem mit der Verarbeitung von Datumsangaben geht übrigens auf das Jahr 1964 zurück. Die Zeitrechnung des DEC PDP-10 — ein recht populärer Computer zu dieser Zeit — begann am 1. Januar 1964. Dem PDP-10 standen aber nur 12 Bit zur Verfügung. Auch wenn es nur um die taggenaue Zeitrechnung ging, endete sie aus oben genannten Gründen für den PDP-10 am 4. Januar 1975: mit 12 Bit lassen sich 4.095 Tage zählen [<a href="http://catless.ncl.ac.uk/Risks/4.45.html">CATL1</a>].</p>
<h2 id="und-2010">…und 2010…</h2>
<p>2010 führte ein Problem mit der Verarbeitung von Datumsangaben dazu, dass in Deutschland mehr als 30 Mio. Bankkarten unbrauchbar wurden [<a href="https://www.spiegel.de/wirtschaft/unternehmen/kartenpanne-franzoesische-firma-schuld-an-2010-fehler-a-670400.html">SPON1</a>].<br>
Exchange, der E-Mail-Server von Microsoft, hatte beim Übergang in das Jahr 2022 ein Problem: Hier wurden Uhrzeit und Tag schlicht zusammengesetzt: Aus dem 1. Februar 2022 12:34 Uhr wurde 2201021234 — zu groß für einen vorzeichenbehafteten 32 Bit Integer [<a href="https://www.golem.de/news/e-mail-server-microsoft-behebt-exchange-y2k22-fehler-2201-162124.html">GOLEM1</a>].</p>
<h2 id="und-es-wird-einmal-sein-in-292277026596">Und es wird einmal sein in 292.277.026.596…</h2>
<p>Und auch in der fernen Zukunft werden wir immer wieder mit den Grenzen der „modernen“ Informationstechnologie konfrontiert, seien es die Jahre 2040, 2080, 2137 und so weiter [<a href="https://en.wikipedia.org/wiki/Time_formatting_and_storage_bugs">WIKI1</a>]. Das Jahr 10.000 ist das erste fünfstellige Jahr. Das stellt die bis gewohnte 4-stellige Schreibweise für Jahre vor ein Problem. Das Jahr 30.828 wird von Windows nicht als Systemdatum akzeptiert und selbst im Jahr 292.277.026.596, wenn weder Erde noch Sonne und vielleicht nicht einmal das Universum existieren, an einem bitterkalten Winter-Sonntag, dem 4. Dezember, zur besten Kaffee- und Kuchenzeit vor dem Kamin, um 15.30 Uhr und 8 Sekunden, werden auch die heute üblichen 64 Bit Computer ihren Dienst versagen. Aus oben erklärten Gründen.</p>
<h2 id="die-schaltsekunde">Die Schaltsekunde</h2>
<p>Als wäre die Verarbeitung Zeitangaben und Schaltjahre nicht schon Herausforderung genug: Die Rotation der Erde um ihre eigene Achse dauert nicht immer exakt 24 Stunden. Sie ist in der Regel langsamer, in 2020 war sie sogar schneller. Die kaum berühmte aber dennoch berüchtigte Schaltsekunde!</p>
<p>Seit Beginn der „Computerzeitrechnung“ in 1972 (dort wurde ja erst „The Epoch„ definiert) sind hier bereits 37 Sekunden fällig geworden [<a href="https://de.wikipedia.org/wiki/Schaltsekunde">WIKI2</a>]. Nur: Die Geschwindigkeit der Erde unterliegt „nichtperiodischen Schwankungen“. Wir können heute also noch nicht sagen, wieviele Schaltsekunden bis 2.100 anfallen werden. Das macht jede Kalendererinnerung für die Zukunft sehr unzuverlässig. Computer sind unpünktlich</p>
<h2 id="unwahrheiten">Unwahrheiten</h2>
<p>Das Thema “Zeitrechnung“ ist von zahlreichen Missverständnisse geprägt und diese Lanze muss man für die Computer dann doch brechen: Das Problem sitzt nicht zuletzt vor dem Monitor. Und deswegen haben sich fleißige Entickler<em>innen und Expert</em>innen die Mühe gemacht, die Probleme mit der Verarbeitung von Daten und Zeiten in einem Gist zu sammeln: [<a href="https://gist.github.com/timvisee/fcda9bbdff88d45cc9061606b4b923ca">GIST1</a>].</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> IT-Geschichte, Softwarefehler, Nerd-Enzyklopädie, Zeit</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie - Computer sind nicht pünktlich - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_explainer</dc:type>
      
      
    </item>
  </channel>
</rss>