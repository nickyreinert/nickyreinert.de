<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Tools auf Nicky Reinert</title>
    <link>http://localhost:1313/topics/tools/</link>
    <description>Blog &amp; Projekte von Nicky Reinert (Institut für digitale Herausforderungen): Webentwicklung &amp; Software Development, SEO &amp; Analytics, Hosting &amp; DevOps, WordPress &amp; Hugo, Tools &amp; Projekte, Datenschutz und digitale Kultur – plus Texte zu KI sowie Autismus &amp; Gesellschaft.</description>
    <generator>Hugo 0.148.2</generator>
    <language>de</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Tue, 12 Aug 2025 19:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/topics/tools/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Der Schmale Grat zwischen Scam und eifrigem Unternehmertum</title>
      <link>http://localhost:1313/2025/2025-08-06-schmaler-grat-scam-und-unternehmertum/</link>
      <pubDate>Tue, 12 Aug 2025 19:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2025/2025-08-06-schmaler-grat-scam-und-unternehmertum/</guid>
      <description>English Version
Ich bin kein Fan von Handyspielen Nicht, weil ich nicht gerne spiele, sondern weil sich rund um Handyspiele ein aus meiner Sicht fragwürdiges …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Der Schmale Grat zwischen Scam und eifrigem Unternehmertum und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><em><a href="https://nickyreinert.de/en/blog/2025/08/12/the-thin-line-between-scam-and-ambitious-entrepreneurship/">English Version</a></em></p>
<h2 id="ich-bin-kein-fan-von-handyspielen">Ich bin kein Fan von Handyspielen</h2>
<p>Nicht, weil ich nicht gerne spiele, sondern weil sich rund um Handyspiele ein aus meiner Sicht fragwürdiges Geschäftsmodell entwickelt hat und es sehr schwer ist, die wahren Perlen zu finden. Es scheint, als ginge es nur noch darum entweder Werbeplätze zu vertreiben oder mit einfachen Spiel-Mechaniken In-App Käufe zu generieren. Sicher gibt es Ausnahmen, aber diese gehen in der schieren Menge des Angebots unter.</p>
<p>Auf eines dieser Spiele bin ich neulich durch Zufall gestoßen und es repräsentiert genau diese Vorwürfe hervorragend: <strong><a href="https://play.google.com/store/apps/details?id=com.EternalStudio.DozerDemolish&amp;hl=en_US">Dozer Demolish</a></strong>.</p>
<p>Auf Google Play wird das Spiel <strong>ohne Altersfreigabe</strong> beworben, im AppStore von Apple sind es <strong>4 Jahre</strong>. Im android&rsquo;schen Geschäft ist die Rede von über <strong>10 Millionen Downloads</strong>, <a href="https://www.eternalgamestudio.com/">laut Developer Eternal Studio sind es mehr als 15 Mio</a>.</p>
<p align="center">
  <a href="screenshot-playstore-usk.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-playstore-usk.png" alt="alt text" width="500"/>
  </a>
</p>
<center><small>Ohne Altersbeschränkung und In-Game-Käufe. Klingt nach einem Widerspruch *hust* Geschäftsfähigkeit *hust*</small></center>
<br />
<br />
<p>Der Vertrieb erfolgt durch <strong><a href="https://www.homagames.com/">HOMA</a></strong>, wo wohl auch andere EntwicklerInnen unter Vertrag stehen. Sitz: Frankreich. Also innerhalb der Jurisdiktion der DSGVO. Das Motto von <strong>HOMA</strong> lautet:</p>
<p align="center">
  <a href="https://play.google.com/store/apps/dev?id=4656343638685426415&hl=en&gl=US" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-playstore-motto.png" alt="HOMA Motto - Quelle Android Play Store https://play.google.com/store/apps/dev?id=4656343638685426415&hl=en&gl=US" width="700"/>
  </a>
</p>
<center><small>HOMA Motto - Quelle Android Play Store <a href="https://play.google.com/store/apps/dev?id=4656343638685426415&hl=en&gl=US">https://play.google.com/store/apps/dev?id=4656343638685426415&hl=en&gl=US</a></small></center>
<br />
<br />
<p>&ldquo;Amazing Content&rdquo; - Naja, <em>schau&rsquo;mer mal</em>!</p>
<p>Die Spiele aus der Kategorie &ldquo;Convenience Gaming&rdquo; funktionieren nach dem selben Prinzip: Es gibt kaum Tiefgang, die Regeln sind schnell erklärt, die Steuerung ist intuitiv und oft ist nicht mal viel Geschick oder Nachdenken erforderlich. Alles ist auf die kurzfristige Dopamin-Ausschüttung ausgelegt. Das muss nicht abwertend sein, es ist eine Form der Unterhaltung, die immerhin Millionen von SpielerInnen anzieht.</p>
<p>Das Spielprinzip von <strong>Dozer Demolish</strong> bleibt dem Branchenprinzip treu. Man <em>schlawinert</em> mit schwerem Gerät über wechselnde Landschaften, zerstört Gebäude, sammelt deren Reste ein und bekommt dafür Geld, mit dem man neue Fahrzeuge kaufen oder vorhandene aufrüsten kann. Einhändig und nebenbei. Auf dem Klo. Im Bett. Im Zug. Während des Meetings. &ldquo;Convenience Gaming&rdquo; eben.</p>
<h1 id="die-sache-mit-dem-datenschutz">Die Sache mit dem Datenschutz</h1>
<p>Soweit. So unspektakulär. Interessant wird es, vorausgesetzt man hat ein Faible für diese Art von Details, beim <strong>Datenschutz</strong>.</p>
<p align="center">
  <a href="meme-datenschutz.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="meme-datenschutz.png" alt="alt text" width="500"/>
  </a>
</p>
<br />
<br />
<p>Laut Selbstauskunft teilt die App Daten der folgenden Kategorien mit anderen Unternehmen:</p>
<ul>
<li>Finanzdaten</li>
<li>Personenbezogene Daten wie E-Mail-Adressen und Nutzer-IDs</li>
<li>App-Aktivitäten</li>
</ul>
<p>Nicht weiter verwerflich, da das beim In-App-Kauf und der Werbung durchaus Sinn macht.</p>
<p>Aber Standortdaten? (Hinweis: Standortbasierte Werbung&hellip;)</p>
<p align="center">
  <a href="screenshot-playstore-dataprivacy.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-playstore-dataprivacy.png" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Standortdaten. Warum?</small></center>
<br />
<br />
<p>Schwierig. Aber das ist noch nicht alles. Denn unter den Sicherheitsmaßnahmen heißt es:</p>
<blockquote>
<p>Daten werden nicht verschlüsselt.
Daten können nicht gelöscht werden.</p></blockquote>
<p>Ok. Immerhin ehrlich, wenn auch nicht mehr zeitgemäß. Im PlayStore von Google wird auf die Datenschutzerklärung des Entwicklers verwiesen, die dem Namen &ldquo;Datenschutzerklärung&rdquo; zu Unrecht trägt. Eine Google-Mail-Adresse, ein Absatz zu Google Analytics und dann ein Hinweis zu &ldquo;Minderjährigen&rdquo;:</p>
<p align="center">
  <a href="screenshot-eternal-dataprivacy.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-eternal-dataprivacy.png" alt="alt text" width="700"/>
  </a>
</p>
<center><small>Die Datenschutzerklärung von Eternal Studio</small></center>
<br />
<br />
<blockquote>
<p>&ldquo;Eternal Studio does not knowingly collect personal information from children under the age of 13.&rdquo;</p></blockquote>
<p>Natürlich nicht. Blöd nur, dass das Spiel ohne Altersfreigabe angeboten wird.</p>
<blockquote>
<p>&ldquo;If Eternal Studio learns that Eternal Studio has inadvertently gathered personal information from children under 13 years of age, Eternal Studio will take reasonable measures to promptly delete such personal data from Eternal Studio’s records.&rdquo;</p></blockquote>
<p>&ldquo;inadvertently&rdquo; (&ldquo;aus Versehen&rdquo;) - das klingt ein bisschen nach &ldquo;aus der Verantwortung ziehen&rdquo;.</p>
<p>Übertroffen wird das dann nur noch durch diesen Hinweis:</p>
<blockquote>
<p>&ldquo;If you are under the age of 13 or a minor in your county of residence, please ask your legal guardian’s permission to access and use our services.&rdquo;</p></blockquote>
<p>Das 4-jährige Kind soll sich also, nach Lektüre der englischen Datenschutzerklärung, an seine Eltern wenden, und um Erlaubnis bitten. Genau mein Humor. Zur Erinnerung: Das Spiel hat mit 15 Mio. Downloads eine enorme Reichweite. Etwas mehr Professionalität ist nicht zu viel verlangt, oder?</p>
<p>Unnötig zu erwähnen, dass die Seite keine Auskunft darüber gibt, mit wem man es hier tatsächlich zu tun hat. Laut &ldquo;Impressum&rdquo; kann man über <em><a href="mailto:xxx@eternalgamestudio.com">xxx@eternalgamestudio.com</a></em> Kontakt aufnehmen. In der Datenschutzerklärung selbst ist es wiederum <em><a href="mailto:xxx@gmail.com">xxx@gmail.com</a></em>. <a href="https://www.facebook.com/EternalApps/about_contact_and_basic_info">Die Facebook-Seite</a> verweist auf <em><a href="mailto:xxx@gmail.com">xxx@gmail.com</a></em>. <a href="https://x.com/eternalgamebros">Auf X/Twitter</a> erfährt man zumindest, dass das Entwicklerstudio vermutlich aus Michigan (USA) stammt.</p>
<p><em>(E-Mail-Adressen durch mich anonymisiert, sie sind zwar öffentlich zugänglich, aber wer weiß&hellip;)</em></p>
<p>Genug genörgelt, vielleicht - und das sage ich ganz unironisch - wurde der oder die EntwicklerIn ja vom Erfolg überrascht und ich bin nur durch Zufall auf eine seltene Ausnahme gestoßen. Dennoch: Hinter dem Spiel steht ein ein durchaus großer Publisher. Ein Produkt mit 15 Mio. NutzerInnen und einer derart aggressiven Werbestrategie, da darf man wohl etwas genauer hinschauen.</p>
<p>(Der AppStore von Apple verweist übrigens auf <a href="https://www.homagames.com/privacy-policy">die Datenschutzerklärung des Publishers</a>. Diese ist kumpelhaft aufgesetzt und durchaus ausführlich.)</p>
<p>Beim ersten Eindruck fällt der formelle Datenschutz also schon mal durch. Wie sieht es denn in der App aus?</p>
<p>Los geht es mit dem üblichen Consent Dialog. Hier hat man die Möglichkeit, alles ungesehen zu akzeptieren, oder per Detailauswahl Einfluss auf die erhobenen Daten zu nehmen. Problematisch: Einen Button für &ldquo;alles ablehnen&rdquo; gibt es nicht. Die Detailauswahl verbirgt sich in einer zweiten Ansicht und ist nicht sofort zugänglich.</p>
<p>Die Liste der eingesetzten Technologien ist für ein Spiel beeindruckend lang. <strong>69 Vendoren</strong> messen die Performance der Werbung, 24 die der App selber. 33 Anbieter zur Analyse von Zielgruppen, 57 um die Dienste zu verbessern. 7 Anbieter für das Targeting.</p>
<p>Jede Kategorie wird hier optimistisch als &ldquo;legitimate interest&rdquo; deklariert, also &ldquo;legitimes Interesse&rdquo;. Zur Erinnerung: Das Spiel kommt ohne Altersfreigabe aus. Bei Minderjährigen gelten laut DSGVO besondere Schutzbedürfnisse.</p>
<p>Auch die einzelnen Verarbeitungskategorien müssen händisch abgewählt werden. Unnötig zu erwähnen, dass die Erklärungen für eine<em>n normalsterbliche</em>n Nutzer<em>in, geschweige denn Minderjährige</em>n, alles andere als verständlich sind. (Hier hat übrigens der Branchenverband <strong>IAB</strong> ganze Arbeit geleistet, der diese Art von Überspezifikation namens <strong>TCF</strong> (Transparency and Consent Framework) allen Ernstes als &ldquo;Transparenz&rdquo; verkauft.)</p>
<div align="center">
<table>
  <tr>
    <td align="center">
      <a href="screenshot-consent-dialog-1.png" target="_blank">
        <img src="screenshot-consent-dialog-1.png" alt="alt text" width="250"/>
      </a>
      <br />
      <small>Berechtigtes Interesse? Bitte händisch abwählen!</small>
    </td>
    <td align="center">
      <a href="screenshot-consent-dialog-2.png" target="_blank">
        <img src="screenshot-consent-dialog-2.png" alt="alt text" width="250"/>
      </a>
      <br />
      <small>Transparenz heißt nicht Verständlichkeit</small>
    </td>
  </tr>
</table>
</div>
<br />
<br />
<p>Das ist aber noch nicht alles: In der App kann man seine Auswahl nicht nachträglich korrigieren, es gibt dafür schlicht keinen Menüpunkt. Auch das ist mit den Vorgaben der DSGVO schwer vereinbar.</p>
<p>Beim Datenschutz hinterlässt die App also nicht den besten Eindruck. Aber das ist ja nicht alles geschweige denn das, was ein Spiel ausmacht.</p>
<blockquote>
<p>(Und da sind wir wieder bei meiner allgemeinen Kritik zum Thema Datenschutz: Die meisten NutzerInnen sind vermutlich eher genervt von den ewig langen Consent-Bannern, anstatt sich informiert zu fühlen. Ganz ohne Datenerhebung geht es aber auch nicht, als Daten Analyst bin ich mir dessen bewusst. Doch gerade kleinere Studios und Unternehmen sind mit den rechtlichen Vorgaben wohl eher überfordert.)</p></blockquote>
<p>Egal. Wie sieht es mit dem Inhalt aus?</p>
<h2 id="die-sache-mit-der-werbung">Die Sache mit der Werbung</h2>
<p>Wie oben schon erwähnt, hat sich hier ein Geschäftsmodell etabliert, bei dem kostenlose Spiele scheinbar nur als Plattform dienen, Werbung mit einer - Achtung, subjektive Übertreibung zum Zwecke der Dramatisierung - maßlosen Mangel an Feingefühl auf die Endgeräte zu drücken. Mich erinnert das an ein nicht ganz so berühmte Zitat, <a href="https://nickyreinert.de/2020/2020-10-24-marketing-killed-the-internet-star/">dass ich schon einmal passend rezitieren durfte</a>:</p>
<blockquote>
<p>Journalistische Inhalte sind das Vehikel, um die Aufmerksamkeit des Publikums für die werblichen Inhalte zu erreichen</p>
<p><em>Springer-Anwälte in 2015</em></p></blockquote>
<p>Und hier scheint es leider nicht anders zu sein. Aus unternehmerischer Sicht zolle ich dem Erfolg Respekt. Aus Sicht eines Nutzers ist diese Praxis nur einen Hauch von Scam entfernt.</p>
<p>Das Spiel wird kostenlos angeboten. Für <strong>1,99 Euro</strong> kann man ein Werbe-Frei-Paket erstehen. Das ist mindestens irreführend - dazu kommen wir gleich - und technisch auch schlecht umgesetzt:</p>
<p>Ich habe das Paket auf einem Gerät gekauft, auf einem zweiten Gerät werden weiterhin Werbebanner am unteren Rand des Spiels angezeigt.</p>
<p align="center">
  <a href="screenshot-dozer-unlocked.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-dozer-unlocked.png" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Das klappt ja gut mit dem Werbefrei-Paket.</small></center>
<br />
<br />
<p>Die ganze Werbung soll damit auch gar nicht deaktiviert werden. Man bekommt <em>drei Dutzend</em> &ldquo;Upgrade-Tickets&rdquo;, mit denen bestimmte In-Game-Aktionen finanziert werden. Nach etwa 1 Stunde Spielzeit sind diese auch schon wieder aufgebraucht. Und dann werden für Upgrades und andere Spielmechaniken sporadisch, aber auch mit einer aufdringlichen Regelmäßigkeit, Werbe-Videos fällig.</p>
<p>Und die haben es in sich. Wir reden hier nicht von kleinen Einspielern für 30 Sekunden - wie man es von YouTube gewöhnt ist.</p>
<p>&ldquo;Dozer Demolish&rdquo; spielt meist zwei Spots aus, die insgesamt erstmal fast 2 Minuten dauern. Manche der beworbenen Spiele lassen sich dann sogar für etwa 15 Sekunden direkt spielen und ausprobieren. Darf man den Werbe-Overlay jetzt wieder schließen? Nein. Zunächst wird man zum PlayStore geführt. Von dort geht es wieder zum Werbe-Overlay, mit einer abschließenden Werbe-Botschaft, die nun final geschlossen werden kann.</p>
<p>Wow.</p>
<div align="center">
<table>
  <tr>
    <td align="center">
      <a href="screenshot-dozer-temu-ad.png" target="_blank">
        <img src="screenshot-dozer-temu-ad.png" alt="Der erste Einspieler dauert in der Regel 60 Sekunden." width="250"/>
      </a>
      <br />
      <small>Der erste Einspieler dauert in der Regel 60 Sekunden.</small>
    </td>
    <td align="center">
      <a href="screenshot-dozer-lastwar-ad.png" target="_blank">
        <img src="screenshot-dozer-lastwar-ad.png" alt="Danach noch mal etwa genau so lange." width="250"/>
      </a>
      <br />
      <small>Danach noch mal etwa genau so lange.</small>
    </td>
  </tr>
</table>
</div>
<p>Da grundlegende Mechaniken des Spiels von diesen Einblendungen betroffen sind, kommen auf 2 Minuten Spielen locker auch 2 Minuten Werbedruck. Wer das nicht will, kann das Kontingent an Upgrade-Tickets erneut aufstocken. 10 Tickets kosten z.B. 6,99 Euro. Das entspricht bei normalem Spielverlauf etwa 10 Minuten Spielzeit. Da teuerste Paket kostet 9,99 Euro und enthält 60 Tickets.</p>
<div align="center">
<table>
  <tr>
    <td align="center">
      <a href="screenshot-dozer-pricelist.png" target="_blank">
        <img src="screenshot-dozer-pricelist.png" alt="In-App Käufe in 'Dozer Demolish'" width="220"/>
      </a>
      <br />
      <small>In-App Käufe in "Dozer Demolish" (Quelle: <a href="https://apps.apple.com/de/app/dozer-demolish-stadtabriss/id6447895913">iOS App Store</a>)</small>
    </td>
    <td align="center">
      <a href="screenshot-dozer-store-1.png" target="_blank">
        <img src="screenshot-dozer-store-1.png" alt='"Best Value": 60 Tickets für 9,99 Euro' width="220"/>
      </a>
      <br />
      <small>Das beste Preis-Leistungs-Verhältnis: 60 Tickets für 9,99 Euro - 2 Minuten deiner Lebenszeit kosten dich 0,16 Euro.</small>
    </td>
    <td align="center">
      <a href="screenshot-dozer-store-2.png" target="_blank">
        <img src="screenshot-dozer-store-2.png" alt="Sonderangebot! 6,99 Euro für 10 Tickets" width="220"/>
      </a>
      <br />
      <small>Sonderangebot! 6,99 Euro für 10 Tickets und ein paar Upgrades. Der Preis deiner Lebenszeit erhöht sich auf 0,69 Euro!</small>
    </td>
  </tr>
</table>
</div>
<h2 id="wo-problem">Wo Problem?</h2>
<p>&ldquo;Ja gut, kann ja jeder selber entscheiden!&rdquo; könnte man jetzt meinen. Wo ist das Problem? Wie gesagt, das ist ein brilliantes Geschäftsmodell. Das Problem ist in erster Linie die Altersfreigabe und der Umgang mit den Vorgaben zum Datenschutz. Und in zweiter Linie aus persönlicher Sicht die völlig übertriebene Kopplung der Spiel-Mechanik an die Werbung-Ausspielung.</p>
<p><strong>Will man Spiele programmieren oder Werbung ausliefern?</strong></p>
<p align="center">
  <a href="meme-wo-problem.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="meme-wo-problem.png" alt="alt text" width="500"/>
  </a>
</p>
<br />
<br />
<h3 id="problem-1-geschäftsfähigkeit-von-minderjährigen">Problem 1: Geschäftsfähigkeit von Minderjährigen</h3>
<p>Bei einer <strong>Altersfreigabe</strong> von 0 (respektive 4 Jahren auf iOS), ist dieses Spiel auch einen Personenkreis zugänglich, der zumindest nach deutschem Recht nicht geschäftsfähig ist. Erst mit 7 Jahre ist man beschränkt geschäftsfähig und kann <strong>kleinere Einkäufe</strong> (&ldquo;Taschengeldparagraph&rdquo;) ohne Einwilligung der Eltern tätigen. Wie passt das mit den mitunter sehr teuren In-App Käufen zusammen?</p>
<p>Google beschreibt die Altersfreigabe im PlayStore so:</p>
<p align="center">
  <a href="usk-0-description-long.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="usk-0-description-long.png" alt="alt text" width="500"/>
  </a>
</p> 
<center><small>USK 0 - Begründung, Quelle: https://play.google.com/store/apps/details?id=com.farmadventure.global</small></center>
<br />
<br />
<p>bzw. etwas weniger ausführlich:</p>
<p align="center">
  <a href="usk-0-description-brief.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="usk-0-description-brief.png" alt="alt text" width="500"/>
  </a>
</p>
<center><small>USK 0 - Kurze Begründung, Quelle: https://play.google.com/store/apps/details?id=com.farmadventure.global</small></center>
<br />
<br />
<h3 id="problem-2-dark-pattern">Problem 2: Dark Pattern</h3>
<p>Das Spiel nutzt <strong>Dark-Pattern</strong>, um die Werbung zu platzieren, wie z.B. beim Übergang zu einem neuen Tag. Ein großer grüner Button startet einen Werbeblock und belohnt mit In-Game-Währung. Der kleine Text darunter überspringt das. Viele Upgrades werden als &ldquo;Free&rdquo; beworben, dahinter steckt in der Regel eine Werbeeinblendung. Schlägt da nur mein moralischer Kompass Alarm, wenn diese Praxis bei Minderjährigen angewendet wird?</p>
<div align="center">
<table>
  <tr>
    <td align="center">
      <a href="screenshot-dozer-earned.png" target="_blank">
        <img src="screenshot-dozer-earned.png" alt="Collect Double" width="250"/>
      </a>
      <br />
      <small>Bitte den großen, grünen Button drücken, es soll zu Ihrem Nachteil nicht sein!</small>
    </td>
    <td align="center">
      <a href="screenshot-dozer-upgrade.png" target="_blank">
        <img src="screenshot-dozer-upgrade.png" alt="alt text" width="250"/>
      </a>
      <br />
      <small>Hinter diesem Button verbirgt sich eine Werbe-Einblendung. Hätten Sie es erkannt?</small>
    </td>
  </tr>
</table>
</div>
<h3 id="problem-3-zugänglichmachung-von-spielen-mit-höherer-altersfreigabe">Problem 3: Zugänglichmachung von Spielen mit höherer Altersfreigabe</h3>
<p>Die Werbung ist aber nicht nur aufdringlich, sie ist oft alles andere als altersgerecht! Und das ist vor allem dort schwierig, wo eine minderjährige Person die Möglichkeit hat (um nicht zu sagen &ldquo;gezwungen wird&rdquo;), ein Spiel für 15 Sekunden zu testen und das beworbene Spiel eine andere Altersfreigabe hat! Stell dir vor du gehst mit deinem Kind ins Kino um Cars 7 zu schauen und vor dem Film gibt es einen Trailer zu Texas Chainsave Massacre.</p>
<div align="center">
<table>
  <tr>
    <td align="center">
      <img src="screenshot-dozer-kingshot-ad.png" alt="Testspiel" width="220"/>
      <br />
      <small>Hey Kind, noch unsicher? Teste unser Spiel doch noch mal. Jetzt. Oder widerstehe der Versuchung für 15 Sekunden.</small>
    </td>
    <td align="center">
      <img src="screenshot-dozer-kingshot-store.png" alt="Ab 12 Jahren" width="220"/>
      <br />
      <small>Das Spiel ist ab 12 Jahren. Aber das musst du deinen Eltern ja nicht erzählen.</small>
    </td>
    <td align="center">
      <img src="screenshot-dozer-tophereos-ad.png" alt="Werbepausen-Test" width="220"/>
      <br />
      <small>Auch dieses Spiel darf man im Rahmen der Werbepause einmal testen.</small>
    </td>
  </tr>
  <tr>
    <td align="center">
      <img src="screenshot-dozer-tophereos-store.png" alt="Freigabe 12 Jahre" width="220"/>
      <br />
      <small>Freigabe auch hier: 12 Jahre.</small>
    </td>
    <td align="center">
      <img src="screenshot-dozer-lastwar-ad-1.png" alt="Schießen" width="220"/>
      <br />
      <small>Macht jedes 4-jährige Kind gerne. Schießen.</small>
    </td>
    <td align="center">
      <img src="screenshot-dozer-lastwar-ad-2.png" alt="Selber schießen" width="220"/>
      <br />
      <small>Und damit es nicht beim Gucken bleibt: Selber schießen macht Bock auf mehr!</small>
    </td>
  </tr>
  <tr>
    <td align="center">
      <img src="screenshot-dozer-lastwar-store.png" alt="Freigabe 12 Jahre" width="220"/>
      <br />
      <small>Freigabe auch hier: 12 Jahre.</small>
    </td>
    <td align="center">
      <img src="screenshot-dozer-monopoly-ad.png" alt="Monopoly-Klon" width="220"/>
      <br />
      <small>Ein Monopoly-Klon wird auch beworben. Freigabe hier: 16 Jahre (wtf?)</small>
    </td>
    <td align="center">
      <img src="screenshot-dozer-zombie-ad.png" alt="Zombie-Spiel" width="220"/>
      <br />
      <small>Darf als Werbeunterhaltung auch nicht fehlen: Ein Zombie-Spiel, ab 16. Träum was Schönes heute Nacht, kleiner Prinz.</small>
    </td>
  </tr>
</table>
</div>
<p>Moment mal: Warum hat Monopoly eine Einstufung von 16 erhalten? Sicher nicht wegen expliziter Gewaltdarstellung, sondern den <strong>erhöhten Kaufanreizen</strong>:</p>
<p align="center">
  <a href="monopoly-rating.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="monopoly-rating.png" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Monopoly und In-Game-Käufe: Freigabe ab 16 Jahren</small></center>
<br />
<br />
<h2 id="trauriger-einzelfall">Trauriger Einzelfall?</h2>
<p>Auf Dozer Demolish bin ich durch Zufall gestoßen. Homa bietet zur Zeit 50 Spiele im Google PlayStore an. Ich habe mir vier andere Spiele angeschaut.</p>
<p><a href="https://play.google.com/store/apps/details?id=com.homagames.studio.allinhole&amp;hl=gsw">All in Hole!</a>. Hier ist die Werbeausspielung weitaus weniger aggressiv. Nach 15 Minuten Spielzeit gab es keine Werbeanzeigen, auch nicht als Overlay am unteren Bildschirmrand. Dafür haben es die In-Game-Käufe in sich. 99 Euro kostet das größte Paket. Auf Konsolen &amp; PC bekommt man dafür hochwertige Triple-A-Titel. Interessant: Die <strong>Altersfreigabe ist 12 Jahre</strong>. Das ergibt nicht wirklich Sinn, da ich hier keine Werbung gesehen habe und das Spielprinzip alles andere als irgendwie &ldquo;nicht jugendfrei&rdquo; ist.</p>
<p align="center">
  <a href="screenshot-allinhole-prices.jpg" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-allinhole-prices.jpg" alt="alt text" width="250"/>
  </a>
</p>
<center><small>99,99 Euro - das ist kaum noch mit Entwicklungskosten zu rechtfertigen.
</small></center>
<br />
<br />
<p><a href="https://play.google.com/store/apps/details?id=com.happykamp.aquariumland">Aquarium Land</a> (ab 0 Jahre, 50 Mio. Downloads). Hier gibts die erste Werbeeinblendung nach 5 Minuten. Auch hier wird ein Spiel aus einer anderen Alterskategorie beworben.</p>
<p><a href="https://play.google.com/store/apps/details?id=com.cosmo.cube.blast.adventure.free&amp;hl=de">Cube Blast Journey</a> (0 Jahre, 1 Mio.): Dieses Spiel kommt ohne Consent Dialog aus. Das ist ungewöhnlich. Und tatsächlich: das Monitoring zeichnet eifrig Requests auf, von denen einige deutlich zu den Tracking und Analytics-Requests zählen dürften. Zum Beispiel die zu gameanalytics.com, amazon-adsystem.com, applovin.com, adjust.com oder doubleclick.net.</p>
<p align="center">
  <a href="screenshot-cube-requests.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-cube-requests.png" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Tracking- und Analytics-Requests bei Cube Blaster Journey</small></center>
<br />
<br />
<p><a href="https://play.google.com/store/apps/details?id=com.homa.free.solitaire.card.game&amp;hl=de">Solitaire Klondike Classic</a> (0 Jahre, &gt;5 Mio.). Das Spiel wird zwar von Homa vertrieben, nach kurzer Zeit wird man hier in gebrochenem Deutsch auf &ldquo;<a href="https://play.google.com/store/apps/details?id=solitaire.klondike.classic.card.games">die neue Version</a> (0 Jahre, &gt;1 Mio.)&rdquo; verwiesen, vertrieben durch <strong><a href="https://www.freelaxgame.com/about.html">Freelax</a></strong>. Auch aufgrund des Banners am oberen Bildschirmrand ist aber nicht so recht klar, ob das ein legitimer Verweis oder schlicht Werbung ist.</p>
<p align="center">
  <a href="screenshot-solitaire-solitaire-ad.jpg" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-solitaire-solitaire-ad.jpg" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Seltsame Art, um um ein "Update" zu bieten</small></center>
<br />
<br />
<p>Bei Solitaire Classic gibt es gleich nach dem bekannten TCF-Consent-Dialog noch eine weitere Abfrage der Einwilligung - diesmal vorausgewählt. Seit DSGVO nicht mehr zulässig, da das kein &ldquo;explizites Einverständnis&rdquo; darstellt.</p>
<p align="center">
  <a href="screenshot-solitaire-consent.jpg" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-solitaire-consent.jpg" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Einwilligung vorausgewählt - das ist nicht DSGVO-konform.</small></center>
<br />
<br />
<p>Der angebliche Nachfolger ist noch etwas dreister, was die Einwilligung angeht. Hier wird der Start des Spiels an die Einwilligung gekoppelt - auch das rechtlich fragwürdig.</p>
<p align="center">
  <a href="screenshot-solitaire-start.jpg" target="_blank" style="margin: 0 auto; display: block;">
    <img src="screenshot-solitaire-start.jpg" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Noch weniger DSGVO-konform: Start des Spiels an die Einwilligung gekoppelt.</small></center>
<br />
<br />
<p><a href="https://play.google.com/store/apps/details?id=com.germanicus.cmioo&amp;hl=de">Cat &amp; Mouse</a> (6 Jahre, 10 Mio.). Auch hier wird fleißig Werbung eingeblendet, die auf nicht altersgerechte Apps und Spiele verweist.</p>
<h2 id="und-die-anderen-publisher">Und die anderen Publisher?</h2>
<p>Bemerkenswert: Die oben genannten beworbenen Spiele sind weniger aggressiv, was die Ausspielung von Werbung angeht - einige kommen ganz ohne Werbung aus. Das heißt jedoch nicht, dass der dahinterstehende Publisher nicht auch Titel im Portfolio hat, die nach dem gleichen Prinzip funktionieren.</p>
<p>Schauen wir uns <a href="https://play.google.com/store/apps/dev?id=6832375891198423999">Century Games PTE. LTD.</a> an, den Publisher hinter <strong>Kingshot</strong>. Hier gibt es 23 Spiele im Angebot, davon laut Google PlayStore 12 mit In-Game-Werbung, 5 davon ohne Altersbeschränkung. Ich habe mir drei davon angesehen:</p>
<p><a href="https://play.google.com/store/apps/details?id=com.fatmerge.global">Tasty Travels: Merge Game</a> kommt ohne gültigen Consent-Dialog aus, laut Datenschutzerklärung werden jedoch Daten zu verschiedenen Zwecken, u.a. Marketing, erhoben. Nach einiger Spielzeit wurde mir schließlich eine spielbare Demo von <a href="https://play.google.com/store/apps/details?id=com.gof.global">Whiteout Survival</a> (<a href="https://www.centurygames.com/">Century Game PTE LTD</a>, Altersfreigabe 12+) angezeigt.</p>
<div align="center">
<table>
  <tr>
    <td align="center">
      <a href="free-energy.png" target="_blank">
        <img src="free-energy.png" alt="alt text" width="250"/>
      </a>
      <br />
      <small>Spielbare Werbung für Family Farm Adventure</small>
    </td>
    <td align="center">
      <a href="whiteout.survival.png" target="_blank">
        <img src="whiteout.survival.png" alt="alt text" width="250"/>
      </a>
      <br />
      <small>Spielbare Werbung für Idle Courier</small>
    </td>
  </tr>
</table>
</div>
<p><a href="https://play.google.com/store/apps/details?id=com.farmadventure.global">Family Farm Adventure</a> hat einen fragwürdigen Consent-Dialog, ähnlich wie bei Dozer Demolish. Werbung ist mir zwar nicht aufgefallen, dafür sind die Preise noch extremer als zuvor gesehen: 120 Euro für ein In-Game-Paket – ohne zu wissen, wie lange dieses hält. Eher nicht die Preisklasse, mit der man Kinder konfrontieren sollte.</p>
<p align="center">
  <a href="family-farm-adventure.png" target="_blank" style="margin: 0 auto; display: block;">
    <img src="family-farm-adventure.png" alt="alt text" width="250"/>
  </a>
</p>
<center><small>Preistabelle für Family Farm Adventure</small></center>
<br />
<br />
<p><a href="https://play.google.com/store/apps/details?id=com.centurygames.idlecourier">Idle Courier</a> kommt ebenfalls mit einem wenig transparenten Consent-Dialog und dem Prinzip der „gekoppelten Einwilligung“ (wer weiterspielt, akzeptiert die Datenschutzbestimmungen). Hier wurde mir bereits nach 2 Minuten die erste spielbare Werbung für Kingshot (Altersfreigabe 12+) angezeigt.</p>
<p><a href="https://play.google.com/store/apps/developer?id=RiverGame">River Game</a> und <a href="https://play.google.com/store/apps/developer?id=FUNFLY&#43;PTE.&#43;LTD.">Funfly PTE</a> bieten keine Spiele mit einer Altersfreigabe von 0 Jahren an. <a href="https://play.google.com/store/apps/developer?id=FunPlus&#43;International&#43;AG">FunPlus International AG</a> hat 15 Spiele im Angebot, alle mit Altersfreigaben zwischen 12 und 16 Jahren. <a href="https://play.google.com/store/apps/dev?id=9028773071151690823">Scopely</a> hat nur ein Spiel mit Altersfreigabe 0, aber ohne Werbung.</p>
<h2 id="fazit">Fazit?</h2>
<p>Die genannten Spiele verfolgen ihr Werbeziel zwar bei weitem nicht so aggressiv wie &ldquo;Dozer Demolish&rdquo;, aber die Ausspielung scheint auch hier systematisch dem gleichen Muster zu folgen. In Spielen, die eine bestimmte Altersbeschränkung haben, wird Werbung für Spiele mit einem höheren Alter ausgespielt. Und nicht nur das, sie können sogar direkt ausprobiert werden.</p>
<p>Nun kann man sich darüber streiten, ob 4-jährige Kinder überhaupt schon Zugang zu Tablets und Smartphones haben sollten, um dann damit auch noch derartige Spiele zu spielen. Aber das ist eine pädagogische Frage. Letztlich werden die Spiele mit einer gewissen Altersbeschränkung vertrieben, ebnen aber trotzdem den Weg zu Inhalten, die nicht altersgerecht sind. Und das ist dann nicht mehr nur eine pädagogische Problematik. Ganz zu schweigen von den Consent-Dialogen und der Preisgestaltung.</p>
<p>Bemerkenswert ist, dass derart erfolgreiche Spiele unter dem Radar fliegen. Aus eigener Erfahrung weiß ich, dass Google zumindest formell sehr strenge Vorgaben hat. Die Einhaltung der Plattformrichtlinien wird (automatisiert?) überwacht und mit Fristen und drohender De-Publizierung durchgesetzt. So mein Eindruck. Ist Google in manchen Fällen etwas nachlässiger, weil auch der eigene Umsatz von den Werbeeinnahmen abhängt?</p>
<p>Nicht falsch verstehen: Die meisten Spiele sind qualitativ durchaus hochwertig, manche bieten sogar eine ordentliche Story. Es ist nur fair, dass Entwickler oder Publisher versuchen, ihre Kosten durch Monetarisierung zu decken. Auf Homa bin ich nur durch Zufall gestoßen und möchte den Publisher keineswegs als schwarzes Schaf darstellen. Aber da es hier um die jüngste Zielgruppe geht, um lasche Datenschutzpraktiken, unkontrollierte Werbung und teure In-App-Käufe, sollte vielleicht mal etwas genauer hinschauen - nicht nur bei Homa.</p>
<p>Und außedem frage ich mich, ob es überhaupt noch darum geht, gute Unterhaltung zu bieten, oder eher darum, mit möglichst geringem Aufwand den Markt zu überschwemmen, um Nutzer mit einfachen Spielideen so lange wie möglich am Gerät zu halten und so möglichst viel Werbung auszuspielen?</p>
<p>Ich bin kein Fan von Handyspielen. Und jetzt weißt du warum.</p>
<h2 id="stellungnahme-von-homa-und-google">Stellungnahme von Homa und Google</h2>
<p>Ich habe <strong>Homa</strong> und <strong>Google</strong> am 30.07. um eine Stellungnahme gebeten. Homa hat innerhalb von zwei Tagen geantwortet und angekündigt, sich intern der Thematik anzunehmen. Vorbildlich, ich bin gespannt. Google hat sich bisher nicht geäußert.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Der Schmale Grat zwischen Scam und eifrigem Unternehmertum - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>My 2,718281828459045235 Cents - Was Vibe Coding nicht ist</title>
      <link>http://localhost:1313/2025/2025-05-02-mtc---was-vibe-coding-nicht-ist/</link>
      <pubDate>Fri, 02 May 2025 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2025/2025-05-02-mtc---was-vibe-coding-nicht-ist/</guid>
      <description>OK, zugegeben, ich tue jetzt so oberschlau, aber tatsächlich war mir auch nicht so richtig klar, was Vibe Coding eigentlich bedeutet. Dank Sven habe ich das …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt My 2,718281828459045235 Cents - Was Vibe Coding nicht ist und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>OK, zugegeben, ich tue jetzt so oberschlau, aber tatsächlich war mir auch nicht so richtig klar, was <strong>Vibe Coding</strong> eigentlich bedeutet. Dank <a href="https://moorwald.com/">Sven</a> habe ich das heute aber gelernt!</p>
<p>Vibe Coding bedeutet <strong>nicht</strong>, dass eine EntwicklerIn Code schreibt und dabei von einer KI unterstützt wird.</p>
<p>Es bedeutet vielmehr: Eine KI wird nur durch natürliche Sprache dazu gebracht, ein Projekt umzusetzen. In einer Art Dialog, ohne sich wirklich mit dem Code zu beschäftigen. Das Ergebnis taugt gerade so als &ldquo;Wegwerf-Wochenendprojekt&rdquo;. So in etwa hatte es Andrej Karpathy, ehemaliger KI-Direkt von Tesla, vor einigen Wochen definiert:</p>
<p><img src="/2025/2025-05-02-mtc---was-vibe-coding-nicht-ist/image.png" alt="alt text"></p>
<p>Wenn ich also <strong>GitHub Copilot</strong>, <strong>ClaudeAI</strong> oder <strong>ChatGPT</strong> systematisch dazu nutze, um ein Projekt zu konzeptionieren, eine Architektur zu entwerfen, Code zu vervollständigen, Code-Blöcke zu schreiben, testen oder debuggen - dann ist das <strong>nicht</strong> Vibe Coding sondern einfach eine neue, effiziente Art zu programmieren.</p>
<p><a href="https://simonwillison.net/2025/May/1/not-vibe-coding/#atom-everything">Simon Willison beschreibt</a>, wie sich diese falsche Beschreibung gerade etabliert, auch weil drei Autoren und zwei Bücher den Begriff &ldquo;<strong>Vibe Coding</strong>&rdquo; aufgreifen und als Methode für professionelle Entwickler beschreiben.</p>
<p>Dieses Missverständnis ist übrigens ein klassisches Beispiel für &ldquo;<strong>Semantic Diffusion</strong>&rdquo;. Und auch den Begriff habe ich heute zum ersten Mal gehört, dabei hat <strong>Martin Fowler</strong> <a href="https://martinfowler.com/bliki/SemanticDiffusion.html">ihn schon 2006</a> geprägt: Was ist <strong>Semantic Diffusion</strong>? Die Bedeutung eines Begriffes, die eigentlich sehr genau beschrieben ist, wird durch eine Art &ldquo;<strong>Stille Post</strong>&rdquo; immer weiter verwässert oder sogar umgedeutet.</p>
<p>Auch im Umgang mit dem Begriff KI kann man sehr gut beobachten, wie die Bedeutung sukzessive &ldquo;<em>diffundiert</em>&rdquo;. Sehr oft und gerne wird alles, was nur irgendwie einen Algorithmus enthält, als KI verkauft.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>My 2,718281828459045235 Cents - Was Vibe Coding nicht ist - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 41 - Welche Farbe hat Chuck Norris?</title>
      <link>http://localhost:1313/2023/2023-10-03-nerd-enzyklop%C3%A4die-41---welche-farbe-hat-chuck-norris/</link>
      <pubDate>Tue, 03 Oct 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-10-03-nerd-enzyklop%C3%A4die-41---welche-farbe-hat-chuck-norris/</guid>
      <description>
Eine Farbe sagt mehr als 1.000 Worte!
Oder so ähnlich. Im Webdesign können Farben unterschiedlich definiert werden. Ziemlich weit verbreitet ist die Angabe der …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 41 - Welche Farbe hat Chuck Norris? und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="/2023/2023-10-03-nerd-enzyklop%C3%A4die-41---welche-farbe-hat-chuck-norris/image1.png" alt=""></p>
<p>Eine Farbe sagt mehr als 1.000 Worte!</p>
<p>Oder so ähnlich. Im Webdesign können Farben unterschiedlich definiert werden. Ziemlich weit verbreitet ist die Angabe der roten, grünen und blauen Farbanteile mittels der entsprechenden Hexadezimal-Wertes. Jeder Farbanteil wird auf einer Skala von 0 bis 255 angegeben, bzw. in hexadezimaler Schreibweise von 0 bis FF.</p>
<p>Der folgende Farbcode steht z.B. für Grün (0 Rotanteile, 255 bzw. FF Grünanteile und 0 Blauanteile. (Ein Farbwert hat immer genau 2 Stellen, deshalb schreibt man 00 und nicht nur 0. So lässt sich auch genau erkennen, welcher Teil des Farbcodes für welche Farbe steht.)</p>
<pre><code>#00FF00
</code></pre>
<p>Da hexadezimale Werte alphanumerische Zeichen enthalten, lassen sich damit auch Wörter bilden, in etwa so wie damals in der Schule auf dem Taschenrechner. Ein Beispiel:</p>
<pre><code>#C0FFEE
</code></pre>
<p>Eigentlich darf ein Farbcode nicht mehr als 6 Stellen haben, die nur Ziffern und die Buchstaben von A bis F enthalten, trotzdem lassen sich auch beliebige Wörter verwenden und so ganze klandestine Botschaften im Farbcode verstecken! Wenn man damit leben kann, dass der Browser den Farbcode mitunter etwas seltsam interpretiert und das nur unter bestimmten Bedingungen anwendbar ist (siehe unten):</p>
<pre><code>#CHUCKNORRIS
</code></pre>
<p>Wie funktioniert das? Der Browser ersetzt alle nicht gültigen Zeichen einfach mit 0. Aus CHUCKNORRIS wird also:</p>
<pre><code>#C00C0000000
</code></pre>
<p>Da man nun aber mehr als 6 Stellen hat, geht der Browser einfach davon aus, dass sich die Stellen gleichmäßig auf die drei Farbanteile verteilen.
Dazu muss erstmal eine 0 angehangen werden, um auf ein Vielfaches von 3 zu kommen:</p>
<pre><code>#C00C00000000
</code></pre>
<p>Nun werden bei jedem einzelnen Farbwert die letzten beiden Stellen abgeschnitten, weil ja nur nur 2 Stellen erwartet werden! Eine Sonderregel besagt, dass zuerst führende Nullen abgeschnitten werden [SCRAP1]). Das interpretierte Resultat sieht also so aus:</p>
<pre><code>#C00000
</code></pre>
<p>CHUCKNORRIS ist also rot! (Der geübte Nerd-Blick erkennt hier sofort 192 Rotanteile und sonst nichts.) Und irgendwie passt das ja auch, oder?
Natürlich funktioniert das mit beliebigen Wörtern. nerdenzyklopädie ergibt z.B. ein prächtiges Lila!</p>
<p>Das klingt nach viel Spaß für Jung und Alt. Doch leider hat die Sachen einen kleinen Haken: Das Farbenspiel funktioniert nur bei Verwendung des HTML Attributs bgcolor, nicht über die typischen CSS-Attribute wie background-color und Co.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 41 - Welche Farbe hat Chuck Norris? - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 40 - isUserAMonkey</title>
      <link>http://localhost:1313/2023/2023-06-22-nerd-enzyklop%C3%A4die-40---isuseramonkey/</link>
      <pubDate>Thu, 22 Jun 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-06-22-nerd-enzyklop%C3%A4die-40---isuseramonkey/</guid>
      <description>
Googles Betriebssystem Android bietet über Schnittstellen eine Vielzahl von Methoden an, um den Entwickler:innen die Arbeit zu erleichtern. Eine dieser …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 40 - isUserAMonkey und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="imag1.png" alt=""></p>
<p><strong>Googles</strong> Betriebssystem <strong>Android</strong> bietet über Schnittstellen eine Vielzahl von Methoden an, um den Entwickler:innen die Arbeit zu erleichtern. Eine dieser Methoden heißt <strong>isUserAMonkey</strong>. Die Methode prüft, ob die Benutzeroberfläche von einem Affen manipuliert wurde [<a href="https://developer.android.com/reference/android/app/ActivityManager.html#isUserAMonkey%28%29">ANDRO1</a>]:</p>
<blockquote>
<p>Returns “true” if the user interface is currently being messed with by a monkey.</p></blockquote>
<p>Das klingt danach, als würde Google sich einen Spaß erlauben, aber es gibt tatsächlich ein Tool, das pseudo-randomisierte Ereignisse simuliert: <strong>Monkey</strong> erzeugt wahllos Clicks, Wischgesten und vieles mehr, um eine Benutzeroberfläche auf Herz und Nieren zu prüfen. Und mit der Method <strong>isUserAMonkey</strong> findet man heraus, ob das eigene Programm gerade von eben jenem Hilfsmittel „bedient“ wird.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 40 - isUserAMonkey - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 35 - JavaScript Bananas</title>
      <link>http://localhost:1313/2023/2023-06-07-nerd-enzyklop%C3%A4die-35---javascript-bananas/</link>
      <pubDate>Wed, 07 Jun 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-06-07-nerd-enzyklop%C3%A4die-35---javascript-bananas/</guid>
      <description>
Nerd-Enzyklopädie #35
Auf den ersten Blick steckt JavaScript voller Mysterien. Erst wenn man etwas genauer hinschaut, erkennt man die Eleganz einer gewissen …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 35 - JavaScript Bananas und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="/2023/2023-06-07-nerd-enzyklop%C3%A4die-35---javascript-bananas/image1.png" alt=""></p>
<p>Nerd-Enzyklopädie #35</p>
<p>Auf den ersten Blick steckt JavaScript voller Mysterien. Erst wenn man etwas genauer hinschaut, erkennt man die Eleganz einer gewissen Regeltreue. Zu welchem Ergebnis könnte z.B. diese Anweisung führen:</p>
<pre><code>  &quot;b&quot; + &quot;a&quot; + +&quot;a&quot; +&quot;a&quot;;
</code></pre>
<p>Richtig, es ist <strong>baNaNa</strong>! Aber warum und wieso nicht einfach <strong>baaa</strong>? Die Details spielen hier eine wichtige Rolle und damit ist diese Frage prädestiniert für das nächste JavaScript-Bewerbungsgespräch: Dem zweiten “a” wird das Plus-Zeichen ohne Leerzeichen vorangestellt. Damit handelt es sich um einen „<strong>unären Operator</strong>„, mit dem das darauf folgende Zeichen als numerischer Wert interpretiert wird. Das “a” ist aber kein numerischer Wert, sprich <strong>not a number</strong>. Die Kurzform dafür lautet <strong>NaN</strong> und die Anweisung ergibt somit ausgeschrieben:</p>
<pre><code>&quot;b&quot; + &quot;a&quot; + NaN + &quot;a&quot;;
</code></pre>
<p><strong>NaN</strong> ist in JavaScript zwar streng genommen eine Property, die aber „automatisch“ in einen String umgewandelt wird, um die Anweisung ausführen zu können und damit lautet das finale Ergebnis:</p>
<p>baNaNa</p>
<p><strong>JavaScript</strong> steckt voller weiterer unterhaltsamer Fallstricke und Seltsamkeiten, deren Lektüre sich gut für einen gemütlichen Abend vor dem Kamin eignet, mehr davon gibt es bei <strong>WTFS</strong>: <a href="https://github.com/denysdovhan/wtfjs">[GITH1].</a></p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 35 - JavaScript Bananas - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 22 - Läuft darauf Doom?</title>
      <link>http://localhost:1313/2023/2023-04-28nerd-enzyklop%C3%A4die-22---l%C3%A4uft-darauf-doom/</link>
      <pubDate>Fri, 28 Apr 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-04-28nerd-enzyklop%C3%A4die-22---l%C3%A4uft-darauf-doom/</guid>
      <description>
Doom ist ein sehr erfolgreicher und für damalige Verhältnisse fortschrittlicher 1st-Person-Shooter von id Software aus dem Jahre 1993. Zusammen mit seinem …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 22 - Läuft darauf Doom? und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="/2023/2023-04-28nerd-enzyklop%C3%A4die-22---l%C3%A4uft-darauf-doom/image1.png" alt=""></p>
<p><strong>Doom</strong> ist ein sehr erfolgreicher und für damalige Verhältnisse fortschrittlicher <strong>1st-Person-Shooter</strong> von <strong>id Software</strong> aus dem Jahre <strong>1993</strong>. Zusammen mit seinem Nachfolger <strong>Doom 2</strong> stand Doom zwischen <strong>1994</strong> und <strong>2011</strong> zwar auf der Liste jugendgefährdender Schriften, das tat dem Erfolg aber keinen Abbruch.</p>
<p>Doom kann mittlerweile zum „<strong>kulturellen Erbe der Spieleindustrie</strong>“ gezählt werden, es diente und dient immer noch als Inspiration für andere Spiele und entwickelte sich im Laufe der Jahre zu einem recht erfolgreichen Franchise mit Filmen, Brettspielen und sogar Büchern.</p>
<p>Der Quell-Code von Doom wurde <strong>2011</strong> zur freien Verfügung gestellt und konnte so modifiziert werden, um das Spiel auch auf anderen Geräten zum Laufen zu bringen. Das war der Startschuss für eine ganz besondere Herausforderung die der Frage folgt: Auf welche technischen Geräte lässt sich das Spiel portieren? Kurz: „<strong>Läuft darauf Doom</strong>“ (<strong>Will it run Doom</strong>)?</p>
<p>Dabei geht es nicht nur um Geräte, die für die Ausführung von Spielen konzipiert sind, also Computer oder Konsolen, sondern auch um ungewöhnliche Dinge wie Mobiltelefone oder Kameras. Nicht ungewöhnlich genug? Das ist eine, sicher unvollständige Liste, von Geräten, auf denen sich Doom spielen lässt:</p>
<p>• ein Oszilloskop [<a href="https://www.youtube.com/watch?v=xZaKlLyikKg">YOUT2</a>]<br>
• ein Drucker [<a href="https://youtu.be/XLHx3vO7KJM">YOUT3</a>]<br>
• eine Anzeigetafel für Werbung [<a href="https://www.youtube.com/watch?v=PxIGuMif1Nk">YOUT4</a>]<br>
• LeapTV, einem Lernsystem für Kinder [<a href="https://www.youtube.com/watch?v=AbnhyR8NwcI">YOUT5</a>]<br>
• ein Geldautomaten [<a href="https://youtu.be/PW5ELKTivbE">YOUT6</a>]<br>
• ein Piano [<a href="https://youtu.be/sJu997jwBcA">YOUT7</a>]<br>
• ein Toaster [<a href="https://itrunsdoom.tumblr.com/post/107805988348/the-prophecy-has-been-fulfilled">TUMB1</a>]<br>
• innerhalb von Teletext [<a href="https://www.youtube.com/watch?v=rIgQV4ClmQ0">YOUT9</a>]<br>
• als Weihnachtsbaumschmuck [<a href="https://www.youtube.com/watch?v=u9ODhV40aEI">YOUT10</a>]<br>
• innerhalb von Notepad [<a href="https://www.youtube.com/watch?v=a3VoEyaqMo">YOUT11</a>]<br>
• auf einem Lego-Stein [<a href="https://www.youtube.com/watch?v=o76U0JPrMFk">YOUT12</a>]</p>
<p>Und natürlich läuft Doom auch innerhalb von Doom — #<strong>Doomception</strong>![<a href="https://youtu.be/wbnfYBFKD1g">YOUT8</a>]</p>
<p><img src="/2023/2023-04-28nerd-enzyklop%C3%A4die-22---l%C3%A4uft-darauf-doom/image2.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Doom in Teletext? Läuft! [[YOUT9](https://www.youtube.com/watch?v=rIgQV4ClmQ0)]
</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 22 - Läuft darauf Doom? - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 21 - 00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a</title>
      <link>http://localhost:1313/2023/2023-04-25-nerd-enzyklop%C3%A4die-21---00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a/</link>
      <pubDate>Tue, 25 Apr 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-04-25-nerd-enzyklop%C3%A4die-21---00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a/</guid>
      <description>
Bei dieser Zeichenkette handelt es sich um einen Hash, der im Sommer 2018 durch die „internet’sche Bitcoin-Blase“ geisterte. Wer verstehen will wie anfällig …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 21 - 00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><img src="/2023/2023-04-25-nerd-enzyklop%C3%A4die-21---00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a/image1.png" alt=""></p>
<p>Bei dieser Zeichenkette handelt es sich um einen Hash, der im Sommer <strong>2018</strong> durch die „<strong>internet’sche Bitcoin-Blase</strong>“ geisterte. Wer verstehen will wie anfällig die Bitcoin-Szene für aufmerksamkeitsgenerierende Effekthascherei ist, der sollte sich mit diesem Hash beschäftigen:</p>
<p><img src="/2023/2023-04-25-nerd-enzyklop%C3%A4die-21---00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a/image2.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Quelle: [TWIT2]
</p>
<p>Doch bevor ich erkläre, was daran so besonders ist, zunächst ein paar Details — du willst hier ja auch etwas lernen.<br>
Zunächst einmal die offensichtlichen Unklarheiten: Ein Hash ist eine Art Ableitung einer beliebigen Information. Das können ein Text, ein Bild oder irgendwelche anderen digitalen Daten sein. Man schiebt diese Informationen durch einen relativ komplexen Algorithmus, wie z.B. den weit verbreiteten SHA-256 (Secure Hash Algorithm 256). Das Ergebnis ist ein Hash und in der Fachsprache nennt man den Vorgang „kryptologische Hash-Funktion“. Der Hash verändert sich, sobald die eingegebene Information auch nur um ein Zeichen abweicht. Es ist äußerst selten, also wirklich sehr sehr selten, dass zwei unterschiedliche Eingaben zum gleichen Hash führen. Was immer gleich ist: Die Länge des Hashes: Er besteht aus 32 Byte wobei jedes Byte eine Größe von 8 Bit hat. 32 x 8 = 256 — du erkennst die Zusammenhänge?<br>
„32 Byte? Das Ding da oben ist aber 64 Zeichen lang!“ wirst du jetzt vermutlich reklamieren. Korrekt. Aber warum? Es folgt ein kurzer Ausflug in die verrückte Welt der Stellenwertsysteme:<br>
Wie kann man im binären Zahlensystem, in dem ja nur zwei Symbole zur Verfügung stehen (0 und 1), einen höheren Wert als 1 darstellen? Indem wir mehrere Stellen benutzen. Verteilt man das Symbol 1 auf 8 Stellen, kann man so den Wert 255 darstellen — wie das genau funktioniert habe ich im 1. Teil erklärt):</p>
<pre><code>  11111111
</code></pre>
<p>Im <strong>Hexadezimalsystem</strong> stehen uns <strong>16 Symbole</strong> zur Verfügung, da wir hier nicht nur die Zahlen von 0 bis 9 sondern auch die Buchstaben von A bis F verwenden dürfen. So sieht die Zuordnung aus:</p>
<p><img src="/2023/2023-04-25-nerd-enzyklop%C3%A4die-21---00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a/image3.png" alt=""></p>
<p>Das Hexaedzimalsystem und die Zurodnung der ersten 16 Stellen</p>
<p>Der Wert <strong>255</strong> wird folgendermaßen geschrieben:</p>
<pre><code>FF
</code></pre>
<p>Man könnte auch ein Stellenwertsystem mit mehr als 16 Zeichen verwenden, z.B. das <strong>Sexagesimalsystem</strong> (<strong>Basis 60</strong>) der <strong>Sumerer</strong>:</p>
<p><img src="/2023/2023-04-25-nerd-enzyklop%C3%A4die-21---00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a/image4.png" alt=""></p>
<p style="text-align: center;font-style:italic">
Sexagesimalsystem zur Basis 60 der Sumerer
</p>
<p>Die Zeichen mögen exotisch anmutend, tatsächlich benutzen wir das System aber in unserem Alltag: In der Zeitmessung und zur Angabe von geografischen Längen und Breiten. Der Wert <strong>255</strong> wird hier als <strong>4’15</strong>, also <strong>4 Minuten und 15 Sekunden</strong>, dargestellt.</p>
<p>Aber zurück zu unserem Hash: Ein <strong>SHA-256</strong> <strong>Hash</strong> besteht aus <strong>32 Bytes</strong> in hexadezimaler Schreibweise. Und da ein Byte aus 8 Bit entsteht, benötigt die Darstellung des höchstens Wertes (nämlich FF) zwei Stellen. Damit besteht der Hash also effektiv aus <strong>64 Zeichen</strong>. In binärer Schreibweise, also bei Verwendung von 0 und 1, hat der Hash eine Länge von <strong>256 Zeichen</strong> und so schließt sich der Kreis!</p>
<h1 id="von-der-mathematik-zur-magie">Von der Mathematik zur Magie…</h1>
<p>Das war ganz schön kompliziert und deswegen widmen wir uns jetzt etwas einfacherem: Was ist denn an dem Hash so besonders? Es handelt sich um den Hash eines sogenannten Blocks einer sogenannten <strong>Blockchain</strong> (und zwar der sogenannten Kryptowährung Bitcoin und dem Block mit der Nummer <strong>528.249</strong> [<a href="https://explorer.btc.com/btc/block/00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a">BTC1</a>]). In <strong>2018</strong> führte dieser Hash zu Verwirrung und Begeisterung zugleich. Die Szene beschrieb den Hash sogar als…“<strong>magisch</strong>”. Aber warum?</p>
<p>Wie eben beschrieben entsteht ein Hash wenn eine bestimmte Information durch einen Algorithmus modifiziert wird. Bei der Bitcoin-Blockchain gibt es <strong>komplexe Regeln</strong>, die diese Berechnung sehr aufwendig machen. Unter anderem ist ein Hash durch eine bestimmte Anzahl führender Nullen gekennzeichnet. Dadurch entsteht eine rechnerische Schwierigkeit, die nicht nur als Voraussetzung für die <strong>Sicherheit</strong> der Blockhchain herhalten muss, sondern auch für <strong>Wettbewerb</strong> unter den Teilnehmer:innen sorgt (und auch für den oft kritisierten <strong>hohen Energieverbrauch</strong> der Bitcoin-Blockchain verantwortlich ist). Diejenige, die diese „<strong>kryptologische Aufgabe</strong>“ zuerst löst, wird belohnt. So die Kurzfassung.</p>
<p>Die auffällige große Anzahl führender Nullen ist aber nicht der Aufregung wert. Sie ist beeindruckend, aber keine Seltenheit. Die Aufmerksamkeit richtete sich vielmehr auf die ersten Zeichen nach den Nullen:</p>
<pre><code>21E8
</code></pre>
<p>Hier kommt <strong>Zahlensymbolik</strong> ins Spiel. So wird die <strong>21</strong> gerne mit der maximal möglichen Menge von Bitcoins assoziiert, nämlich <strong>21 Mio</strong>. Diese Grenze ist im Bitcoin-Protokoll fest verankert und wird aufgrund einiger Regeln irgendwann Anfang des nächsten Jahrhunderts erreicht.</p>
<p><strong>E8</strong> steht für die <strong>Liesche-Gruppe</strong>, ein wichtiges und gleichzeitig kompliziertes mathematisches Konstrukt, das für viele Forscher einer <strong>universellen Weltformel</strong> nahekommen soll, aber eben noch nicht tut.</p>
<p>Da ein Hash das Resultat einer aufwendigen mathematischen Funktion ist, kann man ihn nicht nach Belieben erzeugen, um “geheime” Botschaften zu übermitteln. Grund genug, hinter diesem besonderen Hash und der <strong>E128</strong> eine geheime Botschaft aus der Zukunft zu vermuten, die vielleicht sogar vom Bitcoin-Erfinder <strong>Satoshi Nakamoto</strong> persönlich stammt.</p>
<p>Zahlreiche Portale beschäftigten sich mit dem Phänonem, es wurde darüber getwittert und Blockchain-Influencer befassten sich in aufgeregten YouTube-Clips mit dem Ereignis. Tatsächlich ist diese Kombination aber reiner Zufall, der gar nicht so unwahrscheinlich ist. Laut <strong>Andrew Miller</strong>, Assistenzprofessor an der University of Illinois, kommt es im Schnitt nämlich alle <strong>455</strong> Tage zu einer derartigen Erscheinung [<strong>BUSIN1</strong>]. Zuletzt beim Block <strong>475.118 im</strong> <strong>Juli 2017</strong> [<strong>BTC2</strong>]. Also: Viel Aufregung um nichts. Oder: Ein ganz normaler Tag in der Bitcoin-Community…</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 21 - 00000000000000000021e800c1e8df51b22c1588e5a624bea17e9faa34b2dc4a - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 8 - Hello World hat einen Bug</title>
      <link>http://localhost:1313/2023/2023-03-16-nerd-enzyklop%C3%A4die-8---hello-world-hat-einen-bug/</link>
      <pubDate>Thu, 16 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-16-nerd-enzyklop%C3%A4die-8---hello-world-hat-einen-bug/</guid>
      <description>Hello World! hat einen Bug Solltest du jemals in den erhabenen Genuss kommen eine Programmiersprache erlernen zu dürfen, wird deine erste Lektion vermutlich die …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 8 - Hello World hat einen Bug und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <h2 id="hello-world-hat-einenbug">Hello World! hat einen Bug</h2>
<p>Solltest du jemals in den erhabenen Genuss kommen eine Programmiersprache  erlernen zu dürfen, wird deine erste Lektion vermutlich die Ausgabe von „hello world!“ behandeln.  Ein Klassiker, beliebt bei Jung und Alt und so etwas wie der Running Gag in der Programmierer-Szene. (Das Verständnis für Nerd-Humor muss man sich übrigens hart erarbeiten.)</p>
<p>Der erste nachvollziehbare Beleg für diese Tradition geht auf Brian Kernighan zurück. Dieser verfasste für die Bell Laboratories eine Anleitung zur Programmierung mit B (Überraschung: der Nachfolger von B ist übrigens C). Dort wurde „hello, world“ aber nur als Beispiel-Ausgabe eines Programmes verwendet. Erst in einer späteren Anleitung für die Programmiersprache C von 1978 führte Kernighan dann die heute gewohnte Variante ein:</p>
<pre><code>main( ) \{

printf(&quot;hello, world\\n“);

\}
</code></pre>
<p>(Das \n am Ende steht für „new line“).</p>
<p>Wie dem auch sei: Die Umsetzung dieses einfachen Beispiel ist in den allermeisten Programmiersprachen nicht korrekt, sie hat einen Bug. Aber warum? </p>
<p>Unter Linux gibt es unter /dev das Gerät /dev/null — sendet man Ausgaben an dieses Gerät, passiert in der Regel gar nichts. /dev/null hat einen weniger bekannten Verwandten, nämlich /dev/full, das einen vollen Speicher simulieren soll. Sendet man eine Nachricht an diese Gerät, gibt es die Fehlermeldung zurück, das kein Speicher verfügbar ist:</p>
<pre><code>echo &quot;Hello World!&quot; \&gt; /dev/full  
echo: write error: No space left on device1  
echo $?  
1
</code></pre>
<p>Die Rückmeldung ist 1, was soviel bedeutet wie: Ein Fehler ist aufgetreten. Die Idee dahinter ist, dass man prüfen kann, wie ein Programm auf Fehlermeldungen reagiert. Was aber passiert, wenn man die Ausgabe der C-Implementierung von „hello, world“ zu diesem Gerät schickt?</p>
<pre><code>gcc hello.c -o hello  
./hello \&gt; /dev/full  
echo $?  
0
</code></pre>
<p>Die Rückmeldung ist 0  - also: „Kein Fehler aufgetreten„, was natürlich nicht stimmen kann. Auch die Implementierungen in anderen mitunter sehr populären Sprachen zeigen dieses Verhalten.</p>
<p>Das Hello-World-Programm ist zwar simpel und erfüllt seinen Zweck; setzt man allerdings strenge Qualitäts-Maßstäbe an, erfordert das die Berücksichtigung aller denkbaren Situationen. Und das ist hier nicht der Fall. „hello, world„ hat also - streng genommen - einen Bug.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 8 - Hello World hat einen Bug - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Die Nerd Enzyklopädie 6 - Die Entstehungsgeschichte von Activision</title>
      <link>http://localhost:1313/2023/2023-03-10-nerd-enzyklop%C3%A4die-6---die-entstehungsgeschichte-von-activision/</link>
      <pubDate>Fri, 10 Mar 2023 12:19:31 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/2023/2023-03-10-nerd-enzyklop%C3%A4die-6---die-entstehungsgeschichte-von-activision/</guid>
      <description>Activision gehört zu den erfolgreichsten Unternehmen der Videospiel-Industrie und die Entstehung ist eng verknüpft mit dem Untergang eines Videospiel-Pioniers: …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Die Nerd Enzyklopädie 6 - Die Entstehungsgeschichte von Activision und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p><strong>Activision</strong> gehört zu den erfolgreichsten Unternehmen der Videospiel-Industrie und die Entstehung ist eng verknüpft mit dem Untergang eines Videospiel-Pioniers: <strong>Atari</strong>. Der Grund: Fehlentscheidungen und Ignoranz [<a href="https://www.gameinformer.com/b/features/archive/2013/02/26/activisionaries-how-four-programmers-changed-the-game-industry-forever.aspx">GAME1</a>].</p>
<p><img src="/2023/2023-03-10-nerd-enzyklop%C3%A4die-6---die-entstehungsgeschichte-von-activision/IMAGE1.jpg" alt=""></p>
<p style="text-align: center;font-style:italic">
Nein, nicht Facebooks Metaverse, sondern Pitfall von Activision!
</p>
<p>Aber von Anfang an: Atari wurde 1972 von <strong>Nolan Bushnell</strong> und <strong>Ted Dabney</strong> gegründet. Atari produzierte sowohl Spielecomputer als auch Spiele und war zu der Zeit genau das, was man heute als „Start-Up“ bezeichnen würde: Gute Stimmung, gutes Produkt.</p>
<p>Das wohl erste populäre Computerspiel <strong>Pong</strong> stammte von Atari. Der <strong>Atari 2600</strong> ist eine der ersten Konsolen und kann wohl mit Fug und Recht als Kulturgut bezeichnet werden. Ab Mai 1974 arbeitete sogar der spätere Apple-Gründer <strong>Steve Jobs</strong> für Atari. Kurzum: Es lief bei Atari.</p>
<p>Trotz des Erfolg des Unternehmens konnte nicht genug Kapital aufgebracht werden, um die Forschung für neue Technologien voranzutreiben. Das Unternehmen wurde deshalb 1976 an <strong>Warner Communications</strong> verkauft — schon damals ein bedeutender Player in der Unterhaltungsindustrie.</p>
<p><strong>Bushnell</strong> musste das Unternehmen 1978 verlassen, um Platz zu machen für <strong>Raymond Kassar</strong>. Und mit Warner und Kassar endete die lockere Start-Up-Mentalität. Kostenoptimierung und Disziplin standen von nun an auf der Tagesordnung. „<strong>The days of hot-tubbing in the office were over</strong>“, so Crane [<a href="https://www.gamedeveloper.com/business/the-history-of-activision">GAME2</a>].</p>
<p>Die Sparkur hatte Erfolg: Anfang 1979 veröffentlichte das Management die Zahlen für das Vorjahr. Das Unternehmen machte mit dem Verkauf von Spiele-Cartridges einen Gewinn von <strong>100 Mio. USD</strong>. Es ging steil bergauf.</p>
<p>Die vier Top-Programmierer <strong>David Crane</strong>, <strong>Larry Kaplan</strong>, <strong>Alan Miller</strong>, and <strong>Bob Whitehead</strong> konnten sich darüber nicht so richtig freuen. Zusammen hatten die vier mehr als die Hälfte der Spiele produziert, gleichzeitig verdienten sie aber gerade einmal <strong>22.000 USD pro Jahr.</strong></p>
<p>Sie beschwerten sich bei Kassar und forderten ihren Anteil am Erfolg. Doch der winkte ab. Für ihn war die Entwicklungsarbeit nicht wertvoller als z.B. die Montage der Cartridges am Fließband [<a href="https://www.gamedeveloper.com/business/the-history-of-activision">GAME2</a>]. Seine Devise lautete „Kostenreduzierung um jeden Preis“. Gehaltserhöhungen und Boni kamen für ihn nicht infrage. Eine fatale Fehlentscheidung.</p>
<p>Die vier Entwickler verließen das Unternehmen, um <strong>Activision</strong> zu gründen. 1981 verließ auch <strong>Jay Miner</strong>, Chefentwickler für die Atari-Heimcomputer, das Unternehmen und gründete seinerseits <strong>Amiga</strong> — ein weiteres populäres Videospiel-Unternehmen.</p>
<p>In einem Interview mit der InfoWorld in 1983 beschrieben Kaplan und Cane die damalige Situation und wie Kassar auf ihre Gehaltsforderungen reagierte:</p>
<p>‘I’ve dealt with your kind before. You’re a dime a dozen. You’re not unique. Anybody can do ­a ­cartridge.’” (Kassar laut Kaplan in InfoWorld, 1983)</p>
<p>Zwischen den beiden Unternehmen entbrannte ein Konflikt, vermutlich auch getrieben durch den angekratzten Stolz von Atari. Dabei gab es dafür keinen Grund: Die Spiele von Activision waren durchaus erfolgreich und wirkten sich so auch auf den Verkauf der Atari-Konsolen aus.</p>
<p>Kassar musste Atari 1983 nach einem Börsenskandal verlassen. Das Unternehmen versank in der Folge in der Bedeutungslosigkeit, wechselte mehrfach den Besitzer und meldete 2013 Insolvenz an. Dank einer Crowdfunding Kampagne in 2020 gelang mit der Retro-Konsole <strong>Atari VCS</strong> die, naja, sagen wir mal “Rückkehr”. Atari ist neben Nintendo, Sony oder Microsoft eher ein kleines Licht am Entertainment-Firmament.</p>
<p>Activision war 3 Jahre nach seiner Gründung bereits <strong>300 Mio. USD</strong> wert. Der Erfolg von Activision beflügelte die ganze Branche. Nachahmer überschwemmten den Markt mit Spielen, die lange nicht mit der Qualität von Activision mithalten konnten. Ein Preiskampf entbrannte und schließlich platzte die Blase. Viele Spiele-Hersteller gingen pleite und auch Activision machte ein paar harte Jahr durch.</p>
<p>Das Unternehmen wurde umbenannt, aufgekauft, musste ebenfalls Insolvenz anmelden und erweiterte sein Portfolio. Mitte der 1980er Jahre hatten die vier Gründer das Unternehmen schon wieder verlassen. Miller und Whitehead gründeten <strong>Accolade</strong>. Kaplan kehrte als Vizepräsident zurück zu Atari. Crane verließt Activision als letzter und gründete mit <strong>Gary Kitzen</strong> <strong>Absolute Entertainment</strong>.</p>
<p>Heute ist Activision der zweitgrößte Spielehersteller der Welt mit über 4.000 Mitarbeitern.</p>

        
        
      ]]></content:encoded>
      
      
      
      <category>nerdenz</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Die Nerd Enzyklopädie 6 - Die Entstehungsgeschichte von Activision - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item><item>
      <title>Wie funktioniert der SHA256 Algorithmus…im Detail? (Teil&amp;nbsp;2/2)</title>
      <link>http://localhost:1313/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/</link>
      <pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/</guid>
      <description>Wenn du den ersten Teil erfolgreich verarbeitet hast, bist du bestens gewappnet, um in diesem Teil zu erfahren, wie die einzelnen Komponenten bzw. Funktionen …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>Dieser Artikel behandelt Wie funktioniert der SHA256 Algorithmus…im Detail? (Teil&amp;nbsp;2/2) und bietet praktische Einblicke in das Thema.</p>
          
          
          <p><strong>Hauptthemen:</strong> Web, IT, Tools</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>Wenn du <a href="https://nickyreinert.de/blog/2021/10/31/wie-funktioniert-der-sha256-algorithmusim-detail-teil-1-2/">den ersten Teil</a> erfolgreich verarbeitet hast, bist du bestens gewappnet, um in diesem Teil zu erfahren, wie die einzelnen Komponenten bzw. Funktionen nun zusammenspielen.</p>
<h3 id="vorbemerkung">Vorbemerkung</h3>
<p>Bevor es los geht möchte ich noch einmal die Zusammenhänge verdeutlichen: Wir werden gleich eine Nachricht (<strong>Message</strong>) erzeugen, deren Länge einem Vielfachen von <strong>512 Bit</strong> entspricht; im Beispiel genau <strong>512 Bit</strong>. Die Nachricht wird in <strong>Message-Blocks</strong> zerlegt, die exakt <strong>512 Bit</strong> lang sind. Jeder Message-Block wird wiederum zu einer <strong>Message-Schedule</strong> zerlegt, mit <strong>16 Wörtern</strong> (Words) zu je <strong>32 Bit</strong> Länge. Die Länge der Wörter muss und wird immer <strong>32 Bit</strong> sein! Der Message-Schedule wird dann aber erweitert, um <strong>64 Wörter zu</strong> enthalten. Seine Länge dann: <strong>2.048 Bit</strong>. Und grafisch:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-2.png" alt=""></p>
<p>Wichtige Zusammenhänge</p>
<h3 id="dekompressions">Dekompressions</h3>
<p>Wir wollen also aus einer Nachricht eine <strong>SHA-256</strong>-konforme Prüfsumme, den Hash, berechnen. Dazu muss die Nachricht, also der String, zunächst vorbereitet werden. Unsere Nachricht ist, klischeegerecht:</p>
<p>message = &lsquo;hello_world&rsquo;</p>
<p>Zunächst müssen wir für jeden Buchstabend die Position in der Zeichentabelle herausbekommen, sprich die Buchstaben (bzw genauer jedes Zeichen) in ihre numerische Repräsentation umwandeln:</p>
<p>dec_message = []<br>
for char in message:<br>
dec_message.append(ord(char))</p>
<p>Das Ergegnis ist eine Liste mit Integern:</p>
<p>[104, 101, 108, 108, 111, 95, 119, 111, 114, 108, 100]</p>
<p>Und da wir im ersten Teil so viel Spaß am Umgang mit binären Werten hatten, wandeln wir die Liste in binäre Werte um, die wir schlicht miteinander verknüpfen:</p>
<p>bin_message = &rsquo;&rsquo;<br>
for decimal in dec_message:<br>
bin_message += &lsquo;0&rsquo; + bin(decimal)[2:</p>
<p>Das Ergebnis:</p>
<p>0110100001100101011011000110110001101111010111110111011101101111011100100110110001100100</p>
<p>Hier gibt es allerdings eine Stolperfalle, und es widerstrebt mir das so stehen zu lassen, für die ich noch keine Erklärung gefunden habe: Bei der Umwandlung in die binäre Entsprechung stellen wir jedem binären Wert eine 0 voran. Aus <strong>104</strong> wird also nicht <strong>1101000</strong> sondern <strong>01101000</strong>, uswf.</p>
<p>Außerdem hängen wir an dieses Datum eine 1 heran, sozusagen als Trennzeichen für das, was jetzt gleich kommt.</p>
<p>Als nächstes berechnen wir die Länge dieser binären Zahl:</p>
<p>len_bin_message = len(bin_message)</p>
<p>Die Längenangabe darf bzw muss exakt <strong>64 Bit</strong> belegen. Wir wandeln sie also auch in eine binäre Zahl um hängen vorne ein paar Nullen ran um genau 64 Stellen zu erhalten:</p>
<p>rest_to_64 = 64 - len(bin(len_bin_message)[2:])</p>
<p>bin_message_len = &lsquo;0&rsquo; * rest_to_64 + bin(len_bin_message)[2:]</p>
<p>Nun müssen wir diese drei binären Informationen, Nachricht, trennende Eins und Längenangabe nicht nur verbinden, sondern auch mit so vielen Nullen auffüllen, damit die Gesamtlänge ein vielfaches von 512 ist.</p>
<p>payload = bin_message + &lsquo;1&rsquo; + bin_message_len</p>
<p>len_payload = len(payload)</p>
<p>pad_string = int(512 - (len_payload % 512))</p>
<p>full_message = bin_message + &lsquo;1&rsquo; + (&lsquo;0&rsquo; * pad_string) + bin_message_len</p>
<p>In unserem Beispiel belegen die drei Informationen 153 Bit. Wir müssen also 359 Nullen dazupacken. Genau genommen kommen die zwischen Nachricht und Längenangabe. Das Ergebnis ist immer <strong>n* 512 Bits</strong> lang:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-8.png" alt=""></p>
<p>Aufbau einer vorkodierten Nachricht</p>
<p>Zu guter Letzt nehmen wir diese sehr, sehr, sehr, sehr….sehr, sehr große Zahl (sie ist sehr groß, du solltest sie auch nicht als Zahl sehen, sondern als <strong>Bitfolge</strong>!) und teilen sie in sogenannte Message Blocks mit einer Länge von jeweils <strong>512 Bits</strong> auf:</p>
<p>message_block_length = 512<br>
message_blocks = [full_message[i:i+message_block_length] for i in range(0, len(full_message), message_block_length)]</p>
<p>Schnapp dir einen Kaffee, geh noch mal frische Luft schnappen, schüttel den Stuhl aus. Jetzt geht es los.</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/beer.jpg" alt=""></p>
<p>8 Bits sind keine Bitfolge</p>
<h3 id="die-schleife">Die Schleife!</h3>
<p>Da es einfacher ist, den Vorgang ohne Schleife zu erklären, hier nur eine Schleife. Die programmatische Schleife findest du trotzdem auf <a href="https://gist.github.com/nickyreinert/00d631fe9a90108924b1df6e911c8cd5"><strong>Github</strong></a>.</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-9.png" alt=""></p>
<p>Es folgt: Eine Schleife</p>
<p>Da unsere Nachricht genau 512 Bit groß ist und wir auch ohne Schleife arbeiten, können wir direkt in die Vollen gehen: Die mühsam zusammengeklebte Nachricht wird nun in den sog. Message Schedule zerlegt: Sprich in <strong>16 Wörter</strong> mit jeweils 32 Bit Länge.</p>
<p>Im ersten Durchlauf nehmen wir vier Wörter und führen folgende Modifikationen aus:</p>
<ul>
<li><strong>σ1</strong> wird auf <strong>Wort 1</strong> an Position 14 angewendet,</li>
<li><strong>Wort 2</strong> von Position 9 bleibt unverändert,</li>
<li><strong>σ0</strong> wird auf <strong>Wort 3</strong> an Position 1 angewendet und</li>
<li><strong>Wort 4</strong> an Position 0 bleibt wieder unberührt</li>
</ul>
<p>Die Werte werden zunächst addiert und jetzt gibt es wieder einen <strong>wichtigen Punkt</strong> zu beachten: Wir müssen strikt dafür sorgen, dass die Wörter nicht länger als <strong>32 Bit</strong> sind. Denn nur so können wir sicherstellen, dass der finale Hash immer die gleiche länge hat. Und spätestens jetzt, bei der <strong>Addition großer Werte</strong>, können wir die <strong>32 Bit</strong> recht schnell überschreiten. Das ist auch aus technischer Sicht eine Hürde. Deswegen gilt: Hier und bei allen Additionen müssen wir abschließend <strong>Modulo 2</strong>³² anwenden. Und jetzt kommt der dritte hoffentlich positive Knick in der Lernkurve: Auch für Modulo hält das binäre Universum eine schöne Vereinfachung parat: <strong>Das logische Und</strong> mit 2³²–1 (bzw 4.294.967.295, das ist eine sehr große Zahl, nicht so groß wie die im ersten Teil, sondern genau einen Zähler kleiner) führt zum gleichen Ergebnis.</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-5.png" alt=""></p>
<p>Berechnung des ersten Schritts</p>
<p>Damit wäre der Message-Schedule vorbereitet und enthält nun <strong>64 wunderschöne Wörter</strong> zu <strong>je 32 Bit</strong>. Wir haben die Informationen aus dem Message Block also zunächst aufgeplustert und von <strong>512 Bit auf 2.048 Bit</strong> erweitert- sie sind aber immer noch lesbar:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-6.png" alt=""></p>
<p>Der erweiterte Message Schedule</p>
<p>Aber damit ist jetzt Schluss, wir kommen zum nächsten und wichtigsten Schritt:</p>
<h3 id="die-kompression">Die Kompression</h3>
<p>Der erweiterte Message-Schedule wird in diesem Schritt nicht direkt modifiziert, die Wörter werden vielmehr als Grundlage für die Modifikation der anfangs erzeugten <strong>Kompressions-Konstanten</strong> verwendet.</p>
<p>In 64 Schleifen-Durchläufen gehen wir durch den Message-Schedule. Aus jedem Wort des Schedules (also unserer ursprünglichen Nachricht) wird zusammen mit den <strong>64 Ergebnis-Konstanten</strong> und den <strong>8 Kompressions-Konstanten</strong> ein neues Wort berechnet. Das neue Wort wird dann den Kompressions-Konstanten vorangestellt, gleichzeitig wird der letzte Eintrag gelöscht. So enthält die Liste immer genau 8 Einträge.</p>
<p>new_compression_constants = compression_constants.copy()</p>
<p>for i, word in enumerate(message_schedule):</p>
<pre><code>term1 = (int(upper\_sigma1(new\_compression\_constants\[4\]), 2) + \\  
            int(choose(new\_compression\_constants\[4\], new\_compression\_constants\[5\], new\_compression\_constants\[6\]), 2) + \\  
            int(new\_compression\_constants\[7\], 2) + \\  
            int(result\_constants\[i\], 2) + \\  
            int(word, 2)) \\  
            &amp; int('11111111111111111111111111111111', 2)

term2 = (int(upper\_sigma0(new\_compression\_constants\[0\]), 2) + \\  
            int(majority(new\_compression\_constants\[0\], new\_compression\_constants\[1\], new\_compression\_constants\[2\]), 2)) &amp; int('11111111111111111111111111111111', 2)

new\_compression\_constants.insert(0, 1)  
new\_compression\_constants.pop()

new\_compression\_constants\[0\] = bin(  
            (term1 + term2) &amp; int('11111111111111111111111111111111', 2)  
            )\[2:\].zfill(32)

new\_compression\_constants\[4\] = bin(  
            (int(new\_compression\_constants\[4\], 2) + term1) &amp; int('11111111111111111111111111111111', 2)  
            )\[2:\].zfill(32)
</code></pre>
<p>Zunächst ein paar Berechnungen:</p>
<ul>
<li><strong>Term 1</strong> berechnet sich aus den Kompressions-Konstanten, einer der Ergebnis-Konstanten und dem jeweiligen Wort. Wir verwenden hier auf Bitebene und <strong>Σ1</strong> (upper_sigma1) sowie <strong>choose</strong>.</li>
<li><strong>Term 2</strong> ist eine Summe zweier anderer Kompressions-Konstanten, die mithilfe von <strong>Σ0</strong> (upper_sigma0) sowie <strong>majority</strong> modifiziert werden.</li>
</ul>
<p>Und jetzt achte mal drauf, dass die ursprüngliche Nachricht Teil des 1. Terms ist — in der Abbildung rot markiert:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-3.png" alt=""></p>
<p>Im ersten Schritt erfolgt die Berechnung zweier Terme</p>
<p>Die beiden Terme werden nun wiederum addiert (und wie immer mit <strong>Modulo 2³²</strong> auf 32 Bit-Kurs gebracht) und an den Anfang der Kompressions-Konstanten gestellt. Der erste Term wird außerdem mit der 4. Position dieser nun 9 Wörter langen List summiert:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-1.png" alt=""></p>
<p>Im zweiten Schritt wird die Listse der Kompression-Konstanten aktualisiert</p>
<p>Als nächstes wird der letzte Eintrag der Liste gelöscht, sie umfasst nun <strong>8 komplett neue Kompressions-Konstanten</strong> (wenn du aufmerksam aufgepasst hast, wird dir nicht entgangen sein, dass sie gar nicht mal so konstant sind).</p>
<p>Ein Teil der ursprünglichen Nachricht befindet sich nun an als <strong>Summand von Term 1</strong> and den <strong>Positionen 0 und 4</strong> und. Diese werden in den nächsten Durchläufen Teil der gleichen Berechnungen und immer weiter nach unten rutschen. So verteilt sich die ursprüngliche, bisher noch halbwegs lesbare Nachricht, über die gesamte Liste.</p>
<p>Diese Liste ist also die Grundlage für den zweiten Durchlauf, der sie erneut “durchrotiert”, um wiederum eine komplett neue Liste für den dritten Durchlauf zu erzeugen. Und so weiter, bis alle 64 Wörter des Message-Schedules verarbeitet wurden. Das Ergebnis sollte in etwa so aussehen:</p>
<p>11100010000000010111101011011001<br>
01000110110100101000001000010100<br>
11100011111110010111100001001011<br>
01110001100001100000010000011110<br>
01001000000111100100000000011000<br>
00011111110001101011001000110101<br>
11101001110010001101110111110100<br>
00001001011011110000111011111011</p>
<p>Oder in Hexadezimal:</p>
<p>0xe2017ad9 0x46d28214 0xe3f9784b 0x7186041e 0x481e4018 0x1fc6b235 0xe9c8ddf4 0x96f0efb</p>
<p>Abschließend gehen wird durch genau diese Liste der 8. Kompressions-Konstanten und addieren jede Positionen mit dem entsprechenden Wort der Ausgangs-Liste:</p>
<p>result = []</p>
<p>for i in range(0, 8):</p>
<pre><code>result.append(  
    bin(int(compression\_constants\[i\], 2) +   
    int(new\_compression\_constants\[i\], 2)  &amp;      
    int('11111111111111111111111111111111', 2))\[2:\].zfill(32))
</code></pre>
<p>Und im Klartext:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-4.png" alt=""></p>
<p>Letzter Schritt: Addieren der Listen</p>
<p>Die neue Liste ist nun die <strong>Ausgangs-Liste</strong> für den nächsten Message-Schedule. Da wir die Schleife hier aber nicht implementieren, war es das fürs erste. Im Folgenden noch mal eine beispielhafte Zusammenfassung der Schritte:</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/screenshot-7.png" alt=""></p>
<p>Schematische Darstellung des SHA-256 Algorithmus’</p>
<h3 id="haschee-gesundheit-was">Haschee. Gesundheit. Was?</h3>
<p>Wir haben es geschafft. Du hast es geschafft. Herzlichen Glückwunsch.</p>
<p><img src="/2021/2021-10-31-wie-funktioniert-der-sha256-algorithmusim-detail-teil-2-2/images/not-bad.jpg" alt=""></p>
<p>Quelle: memecreator.org</p>
<p>Nun können wir den Hash entweder als Hex-Wert ausgeben oder wieder in binärer Schreibweise darstellen, je nach Anwendungszweck.</p>
<p>for word in result:</p>
<pre><code>print(hex(int(word, 2))\[2:\].zfill(8) + '', end = '')
</code></pre>
<p>Das Ergebnis kann sich in jedem Fall sehen lassen.</p>
<p>35072c1ae546350e0bfa7ab11d49dc6f129e72ccd57ec7eb671225bbd197c8f1</p>
<p>Oder</p>
<p>110101000001110010110000011010111001010100011000110101000011101011111110100111101010110001111010100100111011100011011111001010011110011100101100110011010101011111101100011111101011110011100010010001001011011101111010001100101111100100011110001</p>
<h3 id="epilog">Epilog</h3>
<p>Eine komplette Implementierung, inklusive einer Schleife, um auch große Nachrichten zu verarbeiten, findest <a href="https://gist.github.com/nickyreinert/00d631fe9a90108924b1df6e911c8cd5">du in diesem Gist</a>.</p>
<p>Freilich ist Python nicht dazu geeignet, den SHA-256 Prozess zu optimieren, wohl aber um den Prozess zu verstehen und den Umgang mit elementaren binären Rechenoperation zu lernen.</p>
<p>Willst du den Prozess noch etwas interaktiver nachvollziehen, möchte ich dir <a href="https://www.youtube.com/watch?v=f9EbD6iY9zI">dieses Video</a> empfehlen. Dort wird der Algorithmus in Ruby nachgebaut und die einzelnen Rechenschritte auch etwas genauer erklärt.</p>
<p>Und warum ist SHA-256 für das Mining von Kryptowährungen jetzt so wichtig? Kurz: Der Hash validiert die Gültigkeit des <em>Kassenbuches</em>. Beim Mining geht es darum, aus einer gegebenen Nachricht und einem frei wählbaren Zusatz exakt einen gegebenen Ziel-Hash zu berechnen. Der Algorithmus muss also wahnsinng oft durchlaufen werden. Da das sehr aufwendig ist, kostet das Zeit und wird entsprechend belohnt.</p>

        
        
        <div class="tags">
          <p><strong>Tags:</strong> bitcoin, mining, sha</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>anleitungen</category>
      
      <category>blog</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Wie funktioniert der SHA256 Algorithmus…im Detail? (Teil&amp;nbsp;2/2) - Titelbild</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>guide</dc:type>
      
      
    </item>
  </channel>
</rss>