<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wordpress on Nicky Reinert</title>
    <link>https://nickyreinert.de/categories/wordpress/</link>
    <description>Recent content in Wordpress on Nicky Reinert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <lastBuildDate>Thu, 05 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://nickyreinert.de/categories/wordpress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wie funktionieren Dateirechte?</title>
      <link>https://nickyreinert.de/2020/2020-11-05-wie-funktionieren-dateirechte/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2020/2020-11-05-wie-funktionieren-dateirechte/</guid>
      
      <description>&lt;p&gt;Die korrekten &lt;strong&gt;Dateirechte&lt;/strong&gt; sollten eine wichtige Rolle spielen, wenn du an einem Sicherheitskonzept für deine Webseite bzw. Wordpress arbeitest. Leider wird das Thema Dateirechte oft stiefmütterlich behandelt, nicht zuletzt weil es fälschlicherweise als zu kompliziert angesehen wird. Dabei muss es das gar nicht sein: Das Grundprinzip ist einfach: Du willst nicht, dass jedermann Dateien &lt;strong&gt;ändern&lt;/strong&gt;, &lt;strong&gt;ausführen&lt;/strong&gt; oder &lt;strong&gt;lesen&lt;/strong&gt; kann. Sicherlich gibt es feine Abstufungen. und genau die möchte ich hier erklären.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Automatisierte WordPress Installation</title>
      <link>https://nickyreinert.de/2020/2020-10-08-automatisierte-wordpress-installation/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2020/2020-10-08-automatisierte-wordpress-installation/</guid>
      
      <description>&lt;p&gt;Et voilá. Ein BASH Script, um WordPress automatisiert über die Kommandozeile zu installieren, inklusive Theme und beliebigen Plugins sowie - wenn benötigt - zufälligen Beiträgen, Kategorien, Tags und Bildern.&lt;/p&gt;
&lt;h2 id=&#34;warnung&#34;&gt;Warnung!&lt;/h2&gt;
&lt;p&gt;Du solltest geübt im Umgang mit der Shell, Bash und WordPress sein und unbedingt &lt;strong&gt;Backups&lt;/strong&gt; nutzen. Das Script verwendet, wenn der entsprechende Parameter gesetzt ist, den Befehl &amp;ldquo;&lt;strong&gt;rm -rf&lt;/strong&gt;&amp;rdquo;, um einen Ordner komplett zu &lt;strong&gt;löschen&lt;/strong&gt;. Dieser Schritt lässt sich nicht widerrufen. Außerdem wird, sofern per Parameter gefordert, eine Datenbank mit &amp;ldquo;&lt;strong&gt;DROP DATABASE&lt;/strong&gt;&amp;rdquo; komplett entfernt. Wenn du das Script auf eine existierende WordPress-Installation oder Datenbank anwendest, können existierende Daten &lt;strong&gt;überschrieben&lt;/strong&gt; werden!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 3 / 3)</title>
      <link>https://nickyreinert.de/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</guid>
      
      <description>&lt;p&gt;Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups. Wenn alles korrekt eingerichtet ist, solltet ihr nun einen gut funktionierenden Webserver auf Basis von nginx haben, der PHP-FPM nutzt und gut mit Wordpress laufen sollte. Der Server arbeitet für mehrere unterschiedliche Domains, die so gut wie möglich im System getrennt sind.&lt;/p&gt;
&lt;h2 id=&#34;die-einrichtung-der-php-pools&#34;&gt;Die Einrichtung der PHP-Pools&lt;/h2&gt;
&lt;p&gt;Um den ganzen Bums zum Laufen zu bringen fehlt jetzt nur noch PHP. Den Großteil haben wir schon geschafft, weshalb ich die Einrichtung von PHP nicht in einen neuen Beitrag gepackt habe.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 2 / 3)</title>
      <link>https://nickyreinert.de/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/</guid>
      
      <description>&lt;p&gt;Im zweiten Teil geht es um die individuelle Einrichtung der virtuellen Server für nginx.&lt;/p&gt;
&lt;h2 id=&#34;server-oder-virtual-hosts&#34;&gt;Server oder virtual hosts?&lt;/h2&gt;
&lt;p&gt;Im Gegensatz zu den &amp;ldquo;&lt;strong&gt;virtual hosts&lt;/strong&gt;&amp;rdquo; von Apache spricht man bei nginx von &amp;ldquo;&lt;strong&gt;servern&lt;/strong&gt;&amp;rdquo;. Ich möchte das Aufgreifen und nutze im Folgenden einfach nur von &amp;ldquo;&lt;strong&gt;Server&lt;/strong&gt;&amp;rdquo; wenn ich von einem individuellen Host oder virtuellem Server spreche. Wie bei Apache werden diese idealerweise in eigenständigen Konfig-Dateien definiert. Hier gibt es verschiedene Vorlieben, ob die Konfig-Dateien unter &lt;strong&gt;/etc/nginx/sites-available&lt;/strong&gt; oder &lt;strong&gt;/etc/nginx/conf.d&lt;/strong&gt; abgelegt werden.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wordpress Debugging und Wartung oder: Keine Panik vor dem White Screen of Death und HTTP 500</title>
      <link>https://nickyreinert.de/2018/2018-11-18-wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-11-18-wordpress-debugging-und-wartung-oder-keine-panik-vor-dem-white-screen-of-death/</guid>
      
      <description>&lt;p&gt;Deine Wordpress-Seite besteht nur aus einem weißen Bildschirm, dem &lt;strong&gt;HTTP-Fehlercode 500&lt;/strong&gt; oder lädt irsinnig langsam? &lt;strong&gt;White Screen of Death&lt;/strong&gt; (WSoD), die berüchtigten &lt;strong&gt;500´er&lt;/strong&gt; sowie lange &lt;strong&gt;Ladezeiten&lt;/strong&gt; scheinen zu den größten Herausforderungen im Umgang mit WordPress zu gehören und sie hinterlassen regelmäßig lange Gesichter. Zwar gehören Ladezeit, PHP- und HTTP-Fehler nicht unbedingt zusammen, sie erfordern aber in der Regel das gleiche Vorgehen: Nämlich die &lt;strong&gt;Analyse&lt;/strong&gt;, was da im &lt;strong&gt;Hintergrund&lt;/strong&gt; so passiert.&lt;br&gt;
Die Suche nach der Ursache ist oft relativ simpel. Es sagt einem oft nur niemand. Der beliebteste Tipp bei Wordpress lautet oft:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Checkliste - Wordpress Umzug</title>
      <link>https://nickyreinert.de/2018/2018-08-25-checkliste-wordpress-umzug/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-08-25-checkliste-wordpress-umzug/</guid>
      
      <description>&lt;p&gt;Du hast Wordpress auf eine neue Domain oder einen neuen Hoster umgezogen und der Blog ist noch nicht erreichbar oder die Adresse verweist noch auf eine alte Installation, obwohl du an alles gedacht hast? Da fragst du dich zurecht: Wo hängt&amp;rsquo;s? Oder du hast den Umzug erst vor dir und willst wissen, woran du denken musst?&lt;/p&gt;
&lt;p&gt;Dafür habe ich dir hier eine Checkliste der gängigen Fehlerquellen aufgestellt, die dir beim nächsten Mal helfen soll.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Einen Ankerlink in Wordpress setzen</title>
      <link>https://nickyreinert.de/2018/2018-06-29-einen-ankerlink-in-wordpress-setzen/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-06-29-einen-ankerlink-in-wordpress-setzen/</guid>
      
      <description>&lt;p&gt;Du willst z.B. ein Glossar aufbauen und dabei mithilfe von Links innerhalb der Seite zu bestimmten Punkten springen? Das geht einfacher, als vermutet, mit dem Ankerlink, der fester Bestandteil von HTML ist.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nickyreinert.de/2018/2018-06-29-einen-ankerlink-in-wordpress-setzen/#dasEnde&#34;&gt;An&amp;rsquo;s Ende springen&lt;/a&gt; oder weiterlesen:&lt;/p&gt;
&lt;h2 id=&#34;den-zielpunkt-festlegen&#34;&gt;Den Zielpunkt festlegen&lt;/h2&gt;
&lt;p&gt;Dazu setzt du an beliebiger Stelle deines Textes, für gewöhnlich verwendet man dafür ja Überschriften, eine Sprungmarke indem du der Überschrift eine Id verpasst. Das ganze musst du im Text-Editor und nicht im visuellen Editor von Wordpress machen:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wordpress-Plugin um eine Word-Cloud mit beliebigen Wörtern darzustellen</title>
      <link>https://nickyreinert.de/2018/2018-06-13-wordpress-plugin-um-eine-word-cloud-mit-beliebigen-woertern-darzustellen/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-06-13-wordpress-plugin-um-eine-word-cloud-mit-beliebigen-woertern-darzustellen/</guid>
      
      <description>&lt;p&gt;Diese Version ist veraltet, bitte verwende absofort diese Version:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nickyreinert.de/wordpress-word-cloud-2-0/&#34;&gt;https://www.nickyreinert.de/wordpress-word-cloud-2-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Wer träumt nicht davon, eine Wolke aus Wörtern in Wordpress darstellen zu können? Der Fachmann spricht hier von einer sogenannten Word-Cloud. Ich meine hier übrigens ausdrücklich nicht die bekannten TagClouds, bei denen schlicht die verwendeten Wordpress-Tags in einer Wolke anklickbar angezeigt werden. Hier geht es einfach um die Darstellung von Wörtern, die entsprechend der Vorkommen verschieden groß dargestellt werden. Leider gab es genau für diesen Zweck bisher kein Wordpress-Plugin. Dafür habe ich aber eine sehr leicht zu bedienende &lt;a href=&#34;https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md&#34;&gt;JavaScript-Bibliothek von Tim Dream: wordCloud2.js&lt;/a&gt; gefunden, auf der ich das Plugin aufgebaut habe.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Eine HTML-Tabelle als Heatmap in Wordpress darstellen</title>
      <link>https://nickyreinert.de/2018/2018-04-06-eine-html-tabelle-als-heatmap-in-wordpress-darstellen/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-04-06-eine-html-tabelle-als-heatmap-in-wordpress-darstellen/</guid>
      
      <description>&lt;p&gt;&lt;em&gt;data-heatmap&lt;/em&gt; dient zur Darstellung einer Heatmap als Wordpress Plugin. Dabei werden entsprechende Quell-Daten in einer HTML-Tabelle als Heatmap darzustellen. Das Ergebnis kann z.B. so aussehen:&lt;/p&gt;
&lt;p&gt;[data-heatmap transpose=&amp;ldquo;yes&amp;rdquo; hide-xaxis=&amp;ldquo;no&amp;rdquo; hide-yaxis=&amp;ldquo;no&amp;rdquo; hide-values=&amp;ldquo;yes&amp;rdquo; sort-yaxis=&amp;ldquo;yes&amp;rdquo; source-for-gradiation=&amp;ldquo;y&amp;rdquo;]&lt;/p&gt;
&lt;p&gt;Die Daten stammen aus einer Tabelle mit drei Spalten. Es handelt sich um die Bus- und Bahn-Linien der öffentlichen Verkehrsmittel in Berlin (Spalte x), die Tageszeiten von 0 bis 23 Uhr (Spalte y) und die Anzahl von Beiträgen in einem Portal (Spalte v). Die Heatmap zeigt also, wieviele Beiträge zu einer bestimmten Uhrzeit in einer bestimmten Linie abgegeben wurden.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wie richte in ein Staging-System für Wordpress ein?</title>
      <link>https://nickyreinert.de/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-03-11-wie-richte-in-ein-staging-system-fuer-wordpress-ein/</guid>
      
      <description>&lt;p&gt;Wordpress hat den Ruf sehr unkompliziert zu sein. Zurecht. Doch oft bleibt es nicht dabei, dass man ein paar Beiträge verfasst. Die Seite kann schnell von einem einfachen Blog zu einem großen CMS heranwachsen und wird dann nicht nur mit Texten und Bildern, sondern dank eines riesigen Angebotes an Plugins und Template auch mit Funktionalitäten gefüllt. Und dann wird man mit einem Konflikt konfrontiert, dass die gesamte Seite bedroht: Updates und Inkompatibilität. Es ist nämlich gar nicht so selbstverständlich, dass die eigenen Anpassungen mit alle Wordpress-, Plugin- und Template-Versionen oder gar der Hosting-Umgebung harmonieren. Je angepasster die eigene Wordpress-Installation ist, desto komplexer sind im Hintergrund die Abhängigkeiten. Ein kleines Update kann im schlimmsten Fall die gesamte Seite gefährden. Ein Staging-System für Wordpress kann da helfen.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>COII - Cookie OptIn Interface als Wordpress Plugin</title>
      <link>https://nickyreinert.de/2018/2018-03-03-coii/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2018/2018-03-03-coii/</guid>
      
      <description>&lt;p&gt;COII ist ein Plugin für Wordpress mit dem du dem Besucher deiner Seite die Möglichkeit gibst, dem Tracking durch z.B. Google Analytics bzw. Cookies zuzustimmen.&lt;/p&gt;
&lt;h2 id=&#34;cookies-und-tracking&#34;&gt;Cookies und Tracking&lt;/h2&gt;
&lt;p&gt;Grundsätzlich sind &lt;strong&gt;Cookies&lt;/strong&gt; nicht verkehrt. Dabei handelt es sich um kleine Text-Dateien, die von einem Server auf dem Computer des Benutzers gespeichert werden, um Informationen zwischenzuspeichern. Für den Betrieb vieler Seiten sind sie oft unerlässlich. Dabei ist es wichtig zu wissen, dass nur der Server auf ein Cookie zugreifen darf, der es auch gesetzt hat. Grundsätzlich kann man zwei Arten unterscheiden: &lt;strong&gt;1st-Party- und 3rd-Party-Cookies&lt;/strong&gt;. 1st-Party-Cookies werden von dem Server gespeichert, auf den der Besucher der Website gerade zugreift. Aktuell wäre das für dich z.B. ein Cookie von &lt;a href=&#34;https://www.nickyreinert.de&#34;&gt;www.nickyreinert.de&lt;/a&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wordpress: Slideshow im Header abhängig vom Inhalt</title>
      <link>https://nickyreinert.de/2016/2016-11-24-wordpress-slideshow-im-header-abhaengig-vom-inhalt/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2016/2016-11-24-wordpress-slideshow-im-header-abhaengig-vom-inhalt/</guid>
      
      <description>&lt;p&gt;Heute bastelen wir uns in Wordpress einen Header, der eine Slideshow mit Bildern anzeigt, abhängig von der Seite die gerade angezeigt wird. Die Slideshow soll sich die Bilder aus Gallerien holen, die der einzelnen Seite zugeordnet ist. Dazu greifen wir auf die &amp;ldquo;&lt;a href=&#34;http://codex.wordpress.org/Custom_Fields&#34;&gt;Benutzerdefinierten Felder&lt;/a&gt;&amp;rdquo; in Wordpress sowie die beiden großartigen Wordpress-Plugins &amp;ldquo;&lt;a href=&#34;http://alexrabe.de/wordpress-plugins/nextgen-gallery/&#34;&gt;NextGen Gallery&lt;/a&gt;&amp;rdquo; von Alex Raabe und &amp;ldquo;&lt;a href=&#34;http://uninuni.com/wordpress-plugin-nextgen-smooth-gallery/&#34;&gt;Smooth Gallery&lt;/a&gt;&amp;rdquo; von uniuni zurück. Wichtig ist, dass man diese &amp;ldquo;dynamischen Header&amp;rdquo; ohne großen Aufwand auf jeder beliebigen Seite nutzen kann, damit der Gelegenheitsautor mit möglichst wenig technischen Kenntnissen damit umgehen kann.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>WooCommerce und Permalinks</title>
      <link>https://nickyreinert.de/2014/2014-04-16-woocommerce-und-permalinks/</link>
      <pubDate>Wed, 16 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2014/2014-04-16-woocommerce-und-permalinks/</guid>
      
      <description>&lt;p&gt;Für gewöhnlich versucht man in WordPress SEO-freundliche Permalinks zu verwenden. Dies geschieht über die Einstellungen der Permalinks und dort z.B. über die Option &amp;ldquo;Beitragsname&amp;rdquo;. Nutzt man nun WooCommerce und ändert auch dort die Darstellung der Permalinks (im gleichen Menü) auf z.B. Shop-Basis, lassen sich zunächst die Produkte wie gewohnt mit den &amp;ldquo;hübschen&amp;rdquo; Permalinks darstellen. Doch leider funktioniert die Verlinkung der Kategorien nicht. Wordpress zeigt einen 404-Fehler an. Das Problem zu beheben ist allerdings recht einfach: In den Einstellungen der Permalinks muss im Bereich &amp;ldquo;Optional&amp;rdquo; ein Wert für &amp;ldquo;Kategorie-Basis Produkte&amp;rdquo; angegeben werden. Jetzt sollten die Permalinks auch für die Kategorien funktionieren!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wordpress-Security Checkliste</title>
      <link>https://nickyreinert.de/2000/2000-01-01-wordpress-security-checkliste/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2000/2000-01-01-wordpress-security-checkliste/</guid>
      
      <description>&lt;!-- |                      | WPaaS | Shared Hosting | Server |
|----------------------|-------|----------------|--------|
| Updates              | X     | X              |        |
| Staging-System       |       |                |        |
| Backups              |       |                |        |
| Plugins              |       |                |        |
| Dateirechte          |       |                |        |
| PHP-Ausführung       |       |                |        |
 --&gt;
&lt;p&gt;Wordpress hat unter den Content Management System im Internet mittlerweile einen Marktanteil von 60% erreicht und lockt mit dieser Verbreitung natürlich auch kriminelle Geister an und so schwirren immer wieder Nachrichten über Sicherheitslücken und gehackte WP-Seiten durch die einschlägigen Medien. Aus diesem Grund will ich mal meine Erfahrungen in Bezug auf Wordpress-Sicherheit an dieser Stelle zusammenfassen und zwar so kompakt wie möglich, damit diese Information als Checkliste genutzt werden kann.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
