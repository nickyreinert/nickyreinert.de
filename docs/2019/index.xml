<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019s on Nicky Reinert</title>
    <link>https://nickyreinert.de/2019/</link>
    <description>Recent content in 2019s on Nicky Reinert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <lastBuildDate>Tue, 05 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://nickyreinert.de/2019/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fefes Blog - Eine Analyse</title>
      <link>https://nickyreinert.de/2019/2019-11-05-fefes-blog-eine-analyse/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-11-05-fefes-blog-eine-analyse/</guid>
      
      <description>&lt;p&gt;Nach der gar nicht mal so großen öffentlichen Wahrnehmung meiner laienhaften &lt;a href=&#34;https://www.nickyreinert.de/augenblicke-eine-statistische-analyse-des-flirt-portals-der-bvg/&#34;&gt;statistischen Analyse des Flirtportals der BVG &amp;ldquo;Augenblicke&amp;rdquo;&lt;/a&gt;, habe ich mich mal einem anderem Projekt gewidmet. Es geht um &lt;a href=&#34;http://blog.fefe.de&#34;&gt;Fefes Blog&lt;/a&gt;, einer meiner ersten Anlaufstellen, wenn ich mir die tägliche Nachrichtendosis gebe. Inspiriert wurde ich dazu durch eine &lt;a href=&#34;https://www.netaction.de/datenvisualisierung-von-fefes-blogzeiten/&#34;&gt;Analyse der Blogzeiten von Fefe&lt;/a&gt;, die allerdings schon acht Jahre zurück liegt.&lt;br&gt;
Für meine Analyse des BVG-Portal hatte ich damals noch PHP gewählt, um die Seiten auszulesen und in eine Datenbank zu hauen. Das war ziemlich aufwendig. Diesmal wollte ich es mit Python probieren und damit auch gleich mein erstes Projekt in dieser Sprache realisieren (der Quellcode steht &lt;a href=&#34;https://github.com/nickyreinert/fefeScrape&#34;&gt;auf Github&lt;/a&gt; zur Verfügung).&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pictero - Generator für Poesie-Album-Sprüche</title>
      <link>https://nickyreinert.de/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/</guid>
      
      <description>&lt;p&gt;&lt;a href=&#34;https://pictero.com/&#34;&gt;Pictero&lt;/a&gt; ist eine Persiflage auf die moralinsauren, romantischen oder schwülstigen Sprüche, die dir auf Delphin-Postern, in Poesie-Alben und mittlerweile auch in sozialen Netzwerken begegnen. Mit Pictero kannst du derartige Texte über Bilder legen, die entweder ganz gut passen. Dazu gehören z.B. Strandbilder mit einem viel zu starken Blur-Effekt. Oder du nimmst Bilder, die überhaupt gar nicht passen, wie z.B. ein Stück Fleisch, Katzen oder ein Porträt von Bill Murray.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nickyreinert.de/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/images/1-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Apache und nginx parallel betreiben und mit ApacheBench gegeneinander antreten lassen</title>
      <link>https://nickyreinert.de/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-10-11-apache-und-nginx-parallel-betreiben-und-mit-apachebench-gegeneinander-antreten-lassen/</guid>
      
      <description>&lt;p&gt;Mein Ziel ist es, &lt;strong&gt;nginx&lt;/strong&gt; und &lt;strong&gt;Apache&lt;/strong&gt; als Webserver auf einem System laufen zu lassen. Alle HTTP/HTTPS-Anfragen werden von nginx beantwortet. Anfragen an den Port 8080 (für HTTP) oder 4443 (HTTPS) werden von Apache beantwortet. So kann ich nginx und Apache in einem &lt;strong&gt;Benchmark&lt;/strong&gt; vergleichen, indem ich einfach nur die Ports ändere. Das Setup ist aber auch für andere Zwecke sinnvoll, wenn du z.B. die Burst-Einstellungen von nginx in Aktion sehen oder bestimmte Web-Dienste strikt mit Apache bedienen willst. Los gehts&amp;hellip;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 3 / 3)</title>
      <link>https://nickyreinert.de/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-10-02-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fuer-wordpress-teil-3-3/</guid>
      
      <description>&lt;p&gt;Im letzten Teil geht es um die Einrichtung von PHP-FPM und ich gebe eine kleine Zusammenfassung bzw. Überblick über die Struktur des gesamten Setups. Wenn alles korrekt eingerichtet ist, solltet ihr nun einen gut funktionierenden Webserver auf Basis von nginx haben, der PHP-FPM nutzt und gut mit Wordpress laufen sollte. Der Server arbeitet für mehrere unterschiedliche Domains, die so gut wie möglich im System getrennt sind.&lt;/p&gt;
&lt;h2 id=&#34;die-einrichtung-der-php-pools&#34;&gt;Die Einrichtung der PHP-Pools&lt;/h2&gt;
&lt;p&gt;Um den ganzen Bums zum Laufen zu bringen fehlt jetzt nur noch PHP. Den Großteil haben wir schon geschafft, weshalb ich die Einrichtung von PHP nicht in einen neuen Beitrag gepackt habe.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 2 / 3)</title>
      <link>https://nickyreinert.de/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-10-01-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-2-3/</guid>
      
      <description>&lt;p&gt;Im zweiten Teil geht es um die individuelle Einrichtung der virtuellen Server für nginx.&lt;/p&gt;
&lt;h2 id=&#34;server-oder-virtual-hosts&#34;&gt;Server oder virtual hosts?&lt;/h2&gt;
&lt;p&gt;Im Gegensatz zu den &amp;ldquo;&lt;strong&gt;virtual hosts&lt;/strong&gt;&amp;rdquo; von Apache spricht man bei nginx von &amp;ldquo;&lt;strong&gt;servern&lt;/strong&gt;&amp;rdquo;. Ich möchte das Aufgreifen und nutze im Folgenden einfach nur von &amp;ldquo;&lt;strong&gt;Server&lt;/strong&gt;&amp;rdquo; wenn ich von einem individuellen Host oder virtuellem Server spreche. Wie bei Apache werden diese idealerweise in eigenständigen Konfig-Dateien definiert. Hier gibt es verschiedene Vorlieben, ob die Konfig-Dateien unter &lt;strong&gt;/etc/nginx/sites-available&lt;/strong&gt; oder &lt;strong&gt;/etc/nginx/conf.d&lt;/strong&gt; abgelegt werden.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Warum es Tage dauern kann, wenn du dich von einer E-Mail-Verteilerliste entfernen lässt</title>
      <link>https://nickyreinert.de/2019/2019-08-02-warum-es-tage-dauern-kann-wenn-du-dich-von-einer-e-mail-verteilerliste-entfernen-laesst/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-08-02-warum-es-tage-dauern-kann-wenn-du-dich-von-einer-e-mail-verteilerliste-entfernen-laesst/</guid>
      
      <description>&lt;p&gt;Im Vereinigten Königreich gibt es wohl eine mittelgroße Bank, die, wie sicher viele andere Unternehmen auch, Newsletter verschickt. Was passiert, wenn man als Empfänger bei diesem Newsletter auf &amp;ldquo;Abmelden&amp;rdquo; klickt? Folgendes:&lt;/p&gt;
&lt;p&gt;Der Klick auf den &amp;ldquo;Abmelden&amp;rdquo;-Link ruft einen uralten Webservice auf.&lt;/p&gt;
&lt;p&gt;Der Webservice schickt eine E-Mail an einen internen E-Mail-Empfänger, der seit 5 Jahren nicht mehr in der Bank arbeitet.&lt;/p&gt;
&lt;p&gt;Diese E-Mail-Adresse konnte man allerdings nicht ändern, da sie im Sourcecode fest angeben wurde (hardcoded) und man den originalen Sourcode zum kompilieren nicht mehr hatte. Der Service wurde in Java 6 geschrieben (2006 bis 2013).&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Fokussierter Drill-Down mit Tableau</title>
      <link>https://nickyreinert.de/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</guid>
      
      <description>&lt;p&gt;In Tableau gibt es die eigentlich sehr nützliche Möglichkeit, Dimensionen beliebig zu kombinieren und in einer Hierarchie zusammenzufassen. Diese Funktion ist sehr intuitiv hat aber einen Haken: Wenn man bei großen Datenmengen und Dimensionen mit hoher Kardinalität einen Drill Down macht, werden die Abfragen nicht nur irrsinnig langsam, je tiefer man kommt. Die Übersicht geht auch komplett verloren.&lt;/p&gt;
&lt;p&gt;Um das zu demonstrieren habe ich eine Datenquelle mit 1 Mio. Zeilen und 10 Dimensionen erzeugt. Der Drill-Down auf Ebene 8 dauert hier auf normaler Hardware über 20 Sekunden und das Ergebnis ist&amp;hellip; nun ja: Für eine schnellen Überblick kaum zu gebrauchen:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wie kannst du SSH sicherer machen? Security through obscurity?</title>
      <link>https://nickyreinert.de/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/</link>
      <pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/</guid>
      
      <description>&lt;p&gt;Diese Abbildung, meine geneigten Freunde, zeigt die Zugriffsversuche für SSH auf meinen Server. Zugegeben: Es ist nicht viel und wird sich vermutlich kaum auf die Performance des gesamten Systems auswirken. Mit diesem Grundrauschen muss aber eigentlich jeder leben, der einen SSH-Dienst über den Standard-Port 22 betreibt.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nickyreinert.de/2019/2019-07-13-wie-kannst-du-ssh-sicherer-machen-security-through-obscurity/images/grafik-700x335.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;SSH-Zugriff der letzten 30 Tage&lt;/p&gt;
&lt;p&gt;Wenn sich diese Zugriffe nicht auf die Performance auswirken, macht es dann wenigstens aus Sicherheitsgründen Sinn, diese Zugriffe zu unterbinden? Und die einfachste Möglichkeit das zu erreichen ist es, den SSH-Standardport (22) zu ändern. Mit meiner Argumentation folge ich denen &lt;a href=&#34;https://security.stackexchange.com/questions/189726/does-it-improve-security-to-use-obscure-port-numbers&#34;&gt;in einem sehr interessanten SO-Thread&lt;/a&gt; zu dem Thema: &lt;strong&gt;Security through obscurity&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>AbbreViator (tm) - Lange Texte automatisch abkürzen</title>
      <link>https://nickyreinert.de/2019/2019-05-13-abbreviator-tm-lange-texte-automatisch-abkurzen/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-05-13-abbreviator-tm-lange-texte-automatisch-abkurzen/</guid>
      
      <description>&lt;p&gt;Wenn bei deiner Abschlussarbeit, Masterarbeit, Hausarbeit oder Doktorabeit &lt;strong&gt;Qualität mehr zählt als Quantität&lt;/strong&gt;, dann ist der AbbreViator (tm) für dich genau das richtige. Der AbbreViator (tm) ist für wissenschaftliche und nicht-wissenschaftliche Texte geeigent. Das Werkzeug ersetzt alle Wörter durch Abkürzungen und liefert dir dein komplettes Pamphlet zurück, dass inhaltlich nicht weniger wert ist, als das Original, dafür aber umso kompakter präsentiert werden kann. Natürlich erhälst du auch das passende Abkürzungsverzeichnis dazu, dass du deiner schriftlichen Arbeit dann anfügen kannst.&lt;br&gt;
Die Verwendung des AbbreViator (tm) ist kostenlos, um ein Verweis auf den Urheber (ich) wird freilich gebeten.&lt;br&gt;
Berichte mir gerne von deinen erfolgreichen Arbeiten und wie die geneigte Leserschaft sie aufgenommen haben. Hier geht es zum AbbreViator (tm):&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Lorem Picsum - Der Generator für zufällige Bilder</title>
      <link>https://nickyreinert.de/2019/2019-04-29-lorem-picsum-der-generator-fuer-zufaellige-bilder/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-04-29-lorem-picsum-der-generator-fuer-zufaellige-bilder/</guid>
      
      <description>&lt;p&gt;Lorem Ipsum kennt jeder. &lt;a href=&#34;https://de.wikipedia.org/wiki/Lorem_ipsum&#34;&gt;Das sind diese lateinisch anmutenden Texte,&lt;/a&gt; die man als Platzhalter verwenden kann. Zu einem richtigen Layout gehören aber nicht nur Texte, sondern auch Bilder. &lt;em&gt;Doch woher nehmen, wenn nicht stehlen&lt;/em&gt;? &lt;strong&gt;&lt;a href=&#34;https://picsum.photos/&#34;&gt;Lorem Picsum&lt;/a&gt;&lt;/strong&gt; &lt;a href=&#34;https://picsum.photos/&#34;&gt;heißt die Antwort naheliegenderweise&lt;/a&gt;. Dabei handelt es sich um eine &lt;strong&gt;kostenlose&lt;/strong&gt; und &lt;strong&gt;unkomplizierte&lt;/strong&gt; API, um Bilder in deine Seite bzw. dein Layout einzubinden. Die Bilder werden dabei bei jedem Aufruf zufällig neu ausgewählt:&lt;/p&gt;
&lt;p&gt;Das schöne: Du kannst die Bilder relativ zielgenau aussuchen. Egal, ob du ein quadratisches Format oder monochrome Bilder benötigst: Über die entsprechenden Parameter kannst du festlegen, welche Art von Platzhalter-Bild du einbinden willst:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Den korrekten MySQL ODBC-Treiber für deinen Linux-Server installieren</title>
      <link>https://nickyreinert.de/2019/2019-04-24-den-korrekten-mysql-odbc-treiber-fuer-deinen-linux-server-installieren/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-04-24-den-korrekten-mysql-odbc-treiber-fuer-deinen-linux-server-installieren/</guid>
      
      <description>&lt;p&gt;Wenn du denkst, du hast alles richtig gemacht, nachdem du einer der halb vollständigen Anleitungen da draußen gefolgt bist, und dann wirst du nach der mühseligen Installation von ein paar ODBC-Treibern doch mit der folgenden Fehlermeldung begrüßt:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ISQL]ERROR: Could not SQLDriverConnect
[01000][unixODBC][Driver Manager]Can&amp;#39;t open lib &amp;#39;/usr/local/lib/libmyodbc8w.so&amp;#39; : file not found
[ISQL]ERROR: Could not SQLDriverConnect
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Doch tatsächlich existiert die Datei. Die Fehlermeldung ist nur etwas unpräzise und vermutlich hast du die falschen Treiber heruntergeladen. Damit dir das nicht noch mal passiert, hier eine endgültige, hoffentlich vollständige Anleitung zur Installation der MySQL-ODBC Treiber (unter Ubuntu, aber leicht übertragbar auf andere Distributionen):&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>WordPress Tag Cloud mit Umlauten (äöü) korrekt sortieren - Oder: Der WordPress Filter im Live-Beispiel erklärt</title>
      <link>https://nickyreinert.de/2019/2019-04-18-wordpress-tag-cloud-mit-umlauten-aeoeue-korrekt-sortieren-oder-der-wordpress-filter-im-live-beispiel-erklaert/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-04-18-wordpress-tag-cloud-mit-umlauten-aeoeue-korrekt-sortieren-oder-der-wordpress-filter-im-live-beispiel-erklaert/</guid>
      
      <description>&lt;p&gt;WordPress bringt von Hause aus ein Widget mit, dass die verwendeten Tags als Cloud darstellt (wer es ein wenig schöner mag, &lt;a href=&#34;https://www.nickyreinert.de/wordpress-word-cloud-2-0/&#34;&gt;greift auf mein WordCloud Plugin zurück&lt;/a&gt;). Das Ganze hat nur einen Haken: Die entsprechende WordPress-Funktion &lt;strong&gt;&lt;a href=&#34;https://developer.wordpress.org/reference/functions/wp_generate_tag_cloud/&#34;&gt;wp_generate_tag_cloud&lt;/a&gt;&lt;/strong&gt; nutzt &lt;strong&gt;aosort()&lt;/strong&gt; als Sortierfunktion. Und die kommt mit Umlauten nicht sonderlich gut klar. Eine Lösung wäre also, die Umlaute für die Sortierung zu übersetzen, also Ä ind Ae, ö in oe und so weiter.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Mehrere virtuelle Server mit nginx und PHP-FPM für Wordpress (Teil 1 / 3)</title>
      <link>https://nickyreinert.de/2019/2019-04-12-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-04-12-mehrere-virtuelle-server-mit-nginx-und-php-fpm-fur-wordpress-teil-1-3/</guid>
      
      <description>&lt;p&gt;Bisher war ich immer recht zufrieden mit der Geschwindigkeit meiner selbstgehosteten Wordpress-Seiten. Im Schnitt hat es nicht länger als 2 Sekunden gedauert, bis die Inhalte aufgebaut waren. Mal mehr, mal weniger. Und das schien mir ein akzeptabler Wert zu sein. Ich nutzte eine der üblichen Standard-Installationen, die da draußen wohl weit verbreitet ist: &lt;strong&gt;Apache2&lt;/strong&gt; mit &lt;strong&gt;mod_php&lt;/strong&gt;. Der PHP-Interpreter ist dabei &amp;ldquo;Teil&amp;rdquo; des Apache2-Servers. Das ist unkompliziert und schnell zu installieren und somit einfach eine pragmatische Lösung und auch deshalb wohl sehr weit verbreitet. Aber: Die einfachsten Lösungen sind oft nicht die besten. Geschweige denn, die sichersten.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>PHP - Mit welcher Methode durchsucht man ein Array am schnellsten?</title>
      <link>https://nickyreinert.de/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/</guid>
      
      <description>&lt;p&gt;Das schöne an PHP: Viele Wege führen nach Rom.&lt;/p&gt;
&lt;p&gt;Das Problem mit PHP: Viele Wege führen nach Rom.&lt;/p&gt;
&lt;p&gt;Denn diese Vielfallt stellt den Entwickler von Welt mituner vor eine schwierige Frage: &lt;a href=&#34;http://nickology.com/2012/07/03/php-faster-array-lookup-than-using-in_array/&#34;&gt;Welcher Weg ist der kürzeste&lt;/a&gt;? Will man z.B. einen Wert (&lt;em&gt;needle&lt;/em&gt;) in einem Array (&lt;em&gt;haystack&lt;/em&gt;) suchen, gibt es in PHP zehn verschiedene Methoden. Du hast richtig gelesen: Zehn. Ich unterscheide einerseits auch die strikten und nicht-strikten Vergleiche, andererseits lasse ich die wirklich exotischen Methoden außen vor. Welche Methoden am schnellsten sind, werde ich versuchen im Folgenden herauszufinden. Außerdem schaue ich mir an ob es unter den letzten PHP-Versionen (7.0 bis 7.3*) Unterschiede in der Geschwindigkeit gibt.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Dateien von einem kaputten Android-Smartphone retten</title>
      <link>https://nickyreinert.de/2019/2019-01-26-dateien-von-einem-kaputten-android-smartphone-retten/</link>
      <pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/2019/2019-01-26-dateien-von-einem-kaputten-android-smartphone-retten/</guid>
      
      <description>&lt;p&gt;Ich hab hier gerade ein altes LG Nexus auf dem Tisch liegen, bei dem das Display in der unteren Hälfte nach einem Sturz nicht mehr funktioniert. Und das ist ja eigentlich der Supergau. Denn für gewöhnlich schützt man sein Gerät ja mit einer Geste vor fremden Zugriffen. Das Problem ist also: Wenn früh um sechs Uhr der voreingestellte Wecker angeht, kannst du ihn nicht mehr deaktivieren. Und außerdem kommst du nicht mehr an deine Dateien ran, wenn das Smartphone, wie eben das Nexus von LG, seine Daten nicht gerade auf einer externen Speicherkarte ablegt.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
