<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aoc2024 on Nicky Reinert</title>
    <link>https://nickyreinert.de/en/categories/aoc2024/</link>
    <description>Recent content in Aoc2024 on Nicky Reinert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 08 Dec 2024 12:34:56 +0200</lastBuildDate><atom:link href="https://nickyreinert.de/en/categories/aoc2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code - Day 8 - Missing Operators (Ruby)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-08-aoc-day-8/</link>
      <pubDate>Sun, 08 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-08-aoc-day-8/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/8/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day8%20-%20ruby&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The first time I read through the riddle, I was like: &amp;ldquo;Phew, no way, I&amp;rsquo;m going to skip this!&amp;rdquo; I looked at the example and the description, and it didn’t make sense at all. But when I’m stuck like that at the very beginning, the best approach to get a grip is: Visualize! (A concept I didn&amp;rsquo;t learn from &lt;a href=&#34;https://www.learnhuggingface.com/&#34;&gt;Daniel Bourke&amp;rsquo;s course about machine learning&lt;/a&gt;, but he perfected it!)&lt;/p&gt;
&lt;p&gt;However, I thought it might be a good idea to use Ruby this time — my first time with this language. I won’t bother you with the environment setup. Again, I’m just using a containerized environment, which makes things so much easier.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 7 - Missing Operators (C&#43;&#43;)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-07-aoc-day-7/</link>
      <pubDate>Sat, 07 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-07-aoc-day-7/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/7/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day7%20-%20c%2B%2B&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This is the kind of task I really enjoy: finding algorithms for simple mathematical challenges! Let&amp;rsquo;s go—this time in&amp;hellip; C++! (Phew!)&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll find my &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day7%20-%20c%2B%2B/.devcontainer&#34;&gt;.devcontainer and Dockerfile&lt;/a&gt; on GitHub. Once again, I don&amp;rsquo;t want to &lt;em&gt;bloat&lt;/em&gt; my system with additional compiler setups. It turns out, this is working like a charm.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 6 - Walking the map (JavaScript)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-06-aoc-day-6/</link>
      <pubDate>Fri, 06 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-06-aoc-day-6/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/6/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day6%20-%20javascript&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This task looks tricky, so I am once again choosing a simple language that I am familiar with: JavaScript (&lt;a href=&#34;https://nickyreinert.medium.com/ne-34-javascript-was-developed-within-10-days-0116b32a38b6&#34;&gt;which, by the way, was developed in just 10 days&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;With no further ado&amp;hellip;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 5 - Printer Updates (Bash)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-05-aoc-day-5/</link>
      <pubDate>Thu, 05 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-05-aoc-day-5/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/5/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/blob/main/solutions/day5%20-%20bash/solve.sh&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s the fifth day of our outrageous adventure, and we are dealing with printer updates. To solve this riddle, we are getting back to the roots and our good ol&amp;rsquo; friend &lt;code&gt;Bash&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;The good news here is that I don&amp;rsquo;t need to set up any particular environment because, thankfully, &lt;code&gt;Bash&lt;/code&gt; is available on most systems out of the box.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 4 - Finding patters (Excel)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-04-aoc-day-4/</link>
      <pubDate>Wed, 04 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-04-aoc-day-4/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/4/&#34;&gt;task&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I Made It to Day 4!&lt;/p&gt;
&lt;p&gt;And today&amp;rsquo;s task perfectly fits Excel. Some—if not most—people don&amp;rsquo;t like Excel and would never consider it a serious tool for data analytics, exploration, or even &amp;ldquo;engineering.&amp;rdquo; Well, you&amp;rsquo;re wrong about Excel. It&amp;rsquo;s quite powerful if you know how to use it. Let me show you&amp;hellip;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 3 - Multiplications (Python)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-03-aoc-day-3/</link>
      <pubDate>Tue, 03 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-03-aoc-day-3/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/3/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day3%20-%20python&#34;&gt;solution&lt;/a&gt;)
As I reached the third day of my adventure, I had already learned something new that significantly improves the process: the &lt;code&gt;devcontainer.json&lt;/code&gt; file can handle creating and running the Docker container for me. This saves the trouble of manually building and running it—essentially saving two commands on the command line, which adds up to about three seconds. Still, it’s an improvement. However, I am not going to use it.&lt;/p&gt;
&lt;p&gt;I had initially planned to solve today’s riddle in &lt;strong&gt;BASIC&lt;/strong&gt;—the first programming language I learned 30 years ago. However, it turns out that deploying a BASIC compiler into a container isn&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 2 - Increasing and decreasing (Rust)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-02-aoc-day-2/</link>
      <pubDate>Mon, 02 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-02-aoc-day-2/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/2/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day2%20-%20rust&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://adventofcode.com/2024/day/2&#34;&gt;This task&lt;/a&gt; is about testing if integers in a list are increasing or decreasing. I&amp;rsquo;ll try &lt;code&gt;Rust&lt;/code&gt;, and I assume I need nerves of steel for this exercise.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 1 - Differences and Products (F#)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-01-aoc-day-1/</link>
      <pubDate>Sun, 01 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-01-aoc-day-1/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/1/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day1%20-%20f%23&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;As the challenge at &lt;a href=&#34;https://adventofcode.com/&#34;&gt;AoC&lt;/a&gt; is not about the syntax but the algorithm, I decided to try a different approach this year: &lt;strong&gt;a new language every day&lt;/strong&gt;. I am probably not going to explain the code in detail, but I will point out characteristics of each particular language that I think are worth mentioning. Let&amp;rsquo;s see how far I get. Please don&amp;rsquo;t take my judgement to serious.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
