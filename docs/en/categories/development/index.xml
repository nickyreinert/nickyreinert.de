<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Nicky Reinert</title>
    <link>https://nickyreinert.de/en/categories/development/</link>
    <description>Recent content in Development on Nicky Reinert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 08 Dec 2024 12:34:56 +0200</lastBuildDate><atom:link href="https://nickyreinert.de/en/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code - Day 8 - Missing Operators (Ruby)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-08-aoc-day-8/</link>
      <pubDate>Sun, 08 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-08-aoc-day-8/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/8/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day8%20-%20ruby&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The first time I read through the riddle, I was like: &amp;ldquo;Phew, no way, I&amp;rsquo;m going to skip this!&amp;rdquo; I looked at the example and the description, and it didn’t make sense at all. But when I’m stuck like that at the very beginning, the best approach to get a grip is: Visualize! (A concept I didn&amp;rsquo;t learn from &lt;a href=&#34;https://www.learnhuggingface.com/&#34;&gt;Daniel Bourke&amp;rsquo;s course about machine learning&lt;/a&gt;, but he perfected it!)&lt;/p&gt;
&lt;p&gt;However, I thought it might be a good idea to use Ruby this time — my first time with this language. I won’t bother you with the environment setup. Again, I’m just using a containerized environment, which makes things so much easier.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 7 - Missing Operators (C&#43;&#43;)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-07-aoc-day-7/</link>
      <pubDate>Sat, 07 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-07-aoc-day-7/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/7/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day7%20-%20c%2B%2B&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This is the kind of task I really enjoy: finding algorithms for simple mathematical challenges! Let&amp;rsquo;s go—this time in&amp;hellip; C++! (Phew!)&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll find my &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day7%20-%20c%2B%2B/.devcontainer&#34;&gt;.devcontainer and Dockerfile&lt;/a&gt; on GitHub. Once again, I don&amp;rsquo;t want to &lt;em&gt;bloat&lt;/em&gt; my system with additional compiler setups. It turns out, this is working like a charm.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 6 - Walking the map (JavaScript)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-06-aoc-day-6/</link>
      <pubDate>Fri, 06 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-06-aoc-day-6/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/6/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day6%20-%20javascript&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This task looks tricky, so I am once again choosing a simple language that I am familiar with: JavaScript (&lt;a href=&#34;https://nickyreinert.medium.com/ne-34-javascript-was-developed-within-10-days-0116b32a38b6&#34;&gt;which, by the way, was developed in just 10 days&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;With no further ado&amp;hellip;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 5 - Printer Updates (Bash)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-05-aoc-day-5/</link>
      <pubDate>Thu, 05 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-05-aoc-day-5/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/5/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/blob/main/solutions/day5%20-%20bash/solve.sh&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s the fifth day of our outrageous adventure, and we are dealing with printer updates. To solve this riddle, we are getting back to the roots and our good ol&amp;rsquo; friend &lt;code&gt;Bash&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;The good news here is that I don&amp;rsquo;t need to set up any particular environment because, thankfully, &lt;code&gt;Bash&lt;/code&gt; is available on most systems out of the box.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 4 - Finding patters (Excel)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-04-aoc-day-4/</link>
      <pubDate>Wed, 04 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-04-aoc-day-4/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/4/&#34;&gt;task&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I Made It to Day 4!&lt;/p&gt;
&lt;p&gt;And today&amp;rsquo;s task perfectly fits Excel. Some—if not most—people don&amp;rsquo;t like Excel and would never consider it a serious tool for data analytics, exploration, or even &amp;ldquo;engineering.&amp;rdquo; Well, you&amp;rsquo;re wrong about Excel. It&amp;rsquo;s quite powerful if you know how to use it. Let me show you&amp;hellip;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 3 - Multiplications (Python)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-03-aoc-day-3/</link>
      <pubDate>Tue, 03 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-03-aoc-day-3/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/3/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day3%20-%20python&#34;&gt;solution&lt;/a&gt;)
As I reached the third day of my adventure, I had already learned something new that significantly improves the process: the &lt;code&gt;devcontainer.json&lt;/code&gt; file can handle creating and running the Docker container for me. This saves the trouble of manually building and running it—essentially saving two commands on the command line, which adds up to about three seconds. Still, it’s an improvement. However, I am not going to use it.&lt;/p&gt;
&lt;p&gt;I had initially planned to solve today’s riddle in &lt;strong&gt;BASIC&lt;/strong&gt;—the first programming language I learned 30 years ago. However, it turns out that deploying a BASIC compiler into a container isn&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 2 - Increasing and decreasing (Rust)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-02-aoc-day-2/</link>
      <pubDate>Mon, 02 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-02-aoc-day-2/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/2/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day2%20-%20rust&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://adventofcode.com/2024/day/2&#34;&gt;This task&lt;/a&gt; is about testing if integers in a list are increasing or decreasing. I&amp;rsquo;ll try &lt;code&gt;Rust&lt;/code&gt;, and I assume I need nerves of steel for this exercise.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Advent of Code - Day 1 - Differences and Products (F#)</title>
      <link>https://nickyreinert.de/en/2024/2024-12-01-aoc-day-1/</link>
      <pubDate>Sun, 01 Dec 2024 12:34:56 +0200</pubDate>
      
      <guid>https://nickyreinert.de/en/2024/2024-12-01-aoc-day-1/</guid>
      
      <description>&lt;p&gt;(&lt;a href=&#34;https://adventofcode.com/2024/day/1/&#34;&gt;task&lt;/a&gt; | &lt;a href=&#34;https://github.com/nickyreinert/aoc2024/tree/main/solutions/day1%20-%20f%23&#34;&gt;solution&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;As the challenge at &lt;a href=&#34;https://adventofcode.com/&#34;&gt;AoC&lt;/a&gt; is not about the syntax but the algorithm, I decided to try a different approach this year: &lt;strong&gt;a new language every day&lt;/strong&gt;. I am probably not going to explain the code in detail, but I will point out characteristics of each particular language that I think are worth mentioning. Let&amp;rsquo;s see how far I get. Please don&amp;rsquo;t take my judgement to serious.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Automatisierte WordPress Installation</title>
      <link>https://nickyreinert.de/en/2020/2020-10-08-automatisierte-wordpress-installation/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2020/2020-10-08-automatisierte-wordpress-installation/</guid>
      
      <description>&lt;p&gt;Et voilá. Ein BASH Script, um WordPress automatisiert über die Kommandozeile zu installieren, inklusive Theme und beliebigen Plugins sowie - wenn benötigt - zufälligen Beiträgen, Kategorien, Tags und Bildern.&lt;/p&gt;
&lt;h2 id=&#34;warnung&#34;&gt;Warnung!&lt;/h2&gt;
&lt;p&gt;Du solltest geübt im Umgang mit der Shell, Bash und WordPress sein und unbedingt &lt;strong&gt;Backups&lt;/strong&gt; nutzen. Das Script verwendet, wenn der entsprechende Parameter gesetzt ist, den Befehl &amp;ldquo;&lt;strong&gt;rm -rf&lt;/strong&gt;&amp;rdquo;, um einen Ordner komplett zu &lt;strong&gt;löschen&lt;/strong&gt;. Dieser Schritt lässt sich nicht widerrufen. Außerdem wird, sofern per Parameter gefordert, eine Datenbank mit &amp;ldquo;&lt;strong&gt;DROP DATABASE&lt;/strong&gt;&amp;rdquo; komplett entfernt. Wenn du das Script auf eine existierende WordPress-Installation oder Datenbank anwendest, können existierende Daten &lt;strong&gt;überschrieben&lt;/strong&gt; werden!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>WordPress Word Cloud 2.0</title>
      <link>https://nickyreinert.de/en/2020/2020-06-09-wordpress-word-cloud-2-0/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2020/2020-06-09-wordpress-word-cloud-2-0/</guid>
      
      <description>&lt;p&gt;Mein Word Cloud Plugin für WordPress liegt in einer neuen Version vor! Die Word Cloud unterstützt nun &lt;strong&gt;OCR&lt;/strong&gt;, &lt;strong&gt;Tags&lt;/strong&gt;, &lt;strong&gt;interne&lt;/strong&gt; und &lt;strong&gt;externe Quellen&lt;/strong&gt; und vieles mehr. Da ich also sehr viele grundlegende Änderungen vorgenommen habe, gibt es an dieser Stelle eine komplett neue Dokumentation. Viel Spass.&lt;/p&gt;
&lt;h2 id=&#34;was-ist-eine-word-cloud&#34;&gt;Was ist eine Word Cloud?&lt;/h2&gt;
&lt;p&gt;Eine &lt;strong&gt;Word Cloud&lt;/strong&gt;, auch &lt;strong&gt;Schlagwortwolke&lt;/strong&gt;, &lt;strong&gt;Wortwolke&lt;/strong&gt; usw., dient der besseren Visualisierung von Texten. Um eine Word Cloud zu erstellen, werden die Vorkommen von Wörtern eines Textes gezählt. Die Wörter mit der größten &lt;strong&gt;Häufigkeit&lt;/strong&gt; werden groß dargestellt, Wörter mit geringerer Häufigkeit weniger groß. Und das ganze wird dann in einer &lt;strong&gt;Wolkenform&lt;/strong&gt; dargestellt, mit den größten Wörtern in der Mitte.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pictero - Generator für Poesie-Album-Sprüche</title>
      <link>https://nickyreinert.de/en/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/</guid>
      
      <description>&lt;p&gt;&lt;a href=&#34;https://pictero.com/&#34;&gt;Pictero&lt;/a&gt; ist eine Persiflage auf die moralinsauren, romantischen oder schwülstigen Sprüche, die dir auf Delphin-Postern, in Poesie-Alben und mittlerweile auch in sozialen Netzwerken begegnen. Mit Pictero kannst du derartige Texte über Bilder legen, die entweder ganz gut passen. Dazu gehören z.B. Strandbilder mit einem viel zu starken Blur-Effekt. Oder du nimmst Bilder, die überhaupt gar nicht passen, wie z.B. ein Stück Fleisch, Katzen oder ein Porträt von Bill Murray.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nickyreinert.de/en/2019/2019-10-15-pictero-generator-fuer-poesie-album-sprueche/images/1-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Fokussierter Drill-Down mit Tableau</title>
      <link>https://nickyreinert.de/en/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2019/2019-07-15-fokussierter-drill-down-mit-tableau/</guid>
      
      <description>&lt;p&gt;In Tableau gibt es die eigentlich sehr nützliche Möglichkeit, Dimensionen beliebig zu kombinieren und in einer Hierarchie zusammenzufassen. Diese Funktion ist sehr intuitiv hat aber einen Haken: Wenn man bei großen Datenmengen und Dimensionen mit hoher Kardinalität einen Drill Down macht, werden die Abfragen nicht nur irrsinnig langsam, je tiefer man kommt. Die Übersicht geht auch komplett verloren.&lt;/p&gt;
&lt;p&gt;Um das zu demonstrieren habe ich eine Datenquelle mit 1 Mio. Zeilen und 10 Dimensionen erzeugt. Der Drill-Down auf Ebene 8 dauert hier auf normaler Hardware über 20 Sekunden und das Ergebnis ist&amp;hellip; nun ja: Für eine schnellen Überblick kaum zu gebrauchen:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>PHP - Mit welcher Methode durchsucht man ein Array am schnellsten?</title>
      <link>https://nickyreinert.de/en/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2019/2019-04-10-php-mit-welcher-methode-durchsucht-man-ein-array-am-schnellsten/</guid>
      
      <description>&lt;p&gt;Das schöne an PHP: Viele Wege führen nach Rom.&lt;/p&gt;
&lt;p&gt;Das Problem mit PHP: Viele Wege führen nach Rom.&lt;/p&gt;
&lt;p&gt;Denn diese Vielfallt stellt den Entwickler von Welt mituner vor eine schwierige Frage: &lt;a href=&#34;http://nickology.com/2012/07/03/php-faster-array-lookup-than-using-in_array/&#34;&gt;Welcher Weg ist der kürzeste&lt;/a&gt;? Will man z.B. einen Wert (&lt;em&gt;needle&lt;/em&gt;) in einem Array (&lt;em&gt;haystack&lt;/em&gt;) suchen, gibt es in PHP zehn verschiedene Methoden. Du hast richtig gelesen: Zehn. Ich unterscheide einerseits auch die strikten und nicht-strikten Vergleiche, andererseits lasse ich die wirklich exotischen Methoden außen vor. Welche Methoden am schnellsten sind, werde ich versuchen im Folgenden herauszufinden. Außerdem schaue ich mir an ob es unter den letzten PHP-Versionen (7.0 bis 7.3*) Unterschiede in der Geschwindigkeit gibt.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>NGinx mit PHP-FPM, MySQL und Xdebug mit Docker auf Mac OS einrichten</title>
      <link>https://nickyreinert.de/en/2018/2018-09-16-nginx-mit-php-fpm-mysql-und-xdebug-mit-docker-auf-mac-os-einrichten/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2018/2018-09-16-nginx-mit-php-fpm-mysql-und-xdebug-mit-docker-auf-mac-os-einrichten/</guid>
      
      <description>&lt;p&gt;Ich habe mich eine ganze weile erfolgreich vor &lt;strong&gt;Docker&lt;/strong&gt; als lokale Entwicklungsumgebung gedrückt. Der Grund: Ich nutze eine kommerzielle Parallels Lizenz, über die ich Ubuntu virtualisiert laufen lasse und bin damit bisher ganz gut gefahren. Bisher. Paralles hat nämlich immer wieder Problem gemacht. So konnte ich nach manchen Updates von Parallels oder Ubuntu die &lt;em&gt;Parallels Tools&lt;/em&gt; nicht mehr nutzen und musste diese umständlich neu installieren. Da die Doku dazu auch nur unvollständig vorliegt, war das regelmäßig eine ziemliche Zeitverschwendung. Die &lt;em&gt;Parallels Tools&lt;/em&gt; sind aber notwendig, um von Ubuntu aus auf die Dateien des Gastsystems, Mac OS X, zuzugreifen.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Die OS X - Bash</title>
      <link>https://nickyreinert.de/en/2018/2018-08-24-die-os-x-bash/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2018/2018-08-24-die-os-x-bash/</guid>
      
      <description>&lt;p&gt;Da ich mit meinem Mac sehr oft auf der Kommandozeile unterwegs bin (dazu empfehle ich übrigens &lt;a href=&#34;https://www.iterm2.com/&#34;&gt;iTerm2&lt;/a&gt; - ein Terminal-Ersatz der alle anderen Anwendungen dieser Art auch auf Linux und Windows aussticht) habe ich mir dafür ein paar kleine Einstellungen zusammengesammelt, die das Leben und Arbeiten auf der Kommandozeile etwas erleichtern.&lt;/p&gt;
&lt;h2 id=&#34;was-ist-bash&#34;&gt;Was ist Bash?&lt;/h2&gt;
&lt;p&gt;Bash steht für &amp;ldquo;Bourn again shell&amp;rdquo; und ist eine Erweiterung der älteren Bourne-Shell, eine Shell die auf Unix-(ähnlichen) Systemen als Benutzerschnittstelle dient. Und diese ist vor allem daran erkennbar, dass die Steuerung des Systems nur über die Tastatur, ohne Maus und Fenster funktioniert.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wie entwickelt man einen Amazon-Bot für Telegramm?</title>
      <link>https://nickyreinert.de/en/2018/2018-03-02-wie-entwickelt-man-einen-amazon-bot-fuer-telegramm/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2018/2018-03-02-wie-entwickelt-man-einen-amazon-bot-fuer-telegramm/</guid>
      
      <description>&lt;h2 id=&#34;was-ist-ein-telegramm-bot&#34;&gt;Was ist ein Telegramm-Bot?&lt;/h2&gt;
&lt;p&gt;Schon mal was von Telegramm gehört oder gar einem Telegramm-Bot gehört? Nein? Macht nichts. Telegramm ist ein Messenger, wie Whatsapp oder Threema. Der große Vorteil von Telegramm gegenüber Whatsapp ist die Plattforum-Unabhängigkeit. Es gibt nicht nur Apps für Android und iOs, auch unter OS X (Mac) und Windows lässt sich Telegramm unkompliziert nutzen. Bei Whatsapp war das bisher nur über den Browser möglich, Threema bietet diese Möglichkeit gar nicht an.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Download-Geschwindigkeit messen und in Google DataStudio darstellen</title>
      <link>https://nickyreinert.de/en/2017/2017-11-16-download-geschwindigkeit-messen-und-in-googledata-studio-darstellen/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2017/2017-11-16-download-geschwindigkeit-messen-und-in-googledata-studio-darstellen/</guid>
      
      <description>&lt;p&gt;Alles beginnt mit einer fixen Idee. Meine war es, die Download-Geschwindigkeit meines Internet-Anschlusses zu messen. Doch das ist nur aussagekräftig, wenn man es regelmäßig macht. Und um das ganze abzurunden, sollte man die Ergebnisse doch irgendwie noch in einem bunten Diagramm darstellen können. Aus der Idee wurde also ein Plan und schließlich ein Projekt.&lt;/p&gt;
&lt;p&gt;Die Aufgabe lautet also: Ein Script soll in regelmäßigen Abständen Test-Dateien herunterladen. Die Dauer dafür und der Zeitpunkt des Tests schreibe ich in eine CSV-Datei, die mit GoogleDrive synchronisiert ist. Von dort werden die Ergebnisse im DataStudio von Google automatisch ausgelesen.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>XAMPP startet nicht mehr, nachdem eine php-Extension hinzugefügt wurde</title>
      <link>https://nickyreinert.de/en/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/</guid>
      
      <description>&lt;p&gt;Ich hatte hier neulich das Problem, dass ich die mongodb Extension für PHP aktivieren wollte und sich danach der Apache-Dienst nicht mehr starten ließ. Aber der Reihe nach:&lt;/p&gt;
&lt;p&gt;Das System ist OS 10.12.6 und ich nutze das XAMPP-Paket 7.1.9 mit entsprechend PHP 7.1. Außerdem habe ich mir homebrew installiert, da die Installation von pecl zu Umständlich (ich hätte alle möglichen  Abhängigkeiten installieren müssen). Mit homebrew habe ich mir also den aktuellen mongodb-Treiber installiert, das geht recht einfach mit:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Buffalo Linkstation LS-WXL mit MiniDLNA und Custom Firmware von Shonk 1.64 Mod 1</title>
      <link>https://nickyreinert.de/en/2013/2013-03-16-buffalo-linkstation-ls-wxl-mit-minidlna-und-custom-firmware-von-shonk-1-64-mod-1/</link>
      <pubDate>Sat, 16 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2013/2013-03-16-buffalo-linkstation-ls-wxl-mit-minidlna-und-custom-firmware-von-shonk-1-64-mod-1/</guid>
      
      <description>&lt;p&gt;1. Schritt - Die CFW (Custom FirmWare) von Shonk installieren. Das geschieht relativ komfortable über eine EXE-Datei: http://forum.buffalo.nas-central.org/viewtopic.php?f=68&amp;amp;t=23603&lt;/p&gt;
&lt;p&gt;Die CFW aktiviert zugleich den Telnet-Server, über den ab sofort die nächsten Schritte durchgeführt werden. Praktischerweise hat OSX (als Linux-Derivat) einen SSL-Telnet-Server eingebaut&amp;hellip; also das MacBook von Windows zurück in OSX booten.&lt;/p&gt;
&lt;p&gt;2. Schritt: Den Paketmanager IPKG installieren - das geschieht nach folgender Anleitung über Telnet: http://buffalo.nas-central.org/wiki/Category:LS-WXL#IPKG&lt;/p&gt;
&lt;p&gt;3. Schritt: Den MiniDLNA-Server installieren und dabei folgende Schritte durchgehen: http://forum.nas-hilfe.de/buffalo-technology-nas-anleitungen/minidlna-ab-version-1-0-22-from-scratch-kompilieren-installieren-t1130.html&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Tutorial: Web-Scraping mit VBA - Teil 1</title>
      <link>https://nickyreinert.de/en/2010/2010-09-16-tutorial-web-scraping-mit-vba-teil-1/</link>
      <pubDate>Thu, 16 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2010/2010-09-16-tutorial-web-scraping-mit-vba-teil-1/</guid>
      
      <description>&lt;p&gt;In dieser kleinen Tutorial-Serie will ich anhand einer Online-Handy-Datenbank zeigen, wie man mit VBA Seiten aus dem Internet abruft und nach Informationen sucht, die sich dann in einer Tabelle abspeichern lassen. Warum VBA? Es gibt vermutlich elegantere Lösungen, doch Excel ist eine Software, die die meisten zuhause nutzen. Man benötigt also keine zusätzliche Entwicklungsumgebung. Außerdem hat diese Methode den  Vorteil, dass die Daten sofort zur weiteren Verarbeitung verfügbar sind. VBA ist vielleicht nicht die performanteste Programmiersprache, dafür aber relativ leicht zu beherrschen.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
