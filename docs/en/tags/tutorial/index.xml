<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Tutorial auf Nicky Reinert</title>
    <link>http://localhost:1313/en/tags/tutorial/</link>
    <description>Blog &amp; projects by Nicky Reinert (Institute for Digital Challenges): web development &amp; software development, SEO &amp; analytics, hosting &amp; DevOps, WordPress &amp; Hugo, tools &amp; projects, data protection &amp; digital culture — plus content on AI and autism &amp; society.</description>
    <generator>Hugo 0.148.2</generator>
    <language>en</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Fri, 15 Aug 2025 12:34:56 +0000</lastBuildDate><atom:link href="http://localhost:1313/en/tags/tutorial/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>How to simulate proof of work in SQL and BigQuery</title>
      <link>http://localhost:1313/en/2025/2025-08-15-proof-of-work-in-bigquery-and-sql/</link>
      <pubDate>Fri, 15 Aug 2025 12:34:56 +0000</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2025/2025-08-15-proof-of-work-in-bigquery-and-sql/</guid>
      <description>(or: How does blockchain mining work?)
A miner has to solve a mathematical problem to validate a block for the Blockhain. The so called Proof of Work requires a lot of computing power aka energy and therefore is quite expensive. Googles BigQuery has a price model, that charges you for the …</description>
      
      
      
      <category>blog</category>
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/assets/image1.png" type="image/jpeg">
        <media:title>How to simulate proof of work in SQL and BigQuery - Title Image</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tutorial</dc:type>
      
      
    </item><item>
      <title>Monitor SSL Traffic On Android</title>
      <link>http://localhost:1313/en/2025/2025-07-01-monitor-ssl-traffic-on-android/</link>
      <pubDate>Tue, 01 Jul 2025 12:34:56 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2025/2025-07-01-monitor-ssl-traffic-on-android/</guid>
      <description>Fantastic Preface Monitoring SSL Traffic of Android Apps is quite a challenge these days. While it’s an important way to understand how Apps work, find security flaws or possible data breaches, a weak encrypted traffic also is a potential security risk.
These days, most apps use a thing called …</description>
      
      
      
      <category>anleitungen</category>
      
      
      
      
      <media:content url="http://localhost:1313/mitm-https-traffic.png" type="image/jpeg">
        <media:title>Monitor SSL Traffic On Android - Title Image</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>technical_tutorial</dc:type>
      
      
    </item><item>
      <title>Advent of Code - Day 8 - Missing Operators (Ruby)</title>
      <link>http://localhost:1313/en/2024/2024-12-08-aoc-day-8/</link>
      <pubDate>Sun, 08 Dec 2024 12:34:56 +0200</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2024/2024-12-08-aoc-day-8/</guid>
      <description>(task | solution)
The first time I read through the riddle, I was like: “Phew, no way, I’m going to skip this!” I looked at the example and the description, and it didn’t make sense at all. But when I’m stuck like that at the very beginning, the best approach to get a grip is: Visualize! (A concept …</description>
      
      
      
      <category>development</category>
      
      <category>aoc2024</category>
      
      
      
      
      <media:content url="http://localhost:1313/image-2.png" type="image/jpeg">
        <media:title>Advent of Code - Day 8 - Missing Operators (Ruby)</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>solution_writeup</dc:type>
      
      
    </item><item>
      <title>Advent of Code - Day 7 - Missing Operators (C&#43;&#43;)</title>
      <link>http://localhost:1313/en/2024/2024-12-07-aoc-day-7/</link>
      <pubDate>Sat, 07 Dec 2024 12:34:56 +0200</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2024/2024-12-07-aoc-day-7/</guid>
      <description>(task | solution)
This is the kind of task I really enjoy: finding algorithms for simple mathematical challenges! Let’s go—this time in… C++! (Phew!)
You’ll find my .devcontainer and Dockerfile on GitHub. Once again, I don’t want to bloat my system with additional compiler setups. It turns out, this …</description>
      
      
      
      <category>development</category>
      
      <category>aoc2024</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Advent of Code - Day 7 - Missing Operators (C&#43;&#43;)</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>solution_writeup</dc:type>
      
      
    </item><item>
      <title>Advent of Code - Day 4 - Finding patterns (Excel)</title>
      <link>http://localhost:1313/en/2024/2024-12-04-aoc-day-4/</link>
      <pubDate>Wed, 04 Dec 2024 12:34:56 +0200</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2024/2024-12-04-aoc-day-4/</guid>
      <description>(task)
I Made It to Day 4!
And today’s task perfectly fits Excel. Some—if not most—people don’t like Excel and would never consider it a serious tool for data analytics, exploration, or even “engineering.” Well, you’re wrong about Excel. It’s quite powerful if you know how to use it. Let me show …</description>
      
      
      
      <category>development</category>
      
      <category>aoc2024</category>
      
      
      
      
      <media:content url="http://localhost:1313/starting_matrix.png" type="image/jpeg">
        <media:title>Advent of Code - Day 4 - Finding patterns (Excel)</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>solution_writeup</dc:type>
      
      
    </item><item>
      <title>Advent of Code - Day 3 - Multiplications (Python)</title>
      <link>http://localhost:1313/en/2024/2024-12-03-aoc-day-3/</link>
      <pubDate>Tue, 03 Dec 2024 12:34:56 +0200</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2024/2024-12-03-aoc-day-3/</guid>
      <description>(task | solution) As I reached the third day of my adventure, I had already learned something new that significantly improves the process: the devcontainer.json file can handle creating and running the Docker container for me. This saves the trouble of manually building and running it—essentially …</description>
      
      
      
      <category>development</category>
      
      <category>aoc2024</category>
      
      
      
      
      <media:content url="http://localhost:1313/images/posts/placeholder.jpg" type="image/jpeg">
        <media:title>Advent of Code - Day 3 - Multiplications (Python)</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>solution_writeup</dc:type>
      
      
    </item><item>
      <title>sudoku</title>
      <link>http://localhost:1313/en/2024/2024-10-18-sudoku/</link>
      <pubDate>Thu, 17 Oct 2024 12:34:56 +0100</pubDate>
      <author></author>
      <guid>http://localhost:1313/en/2024/2024-10-18-sudoku/</guid>
      <description>How to build a brute force Sudoku solver Follow my journey on how to build an algorithm that lets you create or solve Sudoku puzzles!
Follow my steps or jump ahead — this is the Jupyter notebook: https://gist.github.com/nickyreinert/966299333429ef685338e5feb5056126
Warmup — introduction Before we …</description>
      
      
      
      <category>projekte</category>
      
      
      
      
      <media:content url="http://localhost:1313/sudoku_positions.png" type="image/jpeg">
        <media:title>Sudoku Solver Tutorial</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>tutorial</dc:type>
      
      
    </item>
  </channel>
</rss>