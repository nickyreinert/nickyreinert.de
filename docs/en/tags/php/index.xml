<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Nicky Reinert</title>
    <link>https://nickyreinert.de/en/tags/php/</link>
    <description>Recent content in Php on Nicky Reinert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 23 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://nickyreinert.de/en/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Das Memory Limit von PHP und WordPress erhöhen - die vollständige Anleitung</title>
      <link>https://nickyreinert.de/en/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/</guid>
      
      <description>&lt;p&gt;Das Memory Limit, sprich die Speichergrenze, von PHP ist für viele oft ein Rätsel. Es ist nicht klar, wie bzw. wo es gesetzt wird und welche Auswirkungen die unterschiedlichen Einstellungsorte haben. &lt;a href=&#34;https://wp-ninjas.de/wordpress-php-memory-limit&#34;&gt;Viele&lt;/a&gt; &lt;a href=&#34;https://www.hosttest.de/artikel/was-ist-das-php-memory-limit-1411.html&#34;&gt;Anleitungen&lt;/a&gt; &lt;a href=&#34;https://socialmediadozent.com/php-memory-limit-erhoehen/#Drei_Loesungen_um_das_PHP_Memory_Limit_zu_erhoehen&#34;&gt;sind&lt;/a&gt; &lt;a href=&#34;https://www.how-to-wordpress.de/php-memory-limit/&#34;&gt;oft&lt;/a&gt; &lt;a href=&#34;http://juliusbeckmann.de/blog/php-memory-limit-erhohen.html&#34;&gt;unvollständig&lt;/a&gt;, und tragen damit eher zur Irritation bei. Denn tatsächlich gibt es unzählige Möglichkeiten das Memory Limit zu setzen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;super-global in der php.ini&lt;/li&gt;
&lt;li&gt;global in der pool.conf, bei Verwendung von PHP-FPM&lt;/li&gt;
&lt;li&gt;oder global in der httpd.conf (Apache) oder server.conf (nginx)&lt;/li&gt;
&lt;li&gt;auf Ordner-Ebene in der user.ini&lt;/li&gt;
&lt;li&gt;auf Ordner-Ebene in der .htaccess-Datei&lt;/li&gt;
&lt;li&gt;auf Applikations-Ebene über die WordPress-Konstanten WP_MEMORY_LIMIT und WP_MAX_MEMORY_LIMIT&lt;/li&gt;
&lt;li&gt;oder auf Datei-Ebene im Script mit ini_set();&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nickyreinert.de/files/das-memory-limit-von-php-wie-funktioniert-es/grafik-7.png&#34;&gt;&lt;img src=&#34;https://nickyreinert.de/en/2020/2020-10-23-das-memory-limit-von-php-wie-funktioniert-es/images/grafik-7-700x246.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>WordPress Tag Cloud mit Umlauten (äöü) korrekt sortieren - Oder: Der WordPress Filter im Live-Beispiel erklärt</title>
      <link>https://nickyreinert.de/en/2019/2019-04-18-wordpress-tag-cloud-mit-umlauten-aeoeue-korrekt-sortieren-oder-der-wordpress-filter-im-live-beispiel-erklaert/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2019/2019-04-18-wordpress-tag-cloud-mit-umlauten-aeoeue-korrekt-sortieren-oder-der-wordpress-filter-im-live-beispiel-erklaert/</guid>
      
      <description>&lt;p&gt;WordPress bringt von Hause aus ein Widget mit, dass die verwendeten Tags als Cloud darstellt (wer es ein wenig schöner mag, &lt;a href=&#34;https://www.nickyreinert.de/wordpress-word-cloud-2-0/&#34;&gt;greift auf mein WordCloud Plugin zurück&lt;/a&gt;). Das Ganze hat nur einen Haken: Die entsprechende WordPress-Funktion &lt;strong&gt;&lt;a href=&#34;https://developer.wordpress.org/reference/functions/wp_generate_tag_cloud/&#34;&gt;wp_generate_tag_cloud&lt;/a&gt;&lt;/strong&gt; nutzt &lt;strong&gt;aosort()&lt;/strong&gt; als Sortierfunktion. Und die kommt mit Umlauten nicht sonderlich gut klar. Eine Lösung wäre also, die Umlaute für die Sortierung zu übersetzen, also Ä ind Ae, ö in oe und so weiter.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Wie wirken sich viele 301 Weiterleitungen auf die  Performance aus?</title>
      <link>https://nickyreinert.de/en/2017/2017-10-26-wie-wirken-sich-viele-301-weiterleitungen-auf-die-performance-aus/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2017/2017-10-26-wie-wirken-sich-viele-301-weiterleitungen-auf-die-performance-aus/</guid>
      
      <description>&lt;p&gt;Um Weiterleitungen kommt man fast nicht herum. Vor allem im Bereich der Suchmaschinenoptimierung (SEO) sollte man vermeiden, dass es auf der Website zu 404-Fehlern kommt - also Ressourcen, die nicht (mehr) vorhanden sind.&lt;/p&gt;
&lt;p&gt;Ein Weg, um das zu beheben, ist die Einrichtung einer Weiterleitung von der alten, nicht mehr vorhandenen Ressource auf die neue Ressource.  Der HTTP-Statuscode dafür ist entweder 301 (temporär) oder 302 (für eine dauerhafte Weiterleitung). Weiterleitungen können z.B. mit einer .htaccess Datei eingerichtet werden. Dazu aktiviert man zunächst die sogenannte RewriteEngine, um eine URL zu einer anderen URL &amp;ldquo;weiterzuleiten&amp;rdquo;. Dann kann man beliebig viele, Regeln nach folgendem Prinzip festlegen (freilich gibt es noch weitaus mehr Möglichkeiten, wie z.B. reguläre Ausdrücke):&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>XAMPP startet nicht mehr, nachdem eine php-Extension hinzugefügt wurde</title>
      <link>https://nickyreinert.de/en/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2017/2017-10-19-xampp-startet-nicht-mehr-nachdem-eine-php-extension-hinzugefuegt-wurde/</guid>
      
      <description>&lt;p&gt;Ich hatte hier neulich das Problem, dass ich die mongodb Extension für PHP aktivieren wollte und sich danach der Apache-Dienst nicht mehr starten ließ. Aber der Reihe nach:&lt;/p&gt;
&lt;p&gt;Das System ist OS 10.12.6 und ich nutze das XAMPP-Paket 7.1.9 mit entsprechend PHP 7.1. Außerdem habe ich mir homebrew installiert, da die Installation von pecl zu Umständlich (ich hätte alle möglichen  Abhängigkeiten installieren müssen). Mit homebrew habe ich mir also den aktuellen mongodb-Treiber installiert, das geht recht einfach mit:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>SSL-Verifizierung mit PHP schlägt fehlt (Fehler 14090086)</title>
      <link>https://nickyreinert.de/en/2017/2017-10-14-ssl-verifizierung-mit-php-schlaegt-fehlt-fehler-14090086/</link>
      <pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nickyreinert.de/en/2017/2017-10-14-ssl-verifizierung-mit-php-schlaegt-fehlt-fehler-14090086/</guid>
      
      <description>&lt;p&gt;Wenn dich PHP mit dieser Fehlermeldung (oder einer ähnlichen Fehlernummer) begrüßt, dann liegt es wohl daran, dass beim Abruf einer SSL-Ressource die Identität nicht verifiziert werden konnte. Und das ist auch gut so, denn der Sinn von SSL ist ja das Herstellen einer gesicherten Verbindung.&lt;br&gt;
So sieht die Fehlermeldung bei Verwendung von &lt;em&gt;file_get_contents();&lt;/em&gt; aus. Aber auch andere Funktionen, mit denen man auf externe Ressourcen verweisen kann, werfen diesen Fehler, wie z.B. &lt;em&gt;imagecreatefrompng();&lt;/em&gt;.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
