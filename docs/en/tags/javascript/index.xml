<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" 
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>JavaScript auf Nicky Reinert</title>
    <link>https://nickyreinert.de/en/tags/javascript/</link>
    <description>Blog &amp; projects by Nicky Reinert (Institute for Digital Challenges): web development &amp; software development, SEO &amp; analytics, hosting &amp; DevOps, WordPress &amp; Hugo, tools &amp; projects, data protection &amp; digital culture — plus content on AI and autism &amp; society.</description>
    <generator>Hugo 0.148.2</generator>
    <language>en</language>
    <managingEditor></managingEditor>
    <webMaster></webMaster>
    <copyright></copyright>
    <lastBuildDate>Fri, 06 Dec 2024 12:34:56 +0200</lastBuildDate><atom:link href="https://nickyreinert.de/en/tags/javascript/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Advent of Code - Day 6 - Walking the map (JavaScript)</title>
      <link>https://nickyreinert.de/en/blog/2024/12/06/advent-of-code-day-6-walking-the-map-javascript/</link>
      <pubDate>Fri, 06 Dec 2024 12:34:56 +0200</pubDate>
      <author></author>
      <guid>https://nickyreinert.de/en/blog/2024/12/06/advent-of-code-day-6-walking-the-map-javascript/</guid>
      <description>(task | solution)
This task looks tricky, so I am once again choosing a simple language that I am familiar with: JavaScript (which, by the way, was developed in …</description>
      
      
      <content:encoded>&lt;![CDATA[
        
        <div class="ai-summary">
          <h3>AI-Zusammenfassung</h3>
          <p>A brief write-up of the author&#39;s approach to Day 6 of the Advent of Code 2024 challenge using JavaScript. The post outlines the simple path-finding solution for Part 1 and describes the pattern-recognition logic required to solve Part 2, which involves creating infinite loops with obstacles.</p>
          
          
          <p><strong>Hauptthemen:</strong> Advent of Code, JavaScript, Problem-Solving, Algorithmen</p>
          
          
          
          <p><strong>Schwierigkeitsgrad:</strong> intermediate</p>
          
        </div>
        
        
        <p>(<a href="https://adventofcode.com/2024/day/6/">task</a> | <a href="https://github.com/nickyreinert/aoc2024/tree/main/solutions/day6%20-%20javascript">solution</a>)</p>
<p>This task looks tricky, so I am once again choosing a simple language that I am familiar with: JavaScript (<a href="https://nickyreinert.medium.com/ne-34-javascript-was-developed-within-10-days-0116b32a38b6">which, by the way, was developed in just 10 days</a>).</p>
<p>With no further ado&hellip;</p>
<h3 id="solution-to-the-first-part">Solution to the First Part</h3>
<p>There&rsquo;s not much to explain. As expected, I just need to move the <code>guard</code> through the maze by increasing and decreasing rows and columns. When I hit an obstacle, I change direction. When I hit the border of the maze, I’ve solved the task. Easy peasy&hellip;</p>
<h3 id="solution-to-the-second-part">Solution to the Second Part</h3>
<p>The second part is kind of tricky. They want us to find positions of additional obstacles that make the maze unsolvable.</p>
<p>Well, there&rsquo;s an easy pattern behind it. You will see it if you visualize it:</p>
<p>An infinite loop occurs when you have four obstacles on each edge of a rectangle, like this:</p>
<p><img src="/en/blog/2024/12/06/advent-of-code-day-6-walking-the-map-javascript/image.png" alt="alt text"></p>
<p>So, all we need to do at every step on our path is to try to draw a rectangle. If it has three existing obstacles, we get one potential solution for an &ldquo;artificial obstacle.</p>
<p>In case you&rsquo;re wondering: I didn&rsquo;t finish the second part. I know the solution approach, but seeing that I am three days behind already, I stopped working on it.</p>
<h2 id="whats-up-javascript">Whats up, JavaScript?</h2>
<p><strong>Rating: 9/12 – god ol&rsquo; frien&rsquo;</strong></p>
<p>Fun Fact: <a href="https://nickyreinert.medium.com/javascript-how-to-find-prime-numbers-fast-cbcf6bd62e3d">I was writing an algorithm</a> to find prime numbers and found out that JavaScript is way faster than Python.</p>
<p>However, I really like JavaScript and often use it when I want to build small <em>proof of concepts</em>. It&rsquo;s quick, runs everywhere (like in every browser), and is quite straightforward.</p>
<p>Despite the second bump in the journey to endless glory, I hope to see you again tomorrow!</p>
        
        
        <div class="tags">
          <p><strong>Tags:</strong> Advent of Code, JavaScript, Solution</p>
        </div>
        
      ]]></content:encoded>
      
      
      
      <category>development</category>
      
      <category>aoc2024</category>
      
      
      
      
      <media:content url="https://nickyreinert.de/image.png" type="image/jpeg">
        <media:title>Advent of Code - Day 6 - Walking the map (JavaScript)</media:title>
      </media:content>
      
      
      
      
      <dc:subject>Lesezeit: 5 Minuten</dc:subject>
      
      
      
      <dc:type>solution_writeup</dc:type>
      
      
    </item>
  </channel>
</rss>